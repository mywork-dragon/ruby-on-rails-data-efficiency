//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct FBLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _Crashlytics__CustomAttribute;

struct _Crashlytics__InternalData;

struct _Crashlytics__Session {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _ProtobufCBinaryData _field3;
    unsigned long long _field4;
    int _field5;
    unsigned long long _field6;
    int _field7;
    int _field8;
    int _field9;
    unsigned int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    struct _Crashlytics__InternalData *_field15;
    struct _Crashlytics__Session__User *_field16;
    struct _Crashlytics__Session__Application *_field17;
    struct _Crashlytics__Session__OperatingSystem *_field18;
    struct _Crashlytics__Session__Device *_field19;
    unsigned long long _field20;
    struct _Crashlytics__Session__Event **_field21;
};

struct _Crashlytics__Session__Application {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    int _field9;
    int _field10;
    struct _Crashlytics__Session__Application__Process *_field11;
    struct _Crashlytics__Session__Application__Organization *_field12;
};

struct _Crashlytics__Session__Application__Organization;

struct _Crashlytics__Session__Application__Process;

struct _Crashlytics__Session__Device {
    struct _ProtobufCMessage _field1;
    int _field2;
    struct _ProtobufCBinaryData _field3;
    int _field4;
    struct _ProtobufCBinaryData _field5;
    int _field6;
    char *_field7;
    int _field8;
    unsigned int _field9;
    int _field10;
    unsigned long long _field11;
    int _field12;
    unsigned long long _field13;
    char *_field14;
    char *_field15;
    int _field16;
    int _field17;
    unsigned long long _field18;
    struct _Crashlytics__Session__Device__Identifier **_field19;
    int _field20;
    unsigned int _field21;
    char *_field22;
    char *_field23;
};

struct _Crashlytics__Session__Device__Identifier;

struct _Crashlytics__Session__Event {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    char *_field3;
    char *_field4;
    struct _Crashlytics__Session__Event__Application *_field5;
    struct _Crashlytics__Session__Event__OperatingSystem *_field6;
    struct _Crashlytics__Session__Event__Device *_field7;
    struct _Crashlytics__Session__Event__Log *_field8;
};

struct _Crashlytics__Session__Event__Application;

struct _Crashlytics__Session__Event__Device;

struct _Crashlytics__Session__Event__Log;

struct _Crashlytics__Session__Event__OperatingSystem;

struct _Crashlytics__Session__OperatingSystem {
    struct _ProtobufCMessage _field1;
    int _field2;
    char *_field3;
    char *_field4;
    int _field5;
    int _field6;
};

struct _Crashlytics__Session__User {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    unsigned long long _field5;
    struct _Crashlytics__CustomAttribute **_field6;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCBinaryData {
    unsigned long long _field1;
    char *_field2;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct __darwin_sigaltstack {
    void *ss_sp;
    unsigned long long ss_size;
    int ss_flags;
};

struct cr_found_class_t {
    char *_field1;
    unsigned int _field2;
};

struct in_addr {
    unsigned int _field1;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t {
        long long _field1;
        char _field2[56];
    } _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[13];
    unsigned int ports[13];
    int behaviors[13];
    int flavors[13];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct stat {
    int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    struct timespec _field8;
    struct timespec _field9;
    struct timespec _field10;
    struct timespec _field11;
    long long _field12;
    long long _field13;
    int _field14;
    unsigned int _field15;
    unsigned int _field16;
    int _field17;
    long long _field18[2];
};

struct timespec {
    long long _field1;
    long long _field2;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct unz_global_info_s {
    unsigned long long number_entry;
    unsigned long long size_comment;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    int _field1;
    int _field2;
    char *_field3;
    _Bool _field4;
    char *_field5;
    _Bool _field6;
} CDStruct_9c005df8;

typedef struct {
    int width;
    int height;
} CDStruct_79c71658;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct CDStruct_183601bc;

typedef struct {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    CDStruct_183601bc *_field3;
} CDStruct_a6175b54;

#pragma mark -

//
// File: Zinio.decrypted
// UUID: BDEEF0A3-286E-3AA0-A6A1-A4C244953912
//
//                           Arch: arm64
//                 Source version: 0.0.0.0.0
//            Minimum iOS version: 7.0.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol AFImageCache <NSObject>
- (void)cacheImage:(UIImage *)arg1 forRequest:(NSURLRequest *)arg2;
- (UIImage *)cachedImageForRequest:(NSURLRequest *)arg1;
@end

@protocol AFMultipartFormData
- (void)throttleBandwidthWithPacketSize:(unsigned long long)arg1 delay:(double)arg2;
- (void)appendPartWithHeaders:(NSDictionary *)arg1 body:(NSData *)arg2;
- (void)appendPartWithFormData:(NSData *)arg1 name:(NSString *)arg2;
- (void)appendPartWithFileData:(NSData *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 mimeType:(NSString *)arg4;
- (void)appendPartWithInputStream:(NSInputStream *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 length:(long long)arg4 mimeType:(NSString *)arg5;
- (_Bool)appendPartWithFileURL:(NSURL *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 mimeType:(NSString *)arg4 error:(id *)arg5;
- (_Bool)appendPartWithFileURL:(NSURL *)arg1 name:(NSString *)arg2 error:(id *)arg3;
@end

@protocol AFURLRequestSerialization <NSObject, NSSecureCoding, NSCopying>
- (NSURLRequest *)requestBySerializingRequest:(NSURLRequest *)arg1 withParameters:(id)arg2 error:(id *)arg3;
@end

@protocol AFURLResponseSerialization <NSObject, NSSecureCoding, NSCopying>
- (id)responseObjectForResponse:(NSURLResponse *)arg1 data:(NSData *)arg2 error:(id *)arg3;
@end

@protocol Account <Credentials>
- (void)setAcceptExternalNotifications:(_Bool)arg1;
- (_Bool)acceptExternalNotifications;
- (void)setAcceptInternalNotifications:(_Bool)arg1;
- (_Bool)acceptInternalNotifications;
- (void)setLastName:(NSString *)arg1;
- (NSString *)lastName;
- (void)setFirstName:(NSString *)arg1;
- (NSString *)firstName;
- (void)setPasswordRepeat:(NSString *)arg1;
- (NSString *)passwordRepeat;
@end

@protocol AccountValidator <CredentialsValidator>
- (void)validateLastName:(NSObject<Account> *)arg1;
- (void)validateFirstName:(NSObject<Account> *)arg1;
@end

@protocol AnalyticsManager <NSObject>
@property(retain, nonatomic) ContentManager *contentManager;
@property(retain, nonatomic) CoreDataAppDataService *appDataService;
@property(retain, nonatomic) id <BrandManager> brandManager;
@property(readonly, nonatomic) _Bool ready;
@property(readonly, nonatomic) _Bool enabled;
- (void)zionSignInEventSuccess:(id)arg1;
- (void)zionExploreActiveShareSuccessEvent:(id)arg1 birthDay:(NSString *)arg2 gender:(NSString *)arg3 publicationID:(NSString *)arg4 issueID:(NSString *)arg5 excerpt:(ZGExcerpt *)arg6;
- (void)zionActiveShareiPhoneExploreSuccessEvent:(id)arg1 birthDay:(NSString *)arg2 gender:(NSString *)arg3 publicationID:(NSString *)arg4 issueID:(NSString *)arg5 excerpt:(ZGExcerpt *)arg6;
- (void)zionActiveShareSuccessEvent:(id)arg1 birthDay:(NSString *)arg2 gender:(NSString *)arg3 publicationID:(NSString *)arg4 issueID:(NSString *)arg5;
- (void)zionActiveShareiPhoneSuccessEvent:(id)arg1 birthDay:(NSString *)arg2 gender:(NSString *)arg3 publicationID:(NSString *)arg4 issueID:(NSString *)arg5;
- (void)zionActiveShareiPhoneEvent:(id)arg1 birthDay:(NSString *)arg2 gender:(NSString *)arg3 publicationID:(NSString *)arg4 issueID:(NSString *)arg5;
- (void)zionPassiveShareEvent:(id)arg1 birthDay:(NSString *)arg2 gender:(NSString *)arg3 publicationID:(NSString *)arg4 issueID:(NSString *)arg5;
- (void)zionActiveShareEvent:(id)arg1 birthDay:(NSString *)arg2 gender:(NSString *)arg3 publicationID:(NSString *)arg4 issueID:(NSString *)arg5;
- (void)zionSignInEvent:(id)arg1;
- (void)logEvent:(id)arg1;
- (void)prepEventForFinalDelivery:(id)arg1;
- (void)stopTrackingTimedEvent:(NSString *)arg1;
- (void)startTrackingTimedEvent:(NSString *)arg1;
- (void)trackCategoryClick:(NSString *)arg1 openCategory:(NSString *)arg2;
- (void)trackBannerClick:(NSString *)arg1;
- (void)trackBannerImpression:(NSString *)arg1;
- (void)trackPushNotificationType:(long long)arg1 proxyParameters:(NSDictionary *)arg2;
- (void)trackExitTextViewEventForArticle:(id <Article>)arg1;
- (void)trackEnterTextViewEventForArticle:(id <Article>)arg1;
- (void)trackHyperlink:(NSString *)arg1;
- (void)trackPageViewForIssue:(id <LibraryIssue>)arg1 page:(id <Page>)arg2;
- (void)trackUserTapsRateAppPopOption:(NSString *)arg1;
- (void)trackViewedRateAppPopUp;
- (void)trackBatchDownladingAlertViewCanceled;
- (void)trackBatchDownladingEnabledThroughAlertView;
- (void)trackBatchDownladingToggled:(_Bool)arg1 numberOfToggles:(long long)arg2;
- (void)trackDownloadFailedForIssue:(id <LibraryIssue>)arg1 batchDownloadingEnabled:(_Bool)arg2;
- (void)trackDownloadSucceededForIssue:(id <LibraryIssue>)arg1 batchDownloadingEnabled:(_Bool)arg2;
- (void)trackInitiateDownloadForIssue:(id <LibraryIssue>)arg1 batchDownloadingEnabled:(_Bool)arg2 queueSize:(unsigned long long)arg3;
- (void)trackDownloadCompleteForIssue:(id <Issue>)arg1;
- (void)trackDownloadStartForIssue:(id <Issue>)arg1;
- (void)trackDownloadStartForPublication:(NSString *)arg1 issue:(NSString *)arg2;
- (void)trackDownloadCompleteForIssueExcerpt:(id <IssueExcerptPreview>)arg1;
- (void)trackDownloadStartForIssueExcerpt:(ZGExcerpt *)arg1;
- (void)trackShowReaderMosaicTOCWithZGExcerptPubIssue:(ZGExcerptPubIssue *)arg1;
- (void)trackShowReaderMosaicTOCWithIssue:(id <Issue>)arg1;
- (void)trackPageSwipeForIssue:(NSString *)arg1 isExcerpt:(_Bool)arg2 pubId:(NSString *)arg3 excerptId:(NSString *)arg4 pubName:(NSString *)arg5 issueTitle:(NSString *)arg6 labelType:(NSString *)arg7 folio:(NSString *)arg8;
- (void)trackPageSwipeForIssueWithFolio:(id <Issue>)arg1 folio:(NSString *)arg2;
- (void)trackPageTimeForIssue:(id <Issue>)arg1 page:(unsigned long long)arg2 timeOnPage:(int)arg3;
- (void)trackPageSwipeForIssue:(id <Issue>)arg1 page:(unsigned long long)arg2;
- (void)trackRemoveBookmarkForIssue:(id <IssueBookmark>)arg1;
- (void)trackRemoveBookmarkForIssue:(id <Issue>)arg1 pageNumber:(unsigned long long)arg2;
- (void)trackAddBookmarkForIssue:(id <IssueBookmark>)arg1;
- (void)trackAddBookmarkForIssue:(id <Issue>)arg1 pageNumber:(unsigned long long)arg2;
- (void)trackReaderClose;
- (void)trackReaderOpenForIssue:(id <Issue>)arg1;
- (void)trackReaderOpenForIssueExcerpt:(id <IssueExcerptPreview>)arg1;
- (void)trackLibraryEditMode;
- (void)trackLibraryBackup;
- (void)trackRestoreLibraryIssue:(id <LibraryIssue>)arg1;
- (void)trackRemoveLibraryIssue:(id <LibraryIssue>)arg1;
- (void)trackShowLibrary;
- (void)trackFailToSaveLocalTicketQueue:(long long)arg1;
- (void)trackTransactionFinishRetryOK:(NSString *)arg1 issueId:(NSString *)arg2 transactionId:(NSString *)arg3 countInQueue:(long long)arg4;
- (void)trackAppsFlyerPurchaseEvent:(PurchaseTicket *)arg1;
- (void)trackTransactionFinishOK:(NSString *)arg1 issueId:(NSString *)arg2 transactionId:(NSString *)arg3 countInQueue:(long long)arg4;
- (void)trackHandlePurchaseTicketLost:(NSString *)arg1 transactionId:(NSString *)arg2 countInQueue:(long long)arg3;
- (void)trackFailedTransaction:(NSString *)arg1 storeId:(NSString *)arg2 transactionId:(NSString *)arg3 countInQueue:(long long)arg4 errorCode:(NSString *)arg5;
- (void)trackNoTicketFoundInFromPaymentRequest:(NSString *)arg1 transactionId:(NSString *)arg2 countInQueue:(long long)arg3;
- (void)trackNoTicketForTransaction:(NSString *)arg1 storeProductId:(NSString *)arg2 countInQueue:(long long)arg3;
- (void)trackAddPurchaseTicketToPaymentQueue:(PurchaseTicket *)arg1 countInQueue:(long long)arg2;
- (void)trackNoTicketFoundForProductRequest:(NSString *)arg1 countInQueue:(long long)arg2;
- (void)trackPurchaseTicketCreate:(PurchaseTicket *)arg1 countInQueue:(long long)arg2;
- (void)trackBuyIssueTransactionIdSentFail:(NSString *)arg1 transactionId:(NSString *)arg2 storeId:(NSString *)arg3 countInQueue:(long long)arg4;
- (void)trackBuyIssueTransactionIdSentSuccess:(NSString *)arg1 transactionId:(NSString *)arg2 storeId:(NSString *)arg3 countInQueue:(long long)arg4;
- (void)trackBuyIssueTransactionIdSentAttempt:(NSString *)arg1 transactionId:(NSString *)arg2 storeId:(NSString *)arg3 countInQueue:(long long)arg4;
- (void)trackBuyIssueTransactionIdReceived:(NSString *)arg1 transactionId:(NSString *)arg2 storeId:(NSString *)arg3 countInQueue:(long long)arg4;
- (void)trackBuyIssueThankYouPage:(ZGMagazine *)arg1 purchaseType:(NSString *)arg2 subTotal:(NSString *)arg3 transaction:(SKPaymentTransaction *)arg4 fromBanner:(NSString *)arg5 inCategory:(NSString *)arg6;
- (void)trackBuyRegister;
- (void)trackBuyGuestCheckOutButton;
- (void)trackBuySignInSubmit;
- (void)trackBuySignInButton;
- (void)trackBuyRegisterView;
- (void)trackBuySubscriptionButton:(ZGMagazine *)arg1;
- (void)trackBuyIssueButton:(ZGMagazine *)arg1 fromBanner:(NSString *)arg2 inCategory:(NSString *)arg3;
- (void)trackBuyIssueProductPage:(ZGMagazine *)arg1 fromBanner:(NSString *)arg2 inCategory:(NSString *)arg3;
- (void)trackUpsellOverlayClickThruForIssueExcerpt:(ZGExcerpt *)arg1;
- (void)trackUpsellOverlayCloseForIssueExcerpt:(ZGExcerpt *)arg1;
- (void)trackUpsellOverlayOpenForIssueExcerpt:(ZGExcerpt *)arg1;
- (void)trackUserSignIn:(NSString *)arg1;
- (void)trackUserRegistration:(NSString *)arg1;
- (void)trackInternationalStoreChange;
- (void)trackUserSignOut;
- (void)trackShowFeaturedArticlesMosaic;
- (void)trackSwipeToFeaturedItem:(ZGExcerpt *)arg1;
- (void)trackShowFeaturedAreaWithItem:(ZGExcerpt *)arg1;
- (void)trackAppTerminate;
- (void)trackAppEnterBackground;
- (void)trackAppBecomeActive;
- (void)trackAppStartWithOptions:(NSDictionary *)arg1;
@end

@protocol AnimatablePageObject <NSObject>
- (void)setViewValue:(id)arg1 forKeyPath:(NSString *)arg2;
- (id)currentViewValueForKeyPath:(NSString *)arg1;
- (void)setOpacity:(double)arg1;
- (double)currentOpacity;
- (struct CGPoint)currentPagePosition;
- (void)setPosition:(struct CGPoint)arg1;
- (struct CGPoint)currentPosition;
@end

@protocol AnimationController <NSObject>
- (void)insertSubviewAtBottomOfStaticView:(UIView *)arg1;
- (UIView *)staticView;
- (UIView *)worldViewForPageObjectKey:(NSString *)arg1;
- (id <AnimatablePageObject>)runtimePageObjectForKey:(NSString *)arg1;
- (double)handleAnimation:(AnimationSpec *)arg1 withParameters:(NSDictionary *)arg2;
- (double)handleAnimation:(AnimationSpec *)arg1;
- (double)handleAction:(AnimationAction *)arg1;
- (NSArray *)allPageObjectKeys;
- (void)postMessage:(NSString *)arg1 withParameters:(NSDictionary *)arg2 fromObject:(id)arg3;
- (id <Page>)page;
- (id <IssueController>)issueController;
@end

@protocol AnimationSpecContainer <NSObject>
- (void)addScript:(AnimationScript *)arg1;
- (void)addAction:(AnimationAction *)arg1;
- (void)addAnimation:(AnimationSpec *)arg1;
@end

@protocol AppDataService <NSObject>
@property(readonly, nonatomic) NSManagedObjectContext *managedObjectContext;
- (void)deleteUser:(id <User>)arg1;
- (void)saveUser:(id <User>)arg1;
- (ZGExcerptCategory *)createDummyCategoryForDeepLinking;
- (void)logoutUser;
- (void)loginUser:(id <User>)arg1;
- (id <User>)getUserForUserId:(NSString *)arg1;
- (id <User>)getUser;
- (id <AppInfo>)getAppData;
- (id <User>)createNewUser;
- (void)saveManagedObjectContext;
@end

@protocol AppInfo <NSObject>
@property(retain, nonatomic) NSString *deviceProfileId;
@property(nonatomic) _Bool registered;
@property(retain, nonatomic) NSString *installationUUId;
- (void)setFlag:(int)arg1 active:(_Bool)arg2;
- (_Bool)isFlagActive:(int)arg1;
@end

@protocol AppStartupService <NSObject>
@property(nonatomic) id <AppStartupServiceDelegate> delegate;
- (void)fadeInView;
- (void)executeApplicationStartupTasks;
@end

@protocol AppStartupServiceDelegate
- (UIViewController *)mainUIViewController;
- (void)appStartupTasksComplete;
@end

@protocol AppStartupTask <NSObject>
@property(nonatomic) id <AppStartupTaskDelegate> delegate;
- (void)executeTask;
- (_Bool)taskNeedsToExecute;
@end

@protocol AppStartupTaskDelegate
- (void)appShouldExitWithMessage:(NSString *)arg1;
- (void)taskFinished;
- (void)updateProgress:(NSNumber *)arg1 message:(NSString *)arg2;
- (NSString *)startupTaskPersistentDataDirectory;
- (NSString *)startupTaskTemporaryDataDirectory;

@optional
- (UIWindow *)window;
- (UIApplication *)application;
@end

@protocol AppStartupTasksExecutorDelegate <NSObject>
- (void)appStartupTasksComplete;
@end

@protocol AppsFlyerTrackerDelegate <NSObject>

@optional
- (void)onAppOpenAttributionFailure:(NSError *)arg1;
- (void)onAppOpenAttribution:(NSDictionary *)arg1;
- (void)onConversionDataRequestFailure:(NSError *)arg1;
- (void)onConversionDataReceived:(NSDictionary *)arg1;
@end

@protocol Article <NSObject>
- (NSArray *)pageRanges;
- (id <TableOfContentsSection>)section;
- (_Bool)appearsInTOC;
- (_Bool)isInteractive;
- (NSString *)type;
- (NSString *)fileName;
- (NSArray *)authors;
- (NSString *)blurb;
- (NSString *)textBeginsOnFolio;
- (NSString *)folio;
- (NSString *)imageFileName;
- (NSString *)kicker;
- (NSString *)title;
- (NSString *)articleId;
- (NSString *)name;
@end

@protocol ArticleChooserViewControllerDelegate <NSObject>
- (void)articleChooserViewController:(UIViewController *)arg1 didSelectArticle:(id <Article>)arg2;
- (void)articleChooserViewControllerDidDismiss:(UIViewController *)arg1;
@end

@protocol ArticlePurchaseThanksViewControllerDelegate <NSObject>
- (void)articlePurchaseThanksViewController:(ArticlePurchaseThanksViewController *)arg1 didSelectPublication:(ZGPublication *)arg2;
- (void)articlePurchaseThanksViewController:(ArticlePurchaseThanksViewController *)arg1 presentViewController:(UIViewController *)arg2 animated:(_Bool)arg3 completion:(void (^)(void))arg4;
@end

@protocol AsyncImage
@property(retain, nonatomic) UIImage *image;
- (void)clearImage;
- (RibbonBadgeView *)ribbonBadgeView;
- (void)showImageAtPath:(NSString *)arg1 withRibbonBadge:(_Bool)arg2;
- (void)showImageAtPath:(NSString *)arg1;
@end

@protocol BFAppLinkResolving <NSObject>
- (BFTask *)appLinkFromURLInBackground:(NSURL *)arg1;
@end

@protocol BFAppLinkReturnToRefererViewDelegate <NSObject>
- (void)returnToRefererViewDidTapInsideLink:(BFAppLinkReturnToRefererView *)arg1 link:(BFAppLink *)arg2;
- (void)returnToRefererViewDidTapInsideCloseButton:(BFAppLinkReturnToRefererView *)arg1;
@end

@protocol BrandManager <NSObject>
@property(retain, nonatomic) NSObject<ThemeManager> *themeManager;
- (NSString *)LocalizedString:(NSString *)arg1;
- (_Bool)isHiddenView:(NSString *)arg1;
- (_Bool)isHidden;
- (_Bool)isValidScheme:(NSString *)arg1;
- (NSString *)publisher;
- (NSString *)publicationTitle;
- (NSString *)applicationTitle;
- (NSString *)applicationName;
- (NSString *)welcomeScreenBackgroundImagePortrait;
- (NSString *)welcomeScreenBackgroundImageLandscape;
- (NSString *)welcomeScreenNibName;
- (NSString *)copyright;
- (_Bool)isBrandedApp;
- (_Bool)displayInstructions;
- (_Bool)displayStartupAnimation;
- (_Bool)enableFeaturedArticleTOC;
- (_Bool)requestRating;
- (_Bool)displayIntlStore;
- (_Bool)displayByTitle;
@end

@protocol ButtonSwitchDelegate <NSObject>
- (void)buttonSwitch:(ButtonSwitch *)arg1 selectedButtonIndex:(long long)arg2;

@optional
- (void)buttonSwitch:(ButtonSwitch *)arg1 willSelectButtonIndex:(long long)arg2;
@end

@protocol ButtonsCellDelegate <NSObject>
- (void)loadSignInView;

@optional
- (void)loadCreateAccountView;
- (void)continueAsGuest;
@end

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didVisit:(CLVisit *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol CLSAnalyticsViewControllerTrackingDelegate <NSObject>
- (void)viewControllerTrackingController:(CLSAnalyticsViewControllerTrackingController *)arg1 didDetectDisappearanceOfViewController:(UIViewController *)arg2;
- (void)viewControllerTrackingController:(CLSAnalyticsViewControllerTrackingController *)arg1 didDetectAppearanceOfViewController:(UIViewController *)arg2;
@end

@protocol CLSClientDelegate <NSObject>
- (unsigned int)deviceState;
- (unsigned int)deliveryMechanism;
- (NSDictionary *)identificationDictionary;
- (NSString *)builtSDKVersion;
- (NSString *)minimumSDKVersion;
- (NSDictionary *)alternateExecutableSlices;
- (NSDictionary *)executableSlices;
- (NSString *)shortBundleVersion;
- (NSString *)bundleVersion;
- (NSString *)applicationName;
- (NSString *)bundleId;
- (NSString *)APIKey;
@end

@protocol CLSCrashReport <NSObject>
@property(readonly, nonatomic) NSString *OSBuildVersion;
@property(readonly, nonatomic) NSString *OSVersion;
@property(readonly, nonatomic) NSDate *crashedOnDate;
@property(readonly, nonatomic) NSString *bundleShortVersionString;
@property(readonly, nonatomic) NSString *bundleVersion;
@property(readonly, nonatomic) NSDictionary *customKeys;
@property(readonly, nonatomic) NSString *identifier;
@end

@protocol CLSSDKControllerDelegate <NSObject>
- (void)controller:(CLSSDKController *)arg1 collectProcesses:(_Bool)arg2;
- (void)controller:(CLSSDKController *)arg1 willProcessFile:(CLSCrashFile *)arg2;
- (void)controllerCompletedSubmissions:(CLSSDKController *)arg1;

@optional
- (void)controllerDidLoadSettings:(CLSSettings *)arg1;
@end

@protocol CLSSettingsClientDelegate <CLSClientDelegate>
- (CLSIcon *)icon;
- (void)removeInstallEventKey;
- (NSArray *)eventArray;
@end

@protocol CategoriesListViewDataSource
- (CategoriesListViewCell *)cellForCategoryNumber:(int)arg1 listView:(CategoriesListView *)arg2;
- (int)numberOfCategoriesForListView:(CategoriesListView *)arg1;
- (NSString *)titleForListView:(CategoriesListView *)arg1;
@end

@protocol CategoriesListViewDataSourceIPhoneShop
- (CategoriesListViewCellIPhoneShop *)cellForCategoryNumber:(int)arg1 listView:(CategoriesListViewIPhoneShop *)arg2;
- (int)numberOfCategoriesForListView:(CategoriesListViewIPhoneShop *)arg1;
- (NSString *)titleForListView:(CategoriesListViewIPhoneShop *)arg1;
@end

@protocol CategoriesListViewDelegate

@optional
- (void)listView:(CategoriesListView *)arg1 cellSelected:(CategoriesListViewCell *)arg2;
- (void)listView:(CategoriesListView *)arg1 categorySelected:(int)arg2;
@end

@protocol CategoriesListViewDelegateIPhoneShop

@optional
- (void)listView:(CategoriesListViewIPhoneShop *)arg1 cellSelected:(CategoriesListViewCellIPhoneShop *)arg2;
- (void)listView:(CategoriesListViewIPhoneShop *)arg1 categorySelected:(int)arg2;
@end

@protocol CategoriesiPhoneListViewDataSource
- (CategoriesiPhoneListViewCell *)cellForCategoryNumber:(int)arg1 listView:(CategoriesiPhoneListView *)arg2;
- (int)numberOfCategoriesForListView:(CategoriesiPhoneListView *)arg1;
- (NSString *)titleForListView:(CategoriesiPhoneListView *)arg1;
@end

@protocol CategoriesiPhoneListViewDelegate

@optional
- (void)listView:(CategoriesiPhoneListView *)arg1 cellSelected:(CategoriesiPhoneListViewCell *)arg2;
- (void)listView:(CategoriesiPhoneListView *)arg1 categorySelected:(int)arg2;
@end

@protocol ChangePassword
- (void)setPasswordRepeat:(NSString *)arg1;
- (NSString *)passwordRepeat;
- (void)setPassword:(NSString *)arg1;
- (NSString *)password;
- (void)setCurrentPassword:(NSString *)arg1;
- (NSString *)currentPassword;
@end

@protocol ChangePasswordValidator
- (void)validateCurrentPassword:(NSString *)arg1 newPassword:(NSString *)arg2 repeatPassword:(NSString *)arg3;
- (void)validateNewPassword:(NSObject<ChangePassword> *)arg1;
- (void)validatePassword:(NSString *)arg1 repeatPassword:(NSString *)arg2;
- (void)validatePassword:(NSString *)arg1;
- (void)validateCurrentPassword:(NSObject<ChangePassword> *)arg1;
@end

@protocol CloseButtonDelegate
- (void)closeButtonPressed:(id)arg1;
@end

@protocol ContentServer
@property(retain, nonatomic) NSString *defaultNewsstandId;
- (NSString *)currentNewsstandId:(NSObject<User> *)arg1;
- (NSData *)pdfPasswordEncryptionKey;
- (void)validatePassword:(NSString *)arg1 repeatPassword:(NSString *)arg2;
- (void)validateNewPassword:(NSObject<ChangePassword> *)arg1;
- (void)validateCurrentPassword:(NSObject<ChangePassword> *)arg1;
- (void)validateCurrentPassword:(NSString *)arg1 newPassword:(NSString *)arg2 repeatPassword:(NSString *)arg3;
- (void)validateLastName:(NSObject<Account> *)arg1;
- (void)validateFirstName:(NSObject<Account> *)arg1;
- (void)validatePassword:(NSObject<Credentials> *)arg1;
- (void)validateEmailAddress:(NSObject<Credentials> *)arg1;
- (void)changePasswordForUser:(NSObject<User> *)arg1 password:(NSString *)arg2;
- (NSObject<User> *)createAccount:(NSObject<Account> *)arg1 withSocialUser:(NSObject<SocialUser> *)arg2;
- (NSObject<User> *)createAccount:(NSObject<Account> *)arg1;
- (void)disableExpiringSubscriptionUpsellRequest:(NSObject<User> *)arg1 pubId:(NSString *)arg2;
- (NSObject<SubscriptionExpiration> *)getExpiringSubscriptions:(NSObject<User> *)arg1 pubId:(NSString *)arg2 renewableOnly:(_Bool)arg3 upsellDisplayingOnly:(_Bool)arg4;
- (void)selectSubscriptionOfferRequest:(NSObject<User> *)arg1 pubId:(NSString *)arg2;
- (NSData *)subscriptionOfferData:(NSObject<User> *)arg1;
- (NSData *)webResource:(NSString *)arg1;
- (NSData *)explore:(NSObject<User> *)arg1;
- (NSData *)shop:(NSObject<User> *)arg1;
- (NSData *)configuration:(NSObject<User> *)arg1;
- (void)issueDownloadNotificationRequest:(NSObject<User> *)arg1 issueId:(NSString *)arg2 pubId:(NSString *)arg3;
- (NSData *)restorePurchases:(id <User>)arg1;
- (NSData *)getFreeOffer:(id <User>)arg1 issueId:(NSString *)arg2;
- (NSData *)purchase:(id <User>)arg1 storeProductId:(NSString *)arg2 storeTransactionIdentifier:(NSString *)arg3 issueId:(NSString *)arg4 storeReceipt:(NSData *)arg5 storePrice:(NSDecimalNumber *)arg6 storeLocale:(NSLocale *)arg7 retryCount:(NSNumber *)arg8;
- (NSData *)getPurchaseAccess:(id <User>)arg1 issueId:(NSString *)arg2;
- (NSData *)excerptData:(NSObject<User> *)arg1 issueId:(NSString *)arg2 excerptId:(NSString *)arg3;
- (NSData *)issueData:(NSObject<User> *)arg1 issueId:(NSString *)arg2 pubId:(NSString *)arg3;
- (void)issueRequestForUser:(id <User>)arg1 issueId:(NSString *)arg2 publicationId:(NSString *)arg3;
- (NSData *)userCategoryExcerptPreviewsData:(NSObject<User> *)arg1;
- (NSData *)userLibraryData:(NSObject<User> *)arg1;
- (_Bool)forgetPasswordForUser:(NSObject<User> *)arg1 email:(NSString *)arg2;
- (_Bool)authenticateUser:(NSObject<User> *)arg1 withSocialUser:(NSObject<SocialUser> *)arg2;
- (_Bool)authenticateUser:(NSObject<User> *)arg1;
- (id <AppDataService>)dataService;
@end

@protocol CreateAccountNavHeaderDelegate <NSObject>
- (void)moveToPreviousScreen;
@end

@protocol Credentials
- (void)setPassword:(NSString *)arg1;
- (NSString *)password;
- (void)setEmailAddress:(NSString *)arg1;
- (NSString *)emailAddress;
@end

@protocol CredentialsValidator
- (void)validatePassword:(NSObject<Credentials> *)arg1;
- (_Bool)validateTwoPasswords:(NSString *)arg1 retypePassword:(NSString *)arg2;
- (_Bool)validatePasswordString:(NSString *)arg1;
- (_Bool)validateEmailAddressString:(NSString *)arg1;
- (void)validateEmailAddress:(NSObject<Credentials> *)arg1;
@end

@protocol DDLogFileManager <NSObject>
@property(nonatomic) unsigned long long maximumNumberOfLogFiles;
- (NSString *)createNewLogFile;
- (NSArray *)sortedLogFileInfos;
- (NSArray *)sortedLogFileNames;
- (NSArray *)sortedLogFilePaths;
- (NSArray *)unsortedLogFileInfos;
- (NSArray *)unsortedLogFileNames;
- (NSArray *)unsortedLogFilePaths;
- (NSString *)logsDirectory;

@optional
- (void)didRollAndArchiveLogFile:(NSString *)arg1;
- (void)didArchiveLogFile:(NSString *)arg1;
@end

@protocol DDLogFormatter <NSObject>
- (NSString *)formatLogMessage:(DDLogMessage *)arg1;
@end

@protocol DDLogger <NSObject>
- (void)setLogFormatter:(id <DDLogFormatter>)arg1;
- (id <DDLogFormatter>)logFormatter;
- (void)logMessage:(DDLogMessage *)arg1;

@optional
- (NSString *)loggerName;
- (NSObject<OS_dispatch_queue> *)loggerQueue;
- (void)flush;
- (void)willRemoveLogger;
- (void)didAddLogger;
@end

@protocol DeepLinking <NSObject>
@property(retain, nonatomic) NSDictionary *deepLinking;
@end

@protocol ExploreExcerptViewDelegate
- (void)excerptViewHasLoaded:(ExploreExcerptView *)arg1;
@end

@protocol FBCacheIndexFileDelegate <NSObject>
- (void)cacheIndex:(FBCacheIndex *)arg1 deleteFileWithName:(NSString *)arg2;
- (void)cacheIndex:(FBCacheIndex *)arg1 writeFileWithName:(NSString *)arg2 data:(NSData *)arg3;
@end

@protocol FBDialogDelegate <NSObject>

@optional
- (_Bool)dialog:(FBDialog *)arg1 shouldOpenURLInExternalBrowser:(NSURL *)arg2;
- (void)dialog:(FBDialog *)arg1 didFailWithError:(NSError *)arg2;
- (void)dialogDidNotComplete:(FBDialog *)arg1;
- (void)dialogDidNotCompleteWithUrl:(NSURL *)arg1;
- (void)dialogCompleteWithUrl:(NSURL *)arg1;
- (void)dialogDidComplete:(FBDialog *)arg1;
@end

@protocol FBFrictionlessDialogSupportDelegate <FBWebDialogsDelegate>
- (FBFrictionlessRequestSettings *)frictionlessSettings;
- (_Bool)frictionlessShouldMakeViewInvisible;
@end

@protocol FBGraphObject <NSObject>
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)removeObjectForKey:(id)arg1;
- (NSEnumerator *)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;

@optional
@property(nonatomic) _Bool provisionedForPost;
@end

@protocol FBGraphObjectDataSourceDataNeededDelegate <NSObject>
- (void)graphObjectTableDataSourceNeedsData:(FBGraphObjectTableDataSource *)arg1 triggeredByIndexPath:(NSIndexPath *)arg2;
@end

@protocol FBGraphObjectPagingLoaderDelegate <NSObject>

@optional
- (void)pagingLoaderWasCancelled:(FBGraphObjectPagingLoader *)arg1;
- (void)pagingLoader:(FBGraphObjectPagingLoader *)arg1 handleError:(NSError *)arg2;
- (void)pagingLoaderDidFinishLoading:(FBGraphObjectPagingLoader *)arg1;
- (void)pagingLoader:(FBGraphObjectPagingLoader *)arg1 didLoadData:(NSDictionary *)arg2;
- (void)pagingLoader:(FBGraphObjectPagingLoader *)arg1 willLoadURL:(NSString *)arg2;
@end

@protocol FBGraphObjectSelectionChangedDelegate <NSObject>
- (void)graphObjectTableSelectionDidChange:(FBGraphObjectTableSelection *)arg1;
@end

@protocol FBGraphObjectSelectionQueryDelegate <NSObject>
- (_Bool)graphObjectTableDataSource:(FBGraphObjectTableDataSource *)arg1 selectionIncludesItem:(id <FBGraphObject>)arg2;
@end

@protocol FBGraphObjectViewControllerDelegate <NSObject>
- (NSString *)graphObjectTableDataSource:(FBGraphObjectTableDataSource *)arg1 titleOfItem:(id <FBGraphObject>)arg2;

@optional
- (void)graphObjectTableDataSource:(FBGraphObjectTableDataSource *)arg1 customizeTableCell:(FBGraphObjectTableCell *)arg2;
- (_Bool)graphObjectTableDataSource:(FBGraphObjectTableDataSource *)arg1 filterIncludesItem:(id <FBGraphObject>)arg2;
- (NSString *)graphObjectTableDataSource:(FBGraphObjectTableDataSource *)arg1 pictureUrlOfItem:(id <FBGraphObject>)arg2;
- (NSString *)graphObjectTableDataSource:(FBGraphObjectTableDataSource *)arg1 subtitleOfItem:(id <FBGraphObject>)arg2;
- (NSString *)graphObjectTableDataSource:(FBGraphObjectTableDataSource *)arg1 titleSuffixOfItem:(id <FBGraphObject>)arg2;
@end

@protocol FBLoginDialogDelegate <NSObject>
- (void)fbDialogNotLogin:(_Bool)arg1;
- (void)fbDialogLogin:(NSString *)arg1 expirationDate:(NSDate *)arg2 params:(NSDictionary *)arg3;
@end

@protocol FBLoginViewDelegate <NSObject>

@optional
- (void)loginView:(FBLoginView *)arg1 handleError:(NSError *)arg2;
- (void)loginViewShowingLoggedOutUser:(FBLoginView *)arg1;
- (void)loginViewFetchedUserInfo:(FBLoginView *)arg1 user:(id <FBGraphUser>)arg2;
- (void)loginViewShowingLoggedInUser:(FBLoginView *)arg1;
@end

@protocol FBRequestConnectionDelegate <NSObject>

@optional
- (void)requestConnection:(FBRequestConnection *)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)requestConnection:(FBRequestConnection *)arg1 willRetryWithRequestConnection:(FBRequestConnection *)arg2;
- (void)requestConnection:(FBRequestConnection *)arg1 didFailWithError:(NSError *)arg2;
- (void)requestConnectionDidFinishLoading:(FBRequestConnection *)arg1 fromCache:(_Bool)arg2;
- (void)requestConnectionWillBeginLoading:(FBRequestConnection *)arg1 fromCache:(_Bool)arg2;
@end

@protocol FBRequestConnectionRetryManagerDelegate <NSObject>

@optional
- (void)retryManager:(FBRequestConnectionRetryManager *)arg1 willRetryWithRequestConnection:(FBRequestConnection *)arg2;
- (void)retryManagerDidFinishAbortingRetries:(FBRequestConnectionRetryManager *)arg1;
- (void)retryManagerDidFinishWithNoRetries:(FBRequestConnectionRetryManager *)arg1;
@end

@protocol FBRequestDelegate <NSObject>

@optional
- (void)request:(FBRequest *)arg1 didLoadRawResponse:(NSData *)arg2;
- (void)request:(FBRequest *)arg1 didLoad:(id)arg2;
- (void)request:(FBRequest *)arg1 didFailWithError:(NSError *)arg2;
- (void)request:(FBRequest *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
- (void)requestLoading:(FBRequest *)arg1;
@end

@protocol FBSessionLoginStrategy <NSObject>
@property(readonly, copy) NSString *methodName;
- (_Bool)tryPerformAuthorizeWithParams:(FBSessionLoginStrategyParams *)arg1 session:(FBSession *)arg2 logger:(FBSessionAuthLogger *)arg3;
@end

@protocol FBURLConnectionDelegate <NSObject>

@optional
- (void)facebookURLConnection:(FBURLConnection *)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
@end

@protocol FBWebDialogsDelegate <NSObject>

@optional
- (void)webDialogsWillDismissDialog:(NSString *)arg1 parameters:(NSDictionary *)arg2 session:(FBSession *)arg3 result:(unsigned long long *)arg4 url:(id *)arg5 error:(id *)arg6;
- (_Bool)webDialogsDialog:(NSString *)arg1 parameters:(NSDictionary *)arg2 session:(FBSession *)arg3 shouldAutoHandleURL:(NSURL *)arg4;
- (void)webDialogsWillPresentDialog:(NSString *)arg1 parameters:(NSMutableDictionary *)arg2 session:(FBSession *)arg3;
@end

@protocol FlowControlledViewControllerDelegate
- (void)finish;
- (void)restartWith:(FlowControlledViewController *)arg1 withAnimation:(int)arg2;
- (void)restartWith:(FlowControlledViewController *)arg1;
- (void)goBackToBegining;
- (void)showPreviousViewControllerWithAnimation:(int)arg1;
- (void)showPreviousViewController;
- (void)showNextViewController:(FlowControlledViewController *)arg1 withAnimation:(int)arg2;
- (void)showNextViewController:(FlowControlledViewController *)arg1;

@optional
- (void)unlock;
- (void)lock;
@end

@protocol FlurryHttpAsyncTaskDelegate <NSObject>
- (void)requestSuccessful:(FlurryHttpAsyncTask *)arg1 withResponse:(FlurryHTTPResponse *)arg2;
- (void)requestDidCancel:(FlurryHttpAsyncTask *)arg1 withResponse:(FlurryHTTPResponse *)arg2;
- (void)requestDidFail:(FlurryHttpAsyncTask *)arg1 withResponse:(FlurryHTTPResponse *)arg2;
@end

@protocol FreeOfferService <NSObject>
- (void)getFreeOfferSucceeded:(id <User>)arg1 pubId:(NSString *)arg2;

@optional
- (void)getFreeOffer:(NSString *)arg1 delegate:(id <FreeOfferServiceDelegate>)arg2;
- (void)askToLaunchReaderForPurchasedPubId:(NSString *)arg1;
- (void)getFreeOfferFailed:(id <User>)arg1 pubId:(NSString *)arg2;
@end

@protocol FreeOfferServiceDelegate <NSObject>
- (void)subscriptionOfferDidFailed:(id <User>)arg1 pubId:(NSString *)arg2;
- (void)subscriptionOfferDidSucceed:(id <User>)arg1 pubId:(NSString *)arg2;
@end

@protocol GSJSONCollection <NSObject>
- (NSString *)GSJSONString;
@end

@protocol GSLoggerContext <NSObject>
- (NSString *)contextID;
@end

@protocol GSLoginProvider <NSObject>
+ (_Bool)isAppConfiguredForProvider;
+ (id)instance;
- (void)startLoginForMethod:(NSString *)arg1 parameters:(NSDictionary *)arg2 viewController:(UIViewController *)arg3 completionHandler:(void (^)(NSDictionary *, NSError *))arg4;
- (_Bool)isLoggedIn;

@optional
- (void)logout;
- (void)handleDidBecomeActive;
- (_Bool)handleOpenURL:(NSURL *)arg1 sourceApplication:(NSString *)arg2 annotation:(id)arg3;
@end

@protocol GSLoginViewControllerDelegate <NSObject>

@optional
- (void)loginViewControllerDidCancel:(GSProviderSelectionViewController *)arg1;
- (void)loginViewController:(GSProviderSelectionViewController *)arg1 selectedProvider:(NSString *)arg2 displayName:(NSString *)arg3;
- (void)loginViewController:(GSProviderSelectionViewController *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol GSPluginViewDelegate <NSObject>

@optional
- (void)pluginView:(GSPluginView *)arg1 didFailWithError:(NSError *)arg2;
- (void)pluginView:(GSPluginView *)arg1 firedEvent:(NSDictionary *)arg2;
- (void)pluginView:(GSPluginView *)arg1 finishedLoadingPluginWithEvent:(NSDictionary *)arg2;
@end

@protocol GSSocializeDelegate <NSObject>

@optional
- (void)userInfoDidChange:(GSUser *)arg1;
- (void)userDidLogout;
- (void)userDidLogin:(GSUser *)arg1;
@end

@protocol GSWebBridgeDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 receivedJsLog:(NSString *)arg2 logInfo:(NSDictionary *)arg3;
- (void)webView:(UIWebView *)arg1 receivedPluginEvent:(NSDictionary *)arg2 fromPluginInContainer:(NSString *)arg3;
- (void)webView:(UIWebView *)arg1 finishedLoginWithResponse:(GSResponse *)arg2;
- (void)webView:(UIWebView *)arg1 startedLoginForMethod:(NSString *)arg2 parameters:(NSDictionary *)arg3;
@end

@protocol GSWebViewControllerDelegate <NSObject>

@optional
- (void)webViewControllerDidStartLoad:(GSWebViewController *)arg1;
- (void)webViewControllerDidFinishLoad:(GSWebViewController *)arg1;
- (void)webViewController:(GSWebViewController *)arg1 didFailLoadWithError:(NSError *)arg2;
- (_Bool)webViewController:(GSWebViewController *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2;
- (void)webViewControllerDidCancel:(GSWebViewController *)arg1;
@end

@protocol GridCollectionViewControllerDelegate <NSObject>

@optional
- (void)gridCollectionViewController:(GridCollectionViewController *)arg1 didSelectMagazine:(Magazine *)arg2;
- (void)gridCollectionViewController:(GridCollectionViewController *)arg1 didSelectPublication:(ZGPublication *)arg2;
@end

@protocol HTTPClientDelegate <NSObject>

@optional
- (void)httpClient:(HTTPClient *)arg1 searchRequestFailedWithError:(NSError *)arg2;
- (void)httpClient:(HTTPClient *)arg1 downloadedImageForIssueId:(NSString *)arg2 image:(UIImage *)arg3;
- (void)httpClient:(HTTPClient *)arg1 receivedSearchCategoryResults:(NSArray *)arg2;
- (void)httpClient:(HTTPClient *)arg1 receivedSearchResults:(NSArray *)arg2;
@end

@protocol HiddenLibraryIssue <LibraryIssue>
@property(retain, nonatomic) NSDate *hiddenDate;
@end

@protocol HorizontalCollectionViewControllerDelegate <NSObject>
- (void)horizontalCollectionViewControllerDidTapViewAll:(HorizontalCollectionViewController *)arg1;
- (void)horizontalCollectionViewController:(HorizontalCollectionViewController *)arg1 didSelectMagazine:(Magazine *)arg2;
- (void)horizontalCollectionViewController:(HorizontalCollectionViewController *)arg1 didSelectPublication:(ZGPublication *)arg2;
@end

@protocol HorizontalSlidingMenuViewControllerDelegate <NSObject>
- (void)horizontalSlidingMenuViewController:(HorizontalSlidingMenuViewController *)arg1 didSelectCategory:(id)arg2;
@end

@protocol IDTwitterAccountChooserViewControllerDelegate <NSObject>

@optional
- (void)twitterAccountChooserViewController:(IDTwitterAccountChooserViewController *)arg1 didChooseTwitterAccount:(ACAccount *)arg2;
@end

@protocol IFlurrySession <NSObject>
- (void)sendSessionsToServerForCreateSession;
- (void)endSession;
- (void)resumeSession;
- (void)markSessionAsResuming;
- (void)pauseSession;
- (void)recordPurchaseItem:(id <FlurryPurchaseItem>)arg1;
- (void)recordError:(NSString *)arg1 message:(NSString *)arg2 exceptionString:(NSString *)arg3 errorType:(int)arg4 liveReport:(NSData *)arg5;
- (void)recordError:(NSString *)arg1 message:(NSString *)arg2 error:(NSError *)arg3 liveReport:(NSData *)arg4;
- (void)recordError:(NSString *)arg1 message:(NSString *)arg2 exception:(NSException *)arg3 liveReport:(NSData *)arg4;
- (void)endTimedEvent:(NSString *)arg1 withParameters:(NSDictionary *)arg2;
- (void)recordEvent:(NSString *)arg1 withParameters:(NSDictionary *)arg2 timed:(_Bool)arg3;
- (void)recordEvent:(NSString *)arg1 withParameters:(NSDictionary *)arg2;
- (void)setPushToken:(NSString *)arg1;
- (void)setAgeInYears:(int)arg1;
- (void)setGenderAsString:(NSString *)arg1;
- (void)maybeIncrementPageView;
- (void)setCrashReportingEnabled:(_Bool)arg1;
- (void)setSessionReportsOnPauseEnabled:(_Bool)arg1;
- (void)setSessionReportsOnCloseEnabled:(_Bool)arg1;
- (void)setUserID:(NSString *)arg1;
- (void)setEventLoggingEnabled:(_Bool)arg1;
- (void)setLatitude:(double)arg1 longitude:(double)arg2 horizontalAccuracy:(float)arg3 verticalAccuracy:(float)arg4;
@end

@protocol ImageObject <NSObject>
- (void)beginImageProcessingWithQueue:(NSOperationQueue *)arg1;
- (void)imageProcessingDidComplete:(UIImage *)arg1;
@end

@protocol ImageResource <NSObject>
- (_Bool)isPlaceholder;
- (id)objectID;
- (UIImage *)image;
@end

@protocol IndexScrubberViewDataSource <NSObject>
- (void)renderCell:(unsigned long long)arg1 inView:(UIView *)arg2 forIndexScrubber:(IndexScrubberView *)arg3;
- (UIView *)createCellForIndexScrubber:(IndexScrubberView *)arg1;
- (unsigned long long)totalCountForIndexScrubber:(IndexScrubberView *)arg1;

@optional
- (UIView *)createScrubPreviewView:(IndexScrubberView *)arg1;
@end

@protocol IndexScrubberViewDelegate <NSObject>
- (void)indexScrubber:(IndexScrubberView *)arg1 didUnselectCell:(UIView *)arg2 atIndex:(unsigned long long)arg3;
- (void)indexScrubber:(IndexScrubberView *)arg1 didSelectCell:(UIView *)arg2 atIndex:(unsigned long long)arg3;
- (_Bool)indexScrubber:(IndexScrubberView *)arg1 canSelectCell:(UIView *)arg2 atIndex:(unsigned long long)arg3;

@optional
- (void)indexScrubber:(IndexScrubberView *)arg1 didScrubOverIndex:(unsigned long long)arg2;
@end

@protocol InsetViewDelegate
- (void)showSlots:(double)arg1;
@end

@protocol InsetViewSetterDelegate
- (id <InsetViewDelegate>)insetViewDelegate;
- (void)setInsetViewDelegate:(id <InsetViewDelegate>)arg1;
@end

@protocol Issue <NSObject>
- (NSString *)script;
- (CDStruct_79c71658)aspectRatioForOrientation:(int)arg1;
- (NSString *)sanityCheck;
- (_Bool)pageContainsVideoContent:(id <Page>)arg1;
- (NSArray *)allDownloadableAssetsOnPage:(id <Page>)arg1 forOrientation:(int)arg2;
- (id <IssueControl>)controlForKey:(NSString *)arg1;
- (NSArray *)allControlKeys;
- (_Bool)isCapturingPageObject:(id <PageObject>)arg1 forOrientation:(int)arg2;
- (_Bool)isClipPageView:(id <Page>)arg1 forOrientation:(int)arg2;
- (_Bool)verticalScrollPageSnapOnPage:(id <Page>)arg1 forOrientation:(int)arg2;
- (_Bool)isResource:(NSString *)arg1 usedOnPage:(id <Page>)arg2;
- (_Bool)areAllAssetsAvailableOnPage:(id <Page>)arg1;
- (NSObject<Page> *)referencePageForOrientation:(int)arg1;
- (NSObject<Page> *)referencePage;
- (NSObject<Page> *)backcoverForOrientation:(int)arg1;
- (NSObject<Page> *)backcover;
- (NSObject<Page> *)coverForOrientation:(int)arg1;
- (NSObject<Page> *)cover;
- (NSObject<Page> *)firstPageWithBookmark:(NSString *)arg1 forOrientation:(int)arg2;
- (NSObject<Page> *)firstPageWithBookmark:(NSString *)arg1;
- (NSString *)absolutePath:(NSString *)arg1;
- (NSString *)baseDir;
- (NSString *)packingListVersion;
- (_Bool)excerpt;
- (NSNumber *)excerptSize;
- (NSString *)excerptId;
- (NSObject<TableOfContents> *)tableOfContents;
- (NSObject<Spread> *)spreadAtIndex:(unsigned long long)arg1;
- (NSObject<Spread> *)spreadForFolio:(NSString *)arg1;
- (NSArray *)spreads;
- (NSObject<Page> *)pageAtIndex:(unsigned long long)arg1 forOrientation:(int)arg2;
- (NSObject<Page> *)pageAtIndex:(unsigned long long)arg1;
- (NSObject<Page> *)pageForNumber:(NSNumber *)arg1 forOrientation:(int)arg2;
- (NSObject<Page> *)pageForNumber:(NSNumber *)arg1;
- (NSObject<Page> *)pageForFolio:(NSString *)arg1 forOrientation:(int)arg2;
- (NSObject<Page> *)pageForFolio:(NSString *)arg1;
- (NSArray *)pagesForOrientation:(int)arg1;
- (NSArray *)pages;
- (NSString *)tableOfContentsAction;
- (NSString *)binding;
- (struct CGSize)contentSizeForOrientation:(int)arg1;
- (struct CGSize)contentSize;
- (NSString *)tableOfContentsStartsOnFolioForOrientation:(int)arg1;
- (NSString *)tableOfContentsStartsOnFolio;
- (NSString *)pdfPassword;
- (NSNumber *)imageSizeJPEG;
- (NSNumber *)packageSize;
- (NSNumber *)numberOfPagesForOrientation:(int)arg1;
- (NSNumber *)numberOfPages;
- (NSString *)labelType;
- (NSString *)issueId;
- (NSString *)issueTitle;
- (NSString *)pubId;
- (NSString *)pubName;
- (_Bool)useCapturingObjectLayersForOrientation:(int)arg1;
- (_Bool)showStatusBarForOrientation:(int)arg1;
- (_Bool)linkOrientationPageOffsets;
- (_Bool)clipPageViewForOrientation:(int)arg1;
- (_Bool)verticalScrollPageSnapForOrientation:(int)arg1;
- (_Bool)supportsZoomForOrientation:(int)arg1;
- (_Bool)supportsOrientation:(int)arg1;
- (int)readerType;
- (NSString *)valueForParameter:(NSString *)arg1;
@end

@protocol IssueBookmark <NSObject>
@property(nonatomic) int pageOrientation;
@property(nonatomic) int bookmarkMediaType;
@property(nonatomic) int bookmarkType;
@property(retain, nonatomic) UIImage *image;
@property(retain, nonatomic) NSNumber *orientation;
@property(retain, nonatomic) NSNumber *type;
@property(retain, nonatomic) NSDate *created;
@property(retain, nonatomic) NSString *titleGroup;
@property(retain, nonatomic) NSString *title;
@property(retain, nonatomic) NSString *publisherId;
@property(retain, nonatomic) NSString *mediaId;
@property(retain, nonatomic) NSString *mediaLocation;
@property(retain, nonatomic) NSNumber *mediaType;
@property(retain, nonatomic) NSDate *updated;
@end

@protocol IssueControl <NSObject>
- (NSString *)valueForParameter:(NSString *)arg1;
- (NSArray *)allParameterKeys;
- (NSString *)urlForAssetKey:(NSString *)arg1;
- (NSArray *)allAssetKeys;
- (NSString *)type;
- (NSString *)key;
@end

@protocol IssueController <NSObject>
@property(retain, nonatomic) NSString *launchFolio;
- (_Bool)isPageSwipingDisabled;
- (void)setPageSwipingDisabled:(_Bool)arg1;
- (struct CGRect)displayRectForWorldRect:(struct CGRect)arg1 onPage:(id <Page>)arg2;
- (struct CGPoint)displayPointForPixelPoint:(struct CGPoint)arg1 onPage:(id <Page>)arg2;
- (struct CGRect)displayRectForPixelRect:(struct CGRect)arg1 onPage:(id <Page>)arg2;
- (void)issueControlControllerWillStartMultimedia:(IssueControlController *)arg1;
- (IssueControlController *)issueControlControllerForKey:(NSString *)arg1;
- (NSURL *)resourceUrl:(NSString *)arg1 offlineFallback:(NSString *)arg2;
- (NSURL *)resourceUrl:(NSString *)arg1;
- (void)attemptedToAccessMissingAsset:(NSString *)arg1;
- (void)didForceOrientationChangeFrom:(long long)arg1 to:(long long)arg2;
- (void)didForceOrientationChangeTo:(long long)arg1;
- (int)currentPageOrientation;
- (void)gotoPageWithFolio:(NSString *)arg1;
- (void)openURL:(NSURL *)arg1;
- (void)toggleChrome;
- (_Bool)handleHyperlinkUrl:(id <PageHyperlink>)arg1;
- (IssueScriptSupport *)scriptSupport;
- (IssueAssetCache *)assetCache;
- (id <Issue>)issue;
@end

@protocol IssueExcerptPreview <NSObject>
- (NSString *)purchaseUrlUsingKeywordValues:(NSDictionary *)arg1;
- (_Bool)purchaseUrlNeedsKeywordValueReplacement;
- (NSString *)largeRightPageImageFileName;
- (NSString *)largeLeftPageImageFileName;
- (NSString *)smallRightPageImageFileName;
- (NSString *)smallLeftPageImageFileName;
- (NSString *)largeCoverImageFileName;
- (NSString *)smallCoverImageFileName;
- (NSString *)largeRightPageImageURLString;
- (NSString *)largeLeftPageImageURLString;
- (NSString *)smallRightPageImageURLString;
- (NSString *)smallLeftPageImageURLString;
- (NSString *)largeCoverImageURLString;
- (NSString *)smallCoverImageURLString;
- (NSString *)purchaseUrl;
- (long long)order;
- (NSString *)excerptId;
- (NSString *)issueId;
- (NSString *)excerptLead;
- (NSString *)excerptTitle;
- (NSDate *)issueDate;
- (NSString *)issueTitle;
- (NSString *)pubId;
- (NSString *)pubName;
@end

@protocol JsonClientDelegate

@optional
- (void)clientError;
- (void)clientDataReady:(id)arg1;
@end

@protocol LibraryAccess <NSObject>
- (void)changeLibraryBackupPolicyTo:(int)arg1 forUser:(id <User>)arg2;
- (NSArray *)titleIndexValues;
- (NSNumber *)currentYear;
- (NSArray *)allAvailableLibraryIssueYearsForUser:(id <User>)arg1;
- (NSArray *)availableHiddenLibraryIssueYearsForUser:(id <User>)arg1;
- (NSArray *)availableLibraryIssueYearsForUser:(id <User>)arg1;
- (void)restoreHiddenLibraryIssues:(NSArray *)arg1;
- (void)hideLibraryIssues:(NSArray *)arg1 removingDownloadedAssets:(_Bool)arg2;
- (void)hideLibraryIssues:(NSArray *)arg1;
- (void)libraryIssueFailedDownloadingForUser:(id <User>)arg1 issueId:(NSString *)arg2;
- (void)libraryIssueFinishedDownloadingForUser:(NSString *)arg1 issueId:(NSString *)arg2;
- (NSFetchedResultsController *)hiddenLibraryIssuesForUser:(id <User>)arg1 pubId:(NSString *)arg2;
- (NSFetchedResultsController *)libraryIssuesForUser:(id <User>)arg1 pubId:(NSString *)arg2;
- (NSFetchedResultsController *)libraryIssuesForUser:(id <User>)arg1 displayKey:(NSString *)arg2;
- (NSFetchedResultsController *)hiddenLibraryIssuesForUser:(id <User>)arg1 withinYear:(NSNumber *)arg2 sortedBy:(int)arg3 groupedBy:(int)arg4;
- (NSFetchedResultsController *)hiddenLibraryIssuesForUser:(id <User>)arg1 sortedBy:(int)arg2;
- (NSFetchedResultsController *)libraryIssuesForUser:(id <User>)arg1 withinYear:(NSNumber *)arg2 sortedBy:(int)arg3 groupedBy:(int)arg4 showHiddenIssues:(id)arg5 keyword:(NSString *)arg6;
- (NSFetchedResultsController *)libraryIssuesForUser:(id <User>)arg1 withinYear:(NSNumber *)arg2 sortedBy:(int)arg3 groupedBy:(int)arg4;
- (NSFetchedResultsController *)libraryIssuesForUser:(id <User>)arg1 sortedBy:(int)arg2 groupedBy:(int)arg3 keyword:(NSString *)arg4;
- (NSFetchedResultsController *)libraryIssuesForUser:(id <User>)arg1 sortedBy:(int)arg2;
- (void)updateApplicationIconBadgeCount;
- (unsigned long long)countOfAllLibraryIssuesForUser:(id <User>)arg1;
- (unsigned long long)countOfNonHiddenLibraryIssuesForUser:(id <User>)arg1;
- (unsigned long long)countOfHiddenLibraryIssuesForUser:(id <User>)arg1;
- (unsigned long long)countOfNewLibraryIssuesForUser:(id <User>)arg1;
- (NSArray *)allLibraryIssuesForUser:(id <User>)arg1 sortedBy:(int)arg2 usingPredicate:(NSPredicate *)arg3;
- (NSArray *)allLibraryIssuesForUser:(id <User>)arg1 sortedBy:(int)arg2;
- (id <LibraryIssue>)libraryIssueForUser:(id <User>)arg1 issueId:(NSString *)arg2;
- (NSString *)libraryBaseDirectoryForUser:(id <User>)arg1;
@end

@protocol LibraryIssue <NSObject>
@property(readonly, nonatomic) NSNumber *coverDateMonth;
@property(readonly, nonatomic) NSNumber *coverDateYear;
@property(readonly, nonatomic) id <User> owner;
- (void)refresh;
- (void)setDownloadedAssetsNeedReprocessing:(_Bool)arg1;
- (_Bool)downloadedAssetsNeedReprocessing;
- (void)setDownloaded:(_Bool)arg1;
- (_Bool)downloaded;
- (id <ImageResource>)thumbnail;
- (void)setIsNew:(_Bool)arg1;
- (_Bool)isNew;
- (NSNumber *)packageSize;
- (NSString *)thumbnailFileName;
- (NSString *)thumbnailUrl;
- (NSDate *)coverDate;
- (NSDate *)issueDate;
- (NSString *)title;
- (NSString *)issueId;
- (NSString *)pubThumbnailUrl;
- (NSNumber *)rating;
- (NSString *)displayName;
- (NSString *)pubId;
@end

@protocol LibraryIssuePageViewDelegate <NSObject>
- (long long)libraryIssuePageView:(LibraryIssuePageView *)arg1 stateForIssue:(id <LibraryIssue>)arg2;
@end

@protocol LibraryModifyProtocol
- (void)removeIssueAtIndex:(unsigned long long)arg1;
- (void)noLibraryModification;
@end

@protocol LibraryShopCellDelegate <NSObject>
- (void)moreMagazines;
@end

@protocol LibraryViewControllerProtocol
- (void)launchReaderAfterSignInForIssue:(NSString *)arg1;
- (void)launchReaderForPurchasedIssueId:(NSString *)arg1;
- (void)launchReaderForIssueId:(NSString *)arg1;
@end

@protocol LibraryYearChooserDelegate
- (void)didChooseYear:(unsigned long long)arg1;
@end

@protocol LoginInBannerHeaderDelegate <NSObject>
- (void)sectionHeaderView:(LoginBannerHeader *)arg1 sectionClosed:(long long)arg2;
- (void)sectionHeaderView:(LoginBannerHeader *)arg1 sectionOpened:(long long)arg2;
@end

@protocol LoginNavigationControllerDelegate <NSObject>
- (void)loginNavigationControllerDidCancel:(LoginNavigationController *)arg1;
- (void)loginNavigationController:(LoginNavigationController *)arg1 didLoginWithSuccess:(_Bool)arg2;
@end

@protocol MFMailComposeViewControllerDelegate <NSObject>

@optional
- (void)mailComposeController:(MFMailComposeViewController *)arg1 didFinishWithResult:(int)arg2 error:(NSError *)arg3;
@end

@protocol ModalInsetViewControllerDelegate <NSObject>

@optional
- (void)modalInsetViewController:(ModalInsetViewController *)arg1 didDismiss:(_Bool)arg2;
- (void)modalInsetViewController:(ModalInsetViewController *)arg1 didAppear:(_Bool)arg2;
@end

@protocol NSCacheDelegate <NSObject>

@optional
- (void)cache:(NSCache *)arg1 willEvictObject:(id)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDiscardableContent
- (_Bool)isContentDiscarded;
- (void)discardContentIfPossible;
- (void)endContentAccess;
- (_Bool)beginContentAccess;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSFetchedResultsControllerDelegate

@optional
- (NSString *)controller:(NSFetchedResultsController *)arg1 sectionIndexTitleForSectionName:(NSString *)arg2;
- (void)controllerDidChangeContent:(NSFetchedResultsController *)arg1;
- (void)controllerWillChangeContent:(NSFetchedResultsController *)arg1;
- (void)controller:(NSFetchedResultsController *)arg1 didChangeSection:(id <NSFetchedResultsSectionInfo>)arg2 atIndex:(unsigned long long)arg3 forChangeType:(unsigned long long)arg4;
- (void)controller:(NSFetchedResultsController *)arg1 didChangeObject:(id)arg2 atIndexPath:(NSIndexPath *)arg3 forChangeType:(unsigned long long)arg4 newIndexPath:(NSIndexPath *)arg5;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>

@optional
- (void)connectionDidFinishLoading:(NSURLConnection *)arg1;
- (NSCachedURLResponse *)connection:(NSURLConnection *)arg1 willCacheResponse:(NSCachedURLResponse *)arg2;
- (void)connection:(NSURLConnection *)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (NSInputStream *)connection:(NSURLConnection *)arg1 needNewBodyStream:(NSURLRequest *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveData:(NSData *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
- (NSURLRequest *)connection:(NSURLConnection *)arg1 willSendRequest:(NSURLRequest *)arg2 redirectResponse:(NSURLResponse *)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didFinishDownloadingToURL:(NSURL *)arg3;

@optional
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parser:(NSXMLParser *)arg1 validationErrorOccurred:(NSError *)arg2;
- (void)parser:(NSXMLParser *)arg1 parseErrorOccurred:(NSError *)arg2;
- (NSData *)parser:(NSXMLParser *)arg1 resolveExternalEntityName:(NSString *)arg2 systemID:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundCDATA:(NSData *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundComment:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundProcessingInstructionWithTarget:(NSString *)arg2 data:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundIgnorableWhitespace:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundCharacters:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didEndMappingPrefix:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didStartMappingPrefix:(NSString *)arg2 toURI:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 didEndElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 didStartElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4 attributes:(NSDictionary *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundExternalEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 foundInternalEntityDeclarationWithName:(NSString *)arg2 value:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundElementDeclarationWithName:(NSString *)arg2 model:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundAttributeDeclarationWithName:(NSString *)arg2 forElement:(NSString *)arg3 type:(NSString *)arg4 defaultValue:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundUnparsedEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4 notationName:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundNotationDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parserDidEndDocument:(NSXMLParser *)arg1;
- (void)parserDidStartDocument:(NSXMLParser *)arg1;
@end

@protocol NavigationControlDelegate
@property(nonatomic) id <ViewControllerNavigationDelegate> navDelegate;
- (void)viewControllerStackChanged:(NSArray *)arg1;
@end

@protocol NetworkServicesManagerDelegate <NSObject>
- (void)retryAfterNetworkServicesManagerError:(NetworkServicesManager *)arg1;
- (void)didEncounterOtherError:(NetworkServicesManager *)arg1 resource:(NSObject *)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(NetworkServicesManager *)arg1 resource:(NSObject *)arg2;
- (void)didReceiveFileNotFound:(NetworkServicesManager *)arg1 resource:(NSObject *)arg2;
- (void)didReceiveServiceUnavailable:(NetworkServicesManager *)arg1 resource:(NSObject *)arg2;
- (void)didEncounterNetworkError:(NetworkServicesManager *)arg1 resource:(NSObject *)arg2;
- (void)didEncounterReachabilityProblem:(NetworkServicesManager *)arg1 resource:(NSObject *)arg2;
- (void)didGoOnline:(NetworkServicesManager *)arg1;
@end

@protocol NewLoginViewDelegate <NSObject>

@optional
- (void)newLoginView:(NewLoginViewController *)arg1 didTapGuestCheckout:(id)arg2;
@end

@protocol NewSettingsViewControllerDelegate <NSObject>
- (void)settingsViewControllerDidTapDismissButton:(NewSettingsViewController *)arg1;
@end

@protocol Newsstand
- (_Bool)defaultNewsstand;
- (NSString *)displayName;
- (NSString *)rateAppURL;
- (NSString *)forgotPasswordURL;
- (NSString *)legalURL;
- (NSString *)faqURL;
- (NSString *)commerceURL;
- (NSString *)newsstandId;
@end

@protocol PFAuthenticationProvider <NSObject>
- (NSString *)authType;
- (void)cancel;
- (_Bool)restoreAuthentication:(NSDictionary *)arg1;
- (void)deauthenticate;
- (BFTask *)authenticateInBackground;
@end

@protocol PFFieldOperation <NSObject>
- (id)applyToValue:(id)arg1 forKey:(NSString *)arg2 ofObject:(PFObject *)arg3;
- (NSObject<PFFieldOperation> *)mergeWithPrevious:(NSObject<PFFieldOperation> *)arg1;
- (id)encodeWithObjectEncoder:(id <PFObjectEncodingStrategy>)arg1;
@end

@protocol PFObjectEncodingStrategy
- (id)encodeRelatedObject:(PFObject *)arg1;
@end

@protocol PFSubclassing
+ (void)registerSubclass;
+ (PFQuery *)query;
+ (NSString *)parseClassName;
+ (id)objectWithoutDataWithObjectId:(NSString *)arg1;
+ (id)object;
@end

@protocol PF_AFMultipartFormData
- (void)throttleBandwidthWithPacketSize:(unsigned long long)arg1 delay:(double)arg2;
- (void)appendPartWithHeaders:(NSDictionary *)arg1 body:(NSData *)arg2;
- (void)appendPartWithFormData:(NSData *)arg1 name:(NSString *)arg2;
- (void)appendPartWithFileData:(NSData *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 mimeType:(NSString *)arg4;
- (void)appendPartWithInputStream:(NSInputStream *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 length:(unsigned long long)arg4 mimeType:(NSString *)arg5;
- (_Bool)appendPartWithFileURL:(NSURL *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 mimeType:(NSString *)arg4 error:(id *)arg5;
- (_Bool)appendPartWithFileURL:(NSURL *)arg1 name:(NSString *)arg2 error:(id *)arg3;
@end

@protocol PLCrashReportFormatter
- (NSData *)formatReport:(PLCrashReport *)arg1 error:(id *)arg2;
@end

@protocol PVHTTPGetOperationListener <NSObject>
- (void)operationSuccess:(id)arg1;
- (void)downloadProgress:(id)arg1 numBytes:(unsigned long long)arg2;
@end

@protocol PVXMLElement <NSObject>
- (id <PVXMLElement>)findFirstElementNamed:(NSString *)arg1;
- (NSMutableDictionary *)getNameAndValueForAllElementsAsDictionary;
- (NSString *)xml;
- (NSString *)prettyXML:(int)arg1;
- (void)addElement:(NSObject<PVXMLElement> *)arg1;
- (id)initWithName:(NSString *)arg1 value:(NSString *)arg2 parent:(NSObject<PVXMLElement> *)arg3;
- (NSMutableArray *)elements;
- (void)setParent:(NSObject<PVXMLElement> *)arg1;
- (NSObject<PVXMLElement> *)parent;
- (void)setAttributes:(NSDictionary *)arg1;
- (NSDictionary *)attributes;
- (void)setValue:(NSString *)arg1;
- (NSString *)value;
- (NSString *)name;
@end

@protocol Page <NSObject>
- (AnimationScript *)script;
- (AnimationSpecSet *)onSettle;
- (AnimationSpecSet *)onView;
- (NSString *)token;
- (NSArray *)allPageObjectGroupKeys;
- (NSArray *)allPageObjectKeys;
- (NSArray *)pageObjectsForGroup:(NSString *)arg1;
- (id <PageObject>)findPageObjectForKey:(NSString *)arg1;
- (id <PageObject>)pageObjectForKey:(NSString *)arg1;
- (id <PageLocation>)oppositeOrientationLinkFromOffset:(unsigned long long)arg1;
- (_Bool)hasLinksToEnhancedContent;
- (NSMutableArray *)hyperlinks;
- (NSString *)urlForAssetKey:(NSString *)arg1;
- (NSArray *)allAssetKeys;
- (_Bool)typeInsert;
- (NSString *)jpgThumbnailFileName;
- (NSString *)jpgFileName;
- (NSString *)pdfFileName;
- (NSNumber *)clipView;
- (_Bool)verticalScrollPageSnap;
- (_Bool)media;
- (_Bool)tableOfContentsBookmark;
- (NSString *)bookmark;
- (NSString *)type;
- (NSNumber *)number;
- (NSString *)folio;
@end

@protocol PageHyperlink <NSObject>
- (_Bool)hitTest:(struct CGPoint)arg1 fromLayer:(CALayer *)arg2 inLayer:(CALayer *)arg3 baseSize:(struct CGSize)arg4;
- (_Bool)linksToEnhancedContent;
- (double)targetAlpha;
- (NSString *)onPageLoadEffect;
- (NSString *)type;
- (NSString *)control;
- (NSString *)offlineUrl;
- (NSString *)imgUrl;
- (NSString *)url;
- (struct CGRect)frameInViewSize:(struct CGSize)arg1 baseSize:(struct CGSize)arg2;
- (_Bool)rectInPixels;
- (struct CGRect)rect;
@end

@protocol PageLocation <NSObject>
@property(readonly, nonatomic) unsigned long long offset;
@property(readonly, nonatomic) NSString *folio;
@end

@protocol PageObject <NSObject>
- (id <PageObject>)findPageObjectForKey:(NSString *)arg1;
- (id <PageObject>)pageObjectForKey:(NSString *)arg1;
- (NSArray *)allPageObjectKeys;
- (NSString *)valueForParameter:(NSString *)arg1;
- (NSArray *)allParameterKeys;
- (AnimationSpecSet *)listensForType:(NSString *)arg1;
- (NSArray *)allListenTypes;
- (AnimationSpecSet *)actionsForType:(NSString *)arg1;
- (NSString *)urlForAssetKey:(NSString *)arg1;
- (NSArray *)allAssetKeys;
- (NSArray *)hyperlinks;
- (int)touchMode;
- (int)contentMode;
- (_Bool)clip;
- (unsigned long long)screenOffset;
- (_Bool)fixed;
- (_Bool)hidden;
- (_Bool)fastShadow;
- (double)shadowRadius;
- (struct CGSize)shadowOffset;
- (UIColor *)shadowColor;
- (double)borderWidth;
- (UIColor *)borderColor;
- (UIColor *)backgroundColor;
- (double)angle;
- (double)alpha;
- (struct CGRect)rect;
- (NSString *)type;
- (NSString *)key;
@end

@protocol PageSizeAware
- (struct CGSize)naturalSize;
- (_Bool)canSizeToFit;
@end

@protocol PagingScrollView <NSObject>
@property(readonly, nonatomic) UIScrollView *scroller;
@property(nonatomic) struct UIEdgeInsets cellPadding;
@property(nonatomic) _Bool snapScrollToCenter;
@property(nonatomic) _Bool reverse;
@property(readonly, nonatomic, getter=isLoaded) _Bool loaded;
@property(nonatomic) id <PagingScrollViewDelegate> pageDelegate;
@property(nonatomic) id <PagingScrollViewDataSource> pageDataSource;
- (void)replaceLoadedReusablePageViewAtIndex:(unsigned long long)arg1 withView:(UIView *)arg2;
- (UIView *)loadedReusablePageViewForIndex:(unsigned long long)arg1;
- (struct _NSRange)currentPageRange;
- (unsigned long long)currentCenterPage;
- (void)centerOnPage:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)reloadDataAndCenterOnPage:(unsigned long long)arg1 ignoreDelegate:(_Bool)arg2;
- (void)reloadDataAndCenterOnPage:(unsigned long long)arg1;
- (void)reloadData;
- (void)releaseAllPages;
@end

@protocol PagingScrollViewDataSource <NSObject>
- (UIView *)createReusablePageViewForScrollView:(id <PagingScrollView>)arg1;
- (unsigned long long)totalPageCountForScrollView:(id <PagingScrollView>)arg1;
@end

@protocol PagingScrollViewDelegate <NSObject>
- (void)renderPage:(unsigned long long)arg1 inView:(UIView *)arg2 forScrollView:(id <PagingScrollView>)arg3;
- (double)pageWidthForScrollView:(id <PagingScrollView>)arg1;

@optional
- (void)pagingScrollViewDidEndDragging:(id <PagingScrollView>)arg1 willDecelerate:(_Bool)arg2 pageDestination:(int)arg3;
- (void)pagingScrollViewWillBeginDragging:(id <PagingScrollView>)arg1;
- (void)pagingScrollView:(id <PagingScrollView>)arg1 didSettleOnPage:(unsigned long long)arg2;
- (void)pagingScrollView:(id <PagingScrollView>)arg1 didChangeToPage:(unsigned long long)arg2;
- (void)pagingScrollView:(id <PagingScrollView>)arg1 pageDidBecomeHidden:(unsigned long long)arg2;
- (void)pagingScrollView:(id <PagingScrollView>)arg1 pageDidBecomeVisible:(unsigned long long)arg2;
- (void)pagingScrollView:(id <PagingScrollView>)arg1 gotDoubleTapOn:(UIView *)arg2 index:(unsigned long long)arg3 at:(struct CGPoint)arg4;
- (void)pagingScrollView:(id <PagingScrollView>)arg1 gotSingleTapOn:(UIView *)arg2 index:(unsigned long long)arg3 at:(struct CGPoint)arg4;
- (void)pagingScrollView:(id <PagingScrollView>)arg1 layoutPage:(unsigned long long)arg2 view:(UIView *)arg3 inFrame:(struct CGRect)arg4;
@end

@protocol ParseModule <NSObject>
- (void)parseDidInitializeWithApplicationId:(NSString *)arg1 clientKey:(NSString *)arg2;
@end

@protocol ProductPageDataSourceDelegate <NSObject>
- (void)productPageDataSource:(ProductPageDataSource *)arg1 magazinesDidLoad:(NSArray *)arg2 magazineId:(NSString *)arg3;
@end

@protocol PurchaseDetail
@property(readonly, nonatomic) NSString *issueId;
@property(readonly, nonatomic) NSString *publicationId;
@property(readonly, nonatomic) NSString *userId;
@end

@protocol PurchaseIPhoneThanksViewControllerDelegate <NSObject>
- (void)purchaseIPhoneThanksViewController:(PurchaseIPhoneThanksViewController *)arg1 didTapShopMore:(UIButton *)arg2;
- (void)purchaseIPhoneThanksViewController:(PurchaseIPhoneThanksViewController *)arg1 didSelectPublication:(ZGPublication *)arg2;
@end

@protocol PurchaseService <NSObject>
- (void)retryPurchases;
- (NSArray *)purchaseTickets;
- (void)restorePurchases;
- (void)askToLaunchReaderForPurchasedIssueId:(NSString *)arg1 pubId:(NSString *)arg2 message:(NSString *)arg3 launcher:(ReaderLauncher *)arg4;
- (void)purchase:(NSString *)arg1 internalProductId:(NSString *)arg2 delegate:(id <PurchaseServiceDelegate>)arg3;
@end

@protocol PurchaseServiceDelegate <NSObject>
- (void)purchaseSucceeded:(SKPaymentTransaction *)arg1 storeProductId:(NSString *)arg2 internalProductId:(NSString *)arg3 details:(NSArray *)arg4;

@optional
- (void)askToLaunchReaderForPurchasedIssueId:(NSString *)arg1 storeProductId:(NSString *)arg2;
- (void)purchaseFailed:(SKPaymentTransaction *)arg1 storeProductId:(NSString *)arg2 internalProductId:(NSString *)arg3;
@end

@protocol PurchaseThanksViewControllerDelegate <NSObject>
- (void)purchaseThanksViewController:(PurchaseThanksViewController *)arg1 didTapShopMore:(UIButton *)arg2;
- (void)purchaseThanksViewController:(PurchaseThanksViewController *)arg1 didSelectPublication:(ZGPublication *)arg2;
- (void)purchaseThanksViewController:(PurchaseThanksViewController *)arg1 presentViewController:(UIViewController *)arg2 animated:(_Bool)arg3 completion:(void (^)(void))arg4;
@end

@protocol ReaderLauncherDelegate <NSObject>
- (void)readerLauncher:(ReaderLauncher *)arg1 issueReady:(id <Issue>)arg2 inReader:(UIViewController<IssueController> *)arg3;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;

@optional
- (void)willLaunchReaderForPublication:(NSString *)arg1 issue:(NSString *)arg2;
- (void)declinedToLaunchReaderForPublication:(NSString *)arg1 issue:(NSString *)arg2;
- (void)readerLauncher:(ReaderLauncher *)arg1 failedToLaunchExcerpt:(NSString *)arg2 issue:(NSString *)arg3;
- (void)readerLauncher:(ReaderLauncher *)arg1 failedToLaunchPublication:(NSString *)arg2 issue:(NSString *)arg3;
@end

@protocol RenderManagerDelegate <NSObject>
- (void)imageReady:(struct CGImage *)arg1 forFilePath:(NSString *)arg2 inSize:(struct CGSize)arg3;
- (void)renderCancelledForFilePath:(NSString *)arg1;

@optional
- (_Bool)isRenderNeededForFilePath:(NSString *)arg1;
- (void)imageNotFoundForFilePath:(NSString *)arg1;
@end

@protocol RestorePurchaseServiceDelegate <NSObject>
- (void)didSucceedRestore;
- (void)didFailRestore;
@end

@protocol SKPaymentTransactionObserver <NSObject>
- (void)paymentQueue:(SKPaymentQueue *)arg1 updatedTransactions:(NSArray *)arg2;

@optional
- (void)paymentQueue:(SKPaymentQueue *)arg1 updatedDownloads:(NSArray *)arg2;
- (void)paymentQueueRestoreCompletedTransactionsFinished:(SKPaymentQueue *)arg1;
- (void)paymentQueue:(SKPaymentQueue *)arg1 restoreCompletedTransactionsFailedWithError:(NSError *)arg2;
- (void)paymentQueue:(SKPaymentQueue *)arg1 removedTransactions:(NSArray *)arg2;
@end

@protocol SKProductsRequestDelegate <SKRequestDelegate>
- (void)productsRequest:(SKProductsRequest *)arg1 didReceiveResponse:(SKProductsResponse *)arg2;
@end

@protocol SKRequestDelegate <NSObject>

@optional
- (void)request:(SKRequest *)arg1 didFailWithError:(NSError *)arg2;
- (void)requestDidFinish:(SKRequest *)arg1;
@end

@protocol SQLitePersistence
+ (_Bool)shouldBeStoredInBlob;
+ (NSString *)columnTypeForObjectStorage;
+ (_Bool)canBeStoredInSQLite;

@optional
+ (id)objectWithSQLBlobRepresentation:(NSData *)arg1;
+ (id)objectWithSqlColumnRepresentation:(NSString *)arg1;
- (NSString *)sqlColumnRepresentationOfSelf;
- (NSData *)sqlBlobRepresentationOfSelf;
@end

@protocol ScrollViewDelegateSetter <NSObject>
- (id <UIScrollViewDelegate>)scrollViewDelegate;

@optional
- (void)setScrollViewDelegate:(id <UIScrollViewDelegate>)arg1;
@end

@protocol SearchViewControllerDelegate <NSObject>
- (void)searchViewController:(SearchViewController *)arg1 didSelectCategory:(id)arg2;
- (void)searchViewController:(SearchViewController *)arg1 didSelectMagazine:(id)arg2;

@optional
- (void)searchViewControllerShouldDismiss:(SearchViewController *)arg1 animated:(_Bool)arg2;
@end

@protocol ServerError
- (NSString *)localizedMessage;
- (NSString *)message;
- (NSString *)code;
@end

@protocol ServerErrorSpecific
- (_Bool)restoreRequired;
- (_Bool)readerVersionNotSupported;
- (_Bool)invalidPublication;
- (_Bool)noPublications;
- (_Bool)userNotQualified;
- (_Bool)invalidUser;
- (_Bool)excerptNotFound;
- (_Bool)noExcerptsFound;
- (_Bool)badVersionStub;
- (_Bool)badRequest;
- (_Bool)systemNotAvailableServerError;
- (_Bool)userNotEntitledServerError;
- (_Bool)noItemsInLibraryServerError;
- (_Bool)invalidNewstandServerError;
- (_Bool)unexpectedServerError;
- (_Bool)loginExistsServerError;
- (_Bool)packingListNotFoundServerError;
- (_Bool)maxUserDevicesReachedServerError;
- (_Bool)issueNotSupportedForDeviceServerError;
- (_Bool)invalidNewPasswordServerError;
- (_Bool)invalidLoginServerError;
- (_Bool)deviceNotAuthorizedServerError;
- (_Bool)authorizationFailureServerError;
- (_Bool)appVersionNotSupportedServerError;
@end

@protocol SessionState <NSObject>
- (NSString *)lastViewedSortView;
- (NSString *)lastViewedTab;
- (NSString *)lastViewedPage;
- (NSString *)pubId;
- (NSString *)excerptId;
- (NSString *)issueId;
@end

@protocol SettingsTableViewControllerDelegate <NSObject>
- (void)didTapDismissButton:(UIButton *)arg1;
@end

@protocol SharePopoverViewControllerDelegate <NSObject>
- (void)sharePopoverViewController:(SharePopoverViewController *)arg1 didMakeSelection:(long long)arg2;
@end

@protocol ShopPageDataSourceDelegate <NSObject>

@optional
- (void)shopPageDataSource:(ShopPageDataSource *)arg1 magazinesDidLoad:(NSArray *)arg2 categoryId:(NSString *)arg3;
- (void)shopPageDataSource:(ShopPageDataSource *)arg1 mainCategoriesDidLoad:(NSArray *)arg2;
- (void)shopPageDataSource:(ShopPageDataSource *)arg1 categoriesDidLoad:(NSArray *)arg2;
@end

@protocol SignInHeaderCellDelegate <NSObject>
- (void)sectionHeaderView:(SignInHeaderCell *)arg1 sectionClosed:(long long)arg2;
- (void)sectionHeaderView:(SignInHeaderCell *)arg1 sectionOpened:(long long)arg2;

@optional
- (void)continueGuestCheckout;
- (void)closeWindow;
- (void)switchToSignIn;
- (void)loadSignInView;
@end

@protocol SocialConnection <NSObject>
@property(retain, nonatomic) NSString *thumbUrl;
@property(retain, nonatomic) NSString *provider;
@property(retain, nonatomic) NSString *nickname;
@property(retain, nonatomic) NSString *email;
- (id <ImageResource>)thumbnail;
@end

@protocol SocialFriend <NSObject>
@property(retain, nonatomic) NSString *nickname;
@property(retain, nonatomic) NSString *providerId;
@end

@protocol SocialUser <NSObject>
@property(retain, nonatomic) NSString *gigyaGender;
@property(retain, nonatomic) NSString *gigyaBirthYear;
@property(retain, nonatomic) NSNumber *isSiteUid;
@property(retain, nonatomic) NSString *thumbUrl;
@property(retain, nonatomic) NSString *uidSignature;
@property(retain, nonatomic) NSNumber *loggedIn;
@property(retain, nonatomic) NSString *uid;
@property(retain, nonatomic) NSString *loginProvider;
@property(retain, nonatomic) NSString *nickname;
@property(retain, nonatomic) NSString *email;
@property(retain, nonatomic) NSString *timestamp;
- (id <SocialConnection>)getSocialConnectionByProvider:(NSString *)arg1;
- (id <SocialConnection>)addSocialConnectionOfProvider:(NSString *)arg1 email:(NSString *)arg2 nickname:(NSString *)arg3 thumbUrl:(NSString *)arg4;
- (id <ImageResource>)thumbnail;
@end

@protocol Spread <NSObject>
- (NSString *)jpgFileName;
- (NSString *)jpgThumbnailFileName;
- (_Bool)hasLinksToEnhancedContent;
- (_Bool)containsPageWithFolio:(NSString *)arg1;
- (id <Page>)rightPage;
- (id <Page>)leftPage;
@end

@protocol SubscriptionExpiration <NSObject>
- (NSString *)offerURL;
- (_Bool)includesVAT;
- (_Bool)vatApplicable;
- (NSNumber *)price;
- (_Bool)displayUpsellOnExpire;
- (NSNumber *)issuesRemaining;
- (NSNumber *)numberOfIssues;
- (NSString *)pubId;
- (NSString *)pubName;
@end

@protocol SubscriptionOffer <NSObject>
- (_Bool)selectedForSubscription;
- (NSString *)latestIssueTitle;
- (NSString *)thumbnailFileName;
- (NSString *)thumbnailURL;
- (NSNumber *)numberOfIssues;
- (NSString *)pubDescription;
- (NSString *)displayName;
- (NSString *)pubId;
- (NSString *)pubName;
- (long long)order;
@end

@protocol TabbedController <NSObject>
@property(copy, nonatomic) NSArray *tabTitles;
@property(copy, nonatomic) NSArray *tabIconPdfs;
@property(retain, nonatomic) UIImage *tabToolbarBackgroundImage;
@property(nonatomic) UIViewController *selectedTabViewController;
@property(nonatomic) unsigned long long selectedTabIndex;
@property(copy, nonatomic) NSArray *tabViewControllers;
- (void)dismissedPopoverControllerFromTab:(unsigned long long)arg1;
- (void)presentedPopoverControllerFromTab:(unsigned long long)arg1 highlighted:(_Bool)arg2;
- (UIBarButtonItem *)tabBarButtonForTabIndex:(unsigned long long)arg1;
- (void)pushViewController:(UIViewController *)arg1 animated:(_Bool)arg2;
@end

@protocol TabbedControllerDelegate <NSObject>

@optional
- (void)tabbedController:(UIViewController<TabbedController> *)arg1 didRotateFromInterfaceOrientation:(long long)arg2 toInterfaceOrientation:(long long)arg3;
- (void)tabbedController:(UIViewController<TabbedController> *)arg1 willRotateToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)tabbedController:(UIViewController<TabbedController> *)arg1 didSelectViewController:(UIViewController *)arg2;
- (_Bool)tabbedController:(UIViewController<TabbedController> *)arg1 shouldSelectViewController:(UIViewController *)arg2;
@end

@protocol TableOfContents <NSObject>
- (NSString *)folioWithArticleAfter:(NSString *)arg1 forOrientation:(int)arg2;
- (NSString *)folioWithArticleAfter:(NSString *)arg1;
- (NSString *)folioWithArticleBefore:(NSString *)arg1 forOrientation:(int)arg2;
- (NSString *)folioWithArticleBefore:(NSString *)arg1;
- (_Bool)hasAnyArticlesForOrientation:(int)arg1;
- (_Bool)hasAnyArticles;
- (_Bool)hasTextOfArticleStartingOnFolio:(NSString *)arg1 forOrientation:(int)arg2;
- (_Bool)hasTextOfArticleStartingOnFolio:(NSString *)arg1;
- (_Bool)hasArticleStartingOnFolio:(NSString *)arg1 forOrientation:(int)arg2;
- (_Bool)hasArticleStartingOnFolio:(NSString *)arg1;
- (NSArray *)textOfArticlesStartingOnFolio:(NSString *)arg1 forOrientation:(int)arg2;
- (NSArray *)textOfArticlesStartingOnFolio:(NSString *)arg1;
- (NSArray *)articlesStartingOnFolio:(NSString *)arg1 forOrientation:(int)arg2;
- (NSArray *)articlesStartingOnFolio:(NSString *)arg1;
- (id <Article>)firstArticlePresentOnFolio:(NSString *)arg1 forOrientation:(int)arg2;
- (NSIndexPath *)sectionArticleIndexPathForArticlesStartingOnFolio:(NSString *)arg1 forOrientation:(int)arg2;
- (NSArray *)sectionsForOrientation:(int)arg1;
- (NSArray *)sections;
@end

@protocol TableOfContentsSection <NSObject>
- (NSArray *)articlesAppearingInTOC;
- (NSArray *)articles;
- (NSNumber *)order;
- (NSString *)title;
@end

@protocol TableOfContentsViewControllerDelegate <NSObject>
- (void)tableOfContentsViewControllerDidDismiss:(UIViewController *)arg1;

@optional
- (void)tableOfContentsViewController:(UIViewController *)arg1 didSelectIndex:(unsigned long long)arg2;
- (void)tableOfContentsViewController:(UIViewController *)arg1 didSelectArticle:(id <Article>)arg2;
- (void)tableOfContentsViewController:(UIViewController *)arg1 didSelectPage:(id <Page>)arg2;
@end

@protocol TapDetectingWindowDelegate <NSObject>

@optional
- (void)tapDetectingWindow:(TapDetectingWindow *)arg1 gotTwoFingerTap:(UIView *)arg2 atPoint:(struct CGPoint)arg3;
- (void)tapDetectingWindow:(TapDetectingWindow *)arg1 gotDoubleTap:(UIView *)arg2 atPoint:(struct CGPoint)arg3;
- (void)tapDetectingWindow:(TapDetectingWindow *)arg1 gotSingleTap:(UIView *)arg2 atPoint:(struct CGPoint)arg3;
@end

@protocol TextPageObject <AnimatablePageObject>
- (void)setShadowOffset:(struct CGSize)arg1;
- (struct CGSize)shadowOffset;
- (void)setShadowColor:(UIColor *)arg1;
- (UIColor *)shadowColor;
- (void)setMaxiumLines:(unsigned long long)arg1;
- (unsigned long long)maximumLines;
- (void)setFont:(UIFont *)arg1;
- (UIFont *)font;
- (void)setTextColor:(UIColor *)arg1;
- (UIColor *)textColor;
- (void)setText:(NSString *)arg1;
- (NSString *)text;
@end

@protocol Theme <NSObject>
- (void)configSubmitButton:(UIButton *)arg1;
- (void)configButton:(UIButton *)arg1;
- (UIButton *)basicButtonWithFrame:(struct CGRect)arg1 title:(NSString *)arg2;
- (void)configTextField:(UITextField *)arg1;
- (UIColor *)settingsHomescreenSelectedIconColor;
- (UIImage *)readHomescreenIcon;
- (UIImage *)shopHomescreenIcon;
- (UIImage *)exploreHomescreenIcon;
- (UIColor *)settingHomescreenUnselectedTextColor;
- (UIColor *)settingsTableViewCellBackgroundColor;
- (UIColor *)settingsTableViewSeparatorColor;
- (UIColor *)settingsTableViewBackgroundColor;
- (UIColor *)settingsTableViewButtonTextColor;
- (UIColor *)settingsTableViewTextColor;
- (UIColor *)loginFlowMainTextColor;
- (UIImage *)backLoginIcon;
- (UIImage *)closeLoginIcon;
- (UIColor *)loginFlowBackgroundColor;
- (UIFont *)fontForTabBar;
- (NSString *)applicationFontBold;
- (UIColor *)buyButtonColor;
- (UIColor *)applicationTextColor;
- (UIColor *)applicationBackgroundColor;
- (UIImage *)closeIcon;
- (UIImage *)backArrowImage;
- (void)setAppearance;
@end

@protocol ThemeManager
- (void)themeLabel:(UILabel *)arg1 inContext:(NSString *)arg2;
- (NSString *)getTheme;
- (UIFont *)getFontFace:(NSString *)arg1;
- (UIColor *)getSegmentedControlColor:(NSString *)arg1;
- (UIColor *)getCurrentPageIndicatorColor:(NSString *)arg1;
- (UIColor *)getPageIndicatorColor:(NSString *)arg1;
- (UIColor *)getFontColor:(NSString *)arg1;
- (UIColor *)getShadowColor:(NSString *)arg1;
- (UIColor *)getBackgroundColor:(NSString *)arg1;
@end

@protocol ThumbnailScrollViewDataSource
- (NSString *)thumbnailScrollView:(ThumbnailScrollView *)arg1 titleAtIndex:(long long)arg2;
- (unsigned long long)thumbnailCountForThumbnailScrollView:(ThumbnailScrollView *)arg1;

@optional
- (NSString *)thumbnailScrollView:(ThumbnailScrollView *)arg1 imageFilenameAtIndex:(long long)arg2;
- (UIImage *)thumbnailScrollView:(ThumbnailScrollView *)arg1 imageAtIndex:(long long)arg2;
@end

@protocol ThumbnailScrollViewDelegate

@optional
- (void)thumbnailScrollView:(ThumbnailScrollView *)arg1 didSelectIndex:(long long)arg2;
@end

@protocol TopNavigationViewDelegate
- (void)navigateBack:(id)arg1;
@end

@protocol TransitionablePageObject <AnimatablePageObject>
@property(readonly, nonatomic) unsigned long long currentIndex;
- (unsigned long long)transitionableCount;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAppearanceContainer <NSObject>
@end

@protocol UIApplicationDelegate <NSObject>

@optional
@property(retain, nonatomic) UIWindow *window;
- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;
- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;
- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;
- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;
- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;
- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;
- (void)applicationWillEnterForeground:(UIApplication *)arg1;
- (void)applicationDidEnterBackground:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleWatchKitExtensionRequest:(NSDictionary *)arg2 reply:(void (^)(NSDictionary *))arg3;
- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;
- (void)applicationSignificantTimeChange:(UIApplication *)arg1;
- (void)applicationWillTerminate:(UIApplication *)arg1;
- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;
- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;
- (void)applicationWillResignActive:(UIApplication *)arg1;
- (void)applicationDidBecomeActive:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (void)applicationDidFinishLaunching:(UIApplication *)arg1;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UICollectionViewDataSource <NSObject>
- (UICollectionViewCell *)collectionView:(UICollectionView *)arg1 cellForItemAtIndexPath:(NSIndexPath *)arg2;
- (long long)collectionView:(UICollectionView *)arg1 numberOfItemsInSection:(long long)arg2;

@optional
- (UICollectionReusableView *)collectionView:(UICollectionView *)arg1 viewForSupplementaryElementOfKind:(NSString *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (long long)numberOfSectionsInCollectionView:(UICollectionView *)arg1;
@end

@protocol UICollectionViewDelegate <UIScrollViewDelegate>

@optional
- (UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)arg1 transitionLayoutForOldLayout:(UICollectionViewLayout *)arg2 newLayout:(UICollectionViewLayout *)arg3;
- (void)collectionView:(UICollectionView *)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldShowMenuForItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingSupplementaryView:(UICollectionReusableView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 willDisplaySupplementaryView:(UICollectionReusableView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 willDisplayCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didUnhighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didHighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldHighlightItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol UICollectionViewDelegateFlowLayout <UICollectionViewDelegate>

@optional
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 sizeForItemAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIImagePickerControllerDelegate <NSObject>

@optional
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)arg1;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingMediaWithInfo:(NSDictionary *)arg2;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingImage:(UIImage *)arg2 editingInfo:(NSDictionary *)arg3;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPickerViewDataSource <NSObject>
- (long long)pickerView:(UIPickerView *)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(UIPickerView *)arg1;
@end

@protocol UIPickerViewDelegate <NSObject>

@optional
- (void)pickerView:(UIPickerView *)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (UIView *)pickerView:(UIPickerView *)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(UIView *)arg4;
- (NSAttributedString *)pickerView:(UIPickerView *)arg1 attributedTitleForRow:(long long)arg2 forComponent:(long long)arg3;
- (NSString *)pickerView:(UIPickerView *)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (double)pickerView:(UIPickerView *)arg1 rowHeightForComponent:(long long)arg2;
- (double)pickerView:(UIPickerView *)arg1 widthForComponent:(long long)arg2;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional
- (void)searchBar:(UISearchBar *)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(UISearchBar *)arg1;
- (void)searchBarCancelButtonClicked:(UISearchBar *)arg1;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)arg1;
- (void)searchBarSearchButtonClicked:(UISearchBar *)arg1;
- (_Bool)searchBar:(UISearchBar *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)searchBar:(UISearchBar *)arg1 textDidChange:(NSString *)arg2;
- (void)searchBarTextDidEndEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldEndEditing:(UISearchBar *)arg1;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldBeginEditing:(UISearchBar *)arg1;
@end

@protocol UISearchDisplayDelegate <NSObject>

@optional
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchScope:(long long)arg2;
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchString:(NSString *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willUnloadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didLoadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayControllerDidEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerDidBeginSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillBeginSearch:(UISearchDisplayController *)arg1;
@end

@protocol UITabBarControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)tabBarController:(UITabBarController *)arg1 animationControllerForTransitionFromViewController:(UIViewController *)arg2 toViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)tabBarController:(UITabBarController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)tabBarControllerPreferredInterfaceOrientationForPresentation:(UITabBarController *)arg1;
- (unsigned long long)tabBarControllerSupportedInterfaceOrientations:(UITabBarController *)arg1;
- (void)tabBarController:(UITabBarController *)arg1 didEndCustomizingViewControllers:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(UITabBarController *)arg1 willEndCustomizingViewControllers:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(UITabBarController *)arg1 willBeginCustomizingViewControllers:(NSArray *)arg2;
- (void)tabBarController:(UITabBarController *)arg1 didSelectViewController:(UIViewController *)arg2;
- (_Bool)tabBarController:(UITabBarController *)arg1 shouldSelectViewController:(UIViewController *)arg2;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol UIToolbarDelegate <UIBarPositioningDelegate>
@end

@protocol UIViewControllerAnimatedTransitioning <NSObject>
- (void)animateTransition:(id <UIViewControllerContextTransitioning>)arg1;
- (double)transitionDuration:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (void)animationEnded:(_Bool)arg1;
@end

@protocol UIViewControllerTransitioningDelegate <NSObject>

@optional
- (UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)arg1 presentingViewController:(UIViewController *)arg2 sourceViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)arg1 presentingController:(UIViewController *)arg2 sourceController:(UIViewController *)arg3;
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol User <Credentials, NSObject>
- (id <SocialUser>)addSocialUserOfProvider:(NSString *)arg1 uid:(NSString *)arg2 email:(NSString *)arg3 nickname:(NSString *)arg4 timestamp:(NSString *)arg5 thumbUrl:(NSString *)arg6 isSiteUid:(_Bool)arg7 uidSignature:(NSString *)arg8 gigyaBirthYear:(NSString *)arg9 gigyaGender:(NSString *)arg10;
- (void)removeBookmarksOfType:(int)arg1 forMediaType:(int)arg2 publisher:(NSString *)arg3 identifier:(NSString *)arg4;
- (void)removeBookmarksOfType:(int)arg1 forMediaType:(int)arg2 publisher:(NSString *)arg3 identifier:(NSString *)arg4 location:(NSString *)arg5;
- (NSArray *)getBookmarksOfType:(int)arg1 forForMediaType:(int)arg2 publisher:(NSString *)arg3 identifier:(NSString *)arg4 location:(NSString *)arg5;
- (NSArray *)getBookmarksOfType:(int)arg1 forForMediaType:(int)arg2 publisher:(NSString *)arg3 identifier:(NSString *)arg4;
- (id <IssueBookmark>)addBookmarkOfType:(int)arg1 forMediaType:(int)arg2 publisher:(NSString *)arg3 identifier:(NSString *)arg4 location:(NSString *)arg5;
- (id <IssueBookmark>)bookmarkOfType:(int)arg1 forForMediaType:(int)arg2 publisher:(NSString *)arg3 identifier:(NSString *)arg4;
- (id <IssueBookmark>)setBookmarkOfType:(int)arg1 forMediaType:(int)arg2 publisher:(NSString *)arg3 identifier:(NSString *)arg4 location:(NSString *)arg5;
- (NSNumber *)daysBack;
- (void)setDaysBack:(NSNumber *)arg1;
- (int)idleTimerDisabled;
- (void)setIdleTimerDisabled:(int)arg1;
- (int)homeScreen;
- (void)setHomeScreen:(int)arg1;
- (int)readerTextViewTipShown;
- (void)setReaderTextViewTipShown:(int)arg1;
- (int)readerFirstTimeTipShown;
- (void)setReaderFirstTimeTipShown:(int)arg1;
- (NSString *)lastExcerptViewed;
- (void)setLastExcerptViewed:(NSString *)arg1;
- (NSString *)lastLibraryItemViewed;
- (void)setLastLibraryItemViewed:(NSString *)arg1;
- (int)rateAppReminder;
- (void)setRateAppReminder:(int)arg1;
- (NSString *)rateAppVersion;
- (void)setRateAppVersion:(NSString *)arg1;
- (double)rateAppDate;
- (void)setRateAppDate:(double)arg1;
- (int)rateAppCount;
- (void)setRateAppCount:(int)arg1;
- (int)restoreLibraryItemInstructionsCount;
- (void)setRestoreLibraryItemInstructionsCount:(int)arg1;
- (int)removeLibraryItemInstructionsCount;
- (void)setRemoveLibraryItemInstructionsCount:(int)arg1;
- (NSString *)flowableTextFontSize;
- (void)setFlowableTextFontSize:(NSString *)arg1;
- (_Bool)loggedIn;
- (void)setLoggedIn:(int)arg1;
- (void)setNewsstandId:(NSString *)arg1;
- (NSString *)newsstandId;
- (_Bool)isDefaultUser;
- (void)setUserId:(NSString *)arg1;
- (NSString *)userId;

@optional
- (NSString *)getGender;
- (NSString *)getDob;
- (void)logoutSocialUser;
- (_Bool)isGigyaLoggedin;
- (id <SocialUser>)getLoggedInSocialUser;
- (_Bool)isUserConnectedToProvider:(NSString *)arg1;
- (id <SocialConnection>)getSocialConnectionByProvider:(NSString *)arg1;
@end

@protocol ViewControllerNavigationDelegate <NSObject>
- (void)hideView:(id)arg1;
- (void)replaceRootViewController:(UIViewController *)arg1 animated:(_Bool)arg2 withAnimation:(int)arg3;
- (void)popToRootViewController:(_Bool)arg1 withAnimation:(int)arg2;
- (void)popViewController:(_Bool)arg1 withAnimation:(int)arg2;
- (void)pushViewController:(UIViewController *)arg1 animated:(_Bool)arg2 withAnimation:(int)arg3;
- (void)replaceRootViewController:(UIViewController *)arg1 animated:(_Bool)arg2;
- (void)popToRootViewController:(_Bool)arg1;
- (void)popViewController:(_Bool)arg1;
- (void)pushViewController:(UIViewController *)arg1 animated:(_Bool)arg2;
@end

@protocol WebViewViewControllerDelegate <NSObject>
- (void)webViewViewControllerDidFinishLoad:(WebViewViewController *)arg1;

@optional
- (void)openURL:(NSURL *)arg1;
@end

@protocol ZDKCommentListRetryDelegate <NSObject>
- (void)refresh;
@end

@protocol ZDKDispatcherDelegate <NSObject>
- (NSError *)accountError;
- (_Bool)validAccount:(_Bool)arg1;

@optional
- (void)invalidateToken;
- (void)addAuthToRequest:(NSMutableURLRequest *)arg1;
- (_Bool)handleLoginResponse:(ZDKDispatcherResponse *)arg1;
- (NSMutableURLRequest *)createLoginRequest;
- (_Bool)needToLogin;
@end

@protocol ZDKRMADialogViewDelegate <NSObject>
- (void)neverShowDialogAgain;
- (void)rateApp;

@optional
- (void)showFeedbackView;
@end

@protocol ZDKRMAFeedbackViewDelegate <NSObject>
- (void)closeDialog;
- (void)back;
- (void)sendFeedback:(NSString *)arg1;
@end

@protocol ZDKSpinnerDelegate <NSObject>
- (void)setFrame:(struct CGRect)arg1;
- (void)setCenter:(struct CGPoint)arg1;
- (struct CGPoint)center;
- (struct CGRect)frame;
- (void)setHidden:(_Bool)arg1;
- (_Bool)hidden;
- (void)stopAnimating;
- (void)startAnimating;
@end

@protocol ZDKUITextViewDelegate <UITextViewDelegate>
- (void)caretPosition:(struct CGRect)arg1;
@end

@protocol ZDRequestListRetryDelegate <NSObject>
- (void)refresh;
@end

@protocol ZGAtomLink
@property(retain, nonatomic) NSString *href;
@property(retain, nonatomic) NSString *type;
@property(retain, nonatomic) NSString *rel;
@end

@protocol ZGBoundaryResourceHolder
@property ZGBoundaryResource *boundaryResource;
@end

@protocol ZGBoundaryResourceOperationDelegate <NSObject>

@optional
- (NSString *)traceDescription;
- (void)resourceOperationDidLoad;
@end

@protocol ZGCategoryAsHeroTarget <NSObject>
- (ZGCategory *)targetedCategory;
@end

@protocol ZGHeroTargetResource
@property ZGHeroTarget *heroTarget;
- (NSString *)heroTargetEntity;
@end

@protocol ZGRemoteObjectOperationDelegate <NSObject>

@optional
- (void)remoteObjectOperationDidLoad;
@end

@protocol ZGRetainable <NSObject>
@property(retain, nonatomic) NSNumber *markedForRetention;
@end

@protocol ZinioCoversGridViewDataSource
- (ZinioCoverButton *)cellForPagingScrollView:(ZinioIPhoneCoversPagingScrollView *)arg1;
- (unsigned long long)numberOfCovers;
@end

@protocol ZinioCoversGridViewDelegate
- (void)didSelectCoverAtIndex:(unsigned long long)arg1;
- (void)pagingScrollView:(ZinioIPhoneCoversPagingScrollView *)arg1 configureCell:(UIView *)arg2 forIndex:(unsigned long long)arg3;
@end

@protocol ZinioCoversVerticalScrollViewDataSource <NSObject>
- (UIView *)cellForVerticalScrollView:(ZinioCoversVerticalScrollView *)arg1;
- (struct CGPoint)sectionTitleOriginOffset:(unsigned long long)arg1 verticalScrollView:(ZinioCoversVerticalScrollView *)arg2;
- (double)sectionTitleHeightForSection:(unsigned long long)arg1 verticalScrollView:(ZinioCoversVerticalScrollView *)arg2;
- (NSString *)titleForSection:(unsigned long long)arg1 verticalScrollView:(ZinioCoversVerticalScrollView *)arg2;
- (unsigned long long)numberOfCellsForSection:(unsigned long long)arg1 verticalScrollView:(ZinioCoversVerticalScrollView *)arg2;
- (unsigned long long)numberOfSectionsForVerticalScrollView:(ZinioCoversVerticalScrollView *)arg1;
@end

@protocol ZinioCoversVerticalScrollViewDelegate <NSObject>
- (void)verticalScrollView:(ZinioCoversVerticalScrollView *)arg1 configureCell:(UIView *)arg2 forIndexPath:(NSIndexPath *)arg3;

@optional
- (void)verticalScrollView:(ZinioCoversVerticalScrollView *)arg1 didSingleTapCell:(UIView *)arg2 forIndexPath:(NSIndexPath *)arg3 atPoint:(struct CGPoint)arg4;
- (void)verticalScrollView:(ZinioCoversVerticalScrollView *)arg1 didSelectCell:(NSIndexPath *)arg2;
- (struct UIEdgeInsets)verticalScrollView:(ZinioCoversVerticalScrollView *)arg1 contentInsetsForOrientation:(long long)arg2;
- (unsigned long long)verticalScrollView:(ZinioCoversVerticalScrollView *)arg1 numberOfRowsForOrientation:(long long)arg2;
- (double)verticalScrollViewCellWidth:(ZinioCoversVerticalScrollView *)arg1;
@end

@protocol ZinioIPhoneCoversVerticalScrollViewDataSource <NSObject>
- (UIView *)cellForVerticalScrollView:(ZinioIPhoneCoversVerticalScrollView *)arg1;
- (struct CGPoint)sectionTitleOriginOffset:(unsigned long long)arg1 verticalScrollView:(ZinioIPhoneCoversVerticalScrollView *)arg2;
- (double)sectionTitleHeightForSection:(unsigned long long)arg1 verticalScrollView:(ZinioIPhoneCoversVerticalScrollView *)arg2;
- (NSString *)titleForSection:(unsigned long long)arg1 verticalScrollView:(ZinioIPhoneCoversVerticalScrollView *)arg2;
- (unsigned long long)numberOfCellsForSection:(unsigned long long)arg1 verticalScrollView:(ZinioIPhoneCoversVerticalScrollView *)arg2;
- (unsigned long long)numberOfSectionsForVerticalScrollView:(ZinioIPhoneCoversVerticalScrollView *)arg1;
@end

@protocol ZinioIPhoneCoversVerticalScrollViewDelegate <NSObject>
- (void)verticalScrollView:(ZinioIPhoneCoversVerticalScrollView *)arg1 configureCell:(UIView *)arg2 forIndexPath:(NSIndexPath *)arg3;

@optional
- (void)verticalScrollView:(ZinioIPhoneCoversVerticalScrollView *)arg1 didSingleTapCell:(UIView *)arg2 forIndexPath:(NSIndexPath *)arg3 atPoint:(struct CGPoint)arg4;
- (void)verticalScrollView:(ZinioIPhoneCoversVerticalScrollView *)arg1 didSelectCell:(NSIndexPath *)arg2;
@end

@protocol ZinioIPhoneShopHeroScrollViewDelegate
- (void)didShowHeroItem:(unsigned long long)arg1;
- (void)didSelectIPhoneHeroItem:(unsigned long long)arg1;
@end

@protocol ZinioShopHeroScrollViewDelegate
- (void)didShowHeroItem:(unsigned long long)arg1;
- (void)didSelectHeroItem:(unsigned long long)arg1;
@end

@protocol ZipArchiveDelegate <NSObject>

@optional
- (void)zipArchive:(ZipArchive *)arg1 didUnzipFile:(NSString *)arg2 toPath:(NSString *)arg3 count:(unsigned long long)arg4 totalCount:(unsigned long long)arg5;
- (void)zipArchive:(ZipArchive *)arg1 willUnzipFile:(NSString *)arg2 toPath:(NSString *)arg3 count:(unsigned long long)arg4 totalCount:(unsigned long long)arg5;
- (_Bool)OverWriteOperation:(NSString *)arg1;
- (void)ErrorMessage:(NSString *)arg1;
@end

@protocol ZoomImageViewControllerDataSource <NSObject>
- (UIImage *)imageForZoomImageViewController:(ZoomImageViewController *)arg1;
- (struct CGRect)imageFrameForZoomImageViewController:(ZoomImageViewController *)arg1;
@end

@protocol ZoomTransitionSupport
@property(nonatomic) struct CGRect zoomFrom;
@end

@interface Zinio_iReaderAppDelegate : WTAppDelegate <UIApplicationDelegate, UITabBarControllerDelegate, AppStartupServiceDelegate, AppStartupTaskDelegate>
{
    UIWindow *window;
    UIViewController<TabbedController> *tabBarController;
    ContentManager *contentManager;
    NSObject<ContentServer> *contentServer;
    NSObject<AnalyticsManager> *analyticsManager;
    id <PurchaseService> purchaseService;
    NSString *purchasedIssueId;
    id <AppDataService> appDataService;
    id <LibraryAccess> libraryAccess;
    DeviceIdManager *deviceIdManager;
    ZGDownloadManager *downloadManager;
    NSOperationQueue *operationQueue;
    id <AppStartupService> _appStartupService;
    _Bool needSigninDisplay;
    _Bool sendAlphaSurvey;
    _Bool needSignInDisplay;
    _Bool isNewsstandDidChangeNotificationName;
    _Bool shouldSwitchtoLIBRARY_TAB;
    NSString *emailIdForNeedSignInDisplay;
    _Bool passiveSharingSwitch;
    _Bool passiveReaderSharingSwitch;
    _Bool passiveRemindSwitch;
    _Bool passiveRemindActivitySwitch;
    _Bool purchaseMagazineValue;
    _Bool closeCheck;
    _Bool closeReaderCheck;
    _Bool loadUpsellBanner;
    _Bool readerBookmarkClicked;
    NSString *bannerIdClicked;
    NSString *_lastNewsstandId;
    id <BrandManager> brandManager;
    NSMutableDictionary *_alertBlocks;
}

+ (id)delegate;
@property(copy, nonatomic) NSString *lastNewsstandId; // @synthesize lastNewsstandId=_lastNewsstandId;
@property(retain, nonatomic) NSMutableDictionary *alertBlocks; // @synthesize alertBlocks=_alertBlocks;
@property(nonatomic) _Bool readerBookmarkClicked; // @synthesize readerBookmarkClicked;
@property(retain, nonatomic) NSString *bannerIdClicked; // @synthesize bannerIdClicked;
@property(nonatomic) _Bool loadUpsellBanner; // @synthesize loadUpsellBanner;
@property(nonatomic) _Bool closeReaderCheck; // @synthesize closeReaderCheck;
@property(nonatomic) _Bool closeCheck; // @synthesize closeCheck;
@property(nonatomic) _Bool purchaseMagazineValue; // @synthesize purchaseMagazineValue;
@property(nonatomic) _Bool passiveRemindActivitySwitch; // @synthesize passiveRemindActivitySwitch;
@property(nonatomic) _Bool passiveRemindSwitch; // @synthesize passiveRemindSwitch;
@property(nonatomic) _Bool passiveReaderSharingSwitch; // @synthesize passiveReaderSharingSwitch;
@property(nonatomic) _Bool passiveSharingSwitch; // @synthesize passiveSharingSwitch;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue;
@property(retain, nonatomic) NSString *emailIdForNeedSignInDisplay; // @synthesize emailIdForNeedSignInDisplay;
@property(nonatomic) _Bool shouldSwitchtoLIBRARY_TAB; // @synthesize shouldSwitchtoLIBRARY_TAB;
@property(nonatomic) _Bool isNewsstandDidChangeNotificationName; // @synthesize isNewsstandDidChangeNotificationName;
@property(nonatomic) _Bool needSignInDisplay; // @synthesize needSignInDisplay;
@property(nonatomic) _Bool sendAlphaSurvey; // @synthesize sendAlphaSurvey;
@property(retain, nonatomic) ZGDownloadManager *downloadManager; // @synthesize downloadManager;
@property(retain, nonatomic) DeviceIdManager *deviceIdManager; // @synthesize deviceIdManager;
@property(retain, nonatomic) id <PurchaseService> purchaseService; // @synthesize purchaseService;
@property(retain, nonatomic) NSString *purchasedIssueId; // @synthesize purchasedIssueId;
@property(retain, nonatomic) NSObject<AnalyticsManager> *analyticsManager; // @synthesize analyticsManager;
@property(retain, nonatomic) id <BrandManager> brandManager; // @synthesize brandManager;
@property(retain, nonatomic) id <LibraryAccess> libraryAccess; // @synthesize libraryAccess;
@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
@property(retain, nonatomic) UIViewController<TabbedController> *tabBarController; // @synthesize tabBarController;
@property(retain, nonatomic) UIWindow *window; // @synthesize window;
@property(retain, nonatomic) id <AppStartupService> appStartupService; // @synthesize appStartupService=_appStartupService;
- (void)setBatchDownloadingEnabled:(_Bool)arg1;
- (void)setDidDisplayBatchDownloadingFlag:(_Bool)arg1;
- (_Bool)isBatchDownloadingEnabled;
- (void)appStartupTasksComplete;
- (id)mainUIViewController;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (id)parseURLParams:(id)arg1;
- (void)openURL:(int)arg1;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (id)appURL:(int)arg1;
- (int)selectedTab;
- (_Bool)tabIsSelected:(int)arg1;
- (id)tabBarViewControllerForTab:(int)arg1;
- (void)switchToTabWithNumber:(id)arg1;
- (void)switchToTab:(int)arg1;
- (int)tabTypeForPosition:(int)arg1;
- (int)tabPosition:(int)arg1;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)handleAppLeavingForegroundTasks;
- (void)dependencyManagerReady:(id)arg1;
- (void)setupGigya;
- (void)startupPostProcessing;
- (void)setupUATags;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)handleRemoteNotification:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)deepLink:(id)arg1;
- (void)showDeepLinkWithIssueId:(id)arg1;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)handleRemoteNotification:(id)arg1 userInfo:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (void)application:(id)arg1 didReceiveLocalNotification:(id)arg2;
- (void)checkAlphaExpire;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (id)startupTaskPersistentDataDirectory;
- (id)startupTaskTemporaryDataDirectory;
- (void)appShouldExitWithMessage:(id)arg1;
- (void)taskFinished;
- (void)updateProgress:(id)arg1 message:(id)arg2;
- (void)startPackingListUpdateOperation;
- (void)trackEvent:(id)arg1;
- (void)wiredFromNib;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MyAccountViewController : BaseViewController <UITableViewDelegate, UITableViewDataSource, UIAlertViewDelegate, MFMailComposeViewControllerDelegate>
{
    MyAccountTableViewCell *myAccountTableViewCell;
    UITableView *tableView;
}

@property(nonatomic) MyAccountTableViewCell *myAccountTableViewCell; // @synthesize myAccountTableViewCell;
@property(nonatomic) UITableView *tableView; // @synthesize tableView;
- (unsigned long long)supportedInterfaceOrientations;
- (void)_logout;
- (void)launchLeaveApplicationAlert;
- (id)tableViewCellName;
- (double)tableViewCellHeight;
- (id)labelTextColor;
- (id)backgroundColorForView;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)supportLabelTapped;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)setCellBackgroundColor:(id)arg1;
- (id)createNewMyAccountTableViewCell;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)getSelectedBackgroundImage;
- (id)getUnselectedBackgroundImage;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)setupScrolling;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)navigationBarTitle;
- (void)setTableViewSeparatorColor:(id)arg1;
- (void)configureNavBarTitle;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SignInViewController : UIViewController <PurchaseServiceDelegate, UITextFieldDelegate>
{
    NSObject<User> *user;
    UILabel *submitLabel;
    UIButton *forgotPasswordButton;
    UIView *customBackButtonView;
    NSURL *purchaseURL;
    id <PurchaseService> purchaseService;
    UIActivityIndicatorView *busyIndicator;
    _Bool isPurchase;
    _Bool isModal;
    UIButton *close;
    _Bool isExplorePurchase;
    UIView *zionEntryView;
    UIButton *facebookButton;
    UIButton *twitterButton;
    UIButton *linkedInButton;
    UILabel *linkAccountTitle;
    id <SocialUser> socialUser;
    _Bool isGygyaShow;
    UITextField *emailTextField;
    UITextField *passwordTextField;
    UIView *emailFieldBox;
    UIView *passwordFieldBox;
    id <UITextFieldDelegate> delegate;
    NetworkServicesManager *networkManager;
    UIView *mainEntryView;
    UIView *signInTitleView;
    _Bool createCheck;
    UIButton *_signInButton;
    UISwitch *_stagingSwitch;
    UILabel *_stagingSwitchLabel;
    UITextField *_retypePasswordTextField;
}

@property(retain, nonatomic) UITextField *retypePasswordTextField; // @synthesize retypePasswordTextField=_retypePasswordTextField;
@property(retain, nonatomic) UISwitch *stagingSwitch; // @synthesize stagingSwitch=_stagingSwitch;
@property(retain, nonatomic) UILabel *stagingSwitchLabel; // @synthesize stagingSwitchLabel=_stagingSwitchLabel;
@property(retain, nonatomic) UIButton *signInButton; // @synthesize signInButton=_signInButton;
@property(nonatomic) _Bool isExplorePurchase; // @synthesize isExplorePurchase;
@property(nonatomic) _Bool createCheck; // @synthesize createCheck;
@property(retain, nonatomic) UIView *signInTitleView; // @synthesize signInTitleView;
@property(retain, nonatomic) UIView *mainEntryView; // @synthesize mainEntryView;
@property(nonatomic) id <UITextFieldDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) NetworkServicesManager *networkManager; // @synthesize networkManager;
@property(retain, nonatomic) UIView *passwordFieldBox; // @synthesize passwordFieldBox;
@property(retain, nonatomic) UIView *emailFieldBox; // @synthesize emailFieldBox;
@property(retain, nonatomic) UITextField *passwordTextField; // @synthesize passwordTextField;
@property(retain, nonatomic) UITextField *emailTextField; // @synthesize emailTextField;
@property(retain, nonatomic) UILabel *linkAccountTitle; // @synthesize linkAccountTitle;
@property(retain, nonatomic) id <SocialUser> socialUser; // @synthesize socialUser;
@property(retain, nonatomic) UIView *linkedInButton; // @synthesize linkedInButton;
@property(retain, nonatomic) UIButton *twitterButton; // @synthesize twitterButton;
@property(retain, nonatomic) UIButton *facebookButton; // @synthesize facebookButton;
@property(retain, nonatomic) UIView *zionEntryView; // @synthesize zionEntryView;
@property(retain, nonatomic) UIButton *close; // @synthesize close;
@property(nonatomic) _Bool isModal; // @synthesize isModal;
@property(nonatomic) _Bool isPurchase; // @synthesize isPurchase;
@property(retain, nonatomic) UIActivityIndicatorView *busyIndicator; // @synthesize busyIndicator;
@property(retain, nonatomic) id <PurchaseService> purchaseService; // @synthesize purchaseService;
@property(retain, nonatomic) NSURL *purchaseURL; // @synthesize purchaseURL;
@property(retain, nonatomic) UIView *customBackButtonView; // @synthesize customBackButtonView;
@property(retain, nonatomic) UIButton *forgotPasswordButton; // @synthesize forgotPasswordButton;
@property(retain, nonatomic) UILabel *submitLabel; // @synthesize submitLabel;
@property(retain, nonatomic) NSObject<User> *user; // @synthesize user;
- (void)stagingSwitchDidChangeValue:(id)arg1;
- (void)handlePasswordShouldReturn:(id)arg1;
- (long long)passwordTextFieldReturnKeyType;
- (void)processUserChange:(id)arg1 newUser:(id)arg2;
- (id)tableViewBackgroundColor;
- (_Bool)displayToolbar;
- (void)enableApplicationStartupProcedures;
- (void)setStartingTab;
- (void)purchaseFailed:(id)arg1 storeProductId:(id)arg2 internalProductId:(id)arg3;
- (void)purchaseSucceeded:(id)arg1 storeProductId:(id)arg2 internalProductId:(id)arg3 details:(id)arg4;
- (void)dismissScreen;
- (void)userClose:(id)arg1;
- (void)backButton;
- (void)stopActivityIndicator;
- (void)submit;
- (void)submitFacebook;
- (void)forgotPassword;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface WelcomeViewController : UIViewController <PurchaseServiceDelegate>
{
    UILabel *signInButtonLabel;
    UILabel *createAccountButtonLabel;
    UIButton *signInButton;
    UIButton *createAccountButton;
    UIButton *anonymousButton;
    NSURL *purchaseURL;
    _Bool isPurchase;
    UIActivityIndicatorView *busySignal;
    id <PurchaseService> purchaseService;
    UIButton *closeButton;
    UIActivityIndicatorView *theBusySignal;
}

@property(nonatomic) UIButton *closeButton; // @synthesize closeButton;
@property(retain, nonatomic) UIActivityIndicatorView *theBusySignal; // @synthesize theBusySignal;
@property(retain, nonatomic) id <PurchaseService> purchaseService; // @synthesize purchaseService;
@property(nonatomic) _Bool isPurchase; // @synthesize isPurchase;
@property(retain, nonatomic) NSURL *purchaseURL; // @synthesize purchaseURL;
@property(nonatomic) UIButton *anonymousButton; // @synthesize anonymousButton;
@property(nonatomic) UILabel *createAccountButtonLabel; // @synthesize createAccountButtonLabel;
@property(nonatomic) UILabel *signInButtonLabel; // @synthesize signInButtonLabel;
@property(nonatomic) UIButton *createAccountButton; // @synthesize createAccountButton;
@property(nonatomic) UIButton *signInButton; // @synthesize signInButton;
- (void)purchaseFailed:(id)arg1 storeProductId:(id)arg2 internalProductId:(id)arg3;
- (void)purchaseSucceeded:(id)arg1 storeProductId:(id)arg2 internalProductId:(id)arg3 details:(id)arg4;
- (void)close;
- (void)continuePurchase;
- (void)createAccount;
- (void)signIn;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CreateAccountViewController : UIViewController <SignInHeaderCellDelegate, CreateAccountNavHeaderDelegate>
{
    ChooseNotificationTypesView *chooseNotificationTypesView;
    TermsOfServiceFooterView *termsOfServiceFooterView;
    UIView *customBackButtonView;
    NSURL *purchaseURL;
    UIActivityIndicatorView *busyIndicator;
    _Bool isPurchase;
    _Bool isLibrary;
    _Bool _isSettingsSelection;
    _Bool isNavigating;
    CreateAccountNavHeader *customNavHeader;
    UINavigationController *navController;
    UIView *zionEntryView;
    UIButton *facebookButton;
    UIButton *twitterButton;
    UIButton *linkedInButton;
    UILabel *linkAccountTitle;
    id <SocialUser> socialUser;
    NSObject<User> *user;
    _Bool isGygyaShow;
    UILabel *emailLabel;
    UILabel *passwordLabel;
    UILabel *retypePasswordLabel;
    UILabel *signInLabel;
    UILabel *guestCheckoutLabel;
    UILabel *guestCheckoutInfoLabel;
    UILabel *viewTitle;
    UILabel *registrationConjunction;
    _Bool _showGuestCheckout;
    UITextField *emailTextField;
    UITextField *passwordTextField;
    UITextField *retypePasswordTextField;
    UIView *emailFieldBox;
    UIView *passwordFieldBox;
    UIView *retypePasswordFieldBox;
    UIButton *receiveUpdatesButton;
    UIButton *receiveThirdPartyPromosButton;
    UIButton *submitButton;
    UIButton *termsOfServiceButton;
    UIColor *defaultLabelColor;
    UILabel *labelValidation;
    ZGNotificationTypeChooser *notificationTypeChooser;
    UIView *guestCheckOutView;
    UIActivityIndicatorView *activityIndicator;
    NSObject<Account> *account;
    NetworkServicesManager *networkManager;
    ContentManager *contentManager;
    UIView *createAccountTitleView;
    UIControl *mainEntryViewBox;
    _Bool isCreateAccountExplorePurchase;
    EmbossedLineView *horizontalBarLine;
    UILabel *_createAccountLabel;
    UITextField *textFieldBeingEdited;
    UILabel *labelFailedValidation;
    ZGNotificationTypeChooser *notificationTypesChooser;
    UIScrollView *_entryScrollView;
}

@property(retain, nonatomic) UIScrollView *entryScrollView; // @synthesize entryScrollView=_entryScrollView;
@property(nonatomic, getter=isGuestAccountShowing) _Bool showGuestCheckout; // @synthesize showGuestCheckout=_showGuestCheckout;
@property(nonatomic) _Bool isSettingsSelection; // @synthesize isSettingsSelection=_isSettingsSelection;
@property(retain, nonatomic) EmbossedLineView *horizontalBarLine; // @synthesize horizontalBarLine;
@property(nonatomic) _Bool isCreateAccountExplorePurchase; // @synthesize isCreateAccountExplorePurchase;
@property(retain, nonatomic) UIControl *mainEntryViewBox; // @synthesize mainEntryViewBox;
@property(retain, nonatomic) UIView *createAccountTitleView; // @synthesize createAccountTitleView;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
@property(retain, nonatomic) NetworkServicesManager *networkManager; // @synthesize networkManager;
@property(retain, nonatomic) UIView *retypePasswordFieldBox; // @synthesize retypePasswordFieldBox;
@property(retain, nonatomic) UIView *passwordFieldBox; // @synthesize passwordFieldBox;
@property(retain, nonatomic) UIView *emailFieldBox; // @synthesize emailFieldBox;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(retain, nonatomic) UIView *guestCheckOutView; // @synthesize guestCheckOutView;
@property(nonatomic) UIColor *defaultLabelColor; // @synthesize defaultLabelColor;
@property(retain, nonatomic) ZGNotificationTypeChooser *notificationTypesChooser; // @synthesize notificationTypesChooser;
@property(nonatomic) UILabel *labelFailedValidation; // @synthesize labelFailedValidation;
@property(retain, nonatomic) UIButton *submitButton; // @synthesize submitButton;
@property(retain, nonatomic) UIButton *termsOfServiceButton; // @synthesize termsOfServiceButton;
@property(retain, nonatomic) UIButton *receiveThirdPartyPromosButton; // @synthesize receiveThirdPartyPromosButton;
@property(retain, nonatomic) UIButton *receiveUpdatesButton; // @synthesize receiveUpdatesButton;
@property(retain, nonatomic) UITextField *retypePasswordTextField; // @synthesize retypePasswordTextField;
@property(retain, nonatomic) UITextField *passwordTextField; // @synthesize passwordTextField;
@property(retain, nonatomic) UITextField *emailTextField; // @synthesize emailTextField;
@property(retain, nonatomic) UILabel *registrationConjunction; // @synthesize registrationConjunction;
@property(retain, nonatomic) UILabel *viewTitle; // @synthesize viewTitle;
@property(retain, nonatomic) UILabel *guestCheckoutInfoLabel; // @synthesize guestCheckoutInfoLabel;
@property(retain, nonatomic) UILabel *guestCheckoutLabel; // @synthesize guestCheckoutLabel;
@property(retain, nonatomic) UILabel *signInLabel; // @synthesize signInLabel;
@property(retain, nonatomic) UILabel *retypePasswordLabel; // @synthesize retypePasswordLabel;
@property(retain, nonatomic) UILabel *passwordLabel; // @synthesize passwordLabel;
@property(retain, nonatomic) UILabel *emailLabel; // @synthesize emailLabel;
@property(retain, nonatomic) NSObject<Account> *account; // @synthesize account;
@property(retain, nonatomic) UITextField *textFieldBeingEdited; // @synthesize textFieldBeingEdited;
@property(retain, nonatomic) UILabel *linkAccountTitle; // @synthesize linkAccountTitle;
@property(retain, nonatomic) id <SocialUser> socialUser; // @synthesize socialUser;
@property(retain, nonatomic) UIView *linkedInButton; // @synthesize linkedInButton;
@property(retain, nonatomic) UIButton *twitterButton; // @synthesize twitterButton;
@property(retain, nonatomic) UIButton *facebookButton; // @synthesize facebookButton;
@property(retain, nonatomic) UIView *zionEntryView; // @synthesize zionEntryView;
@property(retain, nonatomic) UINavigationController *navController; // @synthesize navController;
@property(nonatomic) _Bool isNavigating; // @synthesize isNavigating;
@property(retain, nonatomic) CreateAccountNavHeader *customNavHeader; // @synthesize customNavHeader;
@property(nonatomic) _Bool isLibrary; // @synthesize isLibrary;
@property(nonatomic) _Bool isPurchase; // @synthesize isPurchase;
@property(retain, nonatomic) UIActivityIndicatorView *busyIndicator; // @synthesize busyIndicator;
@property(retain, nonatomic) NSURL *purchaseURL; // @synthesize purchaseURL;
@property(retain, nonatomic) UIView *customBackButtonView; // @synthesize customBackButtonView;
@property(retain, nonatomic) TermsOfServiceFooterView *termsOfServiceFooterView; // @synthesize termsOfServiceFooterView;
@property(retain, nonatomic) ChooseNotificationTypesView *chooseNotificationTypesView; // @synthesize chooseNotificationTypesView;
@property(retain, nonatomic) UILabel *createAccountLabel; // @synthesize createAccountLabel=_createAccountLabel;
- (void)touchBackground:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)hideSelfAsModal;
- (void)hideCreateAccountView;
- (void)setFirstResponderWithValidationFailedStateForTextField:(id)arg1 onLabel:(id)arg2;
- (void)clearValidationFailedState;
- (void)setupLabelAndTextFields;
- (void)setStartingTab;
- (void)submit;
- (void)moveToPreviousScreen;
- (id)tableViewBackgroundColor;
- (void)closeWindow;
- (void)switchToSignIn;
- (void)processUserChange:(id)arg1 newUser:(id)arg2;
- (_Bool)submitData;
- (void)setFirstResponderWithValidationFailedStateForViewWithTag:(id)arg1;
- (void)backButton;
- (void)launchTermsOfService:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)viewDidLoad;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface InternationalIPhoneStoreViewController : BaseViewController <UITableViewDelegate, UITableViewDataSource>
{
    UITableView *tableView;
    InternationalStoreTableViewCell *internationalStoreTableViewCell;
    NSArray *newsstands;
    NSObject<User> *currentUser;
    NSIndexPath *selectedIndexPath;
    _Bool newsstandsAvailable;
    UIButton *submitButton;
}

@property(retain, nonatomic) UIButton *submitButton; // @synthesize submitButton;
@property(retain, nonatomic) NSIndexPath *selectedIndexPath; // @synthesize selectedIndexPath;
@property(retain, nonatomic) NSObject<User> *currentUser; // @synthesize currentUser;
@property(retain, nonatomic) NSArray *newsstands; // @synthesize newsstands;
@property(nonatomic) InternationalStoreTableViewCell *internationalStoreTableViewCell; // @synthesize internationalStoreTableViewCell;
@property(nonatomic) UITableView *tableView; // @synthesize tableView;
- (void)noNewsstandsAvailable;
- (void)submitNewsstand;
- (id)getSelectedBackgroundImage;
- (id)getUnselectedBackgroundImage;
- (id)createTableViewCell;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)imageForCountryWithName:(id)arg1;
- (id)determineSelectedIndexPathFromNewsstands;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SettingsAboutZinioViewController : UIViewController
{
    UITextView *_aboutZinioText;
    UIButton *_legalNoticesButton;
    UILabel *_allRightsReservedLabel;
    UILabel *_versionNumberLabel;
    UILabel *_patentLabel;
    UILabel *_debugInfoLabel;
    UILabel *_brandedAppLabel;
    UIImageView *_zinioLogo;
}

@property(retain, nonatomic) UIImageView *zinioLogo; // @synthesize zinioLogo=_zinioLogo;
@property(retain, nonatomic) UILabel *brandedAppLabel; // @synthesize brandedAppLabel=_brandedAppLabel;
@property(retain, nonatomic) UILabel *debugInfoLabel; // @synthesize debugInfoLabel=_debugInfoLabel;
@property(retain, nonatomic) UILabel *patentLabel; // @synthesize patentLabel=_patentLabel;
@property(retain, nonatomic) UILabel *versionNumberLabel; // @synthesize versionNumberLabel=_versionNumberLabel;
@property(retain, nonatomic) UILabel *allRightsReservedLabel; // @synthesize allRightsReservedLabel=_allRightsReservedLabel;
@property(retain, nonatomic) UIButton *legalNoticesButton; // @synthesize legalNoticesButton=_legalNoticesButton;
@property(retain, nonatomic) UITextView *aboutZinioText; // @synthesize aboutZinioText=_aboutZinioText;
- (void)dealloc;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)showLegalNotices;
- (void)didReceiveMemoryWarning;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface SettingsBaseTableViewController : UITableViewController
{
}

+ (id)buttonColor;
+ (id)separatorColor;
+ (id)mainTextColor;
+ (id)backgroundColor;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)cellColor;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface EditFieldTableViewCell : UITableViewCell
{
    UILabel *label;
    UITextField *valueField;
}

@property(retain, nonatomic) UITextField *valueField; // @synthesize valueField;
@property(retain, nonatomic) UILabel *label; // @synthesize label;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (id)getUnselectedBackgroundImage;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface BaseEditFieldViewController : BaseViewController <UITextFieldDelegate>
{
    UITableView *tableView;
    EditFieldTableViewCell *editFieldCell;
    NSMutableArray *cellLabels;
    double labelWidth;
    BaseEditFieldKeyboardToolBar *baseEditFieldKeyboardToolbar;
    struct CGRect keyboardBounds;
    UITextField *textFieldBeingEdited;
    NSIndexPath *indexPathForCellInValidationFailedState;
    _Bool isEnteringData;
}

@property(retain, nonatomic) NSIndexPath *indexPathForCellInValidationFailedState; // @synthesize indexPathForCellInValidationFailedState;
@property(retain, nonatomic) UITextField *textFieldBeingEdited; // @synthesize textFieldBeingEdited;
@property(retain, nonatomic) BaseEditFieldKeyboardToolBar *baseEditFieldKeyboardToolbar; // @synthesize baseEditFieldKeyboardToolbar;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView;
@property(nonatomic) EditFieldTableViewCell *editFieldCell; // @synthesize editFieldCell;
- (id)tableViewBackgroundColor;
- (id)createNewEditFieldTableViewCell;
- (void)slideToolbarDown;
- (void)slideToolbarUp;
- (void)done;
- (id)getCellForTextFieldBeingEdited:(id)arg1;
- (void)renderCellAtIndexPath:(id)arg1 atScrollPosition:(long long)arg2;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)next;
- (void)previous;
- (void)toggleToolbarButtonsForRow:(long long)arg1 AndSection:(long long)arg2;
- (_Bool)displayToolbar;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)setupCellLabelSize:(id)arg1 forIndex:(unsigned long long)arg2;
- (id)cellLabelForIndex:(unsigned long long)arg1;
- (void)setupCellLabels:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)initialize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LibraryTableViewCell : UITableViewCell
{
    UIImageView *thumbnail;
    UILabel *issueTitle;
    UILabel *issueDate;
    UIImageView *newstateIssueImage;
    UILabel *newstateIssueLabel;
    UIImageView *disclosureIndicatorImage;
    UIImageView *deleteImageView;
    double deleteModeOffset;
    UILabel *packageSizeLabel;
    UIActivityIndicatorView *spinner;
    _Bool inDeleteMode;
    _Bool selectedForDeletion;
}

@property(retain, nonatomic) UILabel *newstateIssueLabel; // @synthesize newstateIssueLabel;
@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner;
@property(retain, nonatomic) UILabel *packageSizeLabel; // @synthesize packageSizeLabel;
@property(nonatomic) _Bool inDeleteMode; // @synthesize inDeleteMode;
@property(nonatomic) _Bool selectedForDeletion; // @synthesize selectedForDeletion;
@property(retain, nonatomic) UIImageView *deleteImageView; // @synthesize deleteImageView;
@property(retain, nonatomic) UIImageView *disclosureIndicatorImage; // @synthesize disclosureIndicatorImage;
@property(retain, nonatomic) UIImageView *newstateIssueImage; // @synthesize newstateIssueImage;
@property(retain, nonatomic) UILabel *issueDate; // @synthesize issueDate;
@property(retain, nonatomic) UILabel *issueTitle; // @synthesize issueTitle;
@property(retain, nonatomic) UIImageView *thumbnail; // @synthesize thumbnail;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)setNormalMode;
- (void)setNormalModeAnimated:(_Bool)arg1;
- (void)setDeleteMode;
- (void)setDeleteModeAnimated:(_Bool)arg1;
- (void)toggleCellSelection;
- (void)markCellUnselectedForDeletion;
- (void)markCellSelectedForDeletion;
@property(nonatomic, getter=isDownloadingMode) _Bool downloadingMode;
- (void)prepareForReuse;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (id)getEditSelectedBackgroundImage;
- (id)getSelectedBackgroundImage;
- (id)getUnselectedBackgroundImage;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface ObjectValidationException : NSException
{
}

@end

@interface ZNSegmentedControl : UISegmentedControl
{
}

- (void)_setup;
- (id)initWithItems:(id)arg1;
- (void)awakeFromNib;

@end

@interface CredentialsValidatorImpl : NSObject <CredentialsValidator>
{
}

+ (id)sharedInstance;
- (void)_showAlertWithUserInfo:(id)arg1;
- (void)validatePassword:(id)arg1;
- (_Bool)validatePasswordString:(id)arg1;
- (_Bool)validateTwoPasswords:(id)arg1 retypePassword:(id)arg2;
- (_Bool)validateEmailAddressString:(id)arg1;
- (void)validateEmailAddress:(id)arg1;

@end

@interface AccountValidatorImpl : NSObject <AccountValidator>
{
}

- (void)validateLastName:(id)arg1;
- (void)validateFirstName:(id)arg1;
- (void)validatePassword:(id)arg1;
- (void)validateEmailAddress:(id)arg1;

@end

@interface AccountImpl : NSObject <Account>
{
    NSString *firstName;
    NSString *lastName;
    NSString *emailAddress;
    NSString *password;
    NSString *passwordRepeat;
    _Bool acceptInternalNotifications;
    _Bool acceptExternalNotifications;
}

@property(nonatomic) _Bool acceptInternalNotifications; // @synthesize acceptInternalNotifications;
@property(nonatomic) _Bool acceptExternalNotifications; // @synthesize acceptExternalNotifications;
@property(retain, nonatomic) NSString *passwordRepeat; // @synthesize passwordRepeat;
@property(retain, nonatomic) NSString *password; // @synthesize password;
@property(retain, nonatomic) NSString *emailAddress; // @synthesize emailAddress;
@property(retain, nonatomic) NSString *lastName; // @synthesize lastName;
@property(retain, nonatomic) NSString *firstName; // @synthesize firstName;
- (void)dealloc;

@end

@interface UserImpl : SQLitePersistentObject <User>
{
    NSString *emailAddress;
    NSString *password;
    NSString *userId;
    NSString *newsstandId;
    _Bool loggedIn;
    NSString *flowableTextFontSize;
    int removeLibraryItemInstructionsCount;
    int restoreLibraryItemInstructionsCount;
    int rateAppCount;
    double rateAppDate;
    NSString *rateAppVersion;
    int rateAppReminder;
    NSString *lastLibraryItemViewed;
    NSString *lastExcerptViewed;
    int readerFirstTimeTipShown;
    int readerTextViewTipShown;
    NSMutableArray *bookmarks;
    int homeScreen;
    _Bool defaultUser;
}

@property(nonatomic, getter=isDefaultUser) _Bool defaultUser; // @synthesize defaultUser;
@property(nonatomic) int homeScreen; // @synthesize homeScreen;
@property(nonatomic) int readerTextViewTipShown; // @synthesize readerTextViewTipShown;
@property(nonatomic) int readerFirstTimeTipShown; // @synthesize readerFirstTimeTipShown;
@property(retain, nonatomic) NSString *lastExcerptViewed; // @synthesize lastExcerptViewed;
@property(retain, nonatomic) NSString *lastLibraryItemViewed; // @synthesize lastLibraryItemViewed;
@property(nonatomic) int rateAppReminder; // @synthesize rateAppReminder;
@property(retain, nonatomic) NSString *rateAppVersion; // @synthesize rateAppVersion;
@property(nonatomic) double rateAppDate; // @synthesize rateAppDate;
@property(nonatomic) int rateAppCount; // @synthesize rateAppCount;
@property(nonatomic) int restoreLibraryItemInstructionsCount; // @synthesize restoreLibraryItemInstructionsCount;
@property(nonatomic) int removeLibraryItemInstructionsCount; // @synthesize removeLibraryItemInstructionsCount;
@property(retain, nonatomic) NSString *flowableTextFontSize; // @synthesize flowableTextFontSize;
@property(nonatomic) _Bool loggedIn; // @synthesize loggedIn;
@property(retain, nonatomic) NSString *newsstandId; // @synthesize newsstandId;
@property(retain, nonatomic) NSString *userId; // @synthesize userId;
@property(retain, nonatomic) NSString *emailAddress; // @synthesize emailAddress;
- (id)daysBack;
- (void)setDaysBack:(id)arg1;
- (int)idleTimerDisabled;
- (void)setIdleTimerDisabled:(int)arg1;
- (void)removeBookmarksOfType:(int)arg1 forMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4;
- (void)removeBookmarksOfType:(int)arg1 forMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4 location:(id)arg5;
- (id)getBookmarksOfType:(int)arg1 forForMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4 location:(id)arg5;
- (id)getBookmarksOfType:(int)arg1 forForMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4;
- (id)addBookmarkOfType:(int)arg1 forMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4 location:(id)arg5;
- (id)bookmarkOfType:(int)arg1 forForMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4;
- (id)setBookmarkOfType:(int)arg1 forMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4 location:(id)arg5;
- (void)setPassword:(id)arg1;
- (id)password;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ChooseNotificationTypesView : UIView
{
    UIButton *internalNotificationsButton;
    UIButton *externalNotificationsButton;
    UILabel *internalNotificationsLabel;
    UILabel *externalNotificationsLabel;
    _Bool acceptInternalNotifications;
    _Bool acceptExternalNotifications;
}

@property(readonly, nonatomic) _Bool acceptExternalNotifications; // @synthesize acceptExternalNotifications;
@property(readonly, nonatomic) _Bool acceptInternalNotifications; // @synthesize acceptInternalNotifications;
@property(retain, nonatomic) UILabel *externalNotificationsLabel; // @synthesize externalNotificationsLabel;
@property(retain, nonatomic) UIButton *externalNotificationsButton; // @synthesize externalNotificationsButton;
@property(retain, nonatomic) UILabel *internalNotificationsLabel; // @synthesize internalNotificationsLabel;
@property(retain, nonatomic) UIButton *internalNotificationsButton; // @synthesize internalNotificationsButton;
- (void)externalNotificationsButton:(id)arg1;
- (void)internalNotificationsButton:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface BaseEditFieldKeyboardToolBar : UIToolbar
{
    UIBarButtonItem *previous;
    UIBarButtonItem *next;
    UIBarButtonItem *done;
}

- (id)nextButton;
- (id)previousButton;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface Alerts : NSObject
{
}

+ (void)processServerErrorException:(id)arg1;
+ (void)processServerErrors:(id)arg1 delegate:(id)arg2;
+ (void)processServerErrors:(id)arg1;
+ (void)showAlertWithTitleUsingTag:(id)arg1 message:(id)arg2 delegate:(id)arg3 additionalButtons:(id)arg4 tag:(long long)arg5;
+ (void)showAlertWithTitle:(id)arg1 message:(id)arg2 delegate:(id)arg3 additionalButtons:(id)arg4;
+ (void)showAlertWithTitle:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3 delegate:(id)arg4 tag:(long long)arg5;
+ (void)showAlertWithTitle:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3 delegate:(id)arg4;

@end

@interface Publisher : NSObject
{
    NSString *_publisherId;
    NSString *_name;
    long long _favoriteCounter;
}

@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *publisherId; // @synthesize publisherId=_publisherId;
@property(nonatomic) long long favoriteCounter; // @synthesize favoriteCounter=_favoriteCounter;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;

@end

@interface ApplicationDAO : SQLitePersistentObject
{
}

- (void)updateSchema;
- (void)executeSQL:(id)arg1;
- (id)initDatabase;

@end

@interface ApplicationDataService : NSObject
{
    ApplicationDAO *dataSource;
}

+ (id)createUUId;
@property(retain, nonatomic) ApplicationDAO *dataSource; // @synthesize dataSource;
- (void)removeUser;
- (void)sendNewsstandDidChangeNotification;
- (id)getUser;
- (id)getUserForUserId:(id)arg1;
- (void)saveAppData:(id)arg1;
- (id)getAppData;
- (void)dealloc;
- (id)initDatabase;

@end

@interface ChangePasswordViewController : BaseEditFieldViewController <UITableViewDataSource, UITableViewDelegate, UIAlertViewDelegate>
{
    NSObject<ChangePassword> *changePassword;
    UITextField *currentTextField;
    OutlineButton *_submitButton;
}

@property(retain, nonatomic) OutlineButton *submitButton; // @synthesize submitButton=_submitButton;
@property(nonatomic) UITextField *currentTextField; // @synthesize currentTextField;
- (id)tableViewBackgroundColor;
- (id)cellLabelColor;
- (_Bool)displayToolbar;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 tableViewCellForRowAtIndexPath:(id)arg2;
- (long long)repeatPasswordReturnKeyType;
- (id)tableView:(id)arg1 editFieldCellForRowAtIndexPath:(id)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)backButton:(id)arg1;
- (void)submit;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)handleNewPasswordRepeatShouldReturn:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)getTitleString;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HelpViewController : WebViewViewController <UIWebViewDelegate, UIAlertViewDelegate>
{
    _Bool loadingLocalFAQ;
    NSURLRequest *launchSafariRequest;
}

@property(retain, nonatomic) NSURLRequest *launchSafariRequest; // @synthesize launchSafariRequest;
- (id)faqFilename;
- (void)cannotLoadFAQ;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ChangePasswordValidatorImpl : NSObject <ChangePasswordValidator>
{
}

- (void)validateCurrentPassword:(id)arg1 newPassword:(id)arg2 repeatPassword:(id)arg3;
- (void)validatePassword:(id)arg1 repeatPassword:(id)arg2;
- (void)validateNewPassword:(id)arg1;
- (void)validatePassword:(id)arg1;
- (void)validateCurrentPassword:(id)arg1;

@end

@interface ChangePasswordImpl : NSObject <ChangePassword>
{
    NSString *currentPassword;
    NSString *password;
    NSString *passwordRepeat;
}

@property(retain, nonatomic) NSString *passwordRepeat; // @synthesize passwordRepeat;
@property(retain, nonatomic) NSString *password; // @synthesize password;
@property(retain, nonatomic) NSString *currentPassword; // @synthesize currentPassword;
- (void)dealloc;

@end

@interface LibraryIndexScrubPreviewView : UIView
{
    UILabel *title;
    UIImageView *backgroundImage;
}

@property(nonatomic) UIImageView *backgroundImage; // @synthesize backgroundImage;
@property(nonatomic) UILabel *title; // @synthesize title;
- (void)dealloc;

@end

@interface SFHFKeychainUtils : NSObject
{
}

+ (id)_getKeychainQuery:(id)arg1;
+ (void)removeObjectForKey:(id)arg1;
+ (id)objectWithKey:(id)arg1;
+ (void)addObject:(id)arg1 withKey:(id)arg2;
+ (void)deleteUsername:(id)arg1 forServiceName:(id)arg2;
+ (_Bool)storeUsername:(id)arg1 andPassword:(id)arg2 forServiceName:(id)arg3 updateExisting:(_Bool)arg4 error:(id *)arg5;
+ (id)getPasswordForUsername:(id)arg1 andServiceName:(id)arg2 error:(id *)arg3;

@end

@interface HorizontalCollectionViewCell : UICollectionViewCell
{
    UIImageView *_imageView;
    Magazine *_magazine;
    UICollectionView *_collectionView;
    NSIndexPath *_indexPath;
}

+ (struct CGSize)cellSize;
@property(retain, nonatomic) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
@property(nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) Magazine *magazine; // @synthesize magazine=_magazine;
- (void)_coverImageDidDownloadNotification:(id)arg1;
- (void)_updateCoverImage:(id)arg1;
- (id)_updatedCoverURLString;
- (void)setUpWithMagazine:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface ApplicationStartupViewController : UIViewController
{
    UIImageView *_animatedView;
    UINavigationController *customNavigationController;
    id <AppStartupService> startupService;
    id <User> _user;
    id <AppDataService> _appDataService;
}

+ (_Bool)applicationHasLaunchedOnce;
@property(retain, nonatomic) id <AppStartupService> startupService; // @synthesize startupService;
@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService=_appDataService;
@property(retain, nonatomic) id <User> user; // @synthesize user=_user;
@property(retain, nonatomic) UINavigationController *customNavigationController; // @synthesize customNavigationController;
@property(retain, nonatomic) UIImageView *animatedView; // @synthesize animatedView=_animatedView;
- (void)beginLaunchPresentation;
- (void)setStartingTab;
- (void)dismissControllerDelayed:(double)arg1;
- (void)dismissController;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)releaseSubviews;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface MyLibraryFooter : UIView
{
    UIButton *getMoreMagazines;
    UIButton *seeAllMagazines;
}

@property(nonatomic) UIButton *seeAllMagazines; // @synthesize seeAllMagazines;
@property(nonatomic) UIButton *getMoreMagazines; // @synthesize getMoreMagazines;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface PDFView : UIView <PageSizeAware>
{
    NSString *documentToBeDisplayed;
    NSString *documentPassword;
    struct CGSize pageSize;
    _Bool rendered;
    UIColor *pdfBackgroundColor;
    _Bool cropCompensation;
}

@property(nonatomic, getter=isCropCompensation) _Bool cropCompensation; // @synthesize cropCompensation;
@property(retain, nonatomic) UIColor *pdfBackgroundColor; // @synthesize pdfBackgroundColor;
@property(readonly, nonatomic, getter=isRendered) _Bool rendered; // @synthesize rendered;
@property(retain, nonatomic) NSString *documentPassword; // @synthesize documentPassword;
@property(retain, nonatomic) NSString *documentToBeDisplayed; // @synthesize documentToBeDisplayed;
- (struct CGSize)calculateDrawRenderFactor;
- (void)freePdf:(struct CGPDFDocument *)arg1;
- (struct CGPDFDocument *)newPdf;
- (struct CGSize)naturalSize;
- (_Bool)canSizeToFit;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ReaderViewController : PagingScrollViewReaderViewController <ReaderLauncherDelegate, ArticlePurchaseThanksViewControllerDelegate, UIScrollViewDelegate, ArticleChooserViewControllerDelegate, JsonClientDelegate, UIGestureRecognizerDelegate, SKProductsRequestDelegate, FreeOfferServiceDelegate, PurchaseServiceDelegate, UIActionSheetDelegate, SharePopoverViewControllerDelegate>
{
    UIButton *prevPageButton;
    UIButton *nextPageButton;
    UIButton *bookmarkButton;
    UILabel *loadingCoverLabel;
    InfoBadgeView *pageBadgeView;
    _Bool enableTextModeToolTip;
    _Bool enableCantZoomToolTip;
    UIView *zinioToolTipView;
    UIView *zinioToolTipContentView;
    UIView *customBackButtonView;
    UINavigationController *navController;
    UINavigationController *flowableTextNavController;
    _Bool textTipIsVisible;
    UIView *upSellShareView;
    UIButton *buySubscriptionButton;
    UIButton *buyIssueButton;
    UIImageView *coverImageView;
    UILabel *subscriptionLengthLabel;
    UILabel *subscriptionDiscountLabel;
    UILabel *numOfLikeLabel;
    UILabel *numOfTweetLabel;
    UILabel *buyThisIssueLabel;
    NSDecimalNumber *issuePrice;
    NSDecimalNumber *offerPrice;
    NSString *localizedIssuePrice;
    NSString *localizedOfferPrice;
    NSNumber *singleIssuePrice;
    NSString *localizedSingleIssuePrice;
    JsonApiClient *jsonClient;
    _Bool isUpSellVisiable;
    ZGMagazine *targetMagazine;
    id <PurchaseService> purchaseService;
    id <FreeOfferService> _freeOfferService;
    UIActivityIndicatorView *actionActivityIndicator;
    UIActivityIndicatorView *currentActivityIndicator;
    _Bool waitingToBuyIssue;
    _Bool waitingToBuySubscription;
    _Bool waitingGigyaResponse;
    NSString *purchaseType;
    id <User> user;
    id <SocialUser> socialUser;
    NavigationInsetViewController *insetController;
    NavigationInsetViewFlowControl *flowController;
    int _buyType;
    _Bool closeReaderCheck;
    UIButton *closeButton;
    UIButton *checkImageBox;
    ZGExcerptCategory *category;
    ExploreCategoryScrollView *exploreCategoryScrollView;
    NSString *fromCategoryId;
    NSString *lastFacebookActionId;
    _Bool isBuyButtonClicked;
    _Bool _shouldShowShareOption;
    BookmarksIPhoneViewController *bookmarkiPhoneController;
    _Bool isAdvertisement;
    ReaderLauncher *readerLauncher;
    long long _lastInterfaceOrientation;
    ReaderLauncher *_readerLauncher;
    SharePopoverController *_sharePopoverController;
    _Bool _isAdvertisement;
    UIView *_navSeperatorLine;
}

@property(retain, nonatomic) UIView *navSeperatorLine; // @synthesize navSeperatorLine=_navSeperatorLine;
@property(nonatomic) _Bool isAdvertisement; // @synthesize isAdvertisement=_isAdvertisement;
@property(nonatomic) int buyType; // @synthesize buyType=_buyType;
@property(nonatomic) long long lastInterfaceOrientation; // @synthesize lastInterfaceOrientation=_lastInterfaceOrientation;
@property(retain, nonatomic) ReaderLauncher *readerLauncher; // @synthesize readerLauncher=_readerLauncher;
@property(nonatomic) id <FreeOfferService> freeOfferService; // @synthesize freeOfferService=_freeOfferService;
@property(retain, nonatomic) SharePopoverController *sharePopoverController; // @synthesize sharePopoverController=_sharePopoverController;
@property(nonatomic) _Bool isBuyButtonClicked; // @synthesize isBuyButtonClicked;
@property(retain, nonatomic) NSString *fromCategoryId; // @synthesize fromCategoryId;
@property(nonatomic) ZGExcerptCategory *category; // @synthesize category;
@property(nonatomic) _Bool waitingToBuySubscription; // @synthesize waitingToBuySubscription;
@property(nonatomic) _Bool waitingToBuyIssue; // @synthesize waitingToBuyIssue;
@property(retain, nonatomic) NavigationInsetViewFlowControl *flowController; // @synthesize flowController;
@property(retain, nonatomic) NavigationInsetViewController *insetController; // @synthesize insetController;
@property(retain, nonatomic) NSObject<User> *user; // @synthesize user;
@property(nonatomic) UIActivityIndicatorView *currentActivityIndicator; // @synthesize currentActivityIndicator;
@property(retain, nonatomic) UIActivityIndicatorView *actionActivityIndicator; // @synthesize actionActivityIndicator;
@property(nonatomic) id <PurchaseService> purchaseService; // @synthesize purchaseService;
@property(retain, nonatomic) ZGMagazine *targetMagazine; // @synthesize targetMagazine;
@property(retain, nonatomic) JsonApiClient *jsonClient; // @synthesize jsonClient;
@property(retain, nonatomic) UILabel *numOfTweetLabel; // @synthesize numOfTweetLabel;
@property(retain, nonatomic) UILabel *numOfLikeLabel; // @synthesize numOfLikeLabel;
@property(retain, nonatomic) NSString *localizedSingleIssuePrice; // @synthesize localizedSingleIssuePrice;
@property(retain, nonatomic) NSNumber *singleIssuePrice; // @synthesize singleIssuePrice;
@property(retain, nonatomic) NSString *localizedOfferPrice; // @synthesize localizedOfferPrice;
@property(retain, nonatomic) NSString *localizedIssuePrice; // @synthesize localizedIssuePrice;
@property(retain, nonatomic) NSDecimalNumber *offerPrice; // @synthesize offerPrice;
@property(retain, nonatomic) NSDecimalNumber *issuePrice; // @synthesize issuePrice;
@property(retain, nonatomic) UIImageView *coverImageView; // @synthesize coverImageView;
@property(retain, nonatomic) UIButton *buyIssueButton; // @synthesize buyIssueButton;
@property(retain, nonatomic) UIButton *buySubscriptionButton; // @synthesize buySubscriptionButton;
@property(retain, nonatomic) UILabel *buyThisIssueLabel; // @synthesize buyThisIssueLabel;
@property(retain, nonatomic) UILabel *subscriptionDiscountLabel; // @synthesize subscriptionDiscountLabel;
@property(retain, nonatomic) UILabel *subscriptionLengthLabel; // @synthesize subscriptionLengthLabel;
@property(retain, nonatomic) UIView *upSellShareView; // @synthesize upSellShareView;
@property(retain, nonatomic) UIView *customBackButtonView; // @synthesize customBackButtonView;
@property(retain, nonatomic) UINavigationController *flowableTextNavController; // @synthesize flowableTextNavController;
@property(retain, nonatomic) UINavigationController *navController; // @synthesize navController;
@property(retain, nonatomic) UIView *zinioToolTipContentView; // @synthesize zinioToolTipContentView;
@property(retain, nonatomic) UIView *zinioToolTipView; // @synthesize zinioToolTipView;
@property(retain, nonatomic) InfoBadgeView *pageBadgeView; // @synthesize pageBadgeView;
@property(retain, nonatomic) UIButton *bookmarkButton; // @synthesize bookmarkButton;
@property(retain, nonatomic) UILabel *loadingCoverLabel; // @synthesize loadingCoverLabel;
@property(retain, nonatomic) UIButton *nextPageButton; // @synthesize nextPageButton;
@property(retain, nonatomic) UIButton *prevPageButton; // @synthesize prevPageButton;
@property(retain, nonatomic) ExploreCategoryScrollView *exploreCategoryScrollView; // @synthesize exploreCategoryScrollView;
- (void)askToLaunchReaderForPurchasedPubId:(id)arg1;
- (void)getFreeOfferFailed:(id)arg1 pubId:(id)arg2;
- (void)getFreeOfferSucceeded:(id)arg1 pubId:(id)arg2;
- (void)_handleInterfaceOrientationChange;
- (void)_orientationDidChangeNotificationHandler:(id)arg1;
- (void)articlePurchaseThanksViewController:(id)arg1 didSelectPublication:(id)arg2;
- (void)readerLauncher:(id)arg1 failedToLaunchExcerpt:(id)arg2 issue:(id)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)_showSheetForServiceType:(id)arg1 shortURL:(id)arg2;
- (void)_showSheetForServiceType:(id)arg1;
- (void)_handleSelectionType:(long long)arg1;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)dismissAlert:(id)arg1;
- (void)showNoButtonAlertWithMessage:(id)arg1;
- (id)bookmarkThumbnailPathForFolio:(id)arg1;
- (id)bookmarkiPhoneController;
- (void)toggleBookmarkForCurrentFolio:(id)arg1;
- (id)bookmarkFolioForPage:(unsigned long long)arg1;
- (id)bookmarkFolioForOppositePage:(unsigned long long)arg1;
- (void)updateBookmarkUIForPage:(unsigned long long)arg1;
- (void)setLockUIOnCurrentPage:(_Bool)arg1;
- (struct CGPoint)displayPointForPixelPoint:(struct CGPoint)arg1 onPage:(id)arg2;
- (struct CGRect)displayRectForPixelRect:(struct CGRect)arg1 onPage:(id)arg2;
- (double)scaleForLoadedPageViewForFolio:(id)arg1;
- (void)presentWebViewAnimationComplete:(id)arg1;
- (id)createWebViewControllerForUrl:(id)arg1;
- (void)genericModalViewDidDismiss;
- (void)stopHyperlinkEffectsOnPage:(unsigned long long)arg1;
- (void)issueControlControllerWillStartMultimedia:(id)arg1;
- (void)addHyperlinkControlsToPage:(id)arg1 index:(unsigned long long)arg2;
- (void)addHyperlinkEffectsToPage:(id)arg1;
- (id)controlHyperlinksForPage:(id)arg1;
- (id)effectHyperlinksForPage:(id)arg1;
- (_Bool)checkForHyperlinkTap:(struct CGPoint)arg1 inView:(id)arg2 onPage:(unsigned long long)arg3;
- (void)articleChooserViewController:(id)arg1 didSelectArticle:(id)arg2;
- (void)articleChooserViewControllerDidDismiss:(id)arg1;
- (void)presentArticleChooser:(id)arg1;
- (id)createFlowableTextViewControllerForIssue:(id)arg1 article:(id)arg2 backgroundImage:(id)arg3;
- (void)gotoTextViewForArticle:(id)arg1;
- (void)renderFlowableTextView;
- (_Bool)floatingTextModeToggleButtonShouldBeHidden;
- (void)disableTextMode;
- (void)enableTextMode;
- (_Bool)textModeAvailableForPage:(unsigned long long)arg1;
- (_Bool)containsNonInteractiveArticle:(id)arg1;
- (void)tableOfContentsViewController:(id)arg1 didSelectArticle:(id)arg2;
- (void)tableOfContentsViewController:(id)arg1 didSelectPage:(id)arg2;
- (void)checkForTOC;
- (void)loadNavBarDownloadTitleView;
- (void)reloadScrollView;
- (_Bool)isDownloadedResource:(id)arg1 onPage:(unsigned long long)arg2;
- (void)receiveZinioToolTipNotification:(id)arg1;
- (void)receiveDeepLinkingNotification:(id)arg1;
- (void)showCantZoomTip;
- (void)showFirstPageViewWithTextTip;
- (void)showFirstTimeTip;
- (id)fullFolioForPage:(unsigned long long)arg1;
- (id)folioForPage:(unsigned long long)arg1;
- (void)willGotoTOCImage:(id)arg1;
- (void)willGotoTOCText:(id)arg1;
- (void)gotoPreviousPage;
- (void)gotoNextPage;
- (void)gotoTOCText:(id)arg1;
- (id)supplyNavController:(id)arg1;
- (void)showLoadingPageBadge;
- (void)hidePageNumBadge;
- (void)showPageNumBadge:(id)arg1;
- (void)showChromeAnnimation;
- (void)hideChromeAnnimation;
- (void)drawOfferPurchaseButton;
- (id)subscriptionLabelString:(unsigned long long)arg1;
- (void)drawIssuePurchaseButton;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)userSelectGuestCheckout;
- (void)showSignIn:(id)arg1;
- (void)buyNonGuestSubscription:(id)arg1;
- (void)buyNonGuestIssue:(id)arg1;
- (void)buySubscription:(id)arg1;
- (void)userSelectGuestCheckoutIPhone;
- (void)buyIssue:(id)arg1;
- (void)askToLaunchReaderForPurchasedIssueId:(id)arg1 storeProductId:(id)arg2;
- (void)purchaseFailed:(id)arg1 storeProductId:(id)arg2 internalProductId:(id)arg3;
- (void)showPurchaseThanksForTransactionIPhone:(id)arg1;
- (void)purchaseSucceeded:(id)arg1 storeProductId:(id)arg2 internalProductId:(id)arg3 details:(id)arg4;
- (void)stopActivityIndicator;
- (void)startActivityIndicator:(id)arg1 onView:(id)arg2;
- (void)startActivityIndicatorOnButton:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)showPurchaseThanks;
- (void)showPurchaseThanksForTransaction:(id)arg1;
- (void)collectProductPricing;
- (void)configurePurchase;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)didTapShareButtoniPhone:(id)arg1;
- (void)clientDataReady:(id)arg1;
- (void)configureUpSellView;
- (void)hideUpsellView;
- (void)showUpsellView;
- (void)hideGigyaViewWithDelay;
- (void)hideGigyaView;
- (void)_showEmailSheet;
- (void)didTapShareButton:(id)arg1;
- (void)sharePopoverViewController:(id)arg1 didMakeSelection:(long long)arg2;
- (void)enableApplicationStartupProcedures;
- (void)processUserChange:(id)arg1 newUser:(id)arg2;
- (void)twoFingerSwipe:(id)arg1;
- (unsigned long long)pageIndexForFolio:(id)arg1 inOrientation:(long long)arg2;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)updateUIForPage:(unsigned long long)arg1;
- (id)loadingPreviewImage;
- (void)presentModalWithNavController:(id)arg1;
- (void)pagingScrollView:(id)arg1 willChangePageFrom:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (_Bool)areAllAssetsAvailableOnPage:(unsigned long long)arg1;
- (void)pagingScrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2 pageDestination:(int)arg3;
- (void)pagingScrollView:(id)arg1 didSettleOnPage:(unsigned long long)arg2;
- (void)pagingScrollView:(id)arg1 didChangeToPage:(unsigned long long)arg2;
- (void)pagingScrollView:(id)arg1 gotDoubleTapOn:(id)arg2 index:(unsigned long long)arg3 at:(struct CGPoint)arg4;
- (void)pagingScrollView:(id)arg1 gotSingleTapOn:(id)arg2 index:(unsigned long long)arg3 at:(struct CGPoint)arg4;
- (void)renderPage:(unsigned long long)arg1 inView:(id)arg2 forScrollView:(id)arg3;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)createReusablePageViewForScrollView:(id)arg1;
- (unsigned long long)totalPageCountForScrollView:(id)arg1;
- (id)viewForZoomingInScrollView:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CustomButton : UIButton
{
    double _paddingLeft;
    double _paddingRight;
    double _buttonHeight;
    double _borderRadius;
    long long _buttonAlignmentOnResize;
}

@property(nonatomic) long long buttonAlignmentOnResize; // @synthesize buttonAlignmentOnResize=_buttonAlignmentOnResize;
@property(nonatomic) double borderRadius; // @synthesize borderRadius=_borderRadius;
@property(nonatomic) double buttonHeight; // @synthesize buttonHeight=_buttonHeight;
@property(nonatomic) double paddingRight; // @synthesize paddingRight=_paddingRight;
@property(nonatomic) double paddingLeft; // @synthesize paddingLeft=_paddingLeft;
- (struct CGSize)intrinsicContentSize;
- (void)sizeToFitAligment:(long long)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)initialize;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 height:(double)arg2 leftPadding:(double)arg3 rightPadding:(double)arg4;

@end

@interface ShopCollectionViewCell : UICollectionViewCell
{
    UIImageView *_thumbnail;
    UILabel *_titleLabel;
    ZGCategory *_category;
}

+ (struct CGSize)cellSizeForInterfaceOrientation:(long long)arg1;
@property(retain, nonatomic) ZGCategory *category; // @synthesize category=_category;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *thumbnail; // @synthesize thumbnail=_thumbnail;
- (void)setUpWithCategory:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface FlowableTextViewController : BaseIssueViewController <UIWebViewDelegate, TapDetectingWindowDelegate, MFMailComposeViewControllerDelegate, UIAlertViewDelegate>
{
    UIWebView *webView;
    UIImage *bgImage;
    id <Article> article;
    NSURLRequest *launchSafariRequest;
    UIActivityIndicatorView *spinner;
    UIView *customEmailButton;
    UINavigationController *tocNavigationController;
}

@property(retain, nonatomic) UINavigationController *tocNavigationController; // @synthesize tocNavigationController;
@property(retain, nonatomic) UIView *customEmailButton; // @synthesize customEmailButton;
@property(nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner;
@property(retain, nonatomic) id <Article> article; // @synthesize article;
@property(retain, nonatomic) UIImage *bgImage; // @synthesize bgImage;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView;
- (id)supplyNavController:(id)arg1;
- (id)findReader;
- (void)tableOfContentsViewController:(id)arg1 didSelectArticle:(id)arg2;
- (void)tableOfContentsViewController:(id)arg1 didSelectPage:(id)arg2;
- (void)resetReader:(id)arg1 toPage:(id)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (id)launchEmailUsingAddress:(id)arg1 subject:(id)arg2 body:(id)arg3 attachments:(id)arg4 delegate:(id)arg5 bodyIsHTML:(_Bool)arg6;
- (_Bool)allowEmail;
- (void)gotoComposeEmail;
- (void)composeEmail;
- (void)setSystemFontSize;
- (void)stripPaths;
- (id)changeFontSizeFile_iPad;
- (id)changeFontSizeFile;
- (void)webViewDidFinishLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)launchInternalWebControllerForUrl:(id)arg1;
- (void)dismissModalWithNavController;
- (void)tapDetectingWindow:(id)arg1 gotSingleTap:(id)arg2 atPoint:(struct CGPoint)arg3;
- (id)tapDetectingWindow;
- (void)animateOut;
- (void)animateIn;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)hideInOutAnimation;
- (void)setInOutAnimationToHiddenPosition;
- (void)splitEndzOut;
- (void)splitEndzIn;
- (void)setupInOutAnimation;
- (void)reloadInOutAnimationImage;
- (void)willGotoTOCImage:(id)arg1;
- (void)willGotoTOCText:(id)arg1;
- (void)dismissFlowableTextView;
- (void)decreaseFontSize;
- (void)increaseFontSize;
- (void)loadArticleText;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CheckoutNewLoginViewController : NewLoginViewController <UIAlertViewDelegate>
{
    UITableViewCell *_guestCheckoutTableViewCell;
    UITableViewCell *_facebookLoginTableViewCell;
    UIButton *_facebookLoginButton;
}

@property(retain, nonatomic) UIButton *facebookLoginButton; // @synthesize facebookLoginButton=_facebookLoginButton;
@property(retain, nonatomic) UITableViewCell *facebookLoginTableViewCell; // @synthesize facebookLoginTableViewCell=_facebookLoginTableViewCell;
@property(retain, nonatomic) UITableViewCell *guestCheckoutTableViewCell; // @synthesize guestCheckoutTableViewCell=_guestCheckoutTableViewCell;
- (void)_proceedWithGuestPurchase;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)didTapFacebookLogin:(id)arg1;
- (void)didTapGuestCheckout:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SettingsHomeScreenViewController : SettingsBaseTableViewController
{
    NSIndexPath *_selectedIndexPath;
}

@property(retain, nonatomic) NSIndexPath *selectedIndexPath; // @synthesize selectedIndexPath=_selectedIndexPath;
- (id)_imageForIndexPath:(id)arg1;
- (long long)homeScreenSelection;
- (void)setHomeScreenSelection:(long long)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface ImageTableOfContentsViewController : BaseTableOfContentsViewController <UITableViewDelegate, UITableViewDataSource>
{
    ImageTableOfContentsTableViewCell *imageTableOfContentsTableViewCell;
    id <Spread> startingSpread;
    UIView *customBackButtonView;
}

@property(retain, nonatomic) UIView *customBackButtonView; // @synthesize customBackButtonView;
@property(retain, nonatomic) id <Spread> startingSpread; // @synthesize startingSpread;
@property(nonatomic) ImageTableOfContentsTableViewCell *imageTableOfContentsTableViewCell; // @synthesize imageTableOfContentsTableViewCell;
- (void)respondToPageButtonTap:(id)arg1;
- (void)buildCloseButton;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TextTableOfContentsViewController : BaseTableOfContentsViewController <UITableViewDelegate, UITableViewDataSource>
{
    TextTableOfContentsTableViewCell *textTableOfContentsTableViewCell;
    id <Article> startingArticle;
    _Bool selectStartingArticle;
    UIView *customBackButtonView;
}

@property(retain, nonatomic) UIView *customBackButtonView; // @synthesize customBackButtonView;
@property(nonatomic) _Bool selectStartingArticle; // @synthesize selectStartingArticle;
@property(retain, nonatomic) id <Article> startingArticle; // @synthesize startingArticle;
@property(nonatomic) TextTableOfContentsTableViewCell *textTableOfContentsTableViewCell; // @synthesize textTableOfContentsTableViewCell;
- (id)createNewTextTableOfContentsTableViewCell;
- (id)findStartingArticleIndexPath;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)buildCloseButton;
- (void)viewDidAppear:(_Bool)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (id)backgroundImageForOrientation:(long long)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TextTableOfContentsTableViewCell : ArticleChooserTableViewCell
{
    UILabel *articleText;
    UILabel *pageNumber;
}

@property(nonatomic) UILabel *pageNumber; // @synthesize pageNumber;
@property(nonatomic) UILabel *articleText; // @synthesize articleText;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)awakeFromNib;

@end

@interface InfoBadgeView : UIView
{
    UILabel *textLabel;
}

@property(readonly, nonatomic) UILabel *textLabel; // @synthesize textLabel;
- (void)hide;
- (void)show;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (void)initializeSubviews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface AFURLConnectionOperation : NSOperation <NSURLConnectionDelegate, NSURLConnectionDataDelegate, NSSecureCoding, NSCopying>
{
    _Bool _shouldUseCredentialStorage;
    NSOutputStream *_outputStream;
    NSSet *_runLoopModes;
    NSURLRequest *_request;
    NSURLResponse *_response;
    NSError *_error;
    NSData *_responseData;
    NSString *_responseString;
    unsigned long long _responseStringEncoding;
    NSURLCredential *_credential;
    AFSecurityPolicy *_securityPolicy;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSObject<OS_dispatch_group> *_completionGroup;
    NSDictionary *_userInfo;
    long long _state;
    NSRecursiveLock *_lock;
    NSURLConnection *_connection;
    long long _totalBytesRead;
    unsigned long long _backgroundTaskIdentifier;
    CDUnknownBlockType _uploadProgress;
    CDUnknownBlockType _downloadProgress;
    CDUnknownBlockType _authenticationChallenge;
    CDUnknownBlockType _cacheResponse;
    CDUnknownBlockType _redirectResponse;
}

+ (_Bool)supportsSecureCoding;
+ (id)batchOfRequestOperations:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (id)networkRequestThread;
+ (void)networkRequestThreadEntryPoint:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType redirectResponse; // @synthesize redirectResponse=_redirectResponse;
@property(copy, nonatomic) CDUnknownBlockType cacheResponse; // @synthesize cacheResponse=_cacheResponse;
@property(copy, nonatomic) CDUnknownBlockType authenticationChallenge; // @synthesize authenticationChallenge=_authenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(copy, nonatomic) CDUnknownBlockType uploadProgress; // @synthesize uploadProgress=_uploadProgress;
@property(nonatomic) unsigned long long backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(nonatomic) long long totalBytesRead; // @synthesize totalBytesRead=_totalBytesRead;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) NSRecursiveLock *lock; // @synthesize lock=_lock;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *completionGroup; // @synthesize completionGroup=_completionGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(retain, nonatomic) AFSecurityPolicy *securityPolicy; // @synthesize securityPolicy=_securityPolicy;
@property(retain, nonatomic) NSURLCredential *credential; // @synthesize credential=_credential;
@property(nonatomic) _Bool shouldUseCredentialStorage; // @synthesize shouldUseCredentialStorage=_shouldUseCredentialStorage;
@property(nonatomic) unsigned long long responseStringEncoding; // @synthesize responseStringEncoding=_responseStringEncoding;
@property(copy, nonatomic) NSString *responseString; // @synthesize responseString=_responseString;
@property(retain, nonatomic) NSData *responseData; // @synthesize responseData=_responseData;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSSet *runLoopModes; // @synthesize runLoopModes=_runLoopModes;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (_Bool)connectionShouldUseCredentialStorage:(id)arg1;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
@property(readonly, copy) NSString *description;
- (void)cancelConnection;
- (void)cancel;
- (void)finish;
- (void)operationDidStart;
- (void)start;
- (_Bool)isConcurrent;
- (_Bool)isFinished;
- (_Bool)isExecuting;
- (_Bool)isReady;
- (void)setCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setRedirectResponseBlock:(CDUnknownBlockType)arg1;
- (void)setCacheResponseBlock:(CDUnknownBlockType)arg1;
- (void)setWillSendRequestForAuthenticationChallengeBlock:(CDUnknownBlockType)arg1;
- (void)setDownloadProgressBlock:(CDUnknownBlockType)arg1;
- (void)setUploadProgressBlock:(CDUnknownBlockType)arg1;
- (void)resume;
- (_Bool)isPaused;
- (void)operationDidPause;
- (void)pause;
- (void)setShouldExecuteAsBackgroundTaskWithExpirationHandler:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) NSInputStream *inputStream;
- (void)dealloc;
- (id)initWithRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TextTableOfContentsHeaderView : UIView
{
    UIImageView *imageView;
    UILabel *dateLabel;
    UILabel *volumeLabel;
}

@property(nonatomic) UILabel *volumeLabel; // @synthesize volumeLabel;
@property(nonatomic) UILabel *dateLabel; // @synthesize dateLabel;
@property(nonatomic) UIImageView *imageView; // @synthesize imageView;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface ImageTableOfContentsTableViewCell : UITableViewCell
{
    ImageRenderView *spreadView;
    UIButton *leftButton;
    UIButton *rightButton;
    InfoBadgeView *leftPageBadgeView;
    InfoBadgeView *rightPageBadgeView;
}

@property(retain, nonatomic) InfoBadgeView *rightPageBadgeView; // @synthesize rightPageBadgeView;
@property(retain, nonatomic) InfoBadgeView *leftPageBadgeView; // @synthesize leftPageBadgeView;
@property(retain, nonatomic) UIButton *rightButton; // @synthesize rightButton;
@property(retain, nonatomic) UIButton *leftButton; // @synthesize leftButton;
@property(retain, nonatomic) ImageRenderView *spreadView; // @synthesize spreadView;
- (void)dealloc;

@end

@interface ContentServerImpl : NSObject <ContentServer>
{
    id <AppDataService> dataService;
    NSObject<CredentialsValidator> *credentialsValidator;
    NSObject<AccountValidator> *accountValidator;
    NSObject<ChangePasswordValidator> *changePasswordValidator;
    NSArray *trustedRootCertificates;
    NetworkServicesManager *networkManager;
    DeviceIdManager *deviceIdManager;
    id <BrandManager> brandManager;
    NSString *defaultNewsstandId;
}

+ (id)postServerResponseFromURL:(id)arg1 body:(id)arg2 timeout:(int)arg3 certificates:(id)arg4;
+ (id)getServerResponseFromURL:(id)arg1 timeout:(int)arg2 certificates:(id)arg3;
+ (id)extractSchemeHostAndPathFromURL:(id)arg1;
@property(retain, nonatomic) NSString *defaultNewsstandId; // @synthesize defaultNewsstandId;
@property(retain, nonatomic) NSArray *trustedRootCertificates; // @synthesize trustedRootCertificates;
@property(retain, nonatomic) id <BrandManager> brandManager; // @synthesize brandManager;
- (id)pdfPasswordEncryptionKey;
- (id)webResource:(id)arg1;
- (id)createFreeOfferRequest:(id)arg1;
- (id)createPurchaseRequest:(id)arg1 storeTransactionIdentifier:(id)arg2 issueId:(id)arg3 storeReceipt:(id)arg4 storePrice:(id)arg5 storeLocale:(id)arg6 retryCount:(id)arg7;
- (id)createPurchaseAccessRequest:(id)arg1;
- (id)createDisableExpiringSubscriptionUpsellRequest:(id)arg1;
- (id)createExpiringSubscriptionsRequest:(id)arg1 renewableOnly:(_Bool)arg2 upsellDisplayingOnly:(_Bool)arg3;
- (id)createSelectFreeSubscriptionRequest:(id)arg1;
- (id)createExploreRequest;
- (id)createShopRequest;
- (id)createConfigurationRequest;
- (id)createIssueDownloadNotificationRequest:(id)arg1 pubId:(id)arg2;
- (id)createRegisterUserRequest:(id)arg1;
- (id)createChangePasswordRequest:(id)arg1;
- (id)createExcerptDownloadRequest:(id)arg1 pubId:(id)arg2;
- (id)createIssueRequest:(id)arg1 pubId:(id)arg2;
- (id)createLibraryRequest:(int)arg1 maxRating:(int)arg2;
- (id)createRequestHeader:(id)arg1 withAuthorization:(_Bool)arg2 withSocialUser:(id)arg3;
- (id)createRequestHeader:(id)arg1 withAuthorization:(_Bool)arg2;
- (id)createRequestHeader:(id)arg1;
- (id)createServiceRequest;
- (id)restoreInitToken;
- (id)restoreToken;
- (id)restorePurchases:(id)arg1;
- (id)getFreeOffer:(id)arg1 issueId:(id)arg2;
- (id)purchase:(id)arg1 storeProductId:(id)arg2 storeTransactionIdentifier:(id)arg3 issueId:(id)arg4 storeReceipt:(id)arg5 storePrice:(id)arg6 storeLocale:(id)arg7 retryCount:(id)arg8;
- (id)getPurchaseAccess:(id)arg1 issueId:(id)arg2;
- (void)issueDownloadNotificationRequest:(id)arg1 issueId:(id)arg2 pubId:(id)arg3;
- (void)disableExpiringSubscriptionUpsellRequest:(id)arg1 pubId:(id)arg2;
- (id)getExpiringSubscriptions:(id)arg1 pubId:(id)arg2 renewableOnly:(_Bool)arg3 upsellDisplayingOnly:(_Bool)arg4;
- (void)selectSubscriptionOfferRequest:(id)arg1 pubId:(id)arg2;
- (id)subscriptionOfferData:(id)arg1;
- (id)shop:(id)arg1;
- (id)explore:(id)arg1;
- (id)currentNewsstandId:(id)arg1;
- (id)configuration:(id)arg1;
- (id)excerptData:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (id)issueData:(id)arg1 issueId:(id)arg2 pubId:(id)arg3;
- (void)issueRequestForUser:(id)arg1 issueId:(id)arg2 publicationId:(id)arg3;
- (id)userCategoryExcerptPreviewsData:(id)arg1;
- (id)userLibraryData:(id)arg1;
- (void)validateLastName:(id)arg1;
- (void)validateFirstName:(id)arg1;
- (id)createAccount:(id)arg1 withSocialUser:(id)arg2;
- (id)createAccount:(id)arg1;
- (void)validateNewPassword:(id)arg1;
- (void)validateCurrentPassword:(id)arg1;
- (void)validatePassword:(id)arg1 repeatPassword:(id)arg2;
- (void)validateCurrentPassword:(id)arg1 newPassword:(id)arg2 repeatPassword:(id)arg3;
- (id)createForgetPasswordRequest:(id)arg1;
- (_Bool)forgetPasswordForUser:(id)arg1 email:(id)arg2;
- (void)changePasswordForUser:(id)arg1 password:(id)arg2;
- (void)validatePassword:(id)arg1;
- (void)validateEmailAddress:(id)arg1;
- (_Bool)authenticateUser:(id)arg1 withSocialUser:(id)arg2;
- (_Bool)authenticateUser:(id)arg1;
- (id)dataService;
- (struct __SecCertificate *)certificateRefForPath:(id)arg1;
- (id)initWithAppDataService:(id)arg1 andBrandManager:(id)arg2 andNetworkManager:(id)arg3 andDeviceIdManager:(id)arg4;
- (void)dealloc;

@end

@interface URLService : NSObject
{
}

+ (id)zinioHomepageURL;
+ (id)purchaseAccessURL;
+ (id)purchaseURL;
+ (id)iTunesAppStoreReviewURL;
+ (id)restorePurchasesServiceURL;
+ (id)disableExpiringSubscriptionUpsellServiceURL;
+ (id)expiringSubscriptionsServiceURL;
+ (id)selectSubscriptionOfferServiceURL;
+ (id)subscriptionOfferServiceURL;
+ (id)shopLandingURL;
+ (id)exploreLandingURL;
+ (id)configurationServiceURL;
+ (id)issueDownloadNotificationServiceURL;
+ (id)forgetPasswordServiceURL;
+ (id)changePasswordServiceURL;
+ (id)registerUserServiceURL;
+ (id)excerptDataServiceURL;
+ (id)issueDataServiceURL;
+ (id)categoryExcerptServiceURL;
+ (id)libraryServiceURL;
+ (id)authenticateUserServiceURL;
+ (id)getAppId;
+ (id)getPort;
+ (id)getDomain;
+ (id)getProtocol;

@end

@interface GridCollectionViewController : UICollectionViewController
{
    NSSet *_publicationLists;
    id <GridCollectionViewControllerDelegate> _delegate;
    ShopCategory *_category;
    NSArray *_magazines;
    NSString *_titleString;
    NSMutableArray *_allPublications;
}

@property(retain, nonatomic) ShopCategory *category; // @synthesize category=_category;
@property(retain, nonatomic) NSArray *magazines; // @synthesize magazines=_magazines;
@property(nonatomic) id <GridCollectionViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *titleString; // @synthesize titleString=_titleString;
- (void)_handleImageResourceDidDownloadNotification:(id)arg1;
- (id)_publicationForIndex:(unsigned long long)arg1;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)_imageDidDownload:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
@property(retain, nonatomic) NSSet *publicationLists;
@property(retain, nonatomic) NSMutableArray *allPublications;
- (id)init;

@end

@interface HorizontalSlidingMenuViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate>
{
    UICollectionView *_collectionView;
    id <HorizontalSlidingMenuViewControllerDelegate> _delegate;
    NSArray *_childCategories;
    long long _selectedCellIndex;
}

+ (double)height;
@property(nonatomic) long long selectedCellIndex; // @synthesize selectedCellIndex=_selectedCellIndex;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(nonatomic) id <HorizontalSlidingMenuViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_handleImageResourceDidDownloadNotification:(id)arg1;
- (void)_adjustFrame;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didUnhighlightItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)selectedCategoryTitle;
- (id)selectedCategory;
@property(retain, nonatomic) NSArray *childCategories;
- (void)dealloc;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NetworkCommunicationException : NSException
{
    NSException *underlyingException;
}

@property(retain, nonatomic) NSException *underlyingException; // @synthesize underlyingException;
- (void)dealloc;

@end

@interface SchemaVersion : SQLitePersistentObject <NSCopying>
{
    NSNumber *version;
}

@property(retain, nonatomic) NSNumber *version; // @synthesize version;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface AppData : SQLitePersistentObject <AppInfo, NSCopying>
{
    NSString *installationUUId;
    NSString *deviceProfileId;
    _Bool registered;
}

@property(retain, nonatomic) NSString *deviceProfileId; // @synthesize deviceProfileId;
@property(nonatomic) _Bool registered; // @synthesize registered;
@property(retain, nonatomic) NSString *installationUUId; // @synthesize installationUUId;
- (void)setFlag:(int)arg1 active:(_Bool)arg2;
- (_Bool)isFlagActive:(int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Issue_ : NSObject
{
    NSMutableArray *_inAppPurchases;
    NSDate *_availableDate;
    NSDate *_coverDate;
    long long _favoriteCounter;
    NSString *_fulfillmentHouseIssueCode;
    NSString *_internalProductId;
    NSString *_coverURLString;
    NSString *_name;
    NSString *_title;
    NSString *_issuePageURLString;
    NSString *_magazinePageURLString;
    UIImage *_coverImage;
    NSString *_currencySymbol;
    NSString *_currency;
    NSString *_value;
    NSString *_vatValue;
}

@property(retain, nonatomic) NSMutableArray *inAppPurchases; // @synthesize inAppPurchases=_inAppPurchases;
@property(copy, nonatomic) NSString *vatValue; // @synthesize vatValue=_vatValue;
@property(copy, nonatomic) NSString *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *currency; // @synthesize currency=_currency;
@property(copy, nonatomic) NSString *currencySymbol; // @synthesize currencySymbol=_currencySymbol;
@property(retain, nonatomic) UIImage *coverImage; // @synthesize coverImage=_coverImage;
@property(retain, nonatomic) NSDate *availableDate; // @synthesize availableDate=_availableDate;
@property(retain, nonatomic) NSDate *coverDate; // @synthesize coverDate=_coverDate;
@property(nonatomic) long long favoriteCounter; // @synthesize favoriteCounter=_favoriteCounter;
@property(copy, nonatomic) NSString *fulfillmentHouseIssueCode; // @synthesize fulfillmentHouseIssueCode=_fulfillmentHouseIssueCode;
@property(copy, nonatomic) NSString *internalProductId; // @synthesize internalProductId=_internalProductId;
@property(copy, nonatomic) NSString *coverURLString; // @synthesize coverURLString=_coverURLString;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *magazinePageURLString; // @synthesize magazinePageURLString=_magazinePageURLString;
@property(copy, nonatomic) NSString *issuePageURLString; // @synthesize issuePageURLString=_issuePageURLString;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;

@end

@interface ShopPageDataSource : NSObject
{
    id <ShopPageDataSourceDelegate> _delegate;
    NSArray *_mainCategories;
    NSMutableArray *_featuredCategories;
    NSArray *_preferredOrderingOfFeaturedCategories;
    NSMutableDictionary *_magazinesForCategoryId;
}

@property(retain, nonatomic) NSArray *preferredOrderingOfFeaturedCategories; // @synthesize preferredOrderingOfFeaturedCategories=_preferredOrderingOfFeaturedCategories;
@property(retain, nonatomic) NSMutableArray *featuredCategories; // @synthesize featuredCategories=_featuredCategories;
@property(nonatomic) id <ShopPageDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSMutableDictionary *magazinesForCategoryId; // @synthesize magazinesForCategoryId=_magazinesForCategoryId;
@property(retain, nonatomic) NSArray *mainCategories; // @synthesize mainCategories=_mainCategories;
- (_Bool)isFeaturedCategory:(id)arg1;
- (id)categoryForCategoryId:(id)arg1;
- (id)magazinesForCategoryId:(id)arg1;
- (void)loadMagazinesForCategoryId:(id)arg1;
- (void)loadFeaturedCategories;
- (void)loadMainCategories;
- (void)dealloc;
- (id)init;

@end

@interface PVDictionaryContainer : NSObject <NSCoding>
{
    NSDictionary *dictionary;
}

@property(readonly, nonatomic) NSDictionary *dictionary; // @synthesize dictionary;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface PVGUIDGenerator : NSObject
{
}

+ (id)generateUUID;

@end

@interface PVListManager : NSObject
{
}

+ (id)createEditableVersionOfPListIfNeeded:(id)arg1;
+ (void)writePlistToPropertyListFileNamed:(id)arg1 WithPList:(id)arg2;
+ (id)readPListFromPropertyListFileNamed:(id)arg1 WithPathType:(int)arg2 WithMutabilityOption:(unsigned long long)arg3;
+ (id)getBundlePathForPropertyListFileNamed:(id)arg1;

@end

@interface PVMutableDictionaryContainer : NSObject <NSCoding, NSCopying>
{
    NSMutableDictionary *dictionary;
}

@property(readonly, nonatomic) NSMutableDictionary *dictionary; // @synthesize dictionary;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface PVXMLDocumentParser : NSObject <NSXMLParserDelegate>
{
    Class elementClass;
    NSObject<PVXMLElement> *currentElement;
    NSMutableString *tagValue;
}

@property(readonly, nonatomic) Class elementClass; // @synthesize elementClass;
- (void)parser:(id)arg1 foundCDATA:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (id)parseData:(id)arg1;
- (void)dealloc;
- (id)initWithElementClass:(Class)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Zinio_Reachability : NSObject
{
    _Bool localWiFiRef;
    struct __SCNetworkReachability *reachabilityRef;
}

+ (id)reachabilityForLocalWiFi;
+ (id)reachabilityForInternetConnection;
+ (id)reachabilityWithAddress:(const struct sockaddr_in *)arg1;
+ (id)reachabilityWithHostName:(id)arg1;
- (int)currentReachabilityStatus;
- (_Bool)connectionRequired;
- (int)networkStatusForFlags:(unsigned int)arg1;
- (int)localWiFiStatusForFlags:(unsigned int)arg1;
- (void)dealloc;
- (void)stopNotifier;
- (_Bool)startNotifier;

@end

@interface MyLibraryDeleteView : UIView
{
    UIButton *deleteButton;
    UILabel *deleteLabel;
    long long startingOrientation;
    UILabel *_deleteLabel;
}

@property(nonatomic) UILabel *deleteLabel; // @synthesize deleteLabel=_deleteLabel;
@property(nonatomic) long long startingOrientation; // @synthesize startingOrientation;
@property(nonatomic) UIButton *deleteButton; // @synthesize deleteButton;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)restoreOrientation:(long long)arg1;
- (void)setOrientation:(long long)arg1;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface AuthenticationController : NSObject
{
    id <AuthenticationControllerDelegate> _delegate;
}

+ (id)sharedInstance;
@property(nonatomic) id <AuthenticationControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)displayErrorMessageWithException:(id)arg1;
- (void)displayErrorMessage:(id)arg1 title:(id)arg2;
- (void)displayErrorMessage:(id)arg1;
- (void)_processUserChange:(id)arg1 newUser:(id)arg2;
- (void)_processUserChangeDuringAccountCreation:(id)arg1 newUser:(id)arg2;
- (void)performLoginSuccessfulTasks;
- (void)logOut;
- (_Bool)authenticateUser:(id)arg1 socialUser:(id)arg2;
- (_Bool)authenticateUser:(id)arg1;
- (_Bool)forgotPasswordForEmailAddress:(id)arg1;
- (_Bool)changeCurrentPassword:(id)arg1 newPassword:(id)arg2 repeatNewPassword:(id)arg3;
- (_Bool)createAccountWithEmailAddress:(id)arg1 password:(id)arg2 repeatPassword:(id)arg3 sendUpdates:(_Bool)arg4 sendPromotions:(_Bool)arg5;

@end

@interface ContentManager : NSObject <PVHTTPGetOperationListener>
{
    NSString *documentsDirectory;
    NSString *usersDirectory;
    NSObject<ContentServer> *contentServer;
    NSLock *earlyConfigurationLock;
    NSLock *configurationLock;
    NSLock *userLibraryLock;
    _Bool userLibraryBeingUpdated;
    _Bool configurationBeingUpdated;
    NSRecursiveLock *userCategoryExcerptPreviewsLock;
    NSMutableDictionary *issueDownloadsInProgress;
    NSMutableDictionary *issueExcerptDownloadsInProgress;
    NSMutableArray *newsstands;
    NSDictionary *overrides;
    NSMutableDictionary *configurationKeywordValues;
    NSOperationQueue *issueExcerptDownloadQueue;
    NSOperationQueue *libraryOperationQueue;
    CoreDataAppDataService *appDataService;
    CoreDataLibraryAccess *libraryAccess;
    ZGDownloadManager *downloadManager;
    _Bool configurationStillLoading;
    NSCache *_imageCache;
    NSMutableDictionary *_downloadNotificationOperations;
    NSMutableDictionary *_issueDownloadProgressDictionary;
    NSURLSession *_defaultSession;
    NSURLSession *_backgroundSession;
    NSMutableDictionary *_downloadTasksDictionary;
}

+ (id)directoryNamesInDirectory:(id)arg1;
+ (void)createIssueDownloadFailedMarkerFile:(id)arg1;
+ (void)createIssueDownloadedMarkerFile:(id)arg1;
+ (id)createDirectoryIfItDoesNotExist:(id)arg1;
+ (void)logError:(id)arg1;
+ (void)writeDataToFile:(id)arg1 fileName:(id)arg2;
@property(retain, nonatomic) NSMutableDictionary *downloadTasksDictionary; // @synthesize downloadTasksDictionary=_downloadTasksDictionary;
@property(retain, nonatomic) NSURLSession *backgroundSession; // @synthesize backgroundSession=_backgroundSession;
@property(retain, nonatomic) NSURLSession *defaultSession; // @synthesize defaultSession=_defaultSession;
@property(retain, nonatomic) NSMutableDictionary *issueDownloadProgressDictionary; // @synthesize issueDownloadProgressDictionary=_issueDownloadProgressDictionary;
@property(retain, nonatomic) NSMutableDictionary *downloadNotificationOperations; // @synthesize downloadNotificationOperations=_downloadNotificationOperations;
@property(retain, nonatomic) ZGDownloadManager *downloadManager; // @synthesize downloadManager;
@property(retain, nonatomic) CoreDataLibraryAccess *libraryAccess; // @synthesize libraryAccess;
@property(retain, nonatomic) CoreDataAppDataService *appDataService; // @synthesize appDataService;
@property(readonly, nonatomic) NSDictionary *configurationKeywordValues; // @synthesize configurationKeywordValues;
@property(nonatomic) _Bool configurationBeingUpdated; // @synthesize configurationBeingUpdated;
@property(readonly, nonatomic) NSDictionary *overrides; // @synthesize overrides;
@property(readonly, nonatomic) NSArray *newsstands; // @synthesize newsstands;
@property(readonly, nonatomic) NSObject<ContentServer> *contentServer; // @synthesize contentServer;
@property(readonly, nonatomic) NSString *usersDirectory; // @synthesize usersDirectory;
- (id)issueForIssudId:(id)arg1;
- (void)_pauseIssueDownloadNotificationHandler:(id)arg1;
- (void)_downloadIssueNotificationHandler:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)explore:(id)arg1;
- (id)shop:(id)arg1;
- (void)waitOnConfigurationUpdate;
- (id)jpgFilePath:(id)arg1 index:(long long)arg2 nameKey:(id)arg3 spread:(_Bool)arg4 orientation:(int)arg5;
- (void)restorePurchases:(id)arg1 sendNotifications:(_Bool)arg2 notificationParams:(id)arg3;
- (void)restorePurchases:(id)arg1;
- (_Bool)getFreeOffer:(id)arg1 issueId:(id)arg2;
- (id)purchase:(id)arg1 storeProductId:(id)arg2 storeTransactionIdentifier:(id)arg3 storeReceipt:(id)arg4 storePrice:(id)arg5 storeLocale:(id)arg6 issueId:(id)arg7 retryCount:(id)arg8;
- (id)getPurchaseAccess:(id)arg1 issueId:(id)arg2 error:(id *)arg3;
- (id)getPurchaseAccess:(id)arg1 issueId:(id)arg2;
- (void)selectSubscriptionOfferRequest:(id)arg1;
- (void)selectSubscriptionOfferRequestInThread:(id)arg1 pubId:(id)arg2;
- (void)updateUserSubscriptionOffers:(id)arg1;
- (void)updateUserSubscriptionOffersInThread:(id)arg1;
- (id)userSubscriptionOffers:(id)arg1;
- (_Bool)configurationStillLoading;
- (void)updateConfiguration:(id)arg1;
- (_Bool)parseConfigurationData:(_Bool)arg1 theUser:(id)arg2 configurationData:(id)arg3;
- (id)defaultNewsstand;
- (_Bool)processValidConfiguration:(id)arg1 theUser:(id)arg2 configurationReadFromDisk:(_Bool)arg3 configurationData:(id)arg4;
- (_Bool)readConfigurationFromDisk:(id *)arg1 theUser:(id)arg2;
- (void)updateConfigurationInThread:(id)arg1;
- (void)moveCategoryExcerptsFromUser:(id)arg1 toUser:(id)arg2;
- (void)removeCategoryExcerptsForUser:(id)arg1;
- (void)updateCategoryExcerptPreviews:(id)arg1;
- (void)updateCategoryExcerptPreviewsInThread:(id)arg1;
- (id)userCategoryExcerptPreviews:(id)arg1 fromFile:(id)arg2;
- (id)userCategoryExcerptPreviews:(id)arg1;
- (id)userCategoryExcerptImageFileName:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3 imageFileName:(id)arg4;
- (id)checkForIssueDownloadInProgressOnRestart:(id)arg1;
- (_Bool)checkForIssueDownloadInProgress:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (_Bool)checkForAnyIssueDownloadInProgress;
- (id)userIssue:(id)arg1 pubId:(id)arg2 issueId:(id)arg3 excerptId:(id)arg4;
- (id)userIssueExcerpt:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (id)userIssue:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (void)downloadProgress:(id)arg1 numBytes:(unsigned long long)arg2;
- (void)operationSuccess:(id)arg1;
- (void)renderPdfImage:(id)arg1 issue:(id)arg2 userID:(id)arg3 metadata:(id)arg4;
- (void)_processIssueData:(id)arg1 isReprocessingAssets:(_Bool)arg2 issueDirectoryName:(id)arg3 params:(id)arg4 issueDownloadInProgress:(id)arg5 downloadFailedNotificationPosted:(_Bool *)arg6;
- (void)downloadIssue:(id)arg1;
- (void)_processIssueData:(id)arg1;
- (void)issueDataDidDownloadNotificationHandler:(id)arg1;
- (void)downloadIssueForUser:(id)arg1 publicationId:(id)arg2 issueId:(id)arg3;
- (_Bool)isMovieFile:(id)arg1;
- (void)downloadPagesForIssue:(id)arg1 orientation:(int)arg2 userId:(id)arg3 totalDownloadSize:(unsigned long long)arg4 assetBaseUrl:(id)arg5 issueDir:(id)arg6 operations:(id)arg7 pdfPassword:(id)arg8;
- (void)cancelIssueExcerptDownloadsInProgress;
- (void)cancelThumbnailGenerationsInProgress;
- (void)cancelIssueDownloadsInProgress;
- (_Bool)isIssueDownloading:(id)arg1;
- (void)downloadIssueExcerptInThread:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (void)downloadIssueInThread:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (id)createIssueDownloadInProgress:(id)arg1 pubId:(id)arg2 issueId:(id)arg3 excerptId:(id)arg4;
- (void)sideloadIssueInDirectory:(id)arg1;
- (void)sideloadUserLibrary:(id)arg1;
- (void)updateUserLibrary:(id)arg1 hasRecursed:(_Bool)arg2;
- (void)updateUserLibrary:(id)arg1;
- (void)restoreIfRequired:(id)arg1 hasRecursed:(_Bool)arg2 errors:(id)arg3 notificationUserInfo:(id)arg4;
- (void)downloadLibraryIssueThumbnails:(id)arg1;
- (void)libraryParseContextDidSave:(id)arg1;
- (_Bool)checkUserLibraryXMLExists:(id)arg1;
- (_Bool)checkForUserLibraryUpdateInProgress;
- (void)updateUserLibraryInThread:(id)arg1;
- (id)userCategoryExcerptPreviewsXMLFileName:(id)arg1;
- (id)userLibraryXMLFileName:(id)arg1;
- (id)configurationXMLFileName:(id)arg1;
- (id)subscriptionOfferThumbnailFileName:(id)arg1;
- (id)subscriptionOfferXMLFileName;
- (void)removeUserExcerptIssue:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (void)removeUserPublicationIssue:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (void)cancelIssueDownloadInProgress:(id)arg1;
- (void)removeUserPublication:(id)arg1 pubId:(id)arg2;
- (void)removeUser:(id)arg1;
- (_Bool)doesIssueExcerptNeedReprocessing:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (_Bool)isIssueExcerptDownloaded:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (_Bool)doesPublicationIssueNeedReprocessing:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (id)downloadAppVersion:(id)arg1;
- (void)markIssueDownloaded:(id)arg1;
- (_Bool)isPublicationIssueDownloadFailed:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (_Bool)isPublicationIssueDownloaded:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (_Bool)userPublicationIssueReauthorizationRequired:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (void)clearUserPublicationIssueReauthorizationRequired:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (void)resetUserPublicationIssueForNewDevice:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (void)resetUserPublicationIssueForNewDevice:(id)arg1 pubId:(id)arg2 issueId:(id)arg3 redownload:(_Bool)arg4;
- (void)resetUserCategoryExcerptDirectoryForNewDevice:(id)arg1;
- (void)deleteDownloadFailedMarkersOlderThan:(id)arg1;
- (void)deleteDownloadCompleteMarkersAtPath:(id)arg1;
- (id)userIssueExcerptLargeRigthPageImageName:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (id)userIssueExcerptLargeLeftPageImageName:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (id)userIssueExcerptLargeCoverImageName:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (id)userIssueExcerptSmallCoverImageName:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (id)userIssueExcerptDirectoryName:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (id)userPublicationIssueImageFileName:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (id)userPublicationIssueDirectoryName:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (id)userPublicationDirectoryName:(id)arg1 pubId:(id)arg2;
- (id)userDirectoryName:(id)arg1;
- (id)createUserPublicationIssueDirectoryIfItDoesNotExist:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (id)createUserPublicationDirectoryIfItDoesNotExist:(id)arg1 pubId:(id)arg2;
- (id)createUserCategoryExcerptDirectoryIfItDoesNotExist:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (id)createUserCategoryExcerptDirectoryIfItDoesNotExist:(id)arg1;
- (id)createUserDirectoryIfItDoesNotExist:(id)arg1;
- (id)createUsersDirectoryIfItDoesNotExist;
- (id)usersDirectoryNames;
- (int)usersDirectoryCount;
- (void)setUsersDataLocation:(int)arg1;
- (int)usersDataLocation;
- (id)legalNoticeText;
- (id)rateAppURLForUser:(id)arg1;
- (id)forgotPasswordURLForUser:(id)arg1;
- (id)legalURLForUser:(id)arg1;
- (id)faqURLForUser:(id)arg1;
- (id)commerceURLForUser:(id)arg1;
- (id)newsstandURLForUser:(id)arg1 usingNewsstandSelector:(SEL)arg2;
- (id)newsstandForUser:(id)arg1;
- (_Bool)newsstandsAvailable;
- (void)applicationChangedUser:(id)arg1;
- (id)imageCache;
- (id)thumbnailForIssueId:(id)arg1;
- (void)cacheThumbnail:(id)arg1 forIssue:(id)arg2;
- (id)newSuccessNotificationDictionary:(id)arg1 pubId:(id)arg2 issueId:(id)arg3 excerptId:(id)arg4 fileName:(id)arg5 bytesDownloaded:(id)arg6 totalDownloadSize:(long long)arg7 metadata:(id)arg8;
- (void)handleAppLeavingForegroundTasks;
- (void)cancelDownloadsInProgress;
- (_Bool)runOperations:(id)arg1 onQueue:(id)arg2 retries:(int)arg3;
- (id)addAssetDownloadOperation:(id)arg1 userId:(id)arg2 pubId:(id)arg3 issueId:(id)arg4 excerptId:(id)arg5 totalDownloadSize:(long long)arg6 url:(id)arg7 fileName:(id)arg8 priority:(long long)arg9 secondaryPriority:(long long)arg10 listener:(id)arg11 notificationName:(id)arg12;
- (void)downloadResource:(id)arg1;
- (void)dealloc;
- (id)initWithContentServer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IssueCollectionViewCell : UICollectionViewCell
{
    UIImageView *_coverImage;
    UILabel *_titleLabel;
}

@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *coverImage; // @synthesize coverImage=_coverImage;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface LibraryIssueImpl : SQLitePersistentObject <LibraryIssue>
{
    NSString *pubId;
    NSString *displayName;
    NSNumber *rating;
    NSString *pubThumbnailUrl;
    NSString *issueId;
    NSString *title;
    NSDate *issueDate;
    NSDate *coverDate;
    NSString *thumbnailUrl;
    NSString *thumbnailFileName;
    NSNumber *packageSize;
    _Bool isNew;
    _Bool downloaded;
    _Bool downloadedAssetsNeedReprocessing;
}

@property(nonatomic) _Bool isNew; // @synthesize isNew;
@property(retain, nonatomic) NSNumber *packageSize; // @synthesize packageSize;
@property(retain, nonatomic) NSString *thumbnailFileName; // @synthesize thumbnailFileName;
@property(retain, nonatomic) NSString *thumbnailUrl; // @synthesize thumbnailUrl;
@property(retain, nonatomic) NSDate *coverDate; // @synthesize coverDate;
@property(retain, nonatomic) NSDate *issueDate; // @synthesize issueDate;
@property(retain, nonatomic) NSString *title; // @synthesize title;
@property(retain, nonatomic) NSString *issueId; // @synthesize issueId;
@property(retain, nonatomic) NSString *pubThumbnailUrl; // @synthesize pubThumbnailUrl;
@property(retain, nonatomic) NSNumber *rating; // @synthesize rating;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName;
@property(retain, nonatomic) NSString *pubId; // @synthesize pubId;
- (id)thumbnail;
- (void)refresh;
@property(readonly, nonatomic) NSNumber *coverDateMonth;
@property(readonly, nonatomic) NSNumber *coverDateYear;
@property(readonly, nonatomic) id <User> owner;
@property(readonly, copy) NSString *description;
- (void)setDownloadedAssetsNeedReprocessing:(_Bool)arg1;
- (_Bool)downloadedAssetsNeedReprocessing;
- (void)setDownloaded:(_Bool)arg1;
- (_Bool)downloaded;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ShadowBoxView : UIView
{
    int shadowDirection;
    double rgb[3];
}

@property(nonatomic) int shadowDirection; // @synthesize shadowDirection;
- (void)dealloc;
- (void)setR:(double)arg1 g:(double)arg2 b:(double)arg3;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MyAccountTableViewCell : UITableViewCell
{
    UILabel *myAccountCellTitle;
}

@property(nonatomic) UILabel *myAccountCellTitle; // @synthesize myAccountCellTitle;

@end

@interface WebViewViewController : BaseViewController <UIWebViewDelegate, ZoomTransitionSupport>
{
    UIWebView *webView;
    UIActivityIndicatorView *activityView;
    _Bool showLoadingActivity;
    _Bool scaleToFit;
    UILabel *activityLabel;
    NSURL *url;
    _Bool isLoaded;
    UISegmentedControl *leftRightButtons;
    UIView *rightNavBarView;
    NSString *modalExternalLinkNibName;
    struct CGRect zoomFrom;
    NSArray *internalLinksForThisPage;
    id <WebViewViewControllerDelegate> webViewViewControllerDelegate;
}

@property(nonatomic) _Bool scaleToFit; // @synthesize scaleToFit;
@property(nonatomic) id <WebViewViewControllerDelegate> webViewViewControllerDelegate; // @synthesize webViewViewControllerDelegate;
@property(retain, nonatomic) UIView *rightNavBarView; // @synthesize rightNavBarView;
@property(retain, nonatomic) NSArray *internalLinksForThisPage; // @synthesize internalLinksForThisPage;
@property(nonatomic) struct CGRect zoomFrom; // @synthesize zoomFrom;
@property(nonatomic) _Bool isLoaded; // @synthesize isLoaded;
@property(retain, nonatomic) NSURL *url; // @synthesize url;
@property(retain, nonatomic) UILabel *activityLabel; // @synthesize activityLabel;
@property(retain, nonatomic) UIActivityIndicatorView *activityView; // @synthesize activityView;
@property(retain, nonatomic) NSString *modalExternalLinkNibName; // @synthesize modalExternalLinkNibName;
@property(retain, nonatomic) UISegmentedControl *leftRightButtons; // @synthesize leftRightButtons;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView;
- (void)removeCookies;
- (void)launchExternalHtmlReader:(id)arg1;
- (void)configureExternalHtmlController:(id)arg1;
- (void)updateNavigationButtonState;
- (void)launchCurrentUrlInSafari:(id)arg1;
- (void)done;
- (void)navAction:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)displayNoNetworkAvailablePage;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidStartLoad:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)reload;
- (void)load;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NewForgotPasswordViewController : UIViewController <MFMailComposeViewControllerDelegate>
{
    UITableViewCell *_emailTableViewCell;
    UITableViewCell *_submitButtonTableViewCell;
    UILabel *_emailLabel;
    UITextField *_emailTextField;
    UILabel *_descriptionLabel;
    UIButton *_submitButton;
    UIView *_checkYourEmaiView;
    UILabel *_checkEmailLabel;
    UILabel *_infoLabel;
    CustomButton *_okayButton;
    UILabel *_moreInfoLabel;
    UILabel *_noEmailLabel;
    UILabel *_resetPasswordLabel;
    UILabel *_checkSpamLabel;
}

@property(retain, nonatomic) UILabel *checkSpamLabel; // @synthesize checkSpamLabel=_checkSpamLabel;
@property(retain, nonatomic) UILabel *resetPasswordLabel; // @synthesize resetPasswordLabel=_resetPasswordLabel;
@property(retain, nonatomic) UILabel *noEmailLabel; // @synthesize noEmailLabel=_noEmailLabel;
@property(retain, nonatomic) UILabel *moreInfoLabel; // @synthesize moreInfoLabel=_moreInfoLabel;
@property(retain, nonatomic) CustomButton *okayButton; // @synthesize okayButton=_okayButton;
@property(retain, nonatomic) UILabel *infoLabel; // @synthesize infoLabel=_infoLabel;
@property(retain, nonatomic) UILabel *checkEmailLabel; // @synthesize checkEmailLabel=_checkEmailLabel;
@property(retain, nonatomic) UIView *checkYourEmaiView; // @synthesize checkYourEmaiView=_checkYourEmaiView;
@property(retain, nonatomic) UIButton *submitButton; // @synthesize submitButton=_submitButton;
@property(retain, nonatomic) UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(retain, nonatomic) UITextField *emailTextField; // @synthesize emailTextField=_emailTextField;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)showContactController:(id)arg1;
- (void)didTapSubmitButton:(id)arg1;
- (void)didTapOkButton:(id)arg1;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ViewControllerWithCloseButton_iPad : UIViewController
{
    UIView *_topBanner;
    UILabel *_titleLabel;
    UIButton *_closeButton;
    UIButton *_backButtonForNavigationController;
}

@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) UIButton *backButtonForNavigationController; // @synthesize backButtonForNavigationController=_backButtonForNavigationController;
@property(retain, nonatomic) UIView *topBanner; // @synthesize topBanner=_topBanner;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)_dismiss;
- (void)didTapCloseButton:(id)arg1;
- (void)addContentView:(id)arg1;
- (void)addContentViewController:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface PVHTTPGetOperation : NSOperation
{
    _Bool getOperationExecuting;
    _Bool getOperationFinished;
    _Bool _completedWithoutError;
    _Bool _done;
    long long statusCode;
    NSURL *_url;
    NSFileHandle *_getResponse;
    NSError *_httpError;
    NSString *_saveFileName;
    NSString *_tempFileName;
    double _timeout;
    id <PVHTTPGetOperationListener> _listener;
    long long _secondaryQueuePriority;
}

@property(nonatomic) id <PVHTTPGetOperationListener> listener; // @synthesize listener=_listener;
@property(readonly, nonatomic) NSError *httpError; // @synthesize httpError=_httpError;
@property(readonly, nonatomic) NSString *saveFileName; // @synthesize saveFileName=_saveFileName;
@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
@property(nonatomic) long long secondaryQueuePriority; // @synthesize secondaryQueuePriority=_secondaryQueuePriority;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(readonly, nonatomic, getter=isDone) _Bool done; // @synthesize done=_done;
@property(readonly, nonatomic) _Bool completedWithoutError; // @synthesize completedWithoutError=_completedWithoutError;
- (_Bool)rerunOnError;
- (unsigned long long)resourceByteCount;
- (void)notifyListenerOfProgress:(unsigned long long)arg1;
- (void)notifyListenerOfSuccess;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)cancel;
- (void)main;
- (_Bool)isFinished;
- (_Bool)isExecuting;
- (_Bool)isConcurrent;
- (void)start;
- (_Bool)dependentOperationsFailed;
- (_Bool)encounteredError;
- (void)dealloc;
- (void)releaseTransientData;
- (id)initWithURL:(id)arg1 saveFileName:(id)arg2;

@end

@interface PVStaticThreadSafeDateFormatterMethods : NSDateFormatter
{
}

+ (id)dateFromISO8601DateString:(id)arg1;
+ (id)dateFromDateFormatMonthDashYearForDateString:(id)arg1;
+ (id)dateFromDateFormat:(id)arg1 forDateString:(id)arg2;
+ (id)dateStringForFormatMonthDashYearForDate:(id)arg1;
+ (id)dateStringUsingFormat:(id)arg1 forDate:(id)arg2;
+ (void)initialize;

@end

@interface DownloadNotificationOperation : PVHTTPGetOperation
{
    NSString *_userId;
    NSString *_pubId;
    NSString *_issueId;
    NSString *_excerptId;
    long long _totalDownloadSize;
    NSString *_notificationName;
    NSString *_pdfPassword;
    id <Issue> _issue;
}

@property(retain, nonatomic) id <Issue> issue; // @synthesize issue=_issue;
@property(retain, nonatomic) NSString *pdfPassword; // @synthesize pdfPassword=_pdfPassword;
@property(retain, nonatomic) NSString *notificationName; // @synthesize notificationName=_notificationName;
@property(nonatomic) long long totalDownloadSize; // @synthesize totalDownloadSize=_totalDownloadSize;
@property(retain, nonatomic) NSString *excerptId; // @synthesize excerptId=_excerptId;
@property(retain, nonatomic) NSString *issueId; // @synthesize issueId=_issueId;
@property(retain, nonatomic) NSString *pubId; // @synthesize pubId=_pubId;
@property(retain, nonatomic) NSString *userId; // @synthesize userId=_userId;
- (_Bool)dependentOperationsFailed;
- (void)notifyListenerOfSuccess;
- (void)cancel;
- (void)dealloc;

@end

@interface PVXMLDocumentParsingException : NSException
{
    NSError *parseError;
}

@property(retain, nonatomic) NSError *parseError; // @synthesize parseError;
- (void)dealloc;

@end

@interface PVXMLElementImpl : NSObject <PVXMLElement>
{
    NSString *name;
    NSString *value;
    NSDictionary *attributes;
    NSObject<PVXMLElement> *parent;
    NSMutableArray *elements;
}

@property(readonly, nonatomic) NSMutableArray *elements; // @synthesize elements;
@property(nonatomic) NSObject<PVXMLElement> *parent; // @synthesize parent;
@property(retain, nonatomic) NSDictionary *attributes; // @synthesize attributes;
@property(retain, nonatomic) NSString *value; // @synthesize value;
@property(readonly, nonatomic) NSString *name; // @synthesize name;
- (id)findFirstElementNamed:(id)arg1;
- (id)getNameAndValueForAllElementsAsDictionary;
- (id)xml;
- (id)prettyXML:(int)arg1;
- (void)addElement:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 value:(id)arg2 parent:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ServerErrorImpl : NSObject <ServerError, ServerErrorSpecific>
{
    NSString *code;
    NSString *message;
}

@property(readonly, nonatomic) NSString *message; // @synthesize message;
@property(readonly, nonatomic) NSString *code; // @synthesize code;
- (id)localizedMessage;
- (_Bool)restoreRequired;
- (_Bool)readerVersionNotSupported;
- (_Bool)invalidPublication;
- (_Bool)noPublications;
- (_Bool)userNotQualified;
- (_Bool)invalidUser;
- (_Bool)excerptNotFound;
- (_Bool)noExcerptsFound;
- (_Bool)badVersionStub;
- (_Bool)badRequest;
- (_Bool)systemNotAvailableServerError;
- (_Bool)userNotEntitledServerError;
- (_Bool)noItemsInLibraryServerError;
- (_Bool)invalidNewstandServerError;
- (_Bool)unexpectedServerError;
- (_Bool)loginExistsServerError;
- (_Bool)packingListNotFoundServerError;
- (_Bool)maxUserDevicesReachedServerError;
- (_Bool)issueNotSupportedForDeviceServerError;
- (_Bool)invalidNewPasswordServerError;
- (_Bool)invalidLoginServerError;
- (_Bool)deviceNotAuthorizedServerError;
- (_Bool)authorizationFailureServerError;
- (_Bool)appVersionNotSupportedServerError;
- (void)dealloc;
- (id)initWithCode:(id)arg1 message:(id)arg2;

@end

@interface ServerErrorException : NSException <ServerErrorSpecific>
{
    NSArray *errors;
}

@property(readonly, nonatomic) NSArray *errors; // @synthesize errors;
- (_Bool)restoreRequired;
- (_Bool)readerVersionNotSupported;
- (_Bool)invalidPublication;
- (_Bool)noPublications;
- (_Bool)userNotQualified;
- (_Bool)invalidUser;
- (_Bool)excerptNotFound;
- (_Bool)noExcerptsFound;
- (_Bool)badVersionStub;
- (_Bool)badRequest;
- (_Bool)systemNotAvailableServerError;
- (_Bool)userNotEntitledServerError;
- (_Bool)noItemsInLibraryServerError;
- (_Bool)invalidNewstandServerError;
- (_Bool)unexpectedServerError;
- (_Bool)loginExistsServerError;
- (_Bool)packingListNotFoundServerError;
- (_Bool)maxUserDevicesReachedServerError;
- (_Bool)issueNotSupportedForDeviceServerError;
- (_Bool)invalidNewPasswordServerError;
- (_Bool)invalidLoginServerError;
- (_Bool)deviceNotAuthorizedServerError;
- (_Bool)authorizationFailureServerError;
- (_Bool)appVersionNotSupportedServerError;
- (void)dealloc;
- (id)initWithErrors:(id)arg1;

@end

@interface ArticleImpl : NSObject <Article>
{
    NSString *name;
    NSString *articleId;
    NSString *title;
    NSString *kicker;
    NSString *imageFileName;
    NSString *folio;
    NSString *textBeginsOnFolio;
    NSString *blurb;
    NSMutableArray *authors;
    NSString *fileName;
    NSString *type;
    id <TableOfContentsSection> section;
    NSMutableArray *pageRanges;
    _Bool appearsInTOC;
}

@property(retain, nonatomic) NSString *kicker; // @synthesize kicker;
@property(nonatomic) _Bool appearsInTOC; // @synthesize appearsInTOC;
@property(retain, nonatomic) NSString *type; // @synthesize type;
@property(nonatomic) id <TableOfContentsSection> section; // @synthesize section;
@property(retain, nonatomic) NSString *fileName; // @synthesize fileName;
@property(readonly, nonatomic) NSMutableArray *authors; // @synthesize authors;
@property(retain, nonatomic) NSString *blurb; // @synthesize blurb;
@property(retain, nonatomic) NSString *textBeginsOnFolio; // @synthesize textBeginsOnFolio;
@property(retain, nonatomic) NSString *folio; // @synthesize folio;
@property(retain, nonatomic) NSString *imageFileName; // @synthesize imageFileName;
@property(retain, nonatomic) NSString *title; // @synthesize title;
@property(retain, nonatomic) NSString *articleId; // @synthesize articleId;
@property(retain, nonatomic) NSString *name; // @synthesize name;
- (_Bool)isEqual:(id)arg1;
- (void)addPageRange:(id)arg1;
- (id)pageRanges;
- (_Bool)isInteractive;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TableOfContentsSectionImpl : NSObject <TableOfContentsSection>
{
    NSString *title;
    NSNumber *order;
    NSMutableArray *articles;
    NSMutableArray *tocArticles;
}

@property(retain, nonatomic) NSNumber *order; // @synthesize order;
@property(retain, nonatomic) NSString *title; // @synthesize title;
- (id)articlesAppearingInTOC;
- (id)articles;
- (void)addArticle:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SpreadImpl : NSObject <Spread>
{
    NSObject<Page> *leftPage;
    NSObject<Page> *rightPage;
    NSString *jpgFileName;
    NSString *jpgThumbnailFileName;
}

@property(retain, nonatomic) NSString *jpgThumbnailFileName; // @synthesize jpgThumbnailFileName;
@property(retain, nonatomic) NSString *jpgFileName; // @synthesize jpgFileName;
@property(retain, nonatomic) NSObject<Page> *rightPage; // @synthesize rightPage;
@property(retain, nonatomic) NSObject<Page> *leftPage; // @synthesize leftPage;
- (_Bool)hasLinksToEnhancedContent;
- (_Bool)containsPageWithFolio:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFHTTPRequestOperation : AFURLConnectionOperation
{
    AFHTTPResponseSerializer<AFURLResponseSerialization> *_responseSerializer;
    id _responseObject;
    NSError *_responseSerializationError;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSError *responseSerializationError; // @synthesize responseSerializationError=_responseSerializationError;
@property(retain, nonatomic) id responseObject; // @synthesize responseObject=_responseObject;
@property(retain, nonatomic) AFHTTPResponseSerializer<AFURLResponseSerialization> *responseSerializer; // @synthesize responseSerializer=_responseSerializer;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)pause;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (id)error;
- (id)initWithRequest:(id)arg1;

// Remaining properties
@property(retain, nonatomic) NSRecursiveLock *lock; // @dynamic lock;
@property(retain, nonatomic) NSHTTPURLResponse *response;

@end

@interface TableOfContentsImpl : NSObject <TableOfContents>
{
    NSMutableArray *sections[2];
    NSMutableDictionary *folioArticles[2];
    NSMutableDictionary *folioArticlesText[2];
    NSMutableDictionary *folioIndex[2];
    NSMutableDictionary *folioArticlePresence[2];
}

- (void)processPages:(id)arg1 forOrientation:(int)arg2;
- (id)folioWithArticleAfter:(id)arg1 forOrientation:(int)arg2;
- (id)folioWithArticleAfter:(id)arg1;
- (id)folioWithArticleBefore:(id)arg1 forOrientation:(int)arg2;
- (id)folioWithArticleBefore:(id)arg1;
- (_Bool)hasAnyArticlesForOrientation:(int)arg1;
- (_Bool)hasAnyArticles;
- (_Bool)hasTextOfArticleStartingOnFolio:(id)arg1 forOrientation:(int)arg2;
- (_Bool)hasTextOfArticleStartingOnFolio:(id)arg1;
- (_Bool)hasArticleStartingOnFolio:(id)arg1 forOrientation:(int)arg2;
- (_Bool)hasArticleStartingOnFolio:(id)arg1;
- (id)textOfArticlesStartingOnFolio:(id)arg1 forOrientation:(int)arg2;
- (id)textOfArticlesStartingOnFolio:(id)arg1;
- (id)articlesStartingOnFolio:(id)arg1 forOrientation:(int)arg2;
- (id)articlesStartingOnFolio:(id)arg1;
- (id)firstArticlePresentOnFolio:(id)arg1 forOrientation:(int)arg2;
- (id)sectionArticleIndexPathForArticlesStartingOnFolio:(id)arg1 forOrientation:(int)arg2;
- (id)sectionsForOrientation:(int)arg1;
- (id)sections;
- (void)addSection:(id)arg1 forOrientation:(int)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ArticleIndex : NSObject
{
    NSString *prevArticleFolio;
    NSString *nextArticleFolio;
}

@property(retain, nonatomic) NSString *nextArticleFolio; // @synthesize nextArticleFolio;
@property(retain, nonatomic) NSString *prevArticleFolio; // @synthesize prevArticleFolio;
- (id)description;
- (void)dealloc;

@end

@interface PageImpl : NSObject <Page>
{
    NSString *folio;
    NSNumber *number;
    NSString *type;
    NSString *bookmark;
    _Bool media;
    _Bool verticalScrollPageSnap;
    NSNumber *clipView;
    NSString *pdfFileName;
    NSString *jpgFileName;
    NSString *jpgThumbnailFileName;
    NSMutableDictionary *assets;
    NSMutableArray *assetKeys;
    NSMutableArray *hyperlinks;
    NSMutableArray *oppositeOrientationLinks;
    NSMutableDictionary *pageObjects;
    NSMutableArray *pageObjectKeys;
    NSMutableDictionary *pageGroups;
    AnimationSpecSet *onView;
    AnimationSpecSet *onSettle;
    AnimationScript *script;
    NSString *token;
}

@property(retain, nonatomic) NSString *token; // @synthesize token;
@property(retain, nonatomic) AnimationScript *script; // @synthesize script;
@property(retain, nonatomic) NSNumber *clipView; // @synthesize clipView;
@property(nonatomic) _Bool verticalScrollPageSnap; // @synthesize verticalScrollPageSnap;
@property(retain, nonatomic) NSMutableArray *hyperlinks; // @synthesize hyperlinks;
@property(retain, nonatomic) NSString *jpgThumbnailFileName; // @synthesize jpgThumbnailFileName;
@property(retain, nonatomic) NSString *jpgFileName; // @synthesize jpgFileName;
@property(retain, nonatomic) NSString *pdfFileName; // @synthesize pdfFileName;
@property(retain, nonatomic) AnimationSpecSet *onView; // @synthesize onView;
@property(retain, nonatomic) AnimationSpecSet *onSettle; // @synthesize onSettle;
@property(nonatomic) _Bool media; // @synthesize media;
@property(retain, nonatomic) NSString *bookmark; // @synthesize bookmark;
@property(retain, nonatomic) NSString *type; // @synthesize type;
@property(retain, nonatomic) NSNumber *number; // @synthesize number;
@property(retain, nonatomic) NSString *folio; // @synthesize folio;
- (id)urlForAssetKey:(id)arg1;
- (id)allAssetKeys;
- (void)addAsset:(id)arg1 forKey:(id)arg2;
- (_Bool)isEqual:(id)arg1;
- (id)pageObjectsForGroup:(id)arg1;
- (id)allPageObjectGroupKeys;
- (id)allPageObjectKeys;
- (id)findPageObjectForKey:(id)arg1;
- (id)pageObjectForKey:(id)arg1;
- (id)oppositeOrientationLinkFromOffset:(unsigned long long)arg1;
- (void)addOppositeOrientationLink:(id)arg1 fromOffset:(unsigned long long)arg2;
- (void)addPageObject:(id)arg1 toGroup:(id)arg2;
- (void)addPageObject:(id)arg1;
- (_Bool)hasLinksToEnhancedContent;
- (_Bool)tableOfContentsBookmark;
- (_Bool)typeInsert;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IssueImpl : NSObject <Issue>
{
    int readerType;
    NSMutableDictionary *parameters;
    _Bool showStatusBar;
    _Bool supportsOrientation[2];
    _Bool supportsZoom[2];
    _Bool verticalScrollPageSnap[2];
    _Bool clipPageView[2];
    _Bool capturingObjectLayers[2];
    NSString *_pubName;
    NSString *pubId;
    NSString *issueTitle;
    NSString *labelType;
    NSString *issueId;
    NSDate *coverDate;
    NSString *tokenStartTime;
    NSString *tokenEndTime;
    NSString *assetToken;
    NSNumber *numberOfPages[2];
    NSNumber *packageSize;
    NSNumber *imageSizeJPEG;
    NSString *pdfPassword;
    NSMutableArray *pages[2];
    NSMutableArray *spreads;
    NSObject<TableOfContents> *tableOfContents;
    NSString *excerptId;
    NSNumber *excerptSize;
    NSNumber *packingListVersion;
    NSString *baseDir;
    struct CGSize contentSize[2];
    NSString *binding;
    NSString *tableOfContentsAction;
    NSMutableDictionary *controls;
    NSMutableDictionary *pageFolioMapping[2];
    CDStruct_79c71658 aspectRatio[2];
    NSString *script;
    _Bool supportsPortrait;
    _Bool supportsLandscape;
    _Bool linkOrientationPageOffsets;
}

@property(retain, nonatomic) NSString *assetToken; // @synthesize assetToken;
@property(retain, nonatomic) NSString *tokenStartTime; // @synthesize tokenStartTime;
@property(retain, nonatomic) NSString *tokenEndTime; // @synthesize tokenEndTime;
@property(retain, nonatomic) NSString *script; // @synthesize script;
@property(nonatomic) _Bool showStatusBar; // @synthesize showStatusBar;
@property(nonatomic) _Bool linkOrientationPageOffsets; // @synthesize linkOrientationPageOffsets;
@property(nonatomic) _Bool supportsLandscape; // @synthesize supportsLandscape;
@property(nonatomic) _Bool supportsPortrait; // @synthesize supportsPortrait;
@property(retain, nonatomic) NSString *tableOfContentsAction; // @synthesize tableOfContentsAction;
@property(retain, nonatomic) NSString *binding; // @synthesize binding;
@property(retain, nonatomic) NSString *baseDir; // @synthesize baseDir;
@property(retain, nonatomic) NSNumber *packingListVersion; // @synthesize packingListVersion;
@property(retain, nonatomic) NSNumber *excerptSize; // @synthesize excerptSize;
@property(retain, nonatomic) NSString *excerptId; // @synthesize excerptId;
@property(retain, nonatomic) NSObject<TableOfContents> *tableOfContents; // @synthesize tableOfContents;
@property(readonly, nonatomic) NSMutableArray *spreads; // @synthesize spreads;
@property(retain, nonatomic) NSString *pdfPassword; // @synthesize pdfPassword;
@property(retain, nonatomic) NSNumber *imageSizeJPEG; // @synthesize imageSizeJPEG;
@property(nonatomic) int readerType; // @synthesize readerType;
@property(retain, nonatomic) NSNumber *packageSize; // @synthesize packageSize;
@property(retain, nonatomic) NSString *issueId; // @synthesize issueId;
@property(retain, nonatomic) NSString *labelType; // @synthesize labelType;
@property(retain, nonatomic) NSString *issueTitle; // @synthesize issueTitle;
@property(retain, nonatomic) NSString *pubId; // @synthesize pubId;
- (id)sanityCheck;
- (_Bool)pageContainsVideoContent:(id)arg1;
- (_Bool)pageObjectContainsVideoContent:(id)arg1 usingControls:(id)arg2;
- (_Bool)isCapturingPageObject:(id)arg1 forOrientation:(int)arg2;
- (void)setUseCapturingObjectLayers:(_Bool)arg1 forOrientation:(int)arg2;
- (_Bool)useCapturingObjectLayersForOrientation:(int)arg1;
- (_Bool)isClipPageView:(id)arg1 forOrientation:(int)arg2;
- (void)setClipPageView:(_Bool)arg1 forOrientation:(int)arg2;
- (_Bool)clipPageViewForOrientation:(int)arg1;
- (_Bool)verticalScrollPageSnapOnPage:(id)arg1 forOrientation:(int)arg2;
- (void)setVerticalScrollPageSnap:(_Bool)arg1 forOrientation:(int)arg2;
- (_Bool)verticalScrollPageSnapForOrientation:(int)arg1;
- (void)setSupportsZoom:(_Bool)arg1 forOrientation:(int)arg2;
- (_Bool)supportsZoomForOrientation:(int)arg1;
- (void)setSupportsOrientation:(_Bool)arg1 forOrientation:(int)arg2;
- (_Bool)supportsOrientation:(int)arg1;
- (_Bool)isResource:(id)arg1 usedOnPage:(id)arg2;
- (_Bool)isResource:(id)arg1 usedInObject:(id)arg2 usingControls:(id)arg3;
- (id)allDownloadableAssetsOnPage:(id)arg1 forOrientation:(int)arg2;
- (void)addObjectAssets:(id)arg1 toArray:(id)arg2 usingControls:(id)arg3;
- (_Bool)areAllAssetsAvailableOnPage:(id)arg1;
- (_Bool)pageObjectResourceMissing:(id)arg1 usingControls:(id)arg2 fileManager:(id)arg3;
- (void)setNumberOfPages:(id)arg1 forOrientation:(int)arg2;
- (id)numberOfPagesForOrientation:(int)arg1;
- (id)numberOfPages;
- (void)addPage:(id)arg1 forOrientation:(int)arg2;
- (id)pagesForOrientation:(int)arg1;
- (id)pages;
- (_Bool)showStatusBarForOrientation:(int)arg1;
- (void)setAspectRatio:(CDStruct_79c71658)arg1 forOrientation:(int)arg2;
- (CDStruct_79c71658)aspectRatioForOrientation:(int)arg1;
- (void)setContentSize:(struct CGSize)arg1 forOrientation:(int)arg2;
- (struct CGSize)contentSizeForOrientation:(int)arg1;
- (struct CGSize)contentSize;
- (id)allControlKeys;
- (id)controlForKey:(id)arg1;
- (void)addControl:(id)arg1;
- (id)absolutePath:(id)arg1;
- (id)tableOfContentsStartsOnFolioForOrientation:(int)arg1;
- (id)tableOfContentsStartsOnFolio;
- (_Bool)excerpt;
- (void)processPagesWithSpreadNameTemplate:(id)arg1 forOrientation:(int)arg2;
- (void)processPagesWithSpreadNameTemplate:(id)arg1;
- (struct CGPDFDocument *)newPdf:(id)arg1 password:(id)arg2;
- (void)setupSpreadJpgNames:(id)arg1 index:(unsigned long long)arg2 template:(id)arg3;
- (id)spreadForFolio:(id)arg1;
- (id)referencePageForOrientation:(int)arg1;
- (id)referencePage;
- (id)backcoverForOrientation:(int)arg1;
- (id)backcover;
- (id)coverForOrientation:(int)arg1;
- (id)cover;
- (id)firstPageWithBookmark:(id)arg1 forOrientation:(int)arg2;
- (id)firstPageWithBookmark:(id)arg1;
- (id)spreadAtIndex:(unsigned long long)arg1;
- (id)pageAtIndex:(unsigned long long)arg1 forOrientation:(int)arg2;
- (id)pageAtIndex:(unsigned long long)arg1;
- (id)pageForNumber:(id)arg1 forOrientation:(int)arg2;
- (id)pageForNumber:(id)arg1;
- (id)pageForFolio:(id)arg1 forOrientation:(int)arg2;
- (id)pageForFolio:(id)arg1;
- (void)setValue:(id)arg1 forParameter:(id)arg2;
- (id)valueForParameter:(id)arg1;
- (id)owner;
@property(copy, nonatomic) NSString *pubName;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BaseIssueViewController : BaseViewController <TableOfContentsViewControllerDelegate, ZoomTransitionSupport>
{
    _Bool firstView;
    UILabel *navBarTitleLabel;
    UILabel *navBarDateLabel;
    UIView *bottomToolbar;
    UIButton *textModeToggleButton;
    UIButton *floatingTextModeToggleButton;
    UIButton *articleTocButton;
    UIButton *imageTocButton;
    UIView *tocSeparatorView;
    id <Issue> issue;
    UIViewController *rootViewController;
    struct CGRect zoomFrom;
    UIViewController *tocTextViewController;
    UIViewController *tocImageViewController;
    ZinioToolbarView *zinioToolbarView;
}

@property(retain, nonatomic) ZinioToolbarView *zinioToolbarView; // @synthesize zinioToolbarView;
@property(retain, nonatomic) UIButton *imageTocButton; // @synthesize imageTocButton;
@property(nonatomic) struct CGRect zoomFrom; // @synthesize zoomFrom;
@property(nonatomic) UIViewController *rootViewController; // @synthesize rootViewController;
@property(retain, nonatomic) UIView *tocSeparatorView; // @synthesize tocSeparatorView;
@property(nonatomic) _Bool firstView; // @synthesize firstView;
@property(retain, nonatomic) UIButton *articleTocButton; // @synthesize articleTocButton;
@property(retain, nonatomic) UIButton *textModeToggleButton; // @synthesize textModeToggleButton;
@property(retain, nonatomic) UIButton *floatingTextModeToggleButton; // @synthesize floatingTextModeToggleButton;
@property(retain, nonatomic) UIView *bottomToolbar; // @synthesize bottomToolbar;
@property(retain, nonatomic) id <Issue> issue; // @synthesize issue;
@property(retain, nonatomic) UILabel *navBarDateLabel; // @synthesize navBarDateLabel;
@property(retain, nonatomic) UILabel *navBarTitleLabel; // @synthesize navBarTitleLabel;
- (void)tableOfContentsViewControllerDidDismiss:(id)arg1;
- (void)dismissIssueControllerAnimationComplete:(id)arg1;
- (void)gotoMyLibraryCompletion:(CDUnknownBlockType)arg1;
- (void)gotoMyLibrary;
- (void)willGotoTOCText:(id)arg1;
- (id)newTOCTextViewController;
- (void)gotoTOCText:(id)arg1;
- (void)willGotoTOCImage:(id)arg1;
- (id)newTOCImageViewController;
- (id)supplyNavController:(id)arg1;
- (void)gotoTOCImage;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)cancelAutoHideChrome;
- (void)autoHideChrome;
- (void)showChromeAnnimation;
- (void)showChrome;
- (void)hideChromeAnnimation;
- (void)hideChrome;
- (void)toggleChrome;
- (_Bool)isChromeVisible;
- (_Bool)floatingTextModeToggleButtonShouldBeHidden;
- (void)dismissModalWithNavController;
- (void)presentModalWithNavController:(id)arg1 closeAction:(SEL)arg2 animated:(_Bool)arg3;
- (void)buildCloseButton:(id)arg1 closeAction:(SEL)arg2;
- (void)updateUIElementsForOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)setupFloatingTextModeToggleButton;
- (void)setupTextModeToggleButton;
- (void)setupNavBarBackButtonToLibrary;
- (void)themeLabel:(id)arg1;
- (id)formatNavBarDate:(id)arg1;
- (void)adjustNavBarTitleDate;
- (void)loadNavBarTitleView;
- (void)setupZinioToolbarView;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ContactSupportEmailController : NSObject
{
}

+ (id)contactSupportEmailViewControllerWithDelegate:(id)arg1;

@end

@interface ZGRegistrationModalInsetViewController : NavigationInsetViewController
{
}

- (void)initializeInsetViewWithSlots:(_Bool)arg1;
- (void)showNormalSizeViewForController:(id)arg1 withCloseButton:(_Bool)arg2;

@end

@interface TapDetectingWindow : UIWindow
{
    NSMutableArray *observedViews;
}

+ (void)resumeObservingTaps;
+ (void)pauseObservingTaps;
@property(retain, nonatomic) NSMutableArray *observedViews; // @synthesize observedViews;
- (void)handleTwoFingerTap:(id)arg1;
- (void)handleDoubleTap:(id)arg1;
- (void)handleSingleTap:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2 inObserved:(id)arg3;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2 inObserved:(id)arg3;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2 inObserved:(id)arg3;
- (unsigned long long)touchCount:(id)arg1 withEvent:(id)arg2 inObserved:(id)arg3;
- (void)sendEvent:(id)arg1;
- (void)stopObservingTaps:(id)arg1;
- (void)startObservingTaps:(id)arg1 withDelegate:(id)arg2;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface ObservedView : NSObject
{
    UIView *view;
    id <TapDetectingWindowDelegate> delegate;
    struct CGPoint tapLocation;
    _Bool multipleTouches;
    _Bool twoFingerTapIsPossible;
}

@property(nonatomic) _Bool twoFingerTapIsPossible; // @synthesize twoFingerTapIsPossible;
@property(nonatomic) _Bool multipleTouches; // @synthesize multipleTouches;
@property(nonatomic) struct CGPoint tapLocation; // @synthesize tapLocation;
@property(retain, nonatomic) id <TapDetectingWindowDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) UIView *view; // @synthesize view;
- (void)dealloc;
- (id)initWithView:(id)arg1 delegate:(id)arg2;
- (id)init;

@end

@interface BaseTableOfContentsViewController : UIViewController
{
    UITableView *tableView;
    ZinioToolbarView *zinioToolbarView;
    id <Issue> issue;
    id <TableOfContentsViewControllerDelegate> tocDelegate;
}

@property(retain, nonatomic) ZinioToolbarView *zinioToolbarView; // @synthesize zinioToolbarView;
@property(nonatomic) id <TableOfContentsViewControllerDelegate> tocDelegate; // @synthesize tocDelegate;
@property(retain, nonatomic) id <Issue> issue; // @synthesize issue;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView;
- (void)close;
- (id)getCellForSubview:(id)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)buildTitleText;
- (void)viewDidLoad;
- (void)buildCloseButton;
- (void)dealloc;

@end

@interface ArticleChooserViewController : UIViewController <UITableViewDelegate, UITableViewDataSource>
{
    NSString *cellNibName;
    ArticleChooserTableViewCell *articleTableViewCell;
    UITableView *tableView;
    NSArray *articles;
    id <ArticleChooserViewControllerDelegate> articleChooserDelegate;
}

@property(retain, nonatomic) NSString *cellNibName; // @synthesize cellNibName;
@property(retain, nonatomic) id <ArticleChooserViewControllerDelegate> articleChooserDelegate; // @synthesize articleChooserDelegate;
@property(nonatomic) ArticleChooserTableViewCell *articleTableViewCell; // @synthesize articleTableViewCell;
@property(retain, nonatomic) NSArray *articles; // @synthesize articles;
@property(nonatomic) UITableView *tableView; // @synthesize tableView;
- (void)close;
- (id)createNewArticleChooserTableViewCell;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ArticleChooserTableViewCell : UITableViewCell
{
    UILabel *articleTitle;
}

@property(nonatomic) UILabel *articleTitle; // @synthesize articleTitle;

@end

@interface TabBarController : UITabBarController <TabbedController>
{
    NSArray *_tabTitles;
}

- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)presentedPopoverControllerFromTab:(unsigned long long)arg1 highlighted:(_Bool)arg2;
- (id)tabBarButtonForTabIndex:(unsigned long long)arg1;
- (void)dismissedPopoverControllerFromTab:(unsigned long long)arg1;
@property(retain, nonatomic) UIImage *tabToolbarBackgroundImage;
@property(copy, nonatomic) NSArray *tabIconPdfs;
@property(copy, nonatomic) NSArray *tabTitles;
@property(nonatomic) UIViewController *selectedTabViewController;
@property(copy, nonatomic) NSArray *tabViewControllers;
@property(nonatomic) unsigned long long selectedTabIndex;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IssueDownloadInProgress : NSObject
{
    _Bool cancelled;
    NSObject<User> *user;
    NSString *pubId;
    NSString *issueId;
    NSString *excerptId;
    NSOperationQueue *operationQueue;
    NSNumber *bytesDownloaded;
    NSNumber *bytesDownloadedSinceLastNotification;
    NSNumber *_totalSize;
    IssueDownloadMetadata *_downloadProgressMetadata;
}

@property(retain, nonatomic) NSNumber *totalSize; // @synthesize totalSize=_totalSize;
@property(retain, nonatomic) IssueDownloadMetadata *downloadProgressMetadata; // @synthesize downloadProgressMetadata=_downloadProgressMetadata;
@property(retain, nonatomic) NSNumber *bytesDownloadedSinceLastNotification; // @synthesize bytesDownloadedSinceLastNotification;
@property(retain, nonatomic) NSNumber *bytesDownloaded; // @synthesize bytesDownloaded;
@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue;
@property(retain, nonatomic) NSString *excerptId; // @synthesize excerptId;
@property(retain, nonatomic) NSString *issueId; // @synthesize issueId;
@property(retain, nonatomic) NSString *pubId; // @synthesize pubId;
@property(retain, nonatomic) NSObject<User> *user; // @synthesize user;
@property(nonatomic) _Bool cancelled; // @synthesize cancelled;
- (_Bool)isEqualToUser:(id)arg1 issueId:(id)arg2 excerptId:(id)arg3;
- (_Bool)isEqualToUser:(id)arg1 pubId:(id)arg2 issueId:(id)arg3;
- (void)dealloc;
- (id)init;

@end

@interface PageHyperlinkImpl : NSObject <PageHyperlink>
{
    struct CGRect rect;
    NSString *url;
    NSString *imgUrl;
    NSString *offlineUrl;
    NSString *control;
    NSString *type;
    NSString *onPageLoadEffect;
    double targetAlpha;
    _Bool rectInPixels;
}

@property(nonatomic) double targetAlpha; // @synthesize targetAlpha;
@property(retain, nonatomic) NSString *onPageLoadEffect; // @synthesize onPageLoadEffect;
@property(retain, nonatomic) NSString *type; // @synthesize type;
@property(retain, nonatomic) NSString *offlineUrl; // @synthesize offlineUrl;
@property(retain, nonatomic) NSString *imgUrl; // @synthesize imgUrl;
@property(retain, nonatomic) NSString *url; // @synthesize url;
@property(nonatomic) _Bool rectInPixels; // @synthesize rectInPixels;
@property(nonatomic) struct CGRect rect; // @synthesize rect;
@property(retain, nonatomic) NSString *control; // @synthesize control;
- (_Bool)hitTest:(struct CGPoint)arg1 fromLayer:(id)arg2 inLayer:(id)arg3 baseSize:(struct CGSize)arg4;
- (struct CGRect)frameInViewSize:(struct CGSize)arg1 baseSize:(struct CGSize)arg2;
- (_Bool)isEqual:(id)arg1;
- (_Bool)linksToEnhancedContent;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithPageHyperlink:(id)arg1;
- (id)initWithRect:(struct CGRect)arg1 url:(id)arg2 img:(id)arg3 type:(id)arg4;
- (id)initWithRect:(struct CGRect)arg1 url:(id)arg2 type:(id)arg3;
- (id)initWithRect:(struct CGRect)arg1 url:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIImageViewPageSizeAware : UIImageView <PageSizeAware>
{
    _Bool sizeToFit;
}

@property(nonatomic) _Bool sizeToFit; // @synthesize sizeToFit;
- (struct CGSize)naturalSize;
- (_Bool)canSizeToFit;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;

@end

@interface TermsOfServiceFooterView : UIView
{
    UIButton *termsOfServiceButton;
}

- (void)awakeFromNib;
- (void)dealloc;

@end

@interface Language : NSObject
{
    NSString *_languageId;
    NSString *_ISO3Code;
    NSString *_name;
}

@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *ISO3Code; // @synthesize ISO3Code=_ISO3Code;
@property(copy, nonatomic) NSString *languageId; // @synthesize languageId=_languageId;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;

@end

@interface AFImageCache : NSCache <AFImageCache>
{
}

- (void)cacheImage:(id)arg1 forRequest:(id)arg2;
- (id)cachedImageForRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AESFileEncryptor : NSObject
{
}

+ (void)writeDataToFile:(id)arg1 fileName:(id)arg2;
+ (id)generateSymmetricKey;
+ (void)encryptData:(id)arg1 toFileNamed:(id)arg2;
+ (id)decryptFileNamed:(id)arg1;

@end

@interface SecKeyWrapper : NSObject
{
    NSData *publicTag;
    NSData *privateTag;
    NSData *symmetricTag;
    unsigned int typeOfSymmetricOpts;
    struct __SecKey *publicKeyRef;
    struct __SecKey *privateKeyRef;
    NSData *symmetricKeyRef;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedWrapper;
@property(retain, nonatomic) NSData *symmetricKeyRef; // @synthesize symmetricKeyRef;
@property(retain, nonatomic) NSData *symmetricTag; // @synthesize symmetricTag;
@property(retain, nonatomic) NSData *privateTag; // @synthesize privateTag;
@property(retain, nonatomic) NSData *publicTag; // @synthesize publicTag;
- (void)dealloc;
- (struct __SecKey *)getKeyRefWithPersistentKeyRef:(void *)arg1;
- (void *)getPersistentKeyRefWithKeyRef:(struct __SecKey *)arg1;
- (id)getSymmetricKeyBytes;
- (struct __SecKey *)getPrivateKeyRef;
- (id)getPublicKeyBits;
- (struct __SecKey *)getPublicKeyRef;
- (id)doCipher:(id)arg1 key:(id)arg2 context:(unsigned int)arg3 padding:(unsigned int *)arg4;
- (id)doCipher:(id)arg1 key:(id)arg2 context:(unsigned int)arg3 padding:(unsigned int *)arg4 iv:(id)arg5;
- (_Bool)verifySignature:(id)arg1 secKeyRef:(struct __SecKey *)arg2 signature:(id)arg3;
- (id)getSignatureBytes:(id)arg1;
- (id)getHashBytes:(id)arg1;
- (id)unwrapSymmetricKey:(id)arg1;
- (id)wrapSymmetricKey:(id)arg1 keyRef:(struct __SecKey *)arg2;
- (void)removePeerPublicKey:(id)arg1;
- (struct __SecKey *)addPeerPublicKey:(id)arg1 keyBits:(id)arg2;
- (void)generateSymmetricKey;
- (void)generateKeyPair:(unsigned long long)arg1;
- (void)deleteSymmetricKey;
- (void)deleteAsymmetricKeys;
- (id)init;
- (unsigned long long)retainCount;
- (id)autorelease;
- (id)retain;
- (oneway void)release;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface LargeReaderViewController : ReaderViewController <PagingScrollViewDataSource, PagingScrollViewDelegate, UIPopoverControllerDelegate, ModalInsetViewControllerDelegate, LoginNavigationControllerDelegate>
{
    UIPopoverController *articleChooserPopover;
    UIView<PagingScrollView> *tocScrollView;
    UIView *navBarTopRightView;
    UINavigationController *popoverNavController;
    UIView *tocPageView;
    _Bool issueDownloadCompleteAnimating;
    BookmarksViewController *bookmarkController;
    _Bool _autoRotateShareView;
    _Bool readerCheckClose;
}

@property(retain, nonatomic) UINavigationController *popoverNavController; // @synthesize popoverNavController;
@property(retain, nonatomic) UIPopoverController *articleChooserPopover; // @synthesize articleChooserPopover;
@property(retain, nonatomic) UIView *navBarTopRightView; // @synthesize navBarTopRightView;
@property(retain, nonatomic) UIView *tocPageView; // @synthesize tocPageView;
@property(retain, nonatomic) UIView<PagingScrollView> *tocScrollView; // @synthesize tocScrollView;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (void)askToLaunchReaderForPurchasedPubId:(id)arg1;
- (void)getFreeOfferSucceeded:(id)arg1 pubId:(id)arg2;
- (void)_buyIssue;
- (void)hideGigyaViewWithDelay;
- (void)hideGigyaView;
- (void)goToViewedPreviousPage:(id)arg1;
- (void)toggleBookmarkForCurrentFolio:(id)arg1;
- (id)bookmarkController;
- (void)loginNavigationControllerDidCancel:(id)arg1;
- (void)loginNavigationController:(id)arg1 didLoginWithSuccess:(_Bool)arg2;
- (void)showSignIn:(id)arg1;
- (void)configurePurchase;
- (void)modalInsetViewController:(id)arg1 didDismiss:(_Bool)arg2;
- (void)displayDownloadProgress:(double)arg1 reprocessing:(_Bool)arg2;
- (id)loadingPreviewImage;
- (void)setLockUIOnCurrentPage:(_Bool)arg1;
- (void)showCantZoomTip;
- (void)showFirstPageViewWithTextTip;
- (void)showFirstTimeTip;
- (void)pagingScrollView:(id)arg1 didSettleOnPage:(unsigned long long)arg2;
- (void)pagingScrollView:(id)arg1 didChangeToPage:(unsigned long long)arg2;
- (void)pagingScrollView:(id)arg1 gotDoubleTapOn:(id)arg2 index:(unsigned long long)arg3 at:(struct CGPoint)arg4;
- (void)pagingScrollView:(id)arg1 gotSingleTapOn:(id)arg2 index:(unsigned long long)arg3 at:(struct CGPoint)arg4;
- (void)pagingScrollViewWillBeginDragging:(id)arg1;
- (void)renderPage:(unsigned long long)arg1 inView:(id)arg2 forScrollView:(id)arg3;
- (id)createReusablePageViewForScrollView:(id)arg1;
- (double)pageWidthForScrollView:(id)arg1;
- (unsigned long long)totalPageCountForScrollView:(id)arg1;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)issueDownloadComplete;
- (void)loadNavBarDownloadTitleView;
- (id)createWebViewControllerForUrl:(id)arg1;
- (void)postProcessAssetDownloadedNotification:(id)arg1;
- (void)downloadProgressAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (id)createFlowableTextViewControllerForIssue:(id)arg1 article:(id)arg2 backgroundImage:(id)arg3;
- (void)articleChooserViewController:(id)arg1 didSelectArticle:(id)arg2;
- (void)articleChooserViewControllerDidDismiss:(id)arg1;
- (void)closeArticleChooser;
- (void)presentArticleChooser:(id)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (id)newTOCTextViewController;
- (id)newTOCImageViewController;
- (void)buildCloseButton:(id)arg1 closeAction:(SEL)arg2;
- (void)receivePdfPreviewImageReadyNotification:(id)arg1;
- (void)resetWaitForPreview;
- (void)reloadTOC;
- (unsigned long long)spreadIndexForCurrPage;
- (unsigned long long)pageIndexForCurrPage;
- (void)themeLabel:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HorizontalPagingScrollView : UIScrollView <PagingScrollView, UIScrollViewDelegate, TapDetectingWindowDelegate>
{
    id <PagingScrollViewDataSource> pageDataSource;
    id <PagingScrollViewDelegate> pageDelegate;
    _Bool loaded;
    _Bool reverse;
    _Bool snapScrollToCenter;
    struct UIEdgeInsets cellPadding;
    long long lastScrollDirection;
    double lastScrollOffset;
    unsigned long long head;
    unsigned long long centerIndex;
    NSMutableArray *pages;
    TapDetectingWindow *tapDetectingWindow;
    _Bool centeringReload;
    _Bool settleOnLayout;
}

@property(nonatomic) _Bool snapScrollToCenter; // @synthesize snapScrollToCenter;
@property(nonatomic) _Bool reverse; // @synthesize reverse;
@property(readonly, nonatomic, getter=isLoaded) _Bool loaded; // @synthesize loaded;
@property(nonatomic) id <PagingScrollViewDelegate> pageDelegate; // @synthesize pageDelegate;
@property(nonatomic) id <PagingScrollViewDataSource> pageDataSource; // @synthesize pageDataSource;
@property(nonatomic) struct UIEdgeInsets cellPadding; // @synthesize cellPadding;
- (struct CGRect)viewBound;
- (void)tapDetectingWindow:(id)arg1 gotDoubleTap:(id)arg2 atPoint:(struct CGPoint)arg3;
- (void)tapDetectingWindow:(id)arg1 gotSingleTap:(id)arg2 atPoint:(struct CGPoint)arg3;
- (unsigned long long)containerIndexForTapPoint:(struct CGPoint)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)replaceLoadedReusablePageViewAtIndex:(unsigned long long)arg1 withView:(id)arg2;
- (id)loadedReusablePageViewForIndex:(unsigned long long)arg1;
- (unsigned long long)currentCenterPage;
- (struct _NSRange)currentPageRange;
- (void)centerOnPage:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)layoutSubviews;
- (_Bool)handleSnapScrollToCenter:(id)arg1;
- (double)centerOffsetForPage:(unsigned long long)arg1;
- (void)handlePageVisibility;
- (void)handleDidChangePage;
- (void)handleDidSettle;
- (void)layoutContainersForHead:(unsigned long long)arg1;
- (void)reloadData;
- (void)reloadDataAndCenterOnPage:(unsigned long long)arg1 ignoreDelegate:(_Bool)arg2;
- (void)reloadDataAndCenterOnPage:(unsigned long long)arg1;
- (void)releaseAllPages;
- (id)pageViewForContainer:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutCell:(id)arg1 atIndex:(unsigned long long)arg2 inRect:(struct CGRect)arg3;
- (unsigned long long)calculateCenterForPageWidth:(double)arg1 numPages:(unsigned long long)arg2;
- (unsigned long long)calculateHeadForPageWidth:(double)arg1 numPages:(unsigned long long)arg2;
- (double)pageWidth;
@property(readonly, nonatomic) UIScrollView *scroller;
- (void)willMoveToWindow:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)initializeHorizontalPagingScrollView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ImageTOCPageView : UIView
{
    UIView *pageView;
    UIImage *leftPage;
    UIImage *rightPage;
    UILabel *leftPageLabel;
    UILabel *rightPageLabel;
    UIColor *shadowColor;
    struct CGSize shadowOffset;
    double shadowRadius;
}

@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor;
@property(nonatomic) double shadowRadius; // @synthesize shadowRadius;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset;
@property(retain, nonatomic) UIImage *rightPage; // @synthesize rightPage;
@property(retain, nonatomic) UIImage *leftPage; // @synthesize leftPage;
@property(retain, nonatomic) UIView *pageView; // @synthesize pageView;
@property(retain, nonatomic) UILabel *rightPageLabel; // @synthesize rightPageLabel;
@property(retain, nonatomic) UILabel *leftPageLabel; // @synthesize leftPageLabel;
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (void)initialize;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface Zinio_iReaderAppDelegate_iPhone : Zinio_iReaderAppDelegate
{
    NetworkServicesManager *networkManager;
}

@property(retain, nonatomic) NetworkServicesManager *networkManager; // @synthesize networkManager;
- (void)tabBarController:(id)arg1 didSelectViewController:(id)arg2;
- (void)switchToLibraryAndShowSignin;
- (void)switchToLibraryAndReadIssue:(id)arg1;
- (void)startupPostProcessing;
- (void)newsstandDidChange;
- (void)dealloc;
- (void)showDeepLinkWithArticleId:(id)arg1;
- (void)showDeepLinkWithPublicationId:(id)arg1 newsstandId:(id)arg2;
- (void)showDeepLinkWithIssueId:(id)arg1;
- (id)storyboardIdForDeepLinkingId:(id)arg1;
- (void)deepLink:(id)arg1;
- (_Bool)application:(id)arg1 handleOpenURL:(id)arg2;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (int)tabTypeForPosition:(int)arg1;
- (int)tabPosition:(int)arg1;
- (void)wiredFromNib;

@end

@interface Zinio_iReaderAppDelegate_iPad : Zinio_iReaderAppDelegate <ModalInsetViewControllerDelegate, TabbedControllerDelegate, UIPopoverControllerDelegate>
{
    NSMutableArray *tabControllers;
    DashboardViewController *dashboardViewController;
    _Bool waitingOnConfiguration;
    NetworkServicesManager *networkManager;
}

@property(retain, nonatomic) NetworkServicesManager *networkManager; // @synthesize networkManager;
@property(nonatomic) _Bool waitingOnConfiguration; // @synthesize waitingOnConfiguration;
- (void)newsstandDidChange;
- (void)internationalStoreDidChange;
- (void)showDeepLinkWithArticleId:(id)arg1;
- (void)showDeepLinkWithPublicationId:(id)arg1 newsstandId:(id)arg2;
- (void)showDeepLinkWithIssueId:(id)arg1;
- (id)storyboardIdForDeepLinkingId:(id)arg1;
- (void)deepLink:(id)arg1;
- (void)presentDashboard;
- (void)switchToLibraryAndShowSignin;
- (void)switchToLibraryAndReadIssueForGuestCheckOut:(id)arg1;
- (void)switchToLibraryAndReadIssue:(id)arg1;
- (void)startupSetupInitialViewForUser:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)startupPostProcessing;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (_Bool)application:(id)arg1 handleOpenURL:(id)arg2;
- (void)modalInsetViewController:(id)arg1 didDismiss:(_Bool)arg2;
- (void)tabbedController:(id)arg1 didSelectViewController:(id)arg2;
- (_Bool)tabbedController:(id)arg1 shouldSelectViewController:(id)arg2;
- (void)tabBarController:(id)arg1 didSelectViewController:(id)arg2;
- (_Bool)tabBarController:(id)arg1 shouldSelectViewController:(id)arg2;
- (void)controller:(id)arg1 didSelectViewController:(id)arg2;
- (_Bool)controller:(id)arg1 shouldSelectViewController:(id)arg2;
- (int)tabTypeForPosition:(int)arg1;
- (int)tabPosition:(int)arg1;
- (void)switchToHomeScreenTab;
- (void)configurationFailed;
- (void)configurationSucceeded;
@property(retain, nonatomic) UIViewController *bookmarksViewController;
@property(retain, nonatomic) UIViewController *tab4;
@property(retain, nonatomic) UIViewController *tab3;
@property(retain, nonatomic) UIViewController *tab2;
@property(retain, nonatomic) UIViewController *tab1;
- (void)setViewController:(id)arg1 atTabIndex:(unsigned long long)arg2;
- (id)viewControllerAtTabIndex:(unsigned long long)arg1;
- (void)dealloc;
- (void)wiredFromNib;
- (id)tabbedNavigationController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ToolbarInRightNavigationItemViewController : BaseViewController
{
    long long previousInterfaceOrientation;
    _Bool unloaded;
    _Bool manualOrientationChange;
    UINavigationController *navController;
}

@property(retain, nonatomic) UINavigationController *navController; // @synthesize navController;
@property(readonly, nonatomic, getter=isUnloaded) _Bool unloaded; // @synthesize unloaded;
@property(readonly, nonatomic, getter=isManualOrientationChange) _Bool manualOrientationChange; // @synthesize manualOrientationChange;
@property(readonly, nonatomic) long long previousInterfaceOrientation; // @synthesize previousInterfaceOrientation;
- (void)initializeWithUser:(id)arg1;
- (void)addTitleAsLeftNavigationItem:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)setupToolbarInRight;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;

@end

@interface ApplicationStartupViewController_iPad : ApplicationStartupViewController
{
}

- (void)playAnimation;
- (void)beginLaunchPresentation;
- (void)dealloc;
- (_Bool)showIntroAnimation;

@end

@interface ChangePasswordViewControllerLarge : ChangePasswordViewController
{
    UIPopoverController *popoverReference;
    UIImageView *backgroundImage;
    UIButton *submitButton;
}

@property(retain, nonatomic) UIButton *submitButton; // @synthesize submitButton;
@property(retain, nonatomic) UIImageView *backgroundImage; // @synthesize backgroundImage;
@property(nonatomic) UIPopoverController *popoverReference; // @synthesize popoverReference;
- (void)presentPopover;
- (id)cellLabelColor;
- (void)handleNewPasswordRepeatShouldReturn:(id)arg1;
- (long long)repeatPasswordReturnKeyType;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface ApplicationHelpViewController : HelpViewController
{
    IntroViewController *introViewController;
}

@property(retain, nonatomic) IntroViewController *introViewController; // @synthesize introViewController;
- (void)showIntro:(id)arg1;
- (id)faqFilename;
- (void)viewDidLoad;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dealloc;

@end

@interface SearchTableViewCell : UITableViewCell <HTTPClientDelegate>
{
    UIImageView *_imageView;
    UILabel *_titleLabel;
    NSString *_issudeId;
}

+ (id)backgroundColor;
+ (double)height;
@property(retain, nonatomic) NSString *issueId; // @synthesize issueId=_issudeId;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
- (void)dealloc;
- (void)setUpWithSearchResult:(id)arg1;
- (void)httpClient:(id)arg1 downloadedImageForIssueId:(id)arg2 image:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BaseLabel : UILabel
{
}

- (void)setDefaultProperties;
- (void)resetTextColor;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface PageScrubberView : UIView
{
    unsigned long long totalPages;
    unsigned long long currentPageIndex;
    double progress;
    UIView *trackPositionView;
    UIView *pageView;
    UIImage *trackImage;
    UIImage *trackProgressImage;
    id <PageScrubberDelegate> delegate;
    _Bool scrubbing;
}

@property(nonatomic) id <PageScrubberDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) UIView *pageView; // @synthesize pageView;
@property(retain, nonatomic) UIView *trackPositionView; // @synthesize trackPositionView;
@property(retain, nonatomic) UIImage *trackProgressImage; // @synthesize trackProgressImage;
@property(retain, nonatomic) UIImage *trackImage; // @synthesize trackImage;
@property(readonly, nonatomic) _Bool scrubbing; // @synthesize scrubbing;
@property(nonatomic) unsigned long long currentPageIndex; // @synthesize currentPageIndex;
@property(nonatomic) double progress; // @synthesize progress;
@property(nonatomic) unsigned long long totalPages; // @synthesize totalPages;
- (double)centerForIndex:(unsigned long long)arg1;
- (void)endScrubbing;
- (void)startScrubbing;
- (void)updateTrackPositionTo:(double)arg1;
- (unsigned long long)pageIndexForPosition:(double)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)gotoPage:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)setProgress:(double)arg1 animated:(_Bool)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (void)initialize;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface OutlineButton : UIButton
{
    NSString *_placeholderObject;
    int _placeHolderNumber;
    _Bool _shouldCapitalize;
    _Bool _shouldDrawFrame;
}

@property(nonatomic) _Bool shouldDrawFrame; // @synthesize shouldDrawFrame=_shouldDrawFrame;
@property(nonatomic) _Bool shouldCapitalize; // @synthesize shouldCapitalize=_shouldCapitalize;
@property(nonatomic) int placeHolderNumber; // @synthesize placeHolderNumber=_placeHolderNumber;
@property(retain, nonatomic) NSString *placeholderObject; // @synthesize placeholderObject=_placeholderObject;

@end

@interface PageScrubView : UIView
{
    UILabel *pageNumLabel;
    UIImageView *pageImage;
}

@property(retain, nonatomic) UIImageView *pageImage; // @synthesize pageImage;
@property(retain, nonatomic) UILabel *pageNumLabel; // @synthesize pageNumLabel;
- (void)dealloc;

@end

@interface ApplicationNotificationNames : NSObject
{
}

@end

@interface SettingsDownloadViewController : SettingsBaseTableViewController
{
    UILabel *_automaticDownloadsLabel;
    UISwitch *_automaticDownloadsSwitch;
    UILabel *_batchDownloadLabel;
    UISwitch *_batchDowloadSwitch;
    UITableViewCell *_allTableViewCell;
    UITableViewCell *_oneMonthTableViewCell;
    UITableViewCell *_threeMonthTableViewCell;
    UITableViewCell *_twoMonthTableViewCell;
    UITableViewCell *_sixMonthTableViewCell;
    UITableView *_tableView;
    NSIndexPath *_selectedIndexPath;
    NSNumber *_daysBack;
    NSArray *_daysBackList;
    ZGDownloadManager *_downloadManager;
    struct CGRect _cellFrame;
    _Bool automaticDownloadEnabled;
    _Bool _automaticDownloadEnabled;
}

@property(nonatomic, getter=isAutomaticDownloadEnabled) _Bool automaticDownloadEnabled; // @synthesize automaticDownloadEnabled=_automaticDownloadEnabled;
@property(retain, nonatomic) NSNumber *daysBack; // @synthesize daysBack=_daysBack;
@property(retain, nonatomic) NSIndexPath *selectedIndexPath; // @synthesize selectedIndexPath=_selectedIndexPath;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) struct CGRect cellFrame; // @synthesize cellFrame=_cellFrame;
@property(retain, nonatomic) ZGDownloadManager *downloadManager; // @synthesize downloadManager=_downloadManager;
@property(retain, nonatomic) NSArray *daysBackList; // @synthesize daysBackList=_daysBackList;
@property(retain, nonatomic) UITableViewCell *sixMonthTableViewCell; // @synthesize sixMonthTableViewCell=_sixMonthTableViewCell;
@property(retain, nonatomic) UITableViewCell *twoMonthTableViewCell; // @synthesize twoMonthTableViewCell=_twoMonthTableViewCell;
@property(retain, nonatomic) UITableViewCell *threeMonthTableViewCell; // @synthesize threeMonthTableViewCell=_threeMonthTableViewCell;
@property(retain, nonatomic) UITableViewCell *oneMonthTableViewCell; // @synthesize oneMonthTableViewCell=_oneMonthTableViewCell;
@property(retain, nonatomic) UITableViewCell *allTableViewCell; // @synthesize allTableViewCell=_allTableViewCell;
@property(retain, nonatomic) UISwitch *batchDowloadSwitch; // @synthesize batchDowloadSwitch=_batchDowloadSwitch;
@property(retain, nonatomic) UILabel *batchDownloadLabel; // @synthesize batchDownloadLabel=_batchDownloadLabel;
@property(retain, nonatomic) UISwitch *automaticDownloadsSwitch; // @synthesize automaticDownloadsSwitch=_automaticDownloadsSwitch;
@property(retain, nonatomic) UILabel *automaticDownloadsLabel; // @synthesize automaticDownloadsLabel=_automaticDownloadsLabel;
- (id)_viewForFooterWithText:(id)arg1;
- (void)_updateBatchDownloadLabelText;
- (void)batchDownloadingSwitchValueChanged:(id)arg1;
- (void)switchAutoLockAction:(id)arg1;
- (void)cell:(id)arg1 selected:(_Bool)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface LibraryIssuePageView : UIView
{
    UILabel *issueLabel;
    ZinioProgressView *progressView;
    UIActivityIndicatorView *activityView;
    UIButton *thumbnailButton;
    UIButton *removeIssueButton;
    UIButton *recoverIssueButton;
    AsyncImageView *thumbnailImageView;
    NSMutableArray *multiIssueViews;
    _Bool multiplicity;
    UIButton *_downloadButton;
    id <LibraryIssue> _libraryIssue;
    id <LibraryIssuePageViewDelegate> _delegate;
    UILabel *_queuedLabel;
    UIImageView *_removeIssueImageView;
    UIImageView *issueSizeImageView;
    UILabel *issueSizeLabel;
    UIImageView *_downloadIconImageView;
}

@property(retain, nonatomic) UIImageView *downloadIconImageView; // @synthesize downloadIconImageView=_downloadIconImageView;
@property(retain, nonatomic) UIImageView *removeIssueImageView; // @synthesize removeIssueImageView=_removeIssueImageView;
@property(retain, nonatomic) UILabel *queuedLabel; // @synthesize queuedLabel=_queuedLabel;
@property(nonatomic) id <LibraryIssuePageViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id <LibraryIssue> libraryIssue; // @synthesize libraryIssue=_libraryIssue;
@property(retain, nonatomic) UIButton *downloadButton; // @synthesize downloadButton=_downloadButton;
@property(readonly, nonatomic, getter=isMultiplicity) _Bool multiplicity; // @synthesize multiplicity;
@property(nonatomic) UIActivityIndicatorView *activityView; // @synthesize activityView;
@property(nonatomic) ZinioProgressView *progressView; // @synthesize progressView;
@property(nonatomic) UILabel *issueSizeLabel; // @synthesize issueSizeLabel;
@property(nonatomic) UIImageView *issueSizeImageView; // @synthesize issueSizeImageView;
@property(nonatomic) UIButton *recoverIssueButton; // @synthesize recoverIssueButton;
@property(nonatomic) UIButton *removeIssueButton; // @synthesize removeIssueButton;
@property(nonatomic) AsyncImageView *thumbnailImageView; // @synthesize thumbnailImageView;
@property(nonatomic) UIButton *thumbnailButton; // @synthesize thumbnailButton;
@property(nonatomic) UILabel *issueLabel; // @synthesize issueLabel;
- (void)stopActivityIndication;
- (void)showActivityIndication;
- (id)ribbonBadgeView;
- (void)showRibbonBadge;
- (id)stackImageViews;
- (unsigned long long)multiplicity;
- (void)showMultiplicity:(unsigned long long)arg1 usingImages:(id)arg2;
- (void)showMultiplicity:(unsigned long long)arg1 usingPaths:(id)arg2;
- (void)surpressMultiplicity;
- (void)updateDownloadProgress:(float)arg1;
- (void)setIssueSizeLabelText:(id)arg1;
- (void)enableShadow:(_Bool)arg1;
- (void)enableBlur:(_Bool)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)awakeFromNib;
- (void)setUpWithLibraryIssue:(id)arg1;
- (void)updateDownloadRelatedUI;
- (void)updateUIWithState:(long long)arg1;
- (void)dealloc;

@end

@interface IssueExcerptPreviewImpl : NSObject <IssueExcerptPreview>
{
    NSString *pubName;
    NSString *pubId;
    NSString *issueTitle;
    NSDate *issueDate;
    NSString *excerptTitle;
    NSString *excerptLead;
    NSString *issueId;
    NSString *excerptId;
    long long order;
    NSString *purchaseUrl;
    NSString *smallCoverImageURLString;
    NSString *largeCoverImageURLString;
    NSString *smallLeftPageImageURLString;
    NSString *smallRightPageImageURLString;
    NSString *largeLeftPageImageURLString;
    NSString *largeRightPageImageURLString;
    NSString *smallCoverImageFileName;
    NSString *largeCoverImageFileName;
    NSString *smallLeftPageImageFileName;
    NSString *smallRightPageImageFileName;
    NSString *largeLeftPageImageFileName;
    NSString *largeRightPageImageFileName;
}

@property(retain, nonatomic) NSString *largeRightPageImageFileName; // @synthesize largeRightPageImageFileName;
@property(retain, nonatomic) NSString *largeLeftPageImageFileName; // @synthesize largeLeftPageImageFileName;
@property(retain, nonatomic) NSString *smallRightPageImageFileName; // @synthesize smallRightPageImageFileName;
@property(retain, nonatomic) NSString *smallLeftPageImageFileName; // @synthesize smallLeftPageImageFileName;
@property(retain, nonatomic) NSString *largeCoverImageFileName; // @synthesize largeCoverImageFileName;
@property(retain, nonatomic) NSString *smallCoverImageFileName; // @synthesize smallCoverImageFileName;
@property(retain, nonatomic) NSString *largeRightPageImageURLString; // @synthesize largeRightPageImageURLString;
@property(retain, nonatomic) NSString *largeLeftPageImageURLString; // @synthesize largeLeftPageImageURLString;
@property(retain, nonatomic) NSString *smallRightPageImageURLString; // @synthesize smallRightPageImageURLString;
@property(retain, nonatomic) NSString *smallLeftPageImageURLString; // @synthesize smallLeftPageImageURLString;
@property(retain, nonatomic) NSString *largeCoverImageURLString; // @synthesize largeCoverImageURLString;
@property(retain, nonatomic) NSString *smallCoverImageURLString; // @synthesize smallCoverImageURLString;
@property(retain, nonatomic) NSString *purchaseUrl; // @synthesize purchaseUrl;
@property(nonatomic) long long order; // @synthesize order;
@property(retain, nonatomic) NSString *excerptId; // @synthesize excerptId;
@property(retain, nonatomic) NSString *issueId; // @synthesize issueId;
@property(retain, nonatomic) NSString *excerptLead; // @synthesize excerptLead;
@property(retain, nonatomic) NSString *excerptTitle; // @synthesize excerptTitle;
@property(retain, nonatomic) NSDate *issueDate; // @synthesize issueDate;
@property(retain, nonatomic) NSString *issueTitle; // @synthesize issueTitle;
@property(retain, nonatomic) NSString *pubId; // @synthesize pubId;
@property(retain, nonatomic) NSString *pubName; // @synthesize pubName;
- (id)purchaseUrlUsingKeywordValues:(id)arg1;
- (_Bool)purchaseUrlNeedsKeywordValueReplacement;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TextTOCLargeViewController : TextTableOfContentsViewController
{
    UIImageView *backgroundImageView;
}

@property(retain, nonatomic) UIImageView *backgroundImageView; // @synthesize backgroundImageView;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (id)createNewTextTableOfContentsTableViewCell;
- (void)dealloc;
- (void)viewDidLoad;
- (void)buildCloseButton;
- (id)buildTitleText;

@end

@interface FlowableTextLargeViewController : FlowableTextViewController
{
    UIView *navBarTopRightView;
    UIButton *emailButton;
    UINavigationController *navController;
}

@property(retain, nonatomic) UINavigationController *navController; // @synthesize navController;
@property(retain, nonatomic) UIButton *emailButton; // @synthesize emailButton;
@property(retain, nonatomic) UIView *navBarTopRightView; // @synthesize navBarTopRightView;
- (void)setSystemFontSize;
- (id)changeFontSizeFile;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (id)supplyNavController:(id)arg1;
- (void)themeLabel:(id)arg1;
- (void)willGotoTOCImage:(id)arg1;
- (void)willGotoTOCText:(id)arg1;
- (id)newTOCTextViewController;
- (id)newTOCImageViewController;
- (void)dealloc;
- (void)viewDidLoad;

@end

@interface WebViewControllerLarge : WebViewViewController
{
    ZinioToolbarView *zinioToolbarView;
}

@property(retain, nonatomic) ZinioToolbarView *zinioToolbarView; // @synthesize zinioToolbarView;
- (void)specifyWebViewOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)configureExternalHtmlController:(id)arg1;
- (void)displayNoNetworkAvailablePage;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface ArticleChooserLargeViewController : ArticleChooserViewController
{
}

- (id)createNewArticleChooserTableViewCell;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface StackImageView : AsyncImageView <NSCopying>
{
    struct CGPoint homeCenter;
    struct CGAffineTransform homeTransform;
    struct CGPoint destCenter;
    double thetaA;
    double thetaB;
    double h;
}

@property(nonatomic) struct CGAffineTransform homeTransform; // @synthesize homeTransform;
@property(nonatomic) struct CGPoint destCenter; // @synthesize destCenter;
@property(nonatomic) struct CGPoint homeCenter; // @synthesize homeCenter;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)moveTowardsDestination:(double)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithImage:(id)arg1;
- (void)initialize;

@end

@interface IndexScrubberView : UIView
{
    id <IndexScrubberViewDataSource> dataSource;
    id <IndexScrubberViewDelegate> delegate;
    NSMutableArray *cells;
    _Bool loaded;
    unsigned long long selectedIndex;
    UIView *scrubPreviewView;
    _Bool scrubPreviewSnap;
    unsigned long long scrubPreviewIndex;
    _Bool selectWhileScrubbing;
}

@property(nonatomic, getter=isScrubPreviewSnap) _Bool scrubPreviewSnap; // @synthesize scrubPreviewSnap;
@property(retain, nonatomic) UIView *scrubPreviewView; // @synthesize scrubPreviewView;
@property(readonly, nonatomic) unsigned long long selectedIndex; // @synthesize selectedIndex;
@property(readonly, nonatomic, getter=isLoaded) _Bool loaded; // @synthesize loaded;
@property(nonatomic) id <IndexScrubberViewDelegate> delegate; // @synthesize delegate;
@property(nonatomic) id <IndexScrubberViewDataSource> dataSource; // @synthesize dataSource;
- (void)movePreviewTo:(struct CGPoint)arg1;
- (void)hidePreview;
- (void)previewAnimationDidComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (_Bool)isPreviewVisible;
- (void)showPreview:(struct CGPoint)arg1;
- (void)handleTouchAtIndex:(unsigned long long)arg1;
- (void)handleTouchAt:(struct CGPoint)arg1;
- (void)handleTap:(id)arg1;
- (void)handlePan:(id)arg1;
- (struct CGSize)cellSizeForCount:(unsigned long long)arg1;
- (unsigned long long)indexForPoint:(struct CGPoint)arg1;
- (struct CGPoint)scrubCenterForIndex:(unsigned long long)arg1;
- (void)layoutSubviews;
- (void)selectIndex:(unsigned long long)arg1;
- (void)reloadDataAndSelectIndex:(unsigned long long)arg1;
- (void)dealloc;
- (void)initialize;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface LibraryIndexCell : UIView
{
    UILabel *label;
}

@property(nonatomic) UILabel *label; // @synthesize label;
- (void)setSelected:(_Bool)arg1;
- (void)dealloc;

@end

@interface LibraryIssueStack : NSObject
{
    NSArray *issues;
}

@property(retain, nonatomic) NSArray *issues; // @synthesize issues;
- (_Bool)conformsToProtocol:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)top;
- (id)description;
- (void)dealloc;
- (id)initWithIssues:(id)arg1;
- (id)init;

@end

@interface IssueTitleDateView : UIView <NSCopying>
{
    UILabel *titleLabel;
    UILabel *dateLabel;
    double minXPoint;
}

@property(nonatomic) double minXPoint; // @synthesize minXPoint;
@property(retain, nonatomic) UILabel *dateLabel; // @synthesize dateLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)layoutSubviews;
- (id)initWithTitle:(id)arg1 date:(id)arg2;
- (void)setFrame:(struct CGRect)arg1;

@end

@interface JoinZinioViewController : UIViewController
{
    CustomTextField *_emailTextField;
    CustomTextField *_passwordTextField;
    CustomTextField *_retypePasswordTextField;
    UIButton *_submitButton;
    UIButton *_termsOfServiceButton;
    UIButton *_logInButton;
    UILabel *_descriptionLabel;
    UILabel *_sendUpdatesLabel;
    UILabel *_sendPromotionsLabel;
    UILabel *_titleLabel;
    UISwitch *_sendUpdatesSwitch;
    UISwitch *_sendPromotionsSwitch;
}

@property(retain, nonatomic) UISwitch *sendPromotionsSwitch; // @synthesize sendPromotionsSwitch=_sendPromotionsSwitch;
@property(retain, nonatomic) UISwitch *sendUpdatesSwitch; // @synthesize sendUpdatesSwitch=_sendUpdatesSwitch;
@property(retain, nonatomic) UILabel *sendPromotionsLabel; // @synthesize sendPromotionsLabel=_sendPromotionsLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UILabel *sendUpdatesLabel; // @synthesize sendUpdatesLabel=_sendUpdatesLabel;
@property(retain, nonatomic) UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(retain, nonatomic) UIButton *logInButton; // @synthesize logInButton=_logInButton;
@property(retain, nonatomic) UIButton *termsOfServiceButton; // @synthesize termsOfServiceButton=_termsOfServiceButton;
@property(retain, nonatomic) UIButton *submitButton; // @synthesize submitButton=_submitButton;
@property(retain, nonatomic) CustomTextField *retypePasswordTextField; // @synthesize retypePasswordTextField=_retypePasswordTextField;
@property(retain, nonatomic) CustomTextField *passwordTextField; // @synthesize passwordTextField=_passwordTextField;
@property(retain, nonatomic) CustomTextField *emailTextField; // @synthesize emailTextField=_emailTextField;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)didTapCloseButton:(id)arg1;
- (void)didTapSubmitButton:(id)arg1;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface RenderManager : NSObject
{
    NSThread *renderThread;
    NSOperationQueue *opQueue;
    struct CGContext *offscreenContext;
    NSLock *pdfRenderLock;
}

+ (id)defaultManager;
+ (void)initialize;
@property(readonly, nonatomic) NSLock *pdfRenderLock; // @synthesize pdfRenderLock;
@property(readonly, nonatomic) struct CGContext *offscreenContext; // @synthesize offscreenContext;
- (void)executeOp:(id)arg1;
- (void)addOpToRenderQueue:(id)arg1;
- (id)thread;
- (void)cancelAllOperations;
- (void)runOperationOnRenderThread:(id)arg1;
- (void)renderImages:(id)arg1 withPriority:(long long)arg2 delegate:(id)arg3;
- (void)renderImage:(id)arg1 withPriority:(long long)arg2 delegate:(id)arg3;
- (void)dealloc;
- (id)init;

@end

@interface RenderThread : NSThread
{
    _Bool finished;
    _Bool pinged;
}

- (void)ping;
- (_Bool)isPinged;
- (void)main;

@end

@interface OffscreenImageDraw : NSOperation
{
    struct __CFString *filePath;
    struct __CFArray *filePaths;
    id <RenderManagerDelegate> delegate;
    struct CGContext *offscreenContext;
    _Bool executing;
    _Bool finished;
}

- (void)drawOffScreenImage:(struct __CFArray *)arg1;
- (void)doWork;
- (_Bool)isFinished;
- (_Bool)isExecuting;
- (_Bool)isConcurrent;
- (void)start;
- (void)dealloc;
- (id)initWithFilePaths:(id)arg1 delegate:(id)arg2 context:(struct CGContext *)arg3;
- (id)initWithFilePath:(id)arg1 delegate:(id)arg2 context:(struct CGContext *)arg3;

@end

@interface SpreadTOCPageView : UIView
{
    UIView *pageView;
    UIImage *pageImage;
    UILabel *leftPageLabel;
    UILabel *rightPageLabel;
    UIImageView *leftBookmarkIcon;
    UIImageView *rightBookmarkIcon;
    _Bool fillPageView;
    UIColor *shadowColor;
    struct CGSize shadowOffset;
    double shadowRadius;
}

@property(retain, nonatomic) UIImageView *rightBookmarkIcon; // @synthesize rightBookmarkIcon;
@property(retain, nonatomic) UIImageView *leftBookmarkIcon; // @synthesize leftBookmarkIcon;
@property(nonatomic, getter=isFillPageView) _Bool fillPageView; // @synthesize fillPageView;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor;
@property(nonatomic) double shadowRadius; // @synthesize shadowRadius;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset;
@property(retain, nonatomic) UIImage *pageImage; // @synthesize pageImage;
@property(retain, nonatomic) UIView *pageView; // @synthesize pageView;
@property(retain, nonatomic) UILabel *rightPageLabel; // @synthesize rightPageLabel;
@property(retain, nonatomic) UILabel *leftPageLabel; // @synthesize leftPageLabel;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (void)initialize;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FastFadeTiledLayer : CATiledLayer
{
}

+ (id)layerWithTileSize:(struct CGSize)arg1;
+ (double)fadeDuration;
- (void)setTileSize:(struct CGSize)arg1;

@end

@interface PDFPageView : UIView <RenderManagerDelegate>
{
    PageHyperlinksController *hyperlinksController;
    SpreadPageObjectsController *spreadPageObjectsController;
    TiledPDFView *pdf1;
    CALayer *preview1;
    CALayer *preview2;
    TiledPDFView *pdf2;
    struct CGSize contentSize;
    UIView *hyperlinkView1;
    UIView *hyperlinkView2;
    NSString *password;
    _Bool spread;
    _Bool pdfSizeKnown;
    _Bool pdfsReleased;
    UIImage *placeholderImage;
    UIColor *debugHyperlinkColor;
}

@property(retain, nonatomic) UIColor *debugHyperlinkColor; // @synthesize debugHyperlinkColor;
@property(retain, nonatomic) UIImage *placeholderImage; // @synthesize placeholderImage;
@property(retain, nonatomic) SpreadPageObjectsController *spreadPageObjectsController; // @synthesize spreadPageObjectsController;
@property(readonly, nonatomic, getter=isSpread) _Bool spread; // @synthesize spread;
@property(readonly, nonatomic, getter=isPdfsReleased) _Bool pdfsReleased; // @synthesize pdfsReleased;
@property(retain, nonatomic) NSString *password; // @synthesize password;
@property(readonly, nonatomic) UIView *hyperlinkView2; // @synthesize hyperlinkView2;
@property(readonly, nonatomic) UIView *hyperlinkView1; // @synthesize hyperlinkView1;
@property(retain, nonatomic) PageHyperlinksController *hyperlinksController; // @synthesize hyperlinksController;
@property(nonatomic) struct CGSize contentSize; // @synthesize contentSize;
- (void)imageReady:(struct CGImage *)arg1 forFilePath:(id)arg2 inSize:(struct CGSize)arg3;
- (_Bool)isRenderNeededForFilePath:(id)arg1;
- (void)imageNotFoundForFilePath:(id)arg1;
- (void)renderCancelledForFilePath:(id)arg1;
- (id)previewLayerForFilePath:(id)arg1;
- (void)layoutSubviews;
- (void)releasePdfs;
- (_Bool)hitTest:(struct CGPoint)arg1 fromView:(id)arg2 withHyperlink:(id)arg3;
- (void)showSpreadWithLeft:(id)arg1 leftHyperlinks:(id)arg2 right:(id)arg3 rightHyperlinks:(id)arg4;
- (void)showSpreadWithLeft:(id)arg1 right:(id)arg2;
- (void)showPdf:(id)arg1 hyperlinks:(id)arg2;
- (void)swapLeftAndRightViews;
- (void)showPdf:(id)arg1;
- (void)showPreviewsLeft:(id)arg1 right:(id)arg2;
- (void)showPreview:(id)arg1;
- (struct CGRect)pdf2Bounds;
- (struct CGRect)pdf1Bounds;
- (struct CGSize)pdf2Size;
- (struct CGSize)pdf1Size;
- (id)previewLayer;
- (void)setupSubviews;
- (id)newTiledPDFView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TiledPDFView : UIView <PageSizeAware>
{
    NSString *pdfPath;
    NSString *pdfPassword;
    struct CGSize pageSize;
    _Bool rendered;
    _Bool delayed;
    _Bool pdfNeedsDisplay;
    UIColor *pdfBackgroundColor;
    struct CGPDFDocument *document;
    NSMutableArray *hyperlinks;
    UIColor *hyperlinkColor;
    _Bool snapshotOnBoundsChange;
    _Bool ignoreRedrawOnBoundsChange;
    UIColor *debugHyperlinkColor;
}

+ (Class)layerClass;
@property(retain, nonatomic) UIColor *debugHyperlinkColor; // @synthesize debugHyperlinkColor;
@property(nonatomic, getter=isSnapshotOnBoundsChange) _Bool snapshotOnBoundsChange; // @synthesize snapshotOnBoundsChange;
@property(nonatomic, getter=isIgnoreRedrawOnBoundsChange) _Bool ignoreRedrawOnBoundsChange; // @synthesize ignoreRedrawOnBoundsChange;
@property(retain, nonatomic) UIColor *hyperlinkColor; // @synthesize hyperlinkColor;
@property(readonly, nonatomic) NSMutableArray *hyperlinks; // @synthesize hyperlinks;
@property(readonly, nonatomic) struct CGSize pageSize; // @synthesize pageSize;
@property(retain, nonatomic) UIColor *pdfBackgroundColor; // @synthesize pdfBackgroundColor;
@property(readonly, nonatomic, getter=isRendered) _Bool rendered; // @synthesize rendered;
@property(retain, nonatomic) NSString *pdfPassword; // @synthesize pdfPassword;
@property(readonly, retain, nonatomic) NSString *pdfPath; // @synthesize pdfPath;
- (void)releaseTempImage;
- (void)cancelDelayedRedrawPdfLater;
- (void)delayedRedrawPdfLater;
- (void)delayedRedrawPdf;
- (void)cancelReleasePdfLater;
- (void)releasePdfLater;
- (void)releasePdf;
- (void)freePdf;
- (void)loadPdf;
- (void)setupPdfPageSize;
- (struct CGPDFDocument *)newPdfDocument;
- (struct CGPDFDocument *)newPdfDocument:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)naturalSize;
- (_Bool)canSizeToFit;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawHyperlinks:(id)arg1 inContext:(struct CGContext *)arg2;
- (_Bool)hitTest:(struct CGPoint)arg1 fromView:(id)arg2 withHyperlink:(id)arg3;
- (struct CGRect)rectForHyperlink:(id)arg1 inViewSize:(struct CGSize)arg2;
- (void)setPdfPathInternal:(id)arg1;
- (void)setPdf:(id)arg1 withHyperlinks:(id)arg2;
- (_Bool)setPdfPath:(id)arg1;
- (void)resetContents:(_Bool)arg1;
- (void)delayNextPdfRedraw;
- (void)setBounds:(struct CGRect)arg1;
- (void)adjustTileSize;
- (id)tiledLayer;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface InAppPurchase : NSObject
{
    NSString *_key;
    NSString *_appleId;
    NSString *_applePrice;
}

@property(copy, nonatomic) NSString *applePrice; // @synthesize applePrice=_applePrice;
@property(copy, nonatomic) NSString *appleId; // @synthesize appleId=_appleId;
@property(copy, nonatomic) NSString *key; // @synthesize key=_key;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;

@end

@interface ImageRenderView : UIView <AsyncImage, RenderManagerDelegate, PageSizeAware>
{
    double fadeDuration;
}

@property(nonatomic) double fadeDuration; // @synthesize fadeDuration;
@property(retain, nonatomic) UIImage *image;
- (void)clearImage;
- (id)ribbonBadgeView;
- (void)showImageAtPath:(id)arg1 withRibbonBadge:(_Bool)arg2;
- (void)showImageAtPath:(id)arg1;
- (void)imageReady:(struct CGImage *)arg1 forFilePath:(id)arg2 inSize:(struct CGSize)arg3;
- (void)imageNotFoundForFilePath:(id)arg1;
- (void)renderCancelledForFilePath:(id)arg1;
- (struct CGSize)naturalSize;
- (_Bool)canSizeToFit;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setContentMode:(long long)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)renderImageToNaturalSize:(id)arg1;
- (void)renderImmediatelyToNaturalSize:(id)arg1;
- (void)renderImage:(id)arg1;
- (void)dealloc;
- (void)initialize;
- (id)initWithImage:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LibraryIssueHiddenImpl : LibraryIssueImpl
{
    NSString *userId;
}

@property(retain, nonatomic) NSString *userId; // @synthesize userId;
- (void)dealloc;
- (id)initWithLibraryIssue:(id)arg1;

@end

@interface CustomTextField : UITextField
{
}

- (void)cornerRadiusTop:(_Bool)arg1 bottom:(_Bool)arg2;
- (struct CGRect)clearButtonRectForBounds:(struct CGRect)arg1;
- (struct CGRect)editingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ZipArchive : NSObject
{
    void *_zipFile;
    void *_unzFile;
    struct unz_global_info_s _unzGlobalInfo;
    id _delegate;
}

@property(retain, nonatomic) id delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (_Bool)OverWrite:(id)arg1;
- (void)OutputErrorMessage:(id)arg1;
- (_Bool)UnzipCloseFile;
- (_Bool)UnzipFileTo:(id)arg1 overWrite:(_Bool)arg2;
- (_Bool)UnzipOpenFile:(id)arg1;
- (_Bool)CloseZipFile2;
- (_Bool)addFileToZip:(id)arg1 newname:(id)arg2;
- (_Bool)CreateZipFile2:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface NewsstandImpl : NSObject <Newsstand>
{
    NSString *newsstandId;
    NSString *commerceURL;
    NSString *faqURL;
    NSString *legalURL;
    NSString *forgotPasswordURL;
    NSString *rateAppURL;
    NSString *displayName;
    _Bool defaultNewsstand;
}

@property(nonatomic) _Bool defaultNewsstand; // @synthesize defaultNewsstand;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName;
@property(retain, nonatomic) NSString *rateAppURL; // @synthesize rateAppURL;
@property(retain, nonatomic) NSString *forgotPasswordURL; // @synthesize forgotPasswordURL;
@property(retain, nonatomic) NSString *legalURL; // @synthesize legalURL;
@property(retain, nonatomic) NSString *faqURL; // @synthesize faqURL;
@property(retain, nonatomic) NSString *commerceURL; // @synthesize commerceURL;
@property(retain, nonatomic) NSString *newsstandId; // @synthesize newsstandId;
- (void)dealloc;

@end

@interface ViewControllerWithNavigationBar_iPad : UIViewController
{
    UILabel *_titleLabel;
    UIView *_innerView;
    UIView *_topBanner;
}

@property(retain, nonatomic) UIView *topBanner; // @synthesize topBanner=_topBanner;
@property(retain, nonatomic) UIView *innerView; // @synthesize innerView=_innerView;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)addContentView:(id)arg1;
- (void)dealloc;
- (void)popViewController;

@end

@interface AccountDataView : UIView
{
    UILabel *user;
    UILabel *version;
    UILabel *copyright;
}

@property(nonatomic) UILabel *copyright; // @synthesize copyright;
@property(nonatomic) UILabel *version; // @synthesize version;
@property(nonatomic) UILabel *user; // @synthesize user;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface ApplicationStartupViewController_iPhone : ApplicationStartupViewController
{
    id <LibraryAccess> _libraryAccess;
}

@property(nonatomic) id <LibraryAccess> libraryAccess; // @synthesize libraryAccess=_libraryAccess;
- (id)welcomeViewControllerForDevice;
- (void)setStartingTab;
- (void)hideZinioLogo;
- (void)dismissControllerDelayed:(double)arg1;
- (void)stopAnimating;
- (void)closeStartUp;
- (void)playAnimation;
- (void)showZinioLogo;
- (void)beginLaunchPresentation;
- (_Bool)showIntroAnimation;

@end

@interface IssueControlImpl : IssueKeyTypeObject <IssueControl>
{
    NSMutableDictionary *parameters;
}

- (void)setValue:(id)arg1 forParameter:(id)arg2;
- (id)valueForParameter:(id)arg1;
- (id)allParameterKeys;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SimpleAudioIssueControlController : IssueControlController
{
    UIButton *button;
    UIActivityIndicatorView *spinner;
    MPMoviePlayerController *player;
}

@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner;
@property(retain, nonatomic) UIButton *button; // @synthesize button;
- (void)handleMessage:(id)arg1 withParameters:(id)arg2 fromObject:(id)arg3;
- (void)stop;
- (void)toggleAudio;
- (void)stopAudio:(_Bool)arg1;
- (void)startAudio;
- (void)createPlayer;
- (void)audioInfoAvailable:(id)arg1;
- (void)audioPlaybackDidChange:(id)arg1;
- (_Bool)isStopped;
- (void)dealloc;
- (void)prepare;

@end

@interface IssueControlController : IssueKeyTypeObject
{
    UIView *view;
    UIViewController<IssueController> *issueController;
    id <IssueControl> control;
    id <Page> page;
    id <AnimationController> animationController;
    NSMutableDictionary *parameters;
    NSArray *hyperlinks;
    _Bool prepared;
    _Bool started;
}

@property(nonatomic) id <AnimationController> animationController; // @synthesize animationController;
@property(retain, nonatomic) UIView *view; // @synthesize view;
@property(retain, nonatomic) id <Page> page; // @synthesize page;
@property(readonly, nonatomic) UIViewController<IssueController> *issueController; // @synthesize issueController;
@property(retain, nonatomic) NSArray *hyperlinks; // @synthesize hyperlinks;
@property(readonly, nonatomic) id <IssueControl> control; // @synthesize control;
- (id)colorWithControlParameter:(id)arg1;
- (_Bool)controlParameterIsPresent:(id)arg1;
- (_Bool)controlParameterIsTrue:(id)arg1;
- (id)allControlParameterKeys;
- (void)setValue:(id)arg1 forParameter:(id)arg2;
- (id)valueForParameter:(id)arg1;
- (id)previewResource;
- (id)absolutePreviewResourcePath;
- (id)previewResourcePath;
- (id)mediaResource;
- (id)absoluteMediaResourcePath;
- (id)mediaResourcePath;
- (void)setHyperlink:(id)arg1;
- (id)hyperlink;
- (void)handleMessage:(id)arg1 withParameters:(id)arg2 fromObject:(id)arg3;
- (_Bool)handlesDoubleTap:(struct CGPoint)arg1;
- (_Bool)handlesTap:(struct CGPoint)arg1;
- (void)issueControlControllerWillStartMultimedia:(id)arg1;
- (void)stop;
- (void)pause;
- (void)start;
- (void)prepare;
- (void)viewBoundsChangedWithTransform:(struct CGAffineTransform)arg1;
- (void)layoutInFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 issueController:(id)arg3 issueControl:(id)arg4;
- (id)initWithIssueController:(id)arg1 issueControl:(id)arg2;

@end

@interface ButtonIssueControlController : IssueControlController
{
    UIButton *button;
}

@property(retain, nonatomic) UIButton *button; // @synthesize button;
- (void)buttonAction;
- (void)dealloc;
- (void)prepare;

@end

@interface PageHyperlinksController : NSObject
{
    id <IssueController> issueController;
    id <Page> page1;
    id <Page> page2;
    UIView *view1;
    UIView *view2;
    struct CGSize baseSize1;
    struct CGSize baseSize2;
    NSMutableArray *pageHyperlinks;
    NSMutableArray *issueControlControllers;
}

@property(nonatomic) UIView *view2; // @synthesize view2;
@property(nonatomic) UIView *view1; // @synthesize view1;
@property(retain, nonatomic) id <Page> page2; // @synthesize page2;
@property(retain, nonatomic) id <Page> page1; // @synthesize page1;
@property(nonatomic) id <IssueController> issueController; // @synthesize issueController;
@property(nonatomic) struct CGSize baseSize2; // @synthesize baseSize2;
@property(nonatomic) struct CGSize baseSize1; // @synthesize baseSize1;
- (void)layoutControlViews;
- (_Bool)handlesTap:(struct CGPoint)arg1 inView:(id)arg2 withHyperlink:(id)arg3;
- (void)issueControlControllerWillStartMultimedia:(id)arg1;
- (void)showSpread:(id)arg1 hyperlinkEffectsWithLeft:(id)arg2 right:(id)arg3;
- (void)showPage:(id)arg1 hyperlinkEffects:(id)arg2;
- (void)swapLeftAndRight;
- (void)clearHyperlinkEffects;
- (void)stopHyperlinkEffects;
- (id)viewWithHyperlink:(id)arg1;
- (id)viewWithHyperlink:(id)arg1 inView:(id)arg2;
- (void)showPageHyperlinkEffects:(id)arg1 inView:(id)arg2 onPage:(id)arg3;
- (void)hyperlink:(id)arg1 applyEffect:(id)arg2;
- (void)hyperlinkFadeOutDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)hyperlinkFadeInStartFadeOut:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)hyperlinkFadeInDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)startHyperlinkFadeIn:(id)arg1 fadeOut:(_Bool)arg2;
- (struct CGRect)hyperlink:(id)arg1 highlightEffectRect:(struct CGRect)arg2 forHightlightView:(id)arg3;
- (id)newHyperlinkHighlightEffect:(id)arg1 inRect:(struct CGRect)arg2 onPage:(id)arg3;
- (void)dealloc;
- (id)initWithIssueController:(id)arg1;

@end

@interface VideoIssueControlController : IssueControlController
{
    MPMoviePlayerController *player;
    UIActivityIndicatorView *spinner;
    _Bool recentlyChangedPlaybackState;
    double displayDelay;
    _Bool playerBeingReleased;
}

- (void)handleMessage:(id)arg1 withParameters:(id)arg2 fromObject:(id)arg3;
- (void)startPlaying;
- (void)releasePlayer;
- (void)cleanUpPlayer;
- (void)playerCloseAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)releasePlayerAnimated:(_Bool)arg1;
- (void)createPlayer;
- (void)movieDidExitFullscreen:(id)arg1;
- (void)movieWillExitFullscreen:(id)arg1;
- (void)moviePlaybackDidChange:(id)arg1;
- (void)showPlayerView;
- (_Bool)isClosePlayerOnPlaybackStatePaused;
- (_Bool)isPlaybackFinished;
- (void)clearRecentlyChangedPlaybackState;
- (_Bool)handlesTap:(struct CGPoint)arg1;
- (void)buttonAction;
- (void)issueControlControllerWillStartMultimedia:(id)arg1;
- (void)stop;
- (void)pause;
- (void)start;
- (void)prepare;
- (void)dealloc;

@end

@interface WebViewIssueControlController : IssueControlController <UIWebViewDelegate>
{
}

- (void)handleTapInControl;
- (_Bool)handlesTap:(struct CGPoint)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)start;
- (void)prepare;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZinioNavigationBar : UINavigationBar
{
}

@end

@interface ZinioTabBar : UITabBar
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface DefaultBrandManager : NSObject <BrandManager>
{
    NSDictionary *settings;
    NSObject<ThemeManager> *themeManager;
}

@property(retain, nonatomic) NSObject<ThemeManager> *themeManager; // @synthesize themeManager;
@property(retain, nonatomic) NSDictionary *settings; // @synthesize settings;
- (id)LocalizedString:(id)arg1;
- (_Bool)isHiddenView:(id)arg1;
- (_Bool)isHidden;
- (_Bool)isHiddenViewInContext:(id)arg1 withKey:(id)arg2 withDefault:(_Bool)arg3;
- (_Bool)isValidScheme:(id)arg1;
- (id)publisher;
- (id)publicationTitle;
- (id)applicationTitle;
- (id)applicationName;
- (id)welcomeScreenBackgroundImagePortrait;
- (id)welcomeScreenBackgroundImageLandscape;
- (id)welcomeScreenNibName;
- (id)copyright;
- (_Bool)isBrandedApp;
- (_Bool)displayInstructions;
- (_Bool)displayStartupAnimation;
- (_Bool)enableFeaturedArticleTOC;
- (_Bool)requestRating;
- (_Bool)displayIntlStore;
- (_Bool)displayByTitle;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface iPhoneLibraryDetailedViewController : UITableViewController <ReaderLauncherDelegate>
{
    NSMutableArray *_issues;
    NSMutableDictionary *_objectIDsToIndexPathDictionary;
    ContentManager *_contentManager;
    UITableView *_tableView;
    ReaderLauncher *_readerLauncher;
    id <LibraryAccess> _libraryAccess;
}

@property(retain, nonatomic) id <LibraryAccess> libraryAccess; // @synthesize libraryAccess=_libraryAccess;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager=_contentManager;
- (void)_handleIssueDownloadPackingListAvailableNotification:(id)arg1;
- (void)_handleIssueDownloadCompletelyFinishedNotification:(id)arg1;
- (void)_handleIssueDownloadFailedNotification:(id)arg1;
- (void)_handleLibraryUpdateSuccessNotification:(id)arg1;
- (void)_handleLibraryUpdateFailedNotification:(id)arg1;
- (void)_handleImageResourceDidDownloadNotification:(id)arg1;
- (void)_stopSelectedRowDownloadingMode;
- (void)willLaunchReaderForPublication:(id)arg1 issue:(id)arg2;
- (void)readerLauncher:(id)arg1 failedToLaunchPublication:(id)arg2 issue:(id)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
@property(retain, nonatomic) NSMutableArray *issues;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LibraryLoginView : UIView
{
    UIView *_moreNetworkBanner;
    UILabel *_loginBannerDescription;
    UILabel *_loginBannerConjunction;
    UIButton *_loginBannerJoinButton;
    UIButton *_loginBannerSignInButton;
    UIButton *_facebookLoginButton;
    UIButton *_notAMemberButton;
    UIView *_editCointainer;
}

@property(retain, nonatomic) UIView *editCointainer; // @synthesize editCointainer=_editCointainer;
@property(retain, nonatomic) UIButton *notAMemberButton; // @synthesize notAMemberButton=_notAMemberButton;
@property(retain, nonatomic) UIButton *facebookLoginButton; // @synthesize facebookLoginButton=_facebookLoginButton;
@property(retain, nonatomic) UIButton *loginBannerSignInButton; // @synthesize loginBannerSignInButton=_loginBannerSignInButton;
@property(retain, nonatomic) UIButton *loginBannerJoinButton; // @synthesize loginBannerJoinButton=_loginBannerJoinButton;
@property(retain, nonatomic) UILabel *loginBannerConjunction; // @synthesize loginBannerConjunction=_loginBannerConjunction;
@property(retain, nonatomic) UILabel *loginBannerDescription; // @synthesize loginBannerDescription=_loginBannerDescription;
@property(retain, nonatomic) UIView *moreNetworkBanner; // @synthesize moreNetworkBanner=_moreNetworkBanner;
- (void)showViewAnimated:(_Bool)arg1;
- (void)hideViewAnimated:(_Bool)arg1;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface DefaultThemeManager : NSObject <ThemeManager>
{
    NSDictionary *settings;
}

@property(retain, nonatomic) NSDictionary *settings; // @synthesize settings;
- (void)themeLabel:(id)arg1 inContext:(id)arg2;
- (id)getTheme;
- (id)getColorInContext:(id)arg1 withKey:(id)arg2 withDefault:(id)arg3;
- (id)getSegmentedControlColor:(id)arg1;
- (id)getCurrentPageIndicatorColor:(id)arg1;
- (id)getPageIndicatorColor:(id)arg1;
- (id)getFontFace:(id)arg1;
- (id)getFontColor:(id)arg1;
- (id)getShadowColor:(id)arg1;
- (id)getBackgroundColor:(id)arg1;
- (id)init;

@end

@interface SettingsHelpCenterArticleViewController : UIViewController <UIWebViewDelegate, UIAlertViewDelegate>
{
    UIWebView *_webView;
    ZDKHelpCenterArticle *_helpCenterArticle;
    NSURL *_URLToOpen;
}

@property(copy, nonatomic) NSURL *URLToOpen; // @synthesize URLToOpen=_URLToOpen;
@property(retain, nonatomic) ZDKHelpCenterArticle *helpCenterArticle; // @synthesize helpCenterArticle=_helpCenterArticle;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)CSSForArticle;
- (id)htmlForAricle:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RateOurApp : NSObject <UIAlertViewDelegate, MFMailComposeViewControllerDelegate>
{
    id <AppDataService> _appDataService;
    NetworkServicesManager *_networkManager;
    UIViewController *_currentViewController;
}

@property(retain, nonatomic) UIViewController *currentViewController; // @synthesize currentViewController=_currentViewController;
@property(retain, nonatomic) NetworkServicesManager *networkManager; // @synthesize networkManager=_networkManager;
@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService=_appDataService;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)sendFeedback;
- (void)launchRateOnViewController:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ColorizedPageControl : UIControl
{
    long long currentPage;
    long long numberOfPages;
    double diameter;
    double margin;
    UIColor *color;
    UIColor *selectedColor;
    _Bool hidesForSinglePage;
}

@property(retain, nonatomic) UIColor *selectedColor; // @synthesize selectedColor;
@property(nonatomic) long long numberOfPages; // @synthesize numberOfPages;
@property(nonatomic) double margin; // @synthesize margin;
@property(nonatomic) _Bool hidesForSinglePage; // @synthesize hidesForSinglePage;
@property(nonatomic) double diameter; // @synthesize diameter;
@property(nonatomic) long long currentPage; // @synthesize currentPage;
@property(retain, nonatomic) UIColor *color; // @synthesize color;
- (void)drawRect:(struct CGRect)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (_Bool)handlePageChange:(_Bool)arg1;
- (void)dealloc;
- (void)initialize;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PageLocationImpl : NSObject <PageLocation>
{
    NSString *folio;
    unsigned long long offset;
}

@property(readonly, nonatomic) unsigned long long offset; // @synthesize offset;
@property(readonly, nonatomic) NSString *folio; // @synthesize folio;
@property(readonly, copy) NSString *description;
- (void)setFolio:(id)arg1;
- (void)dealloc;
- (id)initWithFolio:(id)arg1 offset:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface StoryBasedReaderViewController : PagingScrollViewReaderViewController <UIScrollViewDelegate>
{
    UIButton *bookmarkButton;
    _Bool ignoreRotation;
    id <PageLocation> jumpLocation;
    UserIssueMetadata *issueMetadata;
    double lastScreenScrollOffset;
    int lastScreenScrollDirection;
    _Bool clotheslineActive;
    _Bool rotating;
    _Bool _rotating;
}

@property(nonatomic, getter=isRotating) _Bool rotating; // @synthesize rotating=_rotating;
@property(retain, nonatomic) UIButton *bookmarkButton; // @synthesize bookmarkButton;
- (void)_orientationDidChangeNotificationHandler:(id)arg1;
- (id)fullFolioForPage:(unsigned long long)arg1;
- (void)toggleBookmarkForCurrentFolio:(id)arg1;
- (id)bookmarkFolioForPage:(unsigned long long)arg1;
- (void)updateBookmarkUIForPage:(unsigned long long)arg1;
- (id)lastViewedPageFolio;
- (id)imageWithScreenContents;
- (id)pageViewForScreenContents;
- (struct CGPoint)displayPointForPixelPoint:(struct CGPoint)arg1 onPage:(id)arg2;
- (struct CGRect)displayRectForPixelRect:(struct CGRect)arg1 onPage:(id)arg2;
- (double)scaleForLoadedPageViewForFolio:(id)arg1 inPagingScrollView:(id)arg2;
- (void)updateUIForPage:(unsigned long long)arg1;
- (void)issueControlControllerWillStartMultimedia:(id)arg1;
- (void)setJumpLocation:(id)arg1;
- (_Bool)isDownloadedResource:(id)arg1 onPage:(unsigned long long)arg2;
- (unsigned long long)pageIndexForFolio:(id)arg1 inOrientation:(long long)arg2;
- (void)gotoPageWithFolio:(id)arg1;
- (id)folioForPage:(unsigned long long)arg1;
- (void)pagingScrollView:(id)arg1 willChangePageFrom:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (unsigned long long)saveVerticalOffsetForPageScrollView:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)pagingScrollViewWillBeginDragging:(id)arg1;
- (void)pagingScrollView:(id)arg1 gotSingleTapOn:(id)arg2 index:(unsigned long long)arg3 at:(struct CGPoint)arg4;
- (void)pagingScrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2 pageDestination:(int)arg3;
- (void)pagingScrollView:(id)arg1 didSettleOnPage:(unsigned long long)arg2;
- (void)pagingScrollView:(id)arg1 layoutPage:(unsigned long long)arg2 view:(id)arg3 inFrame:(struct CGRect)arg4;
- (void)renderPage:(unsigned long long)arg1 inView:(id)arg2 forScrollView:(id)arg3;
- (id)setupBasePDFView:(id)arg1 forPage:(id)arg2 withHyperlinks:(id)arg3;
- (double)pageWidthForScrollView:(id)arg1;
- (id)pagingScrollViewForPage:(id)arg1;
- (id)createReusablePageViewForScrollView:(id)arg1;
- (unsigned long long)totalPageCountForScrollView:(id)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface StoryBasedReaderViewControllerLarge : StoryBasedReaderViewController <UIPopoverControllerDelegate, ModalInsetViewControllerDelegate>
{
    UIView<PagingScrollView> *clothesline;
    UIView *clotheslineBackgroundView;
    StoryBasedReaderClotheslineInfoView *clotheslineInfoView;
    UIView *navBarTopRightView;
    UIPopoverController *articleTOCController;
    BookmarksViewController *bookmarkController;
    id clotheslineController;
}

@property(retain, nonatomic) UIView *navBarTopRightView; // @synthesize navBarTopRightView;
@property(retain, nonatomic) StoryBasedReaderClotheslineInfoView *clotheslineInfoView; // @synthesize clotheslineInfoView;
@property(retain, nonatomic) UIView *clotheslineBackgroundView; // @synthesize clotheslineBackgroundView;
@property(retain, nonatomic) UIView<PagingScrollView> *clothesline; // @synthesize clothesline;
- (id)createWebViewControllerForUrl:(id)arg1;
- (void)toggleBookmarkForCurrentFolio:(id)arg1;
- (id)pageViewForScreenContents;
- (id)bookmarkController;
- (void)modalInsetViewController:(id)arg1 didDismiss:(_Bool)arg2;
- (void)displayDownloadProgress:(double)arg1 reprocessing:(_Bool)arg2;
- (void)pagingScrollView:(id)arg1 layoutPage:(unsigned long long)arg2 view:(id)arg3 inFrame:(struct CGRect)arg4;
- (void)renderPage:(unsigned long long)arg1 inView:(id)arg2 forScrollView:(id)arg3;
- (void)renderFullPage:(unsigned long long)arg1 inView:(id)arg2 forScrollView:(id)arg3;
- (void)tableOfContentsViewController:(id)arg1 didSelectArticle:(id)arg2;
- (void)tableOfContentsViewController:(id)arg1 didSelectPage:(id)arg2;
- (id)articleTOCPopoverController;
- (void)hideArticleTOC;
- (void)showArticleTOC:(id)arg1;
- (void)centerArticleTOC;
- (void)setClotheslineController:(id)arg1;
- (id)clotheslineController;
- (void)setupClotheslinePosition;
- (id)activeScrollView;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)updateClotheslineInfoForPage:(unsigned long long)arg1;
- (void)hideClothesline;
- (void)showClothesline;
- (void)exitClothesline:(id)arg1;
- (void)enterClothesline:(id)arg1;
- (void)goToViewedPreviousPage:(id)arg1;
- (void)gotoPageWithFolio:(id)arg1;
- (void)gotoTOCImage;
- (void)gotoTOCText:(id)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)_handleOrientationChange:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface StoryBasedReaderClotheslineController : NSObject <PagingScrollViewDataSource, PagingScrollViewDelegate>
{
    StoryBasedReaderViewControllerLarge *readerController;
    unsigned long long clotheslineCurrPage;
    NSMutableSet *bookmarkedFolios;
}

@property(retain, nonatomic) NSMutableSet *bookmarkedFolios; // @synthesize bookmarkedFolios;
@property(nonatomic) StoryBasedReaderViewControllerLarge *readerController; // @synthesize readerController;
@property(nonatomic) unsigned long long clotheslineCurrPage; // @synthesize clotheslineCurrPage;
- (void)loadBookmarksForOrientation:(long long)arg1;
- (void)pagingScrollView:(id)arg1 gotSingleTapOn:(id)arg2 index:(unsigned long long)arg3 at:(struct CGPoint)arg4;
- (void)pagingScrollView:(id)arg1 pageDidBecomeHidden:(unsigned long long)arg2;
- (void)pagingScrollView:(id)arg1 pageDidBecomeVisible:(unsigned long long)arg2;
- (void)pagingScrollView:(id)arg1 didSettleOnPage:(unsigned long long)arg2;
- (void)pagingScrollView:(id)arg1 didChangeToPage:(unsigned long long)arg2;
- (void)pagingScrollView:(id)arg1 layoutPage:(unsigned long long)arg2 view:(id)arg3 inFrame:(struct CGRect)arg4;
- (void)renderPage:(unsigned long long)arg1 inView:(id)arg2 forScrollView:(id)arg3;
- (double)pageWidthForScrollView:(id)arg1;
- (id)createReusablePageViewForScrollView:(id)arg1;
- (unsigned long long)totalPageCountForScrollView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PagingScrollViewReaderViewController : BaseIssueViewController <IssueController, MFMailComposeViewControllerDelegate, PagingScrollViewDataSource, PagingScrollViewDelegate, WebViewViewControllerDelegate>
{
    UIView<PagingScrollView> *scrollView;
    ZinioProgressView *downloadProgressView;
    UIView *loadingCoverView;
    UIView *bookmarkFlagView;
    IssueAssetCache *assetCache;
    IssueScriptSupport *scriptSupport;
    NSURL *endURL;
    unsigned long long currPage;
    _Bool rtl;
    MPMoviePlayerController *moviePlayer;
    MPMoviePlayerViewController *moviePlayerViewController;
    long long lastOrientation;
    long long forcedOrientation;
    long long originalForcedOrientation;
    _Bool missingAssetAlerted;
    WebViewViewController *webViewController;
    _Bool didWebViewPreviouslyReload;
    NSString *launchFolio;
    _Bool viewHasAppeared;
    _Bool networkAlertHasShown;
    _Bool pageSwipingDisabled;
    _Bool forceChromeDuringDownload;
    _Bool useIssueContentSize;
    _Bool waitForPreviewImage;
    unsigned long long numOfPreviewReady;
    _Bool networkDownloadAlertHasShown;
    NSMutableArray *_previousPage;
    float timeOnPage;
    NSDate *timeOfLastSwipe;
}

@property(nonatomic) NSMutableArray *previousPage; // @synthesize previousPage=_previousPage;
@property(retain) NSDate *timeOfLastSwipe; // @synthesize timeOfLastSwipe;
@property(nonatomic) float timeOnPage; // @synthesize timeOnPage;
@property(nonatomic) unsigned long long numOfPreviewReady; // @synthesize numOfPreviewReady;
@property(nonatomic) _Bool waitForPreviewImage; // @synthesize waitForPreviewImage;
@property(nonatomic, getter=isPageSwipingDisabled) _Bool pageSwipingDisabled; // @synthesize pageSwipingDisabled;
@property(retain, nonatomic) NSURL *endURL; // @synthesize endURL;
@property(readonly, nonatomic) _Bool viewHasAppeared; // @synthesize viewHasAppeared;
@property(retain, nonatomic) UIView *bookmarkFlagView; // @synthesize bookmarkFlagView;
@property(retain, nonatomic) NSString *launchFolio; // @synthesize launchFolio;
@property(retain, nonatomic) UIView<PagingScrollView> *scrollView; // @synthesize scrollView;
@property(readonly, nonatomic) _Bool rtl; // @synthesize rtl;
@property(retain, nonatomic) MPMoviePlayerViewController *moviePlayerViewController; // @synthesize moviePlayerViewController;
@property(retain, nonatomic) MPMoviePlayerController *moviePlayer; // @synthesize moviePlayer;
@property(retain, nonatomic) UIView *loadingCoverView; // @synthesize loadingCoverView;
@property(retain, nonatomic) ZinioProgressView *downloadProgressView; // @synthesize downloadProgressView;
@property(nonatomic) unsigned long long currPage; // @synthesize currPage;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (_Bool)shouldShowFullScreenServerUnavailableErrorMessage;
- (_Bool)shouldShowFullScreenNetworkErrorMessage;
- (_Bool)shouldShowFullScreenOfflineMessageWhenOffline;
- (_Bool)shouldActAsNetworkServicesManagerDelegate;
- (void)handleIssueDownloadFail:(id)arg1;
- (id)scriptSupport;
- (id)assetCache;
- (void)toggleBookmarkForCurrentFolio:(id)arg1;
- (void)hideChrome;
- (void)reloadIssue;
- (void)issueDownloadComplete;
- (void)postProcessAssetDownloadedNotification:(id)arg1;
- (_Bool)isDownloadedResource:(id)arg1 onPage:(unsigned long long)arg2;
- (void)receiveIssueDownloadFinishedNotification:(id)arg1;
- (void)receiveIssueTokenInvalidNotification:(id)arg1;
- (void)receiveIssueDownloadProgressNotification:(id)arg1;
- (void)receiveThumbnailGenerationProgressNotification:(id)arg1;
- (_Bool)updateDownloadProgressUI:(id)arg1 reprocessing:(_Bool)arg2;
- (void)displayDownloadProgress:(double)arg1 reprocessing:(_Bool)arg2;
- (void)loadNavBarDownloadTitleView;
- (void)saveLastViewedPageFolio;
- (id)lastViewedPageFolio;
- (void)moviePlayBackDidFinish:(id)arg1;
- (void)moviePreloadDidFinish:(id)arg1;
- (void)gotoMovieViewForURL:(id)arg1 fromRect:(struct CGRect)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)didForceOrientationChangeFrom:(long long)arg1 to:(long long)arg2;
- (void)didForceOrientationChangeTo:(long long)arg1;
- (void)attemptedToAccessMissingAsset:(id)arg1;
- (void)showMissingAssetAlert;
- (id)issueControlControllerForKey:(id)arg1;
- (void)issueControlControllerWillStartMultimedia:(id)arg1;
- (id)createWebViewControllerForUrl:(id)arg1;
- (void)dismissByZoomAnimationComplete:(id)arg1;
- (void)dismissByZoom;
- (void)webViewViewControllerDidFinishLoad:(id)arg1;
- (void)gotoWebViewForURL:(id)arg1 fromRect:(struct CGRect)arg2;
- (id)resourceUrl:(id)arg1 offlineFallback:(id)arg2;
- (id)resourceUrl:(id)arg1;
- (id)hyperlinkOnPage:(id)arg1 forPoint:(struct CGPoint)arg2 inViewSize:(struct CGSize)arg3;
- (id)staticHyperlinksForPage:(id)arg1;
- (struct CGRect)displayRectForWorldRect:(struct CGRect)arg1 onPage:(id)arg2;
- (struct CGPoint)displayPointForPixelPoint:(struct CGPoint)arg1 onPage:(id)arg2;
- (struct CGRect)displayRectForPixelRect:(struct CGRect)arg1 onPage:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)openReferralURL:(id)arg1;
- (_Bool)handleHyperlinkUrl:(id)arg1;
- (id)hyperlinkTargetUrl:(id)arg1;
- (void)openURL:(id)arg1;
- (_Bool)handleMailto:(id)arg1;
- (id)imageWithScreenContents;
- (id)layerForScreenContents;
- (id)pathForIssueResource:(id)arg1;
- (id)activeScrollView;
- (void)hideLoadingPageBadge;
- (void)showLoadingPageBadge;
- (void)setCurrPageIndex:(unsigned long long)arg1;
- (void)saveSessionStateForApplicationRelaunch:(id)arg1;
- (_Bool)isLockUIOnCurrentPage;
- (void)setLockUIOnCurrentPage:(_Bool)arg1;
- (void)updateUIForPage:(unsigned long long)arg1;
- (void)reloadScrollView;
- (void)buildCloseButtonForController:(id)arg1 withTarget:(id)arg2 andAction:(SEL)arg3;
- (unsigned long long)pageIndexForFolio:(id)arg1 inOrientation:(long long)arg2;
- (void)gotoPreviousPage;
- (void)gotoNextPage;
- (void)gotoPage:(unsigned long long)arg1;
- (void)gotoPageWithFolio:(id)arg1;
- (id)fullFolioForPage:(unsigned long long)arg1;
- (id)folioForPage:(unsigned long long)arg1;
- (void)pagingScrollView:(id)arg1 willChangePageFrom:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (void)pagingScrollView:(id)arg1 didSettleOnPage:(unsigned long long)arg2;
- (void)pagingScrollView:(id)arg1 didChangeToPage:(unsigned long long)arg2;
- (void)pagingScrollView:(id)arg1 gotSingleTapOn:(id)arg2 index:(unsigned long long)arg3 at:(struct CGPoint)arg4;
- (void)renderPage:(unsigned long long)arg1 inView:(id)arg2 forScrollView:(id)arg3;
- (double)pageWidthForScrollView:(id)arg1;
- (id)createReusablePageViewForScrollView:(id)arg1;
- (unsigned long long)totalPageCountForScrollView:(id)arg1;
- (int)currentPageOrientation;
@property(readonly, nonatomic) long long lastOrientation; // @synthesize lastOrientation;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)checkForOrientationChange;
- (long long)interfaceOrientation;
- (void)setIssue:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewSetup;
- (void)viewDidLoad;
- (void)releaseMoviePlayer;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LayeredPageView : UIScrollView <RenderManagerDelegate>
{
    UIView *baseView;
    UIView *objectView;
    UIView *bookmarkIconView;
    PageObjectsController *pageObjectsController;
    _Bool fromAlternateContext;
    CALayer *preview;
    UIImage *placeholderImage;
}

@property(retain, nonatomic) UIImage *placeholderImage; // @synthesize placeholderImage;
@property(retain, nonatomic) PageObjectsController *pageObjectsController; // @synthesize pageObjectsController;
@property(nonatomic, getter=isFromAlternateContext) _Bool fromAlternateContext; // @synthesize fromAlternateContext;
@property(retain, nonatomic) UIView *bookmarkIconView; // @synthesize bookmarkIconView;
@property(retain, nonatomic) UIView *baseView; // @synthesize baseView;
- (void)imageReady:(struct CGImage *)arg1 forFilePath:(id)arg2 inSize:(struct CGSize)arg3;
- (_Bool)isRenderNeededForFilePath:(id)arg1;
- (void)imageNotFoundForFilePath:(id)arg1;
- (void)renderCancelledForFilePath:(id)arg1;
- (id)previewLayerForFilePath:(id)arg1;
- (void)setContentSize:(struct CGSize)arg1 offset:(struct CGPoint)arg2;
- (void)reset;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)showPreview;
- (void)hidePreview;
- (void)showPreview:(id)arg1;
- (id)previewLayer;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ShopCategory : NSObject
{
    NSString *_categoryId;
    NSString *_name;
    NSString *_description;
    NSString *_rating;
    NSString *_type;
    NSString *_status;
    NSDate *_creationDate;
    NSDate *_lastModifiedDate;
    NSURL *_imageURL;
    ShopCategory *_parent;
    NSArray *_children;
}

@property(retain, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
@property(retain, nonatomic) NSArray *children; // @synthesize children=_children;
@property(nonatomic) __weak ShopCategory *parent; // @synthesize parent=_parent;
@property(retain, nonatomic) NSDate *lastModifiedDate; // @synthesize lastModifiedDate=_lastModifiedDate;
@property(retain, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(copy, nonatomic) NSString *status; // @synthesize status=_status;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
@property(copy, nonatomic) NSString *rating; // @synthesize rating=_rating;
@property(copy, nonatomic) NSString *description; // @synthesize description=_description;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *categoryId; // @synthesize categoryId=_categoryId;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;

@end

@interface SettingsPasswordChangeViewController : SettingsBaseTableViewController <UITextFieldDelegate>
{
    UILabel *_currentPasswordLabel;
    UILabel *_passwordLabel;
    UILabel *_retypeLabel;
    UITextField *_currentPassworldTextField;
    UITextField *_passwordTextField;
    UITextField *_retypeTextField;
    UIButton *_submitButton;
}

@property(retain, nonatomic) UIButton *submitButton; // @synthesize submitButton=_submitButton;
@property(retain, nonatomic) UITextField *retypeTextField; // @synthesize retypeTextField=_retypeTextField;
@property(retain, nonatomic) UITextField *passwordTextField; // @synthesize passwordTextField=_passwordTextField;
@property(retain, nonatomic) UITextField *currentPassworldTextField; // @synthesize currentPassworldTextField=_currentPassworldTextField;
@property(retain, nonatomic) UILabel *retypeLabel; // @synthesize retypeLabel=_retypeLabel;
@property(retain, nonatomic) UILabel *passwordLabel; // @synthesize passwordLabel=_passwordLabel;
@property(retain, nonatomic) UILabel *currentPasswordLabel; // @synthesize currentPasswordLabel=_currentPasswordLabel;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)didTapSubmitButton:(id)arg1;
- (void)validateNewPassword:(id)arg1 repeatPassword:(id)arg2 error:(id *)arg3;
- (void)validateCurrentPassword:(id)arg1 error:(id *)arg2;
- (_Bool)validateFields;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HorizontalCollectionViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource>
{
    UILabel *_titleLabel;
    UIButton *_viewAllButton;
    UICollectionView *_collectionView;
    ZGPublicationList *_publicationList;
    id <HorizontalCollectionViewControllerDelegate> _delegate;
    NSArray *_magazines;
    ShopCategory *_category;
}

@property(retain, nonatomic) ShopCategory *category; // @synthesize category=_category;
@property(nonatomic) id <HorizontalCollectionViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) ZGPublicationList *publicationList; // @synthesize publicationList=_publicationList;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) UIButton *viewAllButton; // @synthesize viewAllButton=_viewAllButton;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)_handleImageResourceDidDownloadNotification:(id)arg1;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)didTapViewAll:(id)arg1;
@property(retain, nonatomic) NSArray *magazines;
- (void)dealloc;
- (void)updateUI;
- (void)viewDidLoad;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SubscriptionOfferImpl : NSObject <SubscriptionOffer>
{
    long long order;
    NSString *pubName;
    NSString *pubId;
    NSString *displayName;
    NSString *pubDescription;
    NSNumber *numberOfIssues;
    NSString *thumbnailURL;
    NSString *thumbnailFileName;
    NSString *latestIssueTitle;
    _Bool selectedForSubscription;
}

@property(nonatomic) _Bool selectedForSubscription; // @synthesize selectedForSubscription;
@property(retain, nonatomic) NSString *latestIssueTitle; // @synthesize latestIssueTitle;
@property(retain, nonatomic) NSString *thumbnailFileName; // @synthesize thumbnailFileName;
@property(retain, nonatomic) NSString *thumbnailURL; // @synthesize thumbnailURL;
@property(retain, nonatomic) NSNumber *numberOfIssues; // @synthesize numberOfIssues;
@property(retain, nonatomic) NSString *pubDescription; // @synthesize pubDescription;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName;
@property(retain, nonatomic) NSString *pubId; // @synthesize pubId;
@property(retain, nonatomic) NSString *pubName; // @synthesize pubName;
@property(nonatomic) long long order; // @synthesize order;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PageObjectImpl : IssueKeyTypeObject <NSCopying, PageObject>
{
    struct CGRect rect;
    double alpha;
    double angle;
    UIColor *backgroundColor;
    UIColor *borderColor;
    double borderWidth;
    UIColor *shadowColor;
    struct CGSize shadowOffset;
    double shadowRadius;
    _Bool fastShadow;
    _Bool hidden;
    unsigned long long screenOffset;
    _Bool clip;
    _Bool fixed;
    int contentMode;
    int touchMode;
    NSMutableArray *hyperlinks;
    NSMutableDictionary *actions;
    NSMutableDictionary *listens;
    NSMutableDictionary *parameters;
    PageObjectImpl *parent;
    NSMutableDictionary *children;
    NSMutableArray *childKeys;
}

@property(nonatomic) int touchMode; // @synthesize touchMode;
@property(nonatomic) _Bool fastShadow; // @synthesize fastShadow;
@property(nonatomic) double shadowRadius; // @synthesize shadowRadius;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor;
@property(nonatomic) double borderWidth; // @synthesize borderWidth;
@property(retain, nonatomic) UIColor *borderColor; // @synthesize borderColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor;
@property(nonatomic) int contentMode; // @synthesize contentMode;
@property(nonatomic) _Bool fixed; // @synthesize fixed;
@property(nonatomic) _Bool clip; // @synthesize clip;
@property(nonatomic) PageObjectImpl *parent; // @synthesize parent;
@property(nonatomic) unsigned long long screenOffset; // @synthesize screenOffset;
@property(nonatomic) struct CGRect rect; // @synthesize rect;
@property(nonatomic) _Bool hidden; // @synthesize hidden;
@property(nonatomic) double angle; // @synthesize angle;
@property(nonatomic) double alpha; // @synthesize alpha;
- (void)remapTargetsFromTemplate:(id)arg1;
- (void)remapKeysToKey:(id)arg1;
- (void)remapTargetsFromTemplate:(id)arg1 toKey:(id)arg2;
- (void)applyTransform:(struct CGAffineTransform)arg1;
- (id)findPageObjectForKey:(id)arg1;
- (id)pageObjectForKey:(id)arg1;
- (id)allPageObjectKeys;
- (void)addChild:(id)arg1;
- (void)setValue:(id)arg1 forParameter:(id)arg2;
- (id)valueForParameter:(id)arg1;
- (id)allParameterKeys;
- (id)listensForType:(id)arg1;
- (void)addListen:(id)arg1 forType:(id)arg2;
- (id)allListenTypes;
- (id)actionsForType:(id)arg1;
- (void)addAction:(id)arg1 forType:(id)arg2;
- (void)addHyperlink:(id)arg1;
- (id)hyperlinks;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)releaseRetainedObjects;
- (id)initWithKey:(id)arg1 type:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IssueKeyTypeObject : NSObject <NSCopying>
{
    NSString *key;
    NSString *type;
    NSMutableDictionary *assets;
    NSMutableArray *assetKeys;
}

@property(retain, nonatomic) NSString *type; // @synthesize type;
@property(retain, nonatomic) NSString *key; // @synthesize key;
- (id)urlForAssetKey:(id)arg1;
- (id)allAssetKeys;
- (void)addAsset:(id)arg1 forKey:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithKey:(id)arg1 type:(id)arg2;
- (id)init;

@end

@interface PageObjectsController : NSObject <AnimationController>
{
    id <IssueController> issueController;
    id <Page> page;
    PageScriptSupport *script;
    UIView *rootView;
    UIView *staticView;
    _Bool started;
    NSMutableSet *screenStarted;
    NSMutableSet *screenSettled;
    _Bool prepared;
    unsigned long long lastScreenStarted;
    _Bool disableIssueControls;
    _Bool issueControlsNeeded;
    _Bool disablePageObjects;
    _Bool pageObjectsNeeded;
    unsigned long long animationCount;
    _Bool trackingTime;
    double trackedTime;
    NSMutableDictionary *viewMapping;
    NSMutableDictionary *listeners;
    NSMutableDictionary *issueControlControllers;
}

@property(nonatomic) UIView *staticView; // @synthesize staticView;
@property(nonatomic) _Bool disablePageObjects; // @synthesize disablePageObjects;
@property(nonatomic) _Bool disableIssueControls; // @synthesize disableIssueControls;
@property(nonatomic) UIView *rootView; // @synthesize rootView;
@property(retain, nonatomic) id <Page> page; // @synthesize page;
@property(readonly, nonatomic) unsigned long long lastScreenStarted; // @synthesize lastScreenStarted;
@property(readonly, nonatomic) id <IssueController> issueController; // @synthesize issueController;
- (void)setupTransitionableImagePageObject:(id)arg1 inParent:(id)arg2;
- (void)setupImagePageObject:(id)arg1 inParent:(id)arg2;
- (void)setupControlPageObject:(id)arg1 inParent:(id)arg2;
- (void)setupTextPageObject:(id)arg1 inParent:(id)arg2;
- (void)setupContainerPageObject:(id)arg1 inParent:(id)arg2;
- (void)setupView:(id)arg1 forPageObject:(id)arg2 inParent:(id)arg3;
- (void)resetFixedObjects;
- (void)setupPropertiesForPageObject:(id)arg1 view:(id)arg2;
- (void)setupFastShadowPathOnView:(id)arg1;
- (id)createViewForPageObject:(id)arg1 resource:(id)arg2;
- (id)createTextView:(id)arg1;
- (id)createImageView:(id)arg1 fromFile:(id)arg2;
- (id)createPdfView:(id)arg1 fromFile:(id)arg2;
- (double)executeAnimationAction:(id)arg1 fromSender:(id)arg2 withParameters:(id)arg3;
- (double)handleAction:(id)arg1 target:(id)arg2 parameters:(id)arg3;
- (double)handle:(id)arg1 target:(id)arg2;
- (double)handleAction:(id)arg1;
- (_Bool)setObject:(id)arg1 state:(id)arg2 active:(_Bool)arg3;
- (_Bool)isObject:(id)arg1 activeForState:(id)arg2;
- (double)executeAnimationSpecSet:(id)arg1 triggeredBy:(id)arg2 fromSender:(id)arg3 inScreen:(unsigned long long)arg4 withParameters:(id)arg5;
- (double)executeAnimationSpec:(id)arg1 triggeredBy:(id)arg2 inScreen:(unsigned long long)arg3 withParameters:(id)arg4;
- (void)execute:(id)arg1 inScreen:(unsigned long long)arg2;
- (void)resetPageView;
- (void)startControlsInScreen:(unsigned long long)arg1;
- (id)animationKeyForAnimationSpec:(id)arg1;
- (void)postMessage:(id)arg1 withParameters:(id)arg2 fromObject:(id)arg3;
- (id)pageObjectForMessageSender:(id)arg1;
- (id)pageObjectsInterestedInMessageType:(id)arg1 fromObject:(id)arg2;
- (void)setupListens:(id)arg1;
- (_Bool)handlesDoubleTap:(struct CGPoint)arg1 inView:(id)arg2;
- (_Bool)handlesDoubleTap:(struct CGPoint)arg1 inView:(id)arg2 pageObject:(id)arg3 captured:(_Bool *)arg4;
- (_Bool)handlesTap:(struct CGPoint)arg1 inView:(id)arg2;
- (_Bool)handlesTap:(struct CGPoint)arg1 inView:(id)arg2 pageObject:(id)arg3 captured:(_Bool *)arg4;
- (_Bool)tapCaptured:(struct CGPoint)arg1 inView:(id)arg2 pageObject:(id)arg3;
- (_Bool)pageObjectViewIsVisible:(id)arg1;
- (void)issueControlControllerWillStartMultimedia:(id)arg1;
- (void)stopPageView;
- (void)leaveScreen:(unsigned long long)arg1;
- (void)leavePageView:(int)arg1;
- (void)settledOnPageView:(int)arg1 inScreen:(unsigned long long)arg2;
- (void)settledOnPageView:(int)arg1;
- (void)startPageView:(int)arg1 inScreen:(unsigned long long)arg2;
- (void)startPageView:(int)arg1;
- (void)preparePageView:(int)arg1;
- (void)layoutPageViewForTransform:(struct CGAffineTransform)arg1;
- (void)setupPageObjects:(_Bool)arg1;
- (void)setupPageObject:(id)arg1 inParent:(id)arg2 neededOnly:(_Bool)arg3;
- (void)layoutPageView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)insertSubviewAtBottomOfStaticView:(id)arg1;
- (id)worldViewForPageObjectKey:(id)arg1;
- (id)runtimePageObjectForKey:(id)arg1;
- (double)handleAnimation:(id)arg1 withParameters:(id)arg2;
- (double)handleAnimation:(id)arg1;
- (id)allPageObjectKeys;
- (id)script;
- (void)dealloc;
- (id)initWithIssueController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AnimationSpec : NSObject <NSCopying>
{
    _Bool autoreverses;
    int curve;
    double duration;
    double delay;
    float repeat;
    NSString *target;
    NSMutableArray *keyframes;
    AnimationSpecKeypath *keypath;
}

+ (int)parseAnimationSpecTimingCurve:(id)arg1 withDefault:(int)arg2;
@property(retain, nonatomic) AnimationSpecKeypath *keypath; // @synthesize keypath;
@property(readonly, nonatomic) NSArray *keyframes; // @synthesize keyframes;
@property(retain, nonatomic) NSString *target; // @synthesize target;
@property(nonatomic) float repeat; // @synthesize repeat;
@property(nonatomic) double duration; // @synthesize duration;
@property(nonatomic) double delay; // @synthesize delay;
@property(nonatomic) int curve; // @synthesize curve;
@property(nonatomic) _Bool autoreverses; // @synthesize autoreverses;
- (void)remapKey:(id)arg1;
- (void)applyTransform:(struct CGAffineTransform)arg1;
- (void)copyPresentationLayerAnimatedValuesOnLayer:(id)arg1;
- (void)finalizeCAAnimation:(id)arg1 forKey:(id)arg2 onLayer:(id)arg3;
- (void)removeCAAnimation:(id)arg1 forKey:(id)arg2 onLayer:(id)arg3 settingKeyPath:(id)arg4;
- (void)copyPresentationLayerKeyPath:(id)arg1 onLayer:(id)arg2;
- (id)createAnimation:(id)arg1 forKey:(id)arg2 triggeredBy:(id)arg3 withParameters:(id)arg4 controller:(id)arg5;
- (id)setupKeyframeAnimation:(id)arg1 startingAt:(id)arg2 endingAt:(id)arg3;
- (id)setupKeypathAnimation:(id)arg1;
- (void)setupCAAnimation:(id)arg1;
- (id)animationCurveForType:(int)arg1;
- (id)animationKeyPath;
- (void)endUIViewAnimation;
- (void)beginUIViewAnimation;
- (_Bool)endsOnStartingPosition;
- (void)addKeyframe:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface AnimationSpecTranslation : AnimationSpec
{
    struct CGPoint from;
    struct CGPoint to;
}

@property(nonatomic) struct CGPoint to; // @synthesize to;
@property(nonatomic) struct CGPoint from; // @synthesize from;
- (void)applyTransform:(struct CGAffineTransform)arg1;
- (void)finalizeCAAnimation:(id)arg1 forKey:(id)arg2 onLayer:(id)arg3;
- (id)createAnimation:(id)arg1 forKey:(id)arg2 triggeredBy:(id)arg3 withParameters:(id)arg4 controller:(id)arg5;
- (id)animationKeyPath;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface AnimationSpecSet : NSObject <AnimationSpecContainer, NSCopying>
{
    NSMutableArray *animations;
    NSMutableArray *actions;
    AnimationScript *script;
    NSString *sender;
}

@property(retain, nonatomic) AnimationScript *script; // @synthesize script;
@property(retain, nonatomic) NSString *sender; // @synthesize sender;
@property(readonly, nonatomic) NSArray *animations; // @synthesize animations;
@property(readonly, nonatomic) NSArray *actions; // @synthesize actions;
- (void)remapTargetsFromTemplate:(id)arg1 toKey:(id)arg2;
- (id)renameTargetKey:(id)arg1 fromTemplate:(id)arg2 toKey:(id)arg3;
- (void)applyTransform:(struct CGAffineTransform)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)addScript:(id)arg1;
- (void)addAction:(id)arg1;
- (void)addAnimation:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TransitionableView : AnimatablePageObjectView <TransitionablePageObject>
{
    NSArray *views;
    unsigned long long current;
}

@property(readonly, nonatomic) NSArray *views; // @synthesize views;
@property(readonly, nonatomic) unsigned long long current; // @synthesize current;
- (unsigned long long)transitionableCount;
@property(readonly, nonatomic) unsigned long long currentIndex;
- (void)transitionToViewByHiding:(unsigned long long)arg1;
- (void)toggleTransitionViewsByHiding;
- (void)transitionToView:(unsigned long long)arg1;
- (void)toggleTransitionViews;
- (unsigned long long)nextIndex;
- (void)setBounds:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 controller:(id)arg2 pageObject:(id)arg3 transitionableViews:(id)arg4;
- (id)initWithFrame:(struct CGRect)arg1 controller:(id)arg2 pageObject:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AnimationSpecTransition : AnimationSpec
{
    NSString *type;
    NSString *subtype;
}

@property(retain, nonatomic) NSString *type; // @synthesize type;
@property(retain, nonatomic) NSString *subtype; // @synthesize subtype;
- (id)createAnimation:(id)arg1 forKey:(id)arg2 triggeredBy:(id)arg3 withParameters:(id)arg4 controller:(id)arg5;
- (id)createCAAnimation:(id)arg1 to:(id)arg2;
- (id)caSubtype;
- (id)caType;
- (void)performUIViewTransition:(id)arg1 to:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface AnimationAction : NSObject <NSCopying>
{
    NSString *target;
    NSString *groupTarget;
    NSString *type;
    NSMutableDictionary *parameters;
    _Bool selfIncluded;
    unsigned long long screenOffset;
    _Bool postType;
}

+ (id)actionWithType:(id)arg1;
@property(nonatomic, getter=isPostType) _Bool postType; // @synthesize postType;
@property(nonatomic) unsigned long long screenOffset; // @synthesize screenOffset;
@property(retain, nonatomic) NSString *type; // @synthesize type;
@property(retain, nonatomic) NSString *target; // @synthesize target;
@property(nonatomic) _Bool selfIncluded; // @synthesize selfIncluded;
@property(readonly, nonatomic) NSDictionary *parameters; // @synthesize parameters;
@property(retain, nonatomic) NSString *groupTarget; // @synthesize groupTarget;
- (id)resolveNumberParameter:(id)arg1 withGlobalParameters:(id)arg2;
- (id)resolveParameter:(id)arg1 withGlobalParameters:(id)arg2;
- (void)setParametersFromDictionary:(id)arg1;
- (void)setValue:(id)arg1 forParameter:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithType:(id)arg1;
- (id)init;

@end

@interface InternationalStoreViewController : BaseViewController <UITableViewDelegate, UITableViewDataSource>
{
    UITableView *tableView;
    InternationalStoreTableViewCell *internationalStoreTableViewCell;
    NSArray *newsstands;
    NSObject<User> *currentUser;
    NSIndexPath *selectedIndexPath;
    _Bool newsstandsAvailable;
    UIButton *submitButton;
}

@property(retain, nonatomic) UIButton *submitButton; // @synthesize submitButton;
@property(retain, nonatomic) NSIndexPath *selectedIndexPath; // @synthesize selectedIndexPath;
@property(retain, nonatomic) NSObject<User> *currentUser; // @synthesize currentUser;
@property(retain, nonatomic) NSArray *newsstands; // @synthesize newsstands;
@property(nonatomic) InternationalStoreTableViewCell *internationalStoreTableViewCell; // @synthesize internationalStoreTableViewCell;
@property(nonatomic) UITableView *tableView; // @synthesize tableView;
- (void)noNewsstandsAvailable;
- (void)submitNewsstand;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (id)getSelectedBackgroundImage;
- (id)getUnselectedBackgroundImage;
- (id)createTableViewCell;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)determineSelectedIndexPathFromNewsstands;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)unloadViews;
- (void)didReceiveMemoryWarning;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZoomImageViewController : UIViewController <UIScrollViewDelegate>
{
    UIImage *_image;
    UIImage *_backgroundImage;
    UIImageView *_backgroundImageView;
    UIImageView *_imageView;
    UIScrollView *_scrollView;
    id <ZoomImageViewControllerDataSource> _dataSource;
    struct CGRect _initialFrame;
    UIColor *_backgroundTintColor;
    id <ZoomImageViewControllerDataSource> _delegate;
}

@property(nonatomic) id <ZoomImageViewControllerDataSource> dataSource; // @synthesize dataSource=_delegate;
@property(retain, nonatomic) UIColor *backgroundTintColor; // @synthesize backgroundTintColor=_backgroundTintColor;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(nonatomic) struct CGRect initialFrame; // @synthesize initialFrame=_initialFrame;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) UIImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
@property(retain, nonatomic) UIImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void)hideView:(id)arg1;
- (void)showOnView:(id)arg1;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (id)initWithImage:(id)arg1 delegate:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ScrollingImageIssueControlController : IssueControlController <UIScrollViewDelegate>
{
    struct CGSize contentSize;
    unsigned long long currPage;
}

- (void)handleMessage:(id)arg1 withParameters:(id)arg2 fromObject:(id)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollToPageIndex:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)handleScrollPageChange;
- (unsigned long long)currentPageIndex;
- (id)createViewForMediaResource;
- (id)createImageViewFromFile:(id)arg1;
- (id)createPdfViewFromFile:(id)arg1;
- (void)layoutInFrame:(struct CGRect)arg1;
- (_Bool)handlesTap:(struct CGPoint)arg1;
- (void)prepare;
- (id)scroller;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AnalyticsManagerImpl : NSObject <AnalyticsManager>
{
    _Bool enabled;
    _Bool ready;
    NSMutableDictionary *timedEvents;
    id issue;
    NSTimer *readerKeepAliveTimer;
    NSDate *featuredAreaTrackDate;
    NSMutableArray *queue;
    id <BrandManager> brandManager;
    CoreDataAppDataService *appDataService;
    ContentManager *contentManager;
    ZGMagazine *magazine;
}

@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
@property(retain, nonatomic) CoreDataAppDataService *appDataService; // @synthesize appDataService;
@property(retain, nonatomic) id <BrandManager> brandManager; // @synthesize brandManager;
@property(retain, nonatomic) NSMutableArray *queue; // @synthesize queue;
@property(retain, nonatomic) NSDate *featuredAreaTrackDate; // @synthesize featuredAreaTrackDate;
@property(retain, nonatomic) NSTimer *readerKeepAliveTimer; // @synthesize readerKeepAliveTimer;
@property(nonatomic) ZGMagazine *magazine; // @synthesize magazine;
@property(retain, nonatomic) id issue; // @synthesize issue;
@property(retain, nonatomic) NSMutableDictionary *timedEvents; // @synthesize timedEvents;
@property(readonly, nonatomic) _Bool ready; // @synthesize ready;
- (void)dealloc;
- (id)init;
- (void)logEvent:(id)arg1;
- (void)prepEventForFinalDelivery:(id)arg1;
- (void)stopTrackingTimedEvent:(id)arg1;
- (void)startTrackingTimedEvent:(id)arg1;
- (void)trackHyperlink:(id)arg1;
- (void)trackPageViewForIssue:(id)arg1 page:(id)arg2;
- (void)trackCategoryClick:(id)arg1 openCategory:(id)arg2;
- (void)trackBannerClick:(id)arg1;
- (void)trackBannerImpression:(id)arg1;
- (void)trackPushNotificationType:(long long)arg1 proxyParameters:(id)arg2;
- (void)trackUserTapsRateAppPopOption:(id)arg1;
- (void)trackViewedRateAppPopUp;
- (void)trackBatchDownladingAlertViewCanceled;
- (void)trackBatchDownladingEnabledThroughAlertView;
- (void)trackBatchDownladingToggled:(_Bool)arg1 numberOfToggles:(long long)arg2;
- (void)trackDownloadFailedForIssue:(id)arg1 batchDownloadingEnabled:(_Bool)arg2;
- (void)trackDownloadSucceededForIssue:(id)arg1 batchDownloadingEnabled:(_Bool)arg2;
- (void)trackInitiateDownloadForIssue:(id)arg1 batchDownloadingEnabled:(_Bool)arg2 queueSize:(unsigned long long)arg3;
- (id)dictionaryWithDefaultInfoForIssue:(id)arg1;
- (id)dictionaryWithDefaultInfo;
- (void)trackDownloadCompleteForIssue:(id)arg1;
- (void)trackDownloadStartForIssue:(id)arg1;
- (void)trackDownloadStartForPublication:(id)arg1 issue:(id)arg2;
- (void)trackDownloadCompleteForIssueExcerpt:(id)arg1;
- (void)trackDownloadStartForIssueExcerpt:(id)arg1;
- (void)trackShowReaderMosaicTOCWithZGExcerptPubIssue:(id)arg1;
- (void)trackShowReaderMosaicTOCWithIssue:(id)arg1;
- (void)trackPageSwipeForIssueWithFolio:(id)arg1 folio:(id)arg2;
- (void)trackPageSwipeForIssue:(id)arg1 isExcerpt:(_Bool)arg2 pubId:(id)arg3 excerptId:(id)arg4 pubName:(id)arg5 issueTitle:(id)arg6 labelType:(id)arg7 folio:(id)arg8;
- (void)trackPageTimeForIssue:(id)arg1 page:(unsigned long long)arg2 timeOnPage:(int)arg3;
- (void)trackPageSwipeForIssue:(id)arg1 page:(unsigned long long)arg2;
- (void)_trackEventWithDescription:(id)arg1 issue:(id)arg2 pageNumber:(unsigned long long)arg3;
- (void)_trackBookmarkingEventWithDescription:(id)arg1 issueBookmark:(id)arg2;
- (void)_trackTextViewEventWithDescription:(id)arg1 article:(id)arg2;
- (void)trackExitTextViewEventForArticle:(id)arg1;
- (void)trackEnterTextViewEventForArticle:(id)arg1;
- (void)trackRemoveBookmarkForIssue:(id)arg1;
- (void)trackAddBookmarkForIssue:(id)arg1 pageNumber:(unsigned long long)arg2;
- (void)trackAddBookmarkForIssue:(id)arg1;
- (void)trackRemoveBookmarkForIssue:(id)arg1 pageNumber:(unsigned long long)arg2;
- (void)trackReaderClose;
- (void)trackReaderOpenForIssue:(id)arg1;
- (void)trackReaderOpenForIssueExcerpt:(id)arg1;
- (void)trackLibraryEditMode;
- (void)trackLibraryBackup;
- (void)trackRestoreLibraryIssue:(id)arg1;
- (void)trackRemoveLibraryIssue:(id)arg1;
- (void)trackShowLibrary;
- (void)trackFailToSaveLocalTicketQueue:(long long)arg1;
- (void)trackTransactionFinishRetryOK:(id)arg1 issueId:(id)arg2 transactionId:(id)arg3 countInQueue:(long long)arg4;
- (void)trackTransactionFinishOK:(id)arg1 issueId:(id)arg2 transactionId:(id)arg3 countInQueue:(long long)arg4;
- (void)trackAppsFlyerPurchaseEvent:(id)arg1;
- (void)trackHandlePurchaseTicketLost:(id)arg1 transactionId:(id)arg2 countInQueue:(long long)arg3;
- (void)trackFailedTransaction:(id)arg1 storeId:(id)arg2 transactionId:(id)arg3 countInQueue:(long long)arg4 errorCode:(id)arg5;
- (void)trackNoTicketFoundInFromPaymentRequest:(id)arg1 transactionId:(id)arg2 countInQueue:(long long)arg3;
- (void)trackNoTicketForTransaction:(id)arg1 storeProductId:(id)arg2 countInQueue:(long long)arg3;
- (void)trackAddPurchaseTicketToPaymentQueue:(id)arg1 countInQueue:(long long)arg2;
- (void)trackNoTicketFoundForProductRequest:(id)arg1 countInQueue:(long long)arg2;
- (void)trackPurchaseTicketCreate:(id)arg1 countInQueue:(long long)arg2;
- (void)trackBuyIssueTransactionIdSentFail:(id)arg1 transactionId:(id)arg2 storeId:(id)arg3 countInQueue:(long long)arg4;
- (void)trackBuyIssueTransactionIdSentSuccess:(id)arg1 transactionId:(id)arg2 storeId:(id)arg3 countInQueue:(long long)arg4;
- (void)trackBuyIssueTransactionIdSentAttempt:(id)arg1 transactionId:(id)arg2 storeId:(id)arg3 countInQueue:(long long)arg4;
- (void)trackBuyIssueTransactionIdReceived:(id)arg1 transactionId:(id)arg2 storeId:(id)arg3 countInQueue:(long long)arg4;
- (void)trackBuyIssueThankYouPage:(id)arg1 purchaseType:(id)arg2 subTotal:(id)arg3 transaction:(id)arg4 fromBanner:(id)arg5 inCategory:(id)arg6;
- (void)trackBuyRegister;
- (void)trackBuyGuestCheckOutButton;
- (void)trackBuySignInSubmit;
- (void)trackBuySignInButton;
- (void)trackBuyRegisterView;
- (void)trackBuySubscriptionButton:(id)arg1;
- (void)trackBuyIssueButton:(id)arg1 fromBanner:(id)arg2 inCategory:(id)arg3;
- (void)trackBuyIssueProductPage:(id)arg1 fromBanner:(id)arg2 inCategory:(id)arg3;
- (void)trackUpsellOverlayClickThruForIssueExcerpt:(id)arg1;
- (void)trackUpsellOverlayCloseForIssueExcerpt:(id)arg1;
- (void)trackUpsellOverlayOpenForIssueExcerpt:(id)arg1;
- (void)trackInternationalStoreChange;
- (void)trackUserSignOut;
- (void)trackUserSignIn:(id)arg1;
- (void)trackUserRegistration:(id)arg1;
- (void)trackShowFeaturedArticlesMosaic;
- (void)trackSwipeToFeaturedItem:(id)arg1;
- (void)trackShowFeaturedAreaWithItem:(id)arg1;
- (void)trackAppTerminate;
- (void)trackAppEnterBackground;
- (void)trackAppBecomeActive;
- (void)trackAppStartWithOptions:(id)arg1;
@property(readonly, nonatomic) _Bool enabled; // @synthesize enabled;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface InsetWebViewIssueControlController : WebViewIssueControlController
{
    UIView *curtainView;
    UIImageView *backgroundView;
    UIButton *openButton;
    UIButton *closeButton;
    UIWebView *contentView;
    _Bool open;
    struct CGRect destRect;
    struct CGRect paddingRect;
    struct CGPoint closeButtonOffset;
}

@property(retain, nonatomic) UIView *curtainView; // @synthesize curtainView;
@property(retain, nonatomic) UIWebView *contentView; // @synthesize contentView;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton;
@property(retain, nonatomic) UIButton *openButton; // @synthesize openButton;
@property(retain, nonatomic) UIImageView *backgroundView; // @synthesize backgroundView;
- (void)viewBoundsChangedWithTransform:(struct CGAffineTransform)arg1;
- (_Bool)handlesTap:(struct CGPoint)arg1;
- (void)closeInset;
- (void)closeInset:(_Bool)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)closeComplete;
- (void)openInset;
- (void)setCloseButtonVisible:(_Bool)arg1 animate:(_Bool)arg2;
- (void)stop;
- (void)prepare;
- (void)dealloc;

@end

@interface CategoryViewController : UIViewController <HorizontalSlidingMenuViewControllerDelegate, GridCollectionViewControllerDelegate, ShopPageDataSourceDelegate>
{
    HorizontalSlidingMenuViewController *_horizontalSlidingMenuViewController;
    GridCollectionViewController *_collectionViewController;
    ShopCategory *_selectedCategory;
    ShopCategory *_mainCategory;
    ShopPageDataSource *_shopPageDataSource;
}

@property(retain, nonatomic) ShopPageDataSource *shopPageDataSource; // @synthesize shopPageDataSource=_shopPageDataSource;
@property(retain, nonatomic) GridCollectionViewController *collectionViewController; // @synthesize collectionViewController=_collectionViewController;
@property(retain, nonatomic) ShopCategory *mainCategory; // @synthesize mainCategory=_mainCategory;
@property(retain, nonatomic) HorizontalSlidingMenuViewController *horizontalSlidingMenuViewController; // @synthesize horizontalSlidingMenuViewController=_horizontalSlidingMenuViewController;
- (void)_setUpChildCategoryCollectionViewInsets;
- (void)shopPageDataSource:(id)arg1 magazinesDidLoad:(id)arg2 categoryId:(id)arg3;
- (void)horizontalSlidingMenuViewController:(id)arg1 didSelectCategory:(id)arg2;
- (void)gridCollectionViewController:(id)arg1 didSelectMagazine:(id)arg2;
- (void)setCustomTitle:(id)arg1;
- (id)magazines;
- (void)setMagazines:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
@property(retain, nonatomic) ShopCategory *selectedCategory;
- (id)initWithCategory:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AnimationSpecFade : AnimationSpec
{
    double from;
    double to;
}

@property(nonatomic) double to; // @synthesize to;
@property(nonatomic) double from; // @synthesize from;
- (id)createAnimation:(id)arg1 forKey:(id)arg2 triggeredBy:(id)arg3 withParameters:(id)arg4 controller:(id)arg5;
- (id)animationKeyPath;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface AnimationSpecCombo : AnimationSpec <AnimationSpecContainer>
{
    NSMutableArray *animations;
}

- (void)finalizeCAAnimation:(id)arg1 forKey:(id)arg2 onLayer:(id)arg3;
- (id)createAnimation:(id)arg1 forKey:(id)arg2 triggeredBy:(id)arg3 withParameters:(id)arg4 controller:(id)arg5;
- (double)duration;
- (void)setDuration:(double)arg1;
- (void)addScript:(id)arg1;
- (void)addAction:(id)arg1;
- (void)addAnimation:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HTTPClient : NSObject <FBLoginViewDelegate>
{
    id <HTTPClientDelegate> _delegate;
    NSString *_facebookAccessToken;
    NSString *_facebookSessionAccessToken;
    NSString *_userId;
    NSCache *_imageCache;
    id <FBGraphUser> _facebookUser;
    NSString *_clientAccessToken;
    NSString *_userAccessToken;
}

+ (id)sharedInstance;
@property(copy, nonatomic) NSString *userAccessToken; // @synthesize userAccessToken=_userAccessToken;
@property(copy, nonatomic) NSString *clientAccessToken; // @synthesize clientAccessToken=_clientAccessToken;
@property(copy, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property(copy, nonatomic) NSString *facebookAccessToken; // @synthesize facebookAccessToken=_facebookAccessToken;
@property(copy, nonatomic) NSString *facebookSessionAccessToken; // @synthesize facebookSessionAccessToken=_facebookSessionAccessToken;
@property(nonatomic) id <HTTPClientDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id <FBGraphUser> facebookUser; // @synthesize facebookUser=_facebookUser;
- (void)_removeClientAccessToken;
- (void)_removeUserAccessToken;
- (_Bool)_addTokenAsNecessary:(id)arg1;
- (void)_plainRequestWithURL:(id)arg1 HTTPMethod:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)_requestWithURL:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)_appStoreReceiptString;
- (id)_base64forData:(id)arg1;
- (void)_ATGFacebookLogin;
- (void)_didFinishSearchMagazines:(id)arg1;
- (void)_didFinishSearchMagazinesWithErrors:(id)arg1;
- (void)_didFinishSearchCategories:(id)arg1;
- (void)_didFinishSearchCategoriesWithErrors:(id)arg1;
- (void)_displayAlertMessage:(id)arg1;
- (void)loginView:(id)arg1 handleError:(id)arg2;
- (void)loginViewShowingLoggedOutUser:(id)arg1;
- (void)loginViewFetchedUserInfo:(id)arg1 user:(id)arg2;
- (void)saveUserAccessToken:(id)arg1;
- (id)retrieveUserAccessToken;
- (void)saveClientAccessToken:(id)arg1;
- (id)retrieveClientAccessToken;
- (void)logOut;
- (void)authenticateUserWithEmail:(id)arg1 password:(id)arg2;
- (void)resetPasswordWithEmail:(id)arg1 completionCallback:(CDUnknownBlockType)arg2;
- (void)refreshUserAccessToken;
- (void)refreshClientAccessToken;
- (void)refreshClientAccessTokenIfNecessary;
- (void)getFacebookAccessToken;
- (void)searchCategoryForKeyword:(id)arg1 limit:(unsigned long long)arg2 newsstandId:(id)arg3;
- (void)searchForKeyword:(id)arg1 limit:(unsigned long long)arg2 newsstandId:(id)arg3;
- (void)testAutoRenew:(id)arg1 transaction:(id)arg2 user:(id)arg3;
- (void)requestCurrentNewsstandById:(id)arg1 completionCallback:(CDUnknownBlockType)arg2;
- (void)requestCurrentNewsstand:(CDUnknownBlockType)arg1;
- (void)requestAllNewsstands:(CDUnknownBlockType)arg1;
- (void)downloadCoverImageForSearchResult:(id)arg1 delegate:(id)arg2;
- (void)requestCategories:(CDUnknownBlockType)arg1;
- (void)requestCategoryWithId:(id)arg1 completionCallback:(CDUnknownBlockType)arg2;
- (void)requestMagazinesById:(id)arg1 pageSize:(long long)arg2 completionCallback:(CDUnknownBlockType)arg3;
- (void)requestMagazinesById:(id)arg1 completionCallback:(CDUnknownBlockType)arg2;
- (void)requestMagazinesForCategoryId:(id)arg1 pageSize:(long long)arg2 completionCallback:(CDUnknownBlockType)arg3;
- (void)requestMagazinesForCategoryId:(id)arg1 completionCallback:(CDUnknownBlockType)arg2;
- (void)requestSingleMagazineById:(id)arg1 completionCallback:(CDUnknownBlockType)arg2;
- (id)resetPasswordURL;
- (id)accessTokenURLWithEmail:(id)arg1 password:(id)arg2;
- (id)browseNewsstandByIdURL:(id)arg1;
- (id)browseCurrentNewsstandURL;
- (id)browseAllNewsstandsURL;
- (id)browseSingleMagazineByIdURL:(id)arg1;
- (id)browseMagazinesByIdURL:(id)arg1 pageSize:(long long)arg2;
- (id)browseMagazinesByCategoryIdURL:(id)arg1 pageSize:(long long)arg2;
- (id)browseCategoriesURL;
- (id)categoryURLForCategoryId:(id)arg1;
- (id)contentDescriptorURLForIssueId:(id)arg1;
- (id)libraryURLForPageSize:(long long)arg1 pageNumber:(long long)arg2;
- (id)logoutURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AnimationSpecScale : AnimationSpec
{
    double from;
    double to;
    double popTo;
    double popToTime;
}

@property(nonatomic) double to; // @synthesize to;
@property(nonatomic) double popToTime; // @synthesize popToTime;
@property(nonatomic) double popTo; // @synthesize popTo;
@property(nonatomic) double from; // @synthesize from;
- (id)createAnimation:(id)arg1 forKey:(id)arg2 triggeredBy:(id)arg3 withParameters:(id)arg4 controller:(id)arg5;
- (id)animationKeyPath;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface SpreadPageObjectsController : NSObject
{
    PageObjectsController *leftController;
    PageObjectsController *rightController;
    id <IssueController> issueController;
}

@property(readonly, nonatomic) id <IssueController> issueController; // @synthesize issueController;
- (void)issueControlControllerWillStartMultimedia:(id)arg1;
- (_Bool)handlesDoubleTap:(struct CGPoint)arg1 inView:(id)arg2;
- (_Bool)handlesTap:(struct CGPoint)arg1 inView:(id)arg2;
- (void)stopPageView;
- (void)leavePageView:(int)arg1;
- (void)settledOnPageView:(int)arg1;
- (void)startPageView:(int)arg1;
- (void)preparePageView:(int)arg1;
- (void)layoutPageViewForTransform:(struct CGAffineTransform)arg1;
- (void)layoutPageView;
- (id)rightPage;
- (id)leftPage;
- (void)setSpread:(id)arg1;
- (void)setPage:(id)arg1;
- (void)setStaticView:(id)arg1;
- (void)setRightView:(id)arg1;
- (void)setLeftView:(id)arg1;
- (void)swapLeftAndRight;
- (void)dealloc;
- (id)initWithIssueController:(id)arg1;

@end

@interface ContentServerImplURLConnections : NSObject
{
    NSMutableData *responseData;
    _Bool isURLConnectionFinished;
    _Bool isTLSConnection;
    _Bool isURLConnectionTimedOut;
    _Bool isURLConnectionStarted;
    NSError *httpError;
    NSArray *trustedRootCertificates;
    CDUnknownBlockType synchroniousResponseBLock;
}

@property(copy, nonatomic) CDUnknownBlockType synchroniousResponseBLock; // @synthesize synchroniousResponseBLock;
@property(retain, nonatomic) NSError *httpError; // @synthesize httpError;
@property(retain, nonatomic) NSArray *trustedRootCertificates; // @synthesize trustedRootCertificates;
@property(retain, nonatomic) NSMutableData *responseData; // @synthesize responseData;
- (id)synchronousResponseWithURL:(id)arg1 body:(id)arg2 httpMethod:(id)arg3 timeout:(int)arg4;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (_Bool)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (void)dealloc;

@end

@interface AnimationSpecRotate : AnimationSpec
{
    double from;
    double to;
    int axis;
}

@property(nonatomic) double to; // @synthesize to;
@property(nonatomic) double from; // @synthesize from;
@property(nonatomic) int axis; // @synthesize axis;
- (void)finalizeCAAnimation:(id)arg1 forKey:(id)arg2 onLayer:(id)arg3;
- (id)createAnimation:(id)arg1 forKey:(id)arg2 triggeredBy:(id)arg3 withParameters:(id)arg4 controller:(id)arg5;
- (id)animationKeyPath;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface AnimationSpecDelegate : NSObject
{
    CALayer *layer;
    NSString *key;
    AnimationSpec *spec;
}

+ (id)delegateWithLayer:(id)arg1 animationKey:(id)arg2 spec:(id)arg3;
@property(readonly, nonatomic) AnimationSpec *spec; // @synthesize spec;
@property(readonly, nonatomic) CALayer *layer; // @synthesize layer;
@property(readonly, nonatomic) NSString *key; // @synthesize key;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)dealloc;
- (void)releaseReferences;
- (id)initWithLayer:(id)arg1 animationKey:(id)arg2 spec:(id)arg3;

@end

@interface ScrollingPageView : UIScrollView
{
    struct CGSize pageSize;
    struct UIEdgeInsets padding;
}

@property(nonatomic) struct UIEdgeInsets padding; // @synthesize padding;
@property(nonatomic) struct CGSize pageSize; // @synthesize pageSize;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
@property(retain, nonatomic) UIView *pageView;

@end

@interface ThumbnailRenderOperation : NSOperation
{
    NSString *filePath;
    _Bool isScheduledForBackground;
    _Bool backgroundSupported;
    unsigned long long bgTask;
    _Bool isThumbnailGeneration;
    NSString *pdfFilePath;
    IssueDownloadMetadata *metadata;
    NSString *document1FilePath;
    NSString *document2FilePath;
    NSString *document1Password;
    NSString *document2Password;
    id <Issue> issue;
    int orientation;
    _Bool finished;
    _Bool isStoryBased;
}

@property(nonatomic) _Bool isStoryBased; // @synthesize isStoryBased;
@property(nonatomic) int orientation; // @synthesize orientation;
@property(retain, nonatomic) id <Issue> issue; // @synthesize issue;
@property(retain, nonatomic) NSString *document2Password; // @synthesize document2Password;
@property(retain, nonatomic) NSString *document1Password; // @synthesize document1Password;
@property(retain, nonatomic) NSString *document2FilePath; // @synthesize document2FilePath;
@property(retain, nonatomic) NSString *document1FilePath; // @synthesize document1FilePath;
@property(retain, nonatomic) IssueDownloadMetadata *metadata; // @synthesize metadata;
@property(retain, nonatomic) NSString *pdfFilePath; // @synthesize pdfFilePath;
@property(nonatomic) _Bool isThumbnailGeneration; // @synthesize isThumbnailGeneration;
@property(retain, nonatomic) NSString *filePath; // @synthesize filePath;
- (void)dealloc;
- (void)cancel;
- (void)main;
- (void)doWork;
- (void)finished;
- (struct CGPDFDocument *)newPdf:(id)arg1 password:(id)arg2;
- (void)scheduleForBackgroundTask;
- (struct CGSize)previewJpgSize;
- (struct CGSize)thumbnailJpgSize;
- (void)saveFullBitmapContext:(struct CGContext *)arg1 toFilePath:(id)arg2 compression:(double)arg3 size:(struct CGRect)arg4 interpolation:(int)arg5;
- (void)saveBitmapContext:(struct CGContext *)arg1 toFilePath:(id)arg2 compression:(double)arg3 size:(struct CGRect)arg4 interpolation:(int)arg5;
- (struct CGRect)drawPdfOffscreen:(struct CGPDFDocument *)arg1 pageNum:(unsigned long long)arg2 toContext:(struct CGContext *)arg3 contentSize:(struct CGSize)arg4 size:(struct CGSize)arg5 interpolation:(int)arg6 xOffset:(double)arg7 yOffset:(double)arg8;
- (struct CGRect)drawPdfOffscreen:(struct CGPDFDocument *)arg1 toContext:(struct CGContext *)arg2 contentSize:(struct CGSize)arg3 size:(struct CGSize)arg4 interpolation:(int)arg5 xOffset:(double)arg6;

@end

@interface SessionStateImpl : NSObject <SessionState>
{
    NSString *issueId;
    NSString *excerptId;
    NSString *pubId;
    NSString *lastViewedPage;
    NSString *lastViewedTab;
    NSString *lastViewedSortView;
}

@property(retain, nonatomic) NSString *lastViewedSortView; // @synthesize lastViewedSortView;
@property(retain, nonatomic) NSString *lastViewedTab; // @synthesize lastViewedTab;
@property(retain, nonatomic) NSString *lastViewedPage; // @synthesize lastViewedPage;
@property(retain, nonatomic) NSString *pubId; // @synthesize pubId;
@property(retain, nonatomic) NSString *excerptId; // @synthesize excerptId;
@property(retain, nonatomic) NSString *issueId; // @synthesize issueId;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IssueDownloadMetadata : NSObject
{
    id <User> user;
    id <Issue> _issue;
    unsigned long long downloadCount;
    unsigned long long downloadCompleteCount;
    unsigned long long operationCount;
    unsigned long long operationCompleteCount;
    unsigned long long operationCancelledCount;
    unsigned long long bytesDownloaded;
    NSMutableSet *spreadThumbnailsProcessed;
    _Bool downloadComplete;
    _Bool operationsComplete;
}

@property(retain, nonatomic) id <Issue> issue; // @synthesize issue=_issue;
@property(readonly, nonatomic) id <User> user; // @synthesize user;
@property(readonly, nonatomic, getter=isOperationsComplete) _Bool operationsComplete; // @synthesize operationsComplete;
@property(readonly, nonatomic, getter=isDownloadComplete) _Bool downloadComplete; // @synthesize downloadComplete;
@property(readonly, nonatomic) unsigned long long downloadCompleteCount; // @synthesize downloadCompleteCount;
@property(readonly, nonatomic) unsigned long long downloadCount; // @synthesize downloadCount;
@property(readonly, nonatomic) unsigned long long operationCompleteCount; // @synthesize operationCompleteCount;
@property(readonly, nonatomic) unsigned long long operationCancelledCount; // @synthesize operationCancelledCount;
@property(readonly, nonatomic) unsigned long long operationCount; // @synthesize operationCount;
@property(readonly, nonatomic) unsigned long long bytesDownloaded; // @synthesize bytesDownloaded;
- (_Bool)isSpreadThumbnailProcessed:(id)arg1;
- (void)setSpreadThumbnailProcessed:(id)arg1;
- (id)percentCompleteDescription;
- (double)percentComplete;
- (_Bool)isCompletedWithoutErrors;
- (_Bool)isIssueCompletelyDownloadedAndProcessed;
- (void)allBytesDownloaded;
- (void)allOperationsComplete;
- (unsigned long long)addBytesDownloaded:(unsigned long long)arg1;
- (unsigned long long)incrementOperationCancelledCount;
- (unsigned long long)incrementOperationCompleteCount;
- (unsigned long long)incrementDownloadCompleteCount;
- (void)setDownloadCount:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithUser:(id)arg1 issue:(id)arg2 operationCount:(unsigned long long)arg3;

@end

@interface SearchViewController : UIViewController <UITableViewDataSource, UITableViewDelegate, UISearchBarDelegate, HTTPClientDelegate>
{
    NSArray *_searchResults;
    NSArray *_searchCategoriesResults;
    UITableView *_tableView;
    UISearchBar *_searchBar;
    id <SearchViewControllerDelegate> _delegate;
    _Bool _magazineSelected;
    _Bool _keyboardIsShowing;
    NSString *_newsstandId;
    struct CGRect _maxHeightFrame;
}

@property(nonatomic, getter=isMagazineSelected) _Bool magazineSelected; // @synthesize magazineSelected=_magazineSelected;
@property(nonatomic) struct CGRect maxHeightFrame; // @synthesize maxHeightFrame=_maxHeightFrame;
@property(copy, nonatomic) NSString *newsstandId; // @synthesize newsstandId=_newsstandId;
@property(nonatomic) _Bool keyboardIsShowing; // @synthesize keyboardIsShowing=_keyboardIsShowing;
@property(nonatomic) id <SearchViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UISearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (id)_trimWhitespaceOnString:(id)arg1;
- (void)_animateTableViewHeight;
- (_Bool)_hasResult;
- (void)_keyboardDidShowNotificationHandler:(id)arg1;
- (void)_keyboardDidHideNotificationHandler:(id)arg1;
- (void)_orientationDidChangeNotificationHandler:(id)arg1;
- (void)_performCategoriesSearch:(id)arg1 limit:(unsigned long long)arg2;
- (void)_performSearch:(id)arg1 limit:(unsigned long long)arg2;
- (void)_performSearches:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)httpClient:(id)arg1 searchRequestFailedWithError:(id)arg2;
- (void)httpClient:(id)arg1 receivedSearchCategoryResults:(id)arg2;
- (void)httpClient:(id)arg1 receivedSearchResults:(id)arg2;
- (_Bool)searchBar:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
@property(retain, nonatomic) NSArray *searchCategoriesResults;
@property(retain, nonatomic) NSArray *searchResults;
- (void)dismiss;
- (void)didTapView:(id)arg1;
- (void)didTapBackButton:(id)arg1;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AlertsManager : NSObject
{
}

+ (id)sharedInstance;
- (void)showNetworkConnectionUnavailableForLinkAlert;
- (void)showGeneralNetworkCommunicationUnavailableAlert;
- (void)showErrorAlertWithTitle:(id)arg1 message:(id)arg2;

@end

@interface UserBookmark : SQLitePersistentObject
{
    int userPk;
    int type;
    int mediaType;
    NSString *publisherId;
    NSString *mediaId;
    NSString *mediaLocation;
    NSDate *updated;
    NSDate *created;
}

@property(copy, nonatomic) NSDate *created; // @synthesize created;
@property(copy, nonatomic) NSDate *updated; // @synthesize updated;
@property(copy, nonatomic) NSString *mediaLocation; // @synthesize mediaLocation;
@property(copy, nonatomic) NSString *mediaId; // @synthesize mediaId;
@property(copy, nonatomic) NSString *publisherId; // @synthesize publisherId;
@property(nonatomic) int mediaType; // @synthesize mediaType;
@property(nonatomic) int type; // @synthesize type;
@property(nonatomic) int userPk; // @synthesize userPk;

@end

@interface ArticleTOCViewController : UITableViewController
{
    NSString *cellNibName;
    id <Issue> issue;
    id <TableOfContentsViewControllerDelegate> tocDelegate;
    NSIndexPath *initialIndexPath;
    int pageOrientation;
    UITableViewCell *tableViewCell;
}

@property(nonatomic) id <TableOfContentsViewControllerDelegate> tocDelegate; // @synthesize tocDelegate;
@property(nonatomic) int pageOrientation; // @synthesize pageOrientation;
@property(retain, nonatomic) id <Issue> issue; // @synthesize issue;
@property(retain, nonatomic) NSIndexPath *initialIndexPath; // @synthesize initialIndexPath;
@property(retain, nonatomic) NSString *cellNibName; // @synthesize cellNibName;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 indentationLevelForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)configureCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)createArticleChooserTableViewCell;
- (void)close;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface ArticleTOCTableViewCell : UITableViewCell
{
    UILabel *titleLabel;
    UILabel *blurbLabel;
    UIImageView *iconView;
}

@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel;
@property(retain, nonatomic) UIImageView *iconView; // @synthesize iconView;
@property(retain, nonatomic) UILabel *blurbLabel; // @synthesize blurbLabel;
- (void)dealloc;

@end

@interface PageRange : NSObject
{
    NSString *startFolio;
    NSString *endFolio;
    struct _NSRange range;
}

@property(nonatomic) struct _NSRange range; // @synthesize range;
@property(readonly, nonatomic) NSString *startFolio; // @synthesize startFolio;
@property(readonly, nonatomic) NSString *endFolio; // @synthesize endFolio;
- (void)dealloc;
- (id)initWithStart:(id)arg1 end:(id)arg2;

@end

@interface SubscriptionExpirationImpl : NSObject <SubscriptionExpiration>
{
    NSString *pubName;
    NSString *pubId;
    NSNumber *numberOfIssues;
    NSNumber *issuesRemaining;
    _Bool displayUpsellOnExpire;
    NSNumber *price;
    _Bool vatApplicable;
    _Bool includesVAT;
    NSString *offerURL;
}

@property(retain, nonatomic) NSString *offerURL; // @synthesize offerURL;
@property(nonatomic) _Bool includesVAT; // @synthesize includesVAT;
@property(nonatomic) _Bool vatApplicable; // @synthesize vatApplicable;
@property(retain, nonatomic) NSNumber *price; // @synthesize price;
@property(nonatomic) _Bool displayUpsellOnExpire; // @synthesize displayUpsellOnExpire;
@property(retain, nonatomic) NSNumber *issuesRemaining; // @synthesize issuesRemaining;
@property(retain, nonatomic) NSNumber *numberOfIssues; // @synthesize numberOfIssues;
@property(retain, nonatomic) NSString *pubId; // @synthesize pubId;
@property(retain, nonatomic) NSString *pubName; // @synthesize pubName;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Utilities : NSObject
{
}

+ (void)setStagingFlag:(_Bool)arg1;
+ (_Bool)isOnStaging;
+ (struct CGSize)screenSize;
+ (_Bool)isRetinaDisplay;
+ (id)thumbnailImageForCategoryId:(id)arg1;
+ (id)placeholderThumbnail;
+ (id)retrieveObjectFromKeyChainWithKey:(id)arg1;
+ (void)removeObjectFromKeychain:(id)arg1;
+ (void)saveObjectToKeychain:(id)arg1 key:(id)arg2;
+ (id)appVersionString;
+ (id)bundleVersionString;
+ (id)shortVersionString;
+ (id)dateFromWSAString:(id)arg1;
+ (id)WSADefaultDateFormatter;

@end

@interface UserIssueMetadata : NSObject
{
    id <Issue> issue;
    NSMutableDictionary *pageOffsets;
    NSMutableDictionary *flags;
    NSLock *lock;
}

- (double)verticalOffsetForPage:(id)arg1 inHeight:(double)arg2 forOrientation:(int)arg3;
- (void)setVerticalOffset:(double)arg1 forPage:(id)arg2 inHeight:(double)arg3 snapHeight:(double)arg4 forOrientation:(int)arg5 linkedOrientations:(_Bool)arg6;
- (_Bool)saveVerticalOffsetPercent:(float)arg1 forFolio:(id)arg2 forOrientation:(int)arg3;
- (void)persist;
- (void)persistInBackground;
- (void)load;
- (void)dealloc;
- (id)initWithIssue:(id)arg1;

@end

@interface SettingsInternationalStoresViewController : SettingsBaseTableViewController
{
    NSArray *_newsstands;
    _Bool _newsstandsAvailable;
    NSObject<User> *_currentUser;
    NSIndexPath *_selectedIndexPath;
}

@property(retain, nonatomic) NSIndexPath *selectedIndexPath; // @synthesize selectedIndexPath=_selectedIndexPath;
@property(retain, nonatomic) NSObject<User> *currentUser; // @synthesize currentUser=_currentUser;
@property(nonatomic, getter=isNewsstandsAvailable) _Bool newsstandsAvailable; // @synthesize newsstandsAvailable=_newsstandsAvailable;
@property(retain, nonatomic) NSArray *newsstands; // @synthesize newsstands=_newsstands;
- (void)didReceiveMemoryWarning;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)configureCell:(id)arg1 text:(id)arg2 image:(id)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)_dismissScreen;
- (void)_postNewsstandNotification;
- (void)_submitNewsstand;
- (id)_imageForCountryWithName:(id)arg1;
- (id)_determineSelectedIndexPathFromNewsstandsWithId:(id)arg1;
- (void)_determineSelectedIndexPathFromNewsstands;
- (void)viewDidAppear:(_Bool)arg1;
- (void)newsstandsDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface CategoriesListView : UIView
{
    id dataSource;
    id delegate;
    NSString *title;
    UILabel *titleLabel;
    int columns;
    _Bool hasImages;
    UIScrollView *scrollView;
    UIView *contentView;
    CategoriesListViewCell *focusedCell;
}

@property(retain, nonatomic) CategoriesListViewCell *focusedCell; // @synthesize focusedCell;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView;
@property(nonatomic) int columns; // @synthesize columns;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel;
@property(retain, nonatomic) NSString *title; // @synthesize title;
@property(nonatomic) id delegate; // @synthesize delegate;
@property(nonatomic) id dataSource; // @synthesize dataSource;
- (void)cellSelected:(id)arg1;
- (void)reloadData;

@end

@interface ModalInsetViewController : UIViewController <NetworkServicesManagerDelegate>
{
    id <ModalInsetViewControllerDelegate> delegate;
    ModalInsetView *panelView;
    UIView *shieldView;
    UIView *parentView;
    struct CGRect sourceViewMetric;
    _Bool centeredInSourceView;
    _Bool showHidden;
    _Bool showingInsetView;
    UIImageView *animatingImageView;
    UIView *imageOfZoomFromView;
    ScreenActivityIndicator *zoomSpinner;
    UILabel *_titleLabel;
    NetworkServicesManager *networkManager;
}

@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) NetworkServicesManager *networkManager; // @synthesize networkManager;
@property(retain, nonatomic) ScreenActivityIndicator *zoomSpinner; // @synthesize zoomSpinner;
@property(retain, nonatomic) UIView *imageOfZoomFromView; // @synthesize imageOfZoomFromView;
@property(retain, nonatomic) UIImageView *animatingImageView; // @synthesize animatingImageView;
@property(nonatomic) _Bool showingInsetView; // @synthesize showingInsetView;
@property(nonatomic) _Bool showHidden; // @synthesize showHidden;
@property(nonatomic) UIView *parentView; // @synthesize parentView;
@property(retain, nonatomic) UIView *shieldView; // @synthesize shieldView;
@property(retain, nonatomic) ModalInsetView *panelView; // @synthesize panelView;
@property(nonatomic) id <ModalInsetViewControllerDelegate> delegate; // @synthesize delegate;
- (void)hide;
- (void)retryAfterNetworkServicesManagerError:(id)arg1;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (void)didGoOnline:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)hideViewTimerFired:(id)arg1;
- (void)hideView:(id)arg1;
- (void)showCloseButton;
- (void)hideCloseButton;
- (void)contractToCenterViewWithSize:(struct CGSize)arg1 withCloseButton:(_Bool)arg2;
- (void)expandViewFullScreen;
- (void)showViewCenteredWithSize:(struct CGSize)arg1 withCloseButton:(_Bool)arg2;
- (void)showViewActualSizeOnTopWithCloseButton:(_Bool)arg1;
- (void)showViewActualSizeWithCloseButton:(_Bool)arg1;
- (void)createViewActualSizeOnTopWithCloseButton:(_Bool)arg1;
- (void)createViewActualSizeWithCloseButton:(_Bool)arg1;
- (void)showViewFullScreenFromPoint:(struct CGPoint)arg1 withCloseButton:(_Bool)arg2;
- (void)showViewFullScreenWithCloseButton:(_Bool)arg1;
- (void)showViewFullScreenFromPoint:(struct CGPoint)arg1 inView:(id)arg2 withCloseButton:(_Bool)arg3;
- (void)focusOnZoomImageDidComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)showAnimationDidComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)showAnimationComplete;
- (void)expandViewFullScreenDidComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)contractToCenterViewDidComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)addShieldView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithParentView:(id)arg1;
- (id)init;
- (void)initializeModalInsetViewController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ModalInsetView : UIView
{
    UIViewController *controller;
    struct CGRect closeButtonRect;
    _Bool closeButtonHighlighted;
    UIImage *panelImage;
    _Bool hasCloseButton;
    UIImageView *imageView;
    UIView *bgView;
    unsigned long long defaultAutoresizingMask;
    _Bool forceZeroCloseButtonInset;
}

@property(retain, nonatomic) UIView *bgView; // @synthesize bgView;
@property(nonatomic) _Bool forceZeroCloseButtonInset; // @synthesize forceZeroCloseButtonInset;
@property(nonatomic) unsigned long long defaultAutoresizingMask; // @synthesize defaultAutoresizingMask;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView;
@property(nonatomic) _Bool hasCloseButton; // @synthesize hasCloseButton;
@property(retain, nonatomic) UIImage *panelImage; // @synthesize panelImage;
@property(nonatomic) struct CGRect closeButtonRect; // @synthesize closeButtonRect;
@property(retain, nonatomic) UIViewController *controller; // @synthesize controller;

@end

@interface ZinioShopViewController : BaseViewController <NSFetchedResultsControllerDelegate, ZinioShopHeroScrollViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, HorizontalCollectionViewControllerDelegate, GridCollectionViewControllerDelegate, SearchViewControllerDelegate, UISearchBarDelegate, HorizontalSlidingMenuViewControllerDelegate, ShopPageDataSourceDelegate, DeepLinking>
{
    ZinioShopHeroScrollView *heroScrollView;
    UIView *heroDropShadowView;
    ZinioShopCategoriesDatasource *_categoriesDataSource;
    UIButton *searchButton;
    ZGCategory *_currentCategory;
    _Bool rootObjectWillChange;
    _Bool didChangeNewsstands;
    ZinioShopViewController *rootShopStackViewController;
    BuyViewController *buyViewController;
    IntroViewController *introViewController;
    NSString *fromCategoryId;
    _Bool trackBannerImpression;
    UICollectionView *_collectionView;
    UIScrollView *_containerScrollView;
    UILabel *_collectionViewTitle;
    SearchViewController *_improvedSearchViewController;
    UISearchBar *_searchBar;
    HorizontalSlidingMenuViewController *_horizontalSlidingMenuViewController;
    GridCollectionViewController *_childCategoryCollectionViewController;
    ShopPageDataSource *_shopPageDataSource;
    NSDictionary *_deepLinking;
    NSMutableArray *_horizontalCollectionViewControllers;
    NSString *_titleString;
    UICollectionViewController *_shopCategoryCollectionViewController;
    CategoryViewController *_categoryViewController;
    NSArray *sortedHeroItems;
}

@property(retain, nonatomic) NSDictionary *deepLinking; // @synthesize deepLinking=_deepLinking;
@property(nonatomic) ShopPageDataSource *shopPageDataSource; // @synthesize shopPageDataSource=_shopPageDataSource;
@property(retain, nonatomic) UICollectionViewController *shopCategoryCollectionViewController; // @synthesize shopCategoryCollectionViewController=_shopCategoryCollectionViewController;
@property(copy, nonatomic) NSString *titleString; // @synthesize titleString=_titleString;
@property(retain, nonatomic) GridCollectionViewController *childCategoryCollectionViewController; // @synthesize childCategoryCollectionViewController=_childCategoryCollectionViewController;
@property(retain, nonatomic) HorizontalSlidingMenuViewController *horizontalSlidingMenuViewController; // @synthesize horizontalSlidingMenuViewController=_horizontalSlidingMenuViewController;
@property(retain, nonatomic) UISearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(retain, nonatomic) SearchViewController *improvedSearchViewController; // @synthesize improvedSearchViewController=_improvedSearchViewController;
@property(retain, nonatomic) UILabel *collectionViewTitle; // @synthesize collectionViewTitle=_collectionViewTitle;
@property(retain, nonatomic) UIScrollView *containerScrollView; // @synthesize containerScrollView=_containerScrollView;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) NSString *fromCategoryId; // @synthesize fromCategoryId;
@property(retain, nonatomic) BuyViewController *buyViewController; // @synthesize buyViewController;
@property(retain, nonatomic) UIView *heroDropShadowView; // @synthesize heroDropShadowView;
@property(nonatomic) _Bool didChangeNewsstands; // @synthesize didChangeNewsstands;
@property(retain, nonatomic) UIButton *searchButton; // @synthesize searchButton;
@property(retain, nonatomic) NSArray *sortedHeroItems; // @synthesize sortedHeroItems;
@property(retain, nonatomic) ZinioShopHeroScrollView *heroScrollView; // @synthesize heroScrollView;
@property(retain, nonatomic) CategoryViewController *categoryViewController; // @synthesize categoryViewController=_categoryViewController;
- (void)_presentBuyViewControllerForMagazine:(id)arg1;
- (double)_heightOfHorizontalScrollViewsPlusTopBanner;
- (unsigned long long)numberOfCategories;
- (void)_reloadData:(id)arg1;
- (void)_updateTitle;
- (void)_setUpChildCategoryCollectionView;
- (void)_setUpChildCategoryCollectionViewInsets;
- (void)_setUpHorizontalSlidingMenu;
- (void)_addSearchButtonToViewHierarchy;
- (void)_addSearchBarToViewHierarchy;
- (void)_dismissSearchViewAnimated:(_Bool)arg1;
- (void)_setUpHorizontalCollectionViews;
- (void)collectionView:(id)arg1 didUnhighlightItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)launchBuyPublication:(id)arg1 newsstandId:(id)arg2;
- (void)launchBuyIssue:(id)arg1;
- (void)resetUI;
- (void)stopObservingFlag;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (_Bool)shouldShowFullScreenOfflineMessageWhenOffline;
- (_Bool)shouldActAsNetworkServicesManagerDelegate;
- (void)dealloc;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)configureViewForInteraceOrientation:(_Bool)arg1;
- (void)layoutCollectionViews;
- (void)launchBuyViewForMagazine:(id)arg1 fromView:(id)arg2;
@property(retain, nonatomic) ZinioShopCategoriesDatasource *categoriesDataSource;
- (void)searchViewController:(id)arg1 didSelectCategory:(id)arg2;
- (void)searchViewController:(id)arg1 didSelectMagazine:(id)arg2;
- (void)showSearchView:(id)arg1;
- (void)searchViewControllerShouldDismiss:(id)arg1 animated:(_Bool)arg2;
- (void)shopPageDataSource:(id)arg1 magazinesDidLoad:(id)arg2 categoryId:(id)arg3;
- (void)shopPageDataSource:(id)arg1 categoriesDidLoad:(id)arg2;
- (void)shopPageDataSource:(id)arg1 mainCategoriesDidLoad:(id)arg2;
- (void)showCategory:(id)arg1;
- (void)showShopCategory:(id)arg1;
- (void)didShowHeroItem:(unsigned long long)arg1;
- (void)didSelectHeroItem:(unsigned long long)arg1;
- (id)heroItemTitleForIndex:(unsigned long long)arg1;
- (id)heroImageForIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfHeroItems;
- (unsigned long long)actualNumberOfHeroItems;
- (void)horizontalCollectionViewControllerDidTapViewAll:(id)arg1;
- (void)horizontalCollectionViewController:(id)arg1 didSelectPublication:(id)arg2;
- (void)horizontalCollectionViewController:(id)arg1 didSelectMagazine:(id)arg2;
- (void)gridCollectionViewController:(id)arg1 didSelectMagazine:(id)arg2;
- (void)gridCollectionViewController:(id)arg1 didSelectPublication:(id)arg2;
- (void)horizontalSlidingMenuViewController:(id)arg1 didSelectCategory:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(retain, nonatomic) ZGCategory *currentCategory;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)introViewControllerDidClose:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)imageDidDownload:(id)arg1;
- (void)reloadData;
- (void)BuyPageClosed:(id)arg1;
- (void)configureViewForModel;
- (void)didTapDismissButton:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZinioCoversPagingScrollView : UIScrollView <UIScrollViewDelegate>
{
    ColorizedPageControl *pageControl;
    NSMutableSet *recycledCovers;
    NSMutableDictionary *visibleCovers;
    double rowHeight;
    unsigned long long numberOfRows;
    unsigned long long numberOfColumns;
    unsigned long long numberOfCovers;
    unsigned long long numberOfCoversPerPage;
    id <ZinioCoversGridViewDataSource> coverImageDatasource;
    id <ZinioCoversGridViewDelegate> coverImageDelegate;
    _Bool layoutAnimated;
}

@property(nonatomic) _Bool layoutAnimated; // @synthesize layoutAnimated;
@property(nonatomic) double rowHeight; // @synthesize rowHeight;
@property(nonatomic) id <ZinioCoversGridViewDelegate> coverImageDelegate; // @synthesize coverImageDelegate;
@property(nonatomic) id <ZinioCoversGridViewDataSource> coverImageDatasource; // @synthesize coverImageDatasource;
@property(nonatomic) unsigned long long numberOfCovers; // @synthesize numberOfCovers;
@property(nonatomic) unsigned long long numberOfColumns; // @synthesize numberOfColumns;
@property(nonatomic) unsigned long long numberOfCoversPerPage; // @synthesize numberOfCoversPerPage;
@property(retain, nonatomic) ColorizedPageControl *pageControl; // @synthesize pageControl;
@property(nonatomic) unsigned long long numberOfRows; // @synthesize numberOfRows;
- (void)dealloc;
- (id)dequeueRecycledCover;
- (id)coverImageViewForIndex:(unsigned long long)arg1;
- (struct CGPoint)positionForIndex:(unsigned long long)arg1;
- (void)refreshCoverForIndex:(unsigned long long)arg1;
- (void)layoutSubviews;
- (void)reloadDataPreserveSelection;
- (void)reloadData;
- (void)reloadDataForPage:(struct CGPoint)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)updateContentSize;
- (void)updatePageControlIndex;
- (void)changePage:(id)arg1;
- (void)handleCoverTap:(id)arg1;
- (double)coverCellWidth;
- (void)setFrame:(struct CGRect)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CategoriesListViewCell : UIView
{
    NSString *title;
    NSString *identifier;
    NSURL *url;
    UIImage *image;
    ZGThumbnail *thumbnail;
    id delegate;
    int number;
    float selectionOpacity;
    NSURLConnection *imageServerConnection;
    NSMutableData *imageData;
    _Bool showUpperLine;
    _Bool showBottomLine;
}

+ (id)cellWithTitle:(id)arg1 identifier:(id)arg2 image:(id)arg3;
+ (id)cellWithTitle:(id)arg1 identifier:(id)arg2 imageURL:(id)arg3;
+ (id)cellWithTitle:(id)arg1 identifier:(id)arg2 thumbnail:(id)arg3;
+ (id)cellWithTitle:(id)arg1 identifier:(id)arg2;
@property(nonatomic) _Bool showBottomLine; // @synthesize showBottomLine;
@property(nonatomic) _Bool showUpperLine; // @synthesize showUpperLine;
@property(retain, nonatomic) ZGThumbnail *thumbnail; // @synthesize thumbnail;
@property(retain, nonatomic) NSMutableData *imageData; // @synthesize imageData;
@property(retain, nonatomic) NSURLConnection *imageServerConnection; // @synthesize imageServerConnection;
@property(nonatomic) int number; // @synthesize number;
@property(nonatomic) id delegate; // @synthesize delegate;
@property(retain, nonatomic) UIImage *image; // @synthesize image;
@property(retain, nonatomic) NSURL *url; // @synthesize url;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier;
@property(retain, nonatomic) NSString *title; // @synthesize title;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)tapTimerFired:(id)arg1;
- (void)handleTap:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;

@end

@interface ZinioShopHeroScrollView : UIScrollView <UIScrollViewDelegate>
{
    NSMutableSet *recycledHeroes;
    NSMutableSet *visibleHeroes;
    NSMutableSet *recycledLabels;
    NSMutableSet *visibleLabels;
    unsigned long long firstVisibleHero;
    unsigned long long lastVisibleHero;
    id <ZinioShopHeroScrollViewDataSource> heroDataSource;
    id <ZinioShopHeroScrollViewDelegate> heroDelegate;
    _Bool shouldAutoAdvance;
    _Bool userDidDrag;
    unsigned long long selectedIndex;
}

@property(nonatomic) _Bool shouldAutoAdvance; // @synthesize shouldAutoAdvance;
@property(nonatomic) id <ZinioShopHeroScrollViewDelegate> heroDelegate; // @synthesize heroDelegate;
@property(nonatomic) id <ZinioShopHeroScrollViewDataSource> heroDataSource; // @synthesize heroDataSource;
- (void)dealloc;
- (id)dequeueRecycledHero;
- (id)dequeueRecycledLabel;
- (void)layoutSubviews;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)setSelectedIndex:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)handleHeroTap:(id)arg1;
- (void)updateContentSize;
- (void)autoAdvanceScrollView;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface iPadLibraryTableViewCell : UITableViewCell
{
    UIImageView *_thumbnail;
    UILabel *_titleLabel;
    UILabel *_dateLabel;
    UILabel *_sizeLabel;
    UIButton *_downloadButton;
    UIProgressView *_progressView;
    NSString *_issueId;
    NSString *_publicationId;
    NSIndexPath *_indexPath;
    long long _downloadState;
}

+ (id)readyToViewImage;
+ (id)pauseImage;
+ (id)downloadImage;
+ (id)downloadDidCompleteNotificationNameForIssueId:(id)arg1;
+ (id)downloadDidProgressNotificationNameForIssueId:(id)arg1;
+ (double)height;
@property(copy, nonatomic) NSString *publicationId; // @synthesize publicationId=_publicationId;
@property(retain, nonatomic) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
@property(copy, nonatomic) NSString *issueId; // @synthesize issueId=_issueId;
@property(retain, nonatomic) UIProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) UIButton *downloadButton; // @synthesize downloadButton=_downloadButton;
@property(retain, nonatomic) UILabel *sizeLabel; // @synthesize sizeLabel=_sizeLabel;
@property(retain, nonatomic) UILabel *dateLabel; // @synthesize dateLabel=_dateLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *thumbnail; // @synthesize thumbnail=_thumbnail;
- (void)_downloadDidComplete:(id)arg1;
- (void)_downloadDidProgress:(id)arg1;
- (void)_launchReader;
- (void)_pauseDownload;
- (void)_downloadIssue;
- (void)didTapDownloadButton:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(nonatomic) long long downloadState;
- (void)_setupThumbnailImageForIssue:(id)arg1;
- (void)_internalSetup;
- (void)setUpWithIssue:(id)arg1 editing:(_Bool)arg2 indexPath:(id)arg3;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface HorizontalIconListView : UIView
{
    NSMutableArray *iconList;
    double horizontalPadding;
    double verticalOffset;
}

@property(nonatomic) double verticalOffset; // @synthesize verticalOffset;
@property(nonatomic) double horizontalPadding; // @synthesize horizontalPadding;
@property(retain, nonatomic) NSMutableArray *iconList; // @synthesize iconList;
- (void)dealloc;
- (void)addImages:(id)arg1;
- (id)addImageAsIcon:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setup;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface EmbossedLineView : UIView
{
    int slotLocation;
    int lineLocation;
    double arcHeight;
}

+ (void)setContextStrokeColorToHighlightColor:(struct CGContext *)arg1;
@property(nonatomic) double arcHeight; // @synthesize arcHeight;
@property(nonatomic) int lineLocation; // @synthesize lineLocation;
@property(nonatomic) int slotLocation; // @synthesize slotLocation;
- (void)drawHorizontalLines:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawArc:(double)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)configureDefaults;

@end

@interface TabbedBarButtonItemView : BaseBarButtonItemView
{
}

@end

@interface SettingsLegalNoticeViewController : UIViewController <UIWebViewDelegate, UIAlertViewDelegate>
{
    UIWebView *_legalNoticeWebView;
}

@property(retain, nonatomic) UIWebView *legalNoticeWebView; // @synthesize legalNoticeWebView=_legalNoticeWebView;
- (void)didTapDismissButton:(id)arg1;
- (id)_HTMLlegalNoticeText;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SettingsTableView : UITableView
{
}

@end

@interface iPadLibraryFilterContainerView : UIView
{
    id <iPadLibraryFilterContainerViewDelegate> _delegate;
    UISegmentedControl *_segmentedControl;
    UIButton *_sortButton;
    _Bool _isSortingByDate;
    _Bool _isAscending;
}

@property(nonatomic) _Bool isAscending; // @synthesize isAscending=_isAscending;
@property(retain, nonatomic) UIButton *sortButton; // @synthesize sortButton=_sortButton;
@property(nonatomic) _Bool isSortingByDate; // @synthesize isSortingByDate=_isSortingByDate;
@property(nonatomic) id <iPadLibraryFilterContainerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UISegmentedControl *segmentedControl; // @synthesize segmentedControl=_segmentedControl;
- (void)_updateSortButtonTitle;
- (void)_internalInit;
- (void)sortAscendingDescendingButtonDidTap:(id)arg1;
- (void)sortButtonDidTap:(id)arg1;
- (void)segmentedControlValueDidChange:(id)arg1;
- (void)searchButtonDidTap:(id)arg1;
- (void)disableSegmentAtIndex:(unsigned long long)arg1;
- (void)updateSegmentedControlEnabledMode:(_Bool)arg1;
@property(nonatomic) long long filterFlag;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;

@end

@interface TabbedNavigationController : UINavigationController <TabbedController, NewSettingsViewControllerDelegate>
{
    NSArray *tabViewControllers;
    NSMutableDictionary *tabNavigationStacks;
    NSArray *tabTitles;
    unsigned long long selectedTabIndex;
    UIToolbar *tabToolbar;
    NSArray *tabIconPdfs;
    UIImage *tabToolbarBackgroundImage;
    id <TabbedControllerDelegate> tabDelegate;
}

@property(copy, nonatomic) NSArray *tabViewControllers; // @synthesize tabViewControllers;
@property(retain, nonatomic) UIImage *tabToolbarBackgroundImage; // @synthesize tabToolbarBackgroundImage;
@property(retain, nonatomic) UIToolbar *tabToolbar; // @synthesize tabToolbar;
@property(copy, nonatomic) NSArray *tabTitles; // @synthesize tabTitles;
@property(copy, nonatomic) NSArray *tabIconPdfs; // @synthesize tabIconPdfs;
@property(nonatomic) unsigned long long selectedTabIndex; // @synthesize selectedTabIndex;
@property(nonatomic) id <TabbedControllerDelegate> tabDelegate; // @synthesize tabDelegate;
- (void)dismissModalViewControllerAnimated:(_Bool)arg1;
- (void)presentModalViewController:(id)arg1 animated:(_Bool)arg2;
- (id)popViewControllerAnimated:(_Bool)arg1;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)setupToolbarItems:(id)arg1;
- (void)settingsViewControllerDidTapDismissButton:(id)arg1;
- (id)navigationStackForTabIndex:(unsigned long long)arg1;
- (void)setNavigationStack:(id)arg1 forTabIndex:(unsigned long long)arg2;
- (id)tabBarButtonForTabIndex:(unsigned long long)arg1;
@property(nonatomic) UIViewController *selectedTabViewController;
- (id)tabViewControllerAtIndex:(unsigned long long)arg1;
- (void)itemTap:(id)arg1;
- (void)dismissedPopoverControllerFromTab:(unsigned long long)arg1;
- (void)presentedPopoverControllerFromTab:(unsigned long long)arg1 highlighted:(_Bool)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)didReceiveMemoryWarning;
- (void)configureToolbarItems;
- (void)awakeFromNib;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZinioShopCategoriesDatasource : NSObject <CategoriesListViewDataSource>
{
    ZGCategory *targetCategory;
    ZGCategoryPublicationList *targetPublicationList;
    NSArray *sortedSubcategories;
    NSArray *sortedHeroItems;
    NSArray *sortedPromoCategories;
    NSArray *sortedCategoryPublicationLists;
    NSArray *sortedCurrentPublicationListContent;
    NSMutableDictionary *categoryCells;
}

@property(retain, nonatomic) ZGCategoryPublicationList *targetPublicationList; // @synthesize targetPublicationList;
@property(retain, nonatomic) ZGCategory *targetCategory; // @synthesize targetCategory;
- (_Bool)_shouldContinueExecution:(SEL)arg1 object:(id)arg2 counter:(long long *)arg3;
- (void)dealloc;
- (void)faultManagedObjects;
- (void)faultManagedObjects:(id)arg1;
- (unsigned long long)numberOfSubcategories;
- (id)coverImageForIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfCovers;
- (id)categoryPublicationListForIndex:(unsigned long long)arg1;
- (id)promoCategoryForIndex:(unsigned long long)arg1;
- (int)numberOfCategoriesForListView:(id)arg1;
- (id)titleForListView:(id)arg1;
- (id)cellForCategoryNumber:(int)arg1 listView:(id)arg2;
- (id)categoryForIndex:(unsigned long long)arg1;
- (id)promotedContentForIndex:(unsigned long long)arg1;
- (id)init;

@end

@interface ZinioCoverButton : UIView
{
    UIButton *swapImageButton;
    UIButton *imageButton;
    UIImage *buttonImage;
    UILabel *_label;
    Magazine *_magazine;
}

@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
@property(retain, nonatomic) Magazine *magazine; // @synthesize magazine=_magazine;
@property(retain, nonatomic) UIImage *buttonImage; // @synthesize buttonImage;
- (void)_coverImageDidDownloadNotification:(id)arg1;
- (void)_updateCoverImage:(id)arg1;
- (id)_updatedCoverURLString;
- (void)setUpWithMagazine:(id)arg1;
- (void)dealloc;
- (void)addTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned long long)arg3;
- (id)imageForState:(unsigned long long)arg1;
- (void)swapButtons;
- (void)setLabelText:(id)arg1;
- (void)setImage:(id)arg1 animated:(_Bool)arg2;
- (struct CGRect)maximumBoundsForImageSize:(struct CGSize)arg1;
- (void)setTag:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ProductDetailsScrollView : UIScrollView
{
    id <ProductDetailsScrollViewDelegate> productDetailsScrollViewDelegate;
}

@property(nonatomic) id <ProductDetailsScrollViewDelegate> productDetailsScrollViewDelegate; // @synthesize productDetailsScrollViewDelegate;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ZinioCoversVerticalScrollView : UIScrollView <UIScrollViewDelegate>
{
    NSMutableSet *reusableCells;
    NSMutableDictionary *sectionFrameDictionary;
    NSMutableDictionary *visibleCells;
    NSMutableSet *reusableTitles;
    NSMutableDictionary *visibleTitlesDictionary;
    unsigned long long firstVisibleRow;
    unsigned long long lastVisibleRow;
    unsigned long long numberOfColumns;
    unsigned long long sectionCount;
    double rowHeight;
    double cellWidth;
    double cellHeight;
    double leftHorizontalPadding;
    double rightHorizontalPadding;
    UIView *headerView;
    UITextView *headerTextView;
    UILabel *headerLabel;
    EmbossedLineView *headerEmbossedLineView;
    _Bool reserveFirstCellSpotForHeaderText;
    _Bool rtl;
    id <ZinioCoversVerticalScrollViewDelegate> scrollViewDelegate;
    id <ZinioCoversVerticalScrollViewDataSource> scrollViewDataSource;
}

@property(nonatomic) _Bool rtl; // @synthesize rtl;
@property(nonatomic) double rightHorizontalPadding; // @synthesize rightHorizontalPadding;
@property(nonatomic) double leftHorizontalPadding; // @synthesize leftHorizontalPadding;
@property(retain, nonatomic) EmbossedLineView *headerEmbossedLineView; // @synthesize headerEmbossedLineView;
@property(retain, nonatomic) UITextView *headerTextView; // @synthesize headerTextView;
@property(retain, nonatomic) UILabel *headerLabel; // @synthesize headerLabel;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView;
@property(nonatomic) double cellHeight; // @synthesize cellHeight;
@property(nonatomic) double rowHeight; // @synthesize rowHeight;
@property(nonatomic) id <ZinioCoversVerticalScrollViewDataSource> scrollViewDataSource; // @synthesize scrollViewDataSource;
@property(nonatomic) id <ZinioCoversVerticalScrollViewDelegate> scrollViewDelegate; // @synthesize scrollViewDelegate;
- (void)dealloc;
- (void)scrollToRowAtIndexPath:(id)arg1 animated:(_Bool)arg2;
- (void)handleCellTap:(id)arg1;
- (void)handleSelectCell:(id)arg1;
- (id)visibleCellsIndexPaths;
- (struct CGPoint)positionForCell:(id)arg1;
- (void)updateImageForCell:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)refreshCellForIndexPath:(id)arg1;
- (void)reloadVisibleCells;
- (void)layoutSubviews;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)reloadData:(_Bool)arg1;
- (void)setHeaderViewTitle:(id)arg1;
- (void)setHeaderLabelText:(id)arg1;
- (double)sectionTitleHeightForSection:(unsigned long long)arg1;
- (unsigned long long)rowIndexInSection:(unsigned long long)arg1 forCoordinate:(double)arg2;
- (unsigned long long)sectionIndexForCoordinate:(double)arg1;
- (id)dequeueReusableTitle;
- (void)setupCellWidth;
- (id)dequeueReusableCell;
- (void)setFrame:(struct CGRect)arg1;
@property(nonatomic) unsigned long long numberOfColumns; // @synthesize numberOfColumns;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ScreenActivityIndicator : UIView
{
    UIActivityIndicatorView *activityIndicator;
    NSTimer *displayTimer;
    float opacity;
    int style;
    UIView *parentView;
}

+ (id)screenActivityIndicator;
+ (id)screenActivityIndicatorOfSize:(struct CGSize)arg1 style:(int)arg2;
@property(nonatomic) int style; // @synthesize style;
@property(nonatomic) float opacity; // @synthesize opacity;
@property(retain, nonatomic) NSTimer *displayTimer; // @synthesize displayTimer;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(nonatomic) UIView *parentView; // @synthesize parentView;
- (void)fadeOutDidComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)stopActivityIndicator:(_Bool)arg1;
- (void)removeFromParent;
- (void)displayTimerFired:(id)arg1;
- (void)startActivityIndicatorInView:(id)arg1 afterTimeInterval:(double)arg2;
- (void)startActivityIndicatorInView:(id)arg1;

@end

@interface ExploreAutoRotateView : UIView <ExploreExcerptViewDelegate>
{
    NSArray *excerpts;
    long long currentExcerptIndex;
    NSTimer *rotateTimer;
    ExploreExcerptView *loadedExcerptView;
    ExploreExcerptView *excerpt1;
    ExploreExcerptView *excerpt2;
    _Bool firstExcerpt;
    float bounceBack;
    _Bool paused;
    _Bool noRotateDelayOnNextPause;
    ExploreAutoRotateInfoView *infoView;
    double animationDuration;
}

@property(nonatomic) double animationDuration; // @synthesize animationDuration;
@property(retain, nonatomic) ExploreAutoRotateInfoView *infoView; // @synthesize infoView;
@property(nonatomic) _Bool paused; // @synthesize paused;
@property(retain, nonatomic) ExploreExcerptView *excerpt2; // @synthesize excerpt2;
@property(retain, nonatomic) ExploreExcerptView *excerpt1; // @synthesize excerpt1;
@property(retain, nonatomic) ExploreExcerptView *loadedExcerptView; // @synthesize loadedExcerptView;
@property(retain, nonatomic) NSTimer *rotateTimer; // @synthesize rotateTimer;
@property(retain, nonatomic) NSArray *excerpts; // @synthesize excerpts;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)excerptViewHasLoaded:(id)arg1;
- (void)handleTap:(id)arg1;
- (void)bounceBackComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)crossfadeDidComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)rotateTimerFired:(id)arg1;
- (void)swipedLeft:(id)arg1;
- (void)loadExcerptView;
@property(readonly, nonatomic) ZGExcerpt *currentExcerpt;
- (void)stopRotateAnimation;
- (void)startRotateAnimationWithInitialDelay:(double)arg1;
- (void)startRotateAnimation;
- (void)startRotatingExcerpts;
- (void)stopRotatingExcerpts;
- (void)clearCurrentExcerptViews;

@end

@interface ExploreAutoRotateViewController : BaseViewController <CategoriesListViewDataSource, CategoriesListViewDelegate, SharePopoverViewControllerDelegate, MFMailComposeViewControllerDelegate>
{
    NSMutableDictionary *categoryCells;
    ExploreAutoRotateView *rotateView;
    CategoriesListView *categoriesListView;
    _Bool hasBeenShownOnce;
    ScreenActivityIndicator *screenActivityIndicator;
    SharePopoverController *_sharePopoverController;
}

@property(retain, nonatomic) SharePopoverController *sharePopoverController; // @synthesize sharePopoverController=_sharePopoverController;
@property(retain, nonatomic) NSMutableDictionary *categoryCells; // @synthesize categoryCells;
@property(retain, nonatomic) ScreenActivityIndicator *screenActivityIndicator; // @synthesize screenActivityIndicator;
@property(retain, nonatomic) CategoriesListView *categoriesListView; // @synthesize categoriesListView;
@property(retain, nonatomic) ExploreAutoRotateView *rotateView; // @synthesize rotateView;
- (void)_showEmailSheet;
- (void)_showSheetForServiceType:(id)arg1 shortURL:(id)arg2;
- (void)_showSheetForServiceType:(id)arg1;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)sharePopoverViewController:(id)arg1 didMakeSelection:(long long)arg2;
- (void)didTapShareButton:(id)arg1;
- (void)resetUI;
- (void)retryAfterNetworkServicesManagerError:(id)arg1;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (void)listView:(id)arg1 cellSelected:(id)arg2;
- (id)cellForCategoryNumber:(int)arg1 listView:(id)arg2;
- (int)numberOfCategoriesForListView:(id)arg1;
- (void)removeView;
- (void)hideCategoriesList;
- (void)hideView;
- (void)faultFeaturedCategory;
- (void)showViewInsideView:(id)arg1;
- (void)showCategoriesList;
- (void)showViewInsideView:(id)arg1 animated:(_Bool)arg2;
- (void)shownFirstTime;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ExploreCategoryView : UIView <UIScrollViewDelegate>
{
    NSArray *excerpts;
    UIView *upsellView;
    ExploreExcerptView *loadedExcerptView;
    ExploreExcerptView *farLeftView;
    ExploreExcerptView *leftView;
    ExploreExcerptView *centerView;
    ExploreExcerptView *rightView;
    ExploreExcerptView *farRightView;
    NSMutableArray *queue;
    NSMutableDictionary *covers;
    int currentExcerpt;
    ExploreCategoryScrollView *scrollView;
    ScreenActivityIndicator *screenActivityIndicator;
    int preloadNumber;
}

@property(retain, nonatomic) ScreenActivityIndicator *screenActivityIndicator; // @synthesize screenActivityIndicator;
@property(retain, nonatomic) NSMutableDictionary *covers; // @synthesize covers;
@property(retain, nonatomic) NSMutableArray *queue; // @synthesize queue;
@property(retain, nonatomic) ExploreExcerptView *farRightView; // @synthesize farRightView;
@property(retain, nonatomic) ExploreExcerptView *rightView; // @synthesize rightView;
@property(retain, nonatomic) ExploreExcerptView *centerView; // @synthesize centerView;
@property(retain, nonatomic) ExploreExcerptView *leftView; // @synthesize leftView;
@property(retain, nonatomic) ExploreExcerptView *farLeftView; // @synthesize farLeftView;
@property(retain, nonatomic) ExploreCategoryScrollView *scrollView; // @synthesize scrollView;
@property(retain, nonatomic) ExploreExcerptView *loadedExcerptView; // @synthesize loadedExcerptView;
@property(retain, nonatomic) UIView *upsellView; // @synthesize upsellView;
@property(retain, nonatomic) NSArray *excerpts; // @synthesize excerpts;
- (void)dealloc;
- (void)awakeFromNib;
- (void)setFrame:(struct CGRect)arg1;
- (void)stopActivitySpinner;
- (void)startActivitySpinner;
- (void)handleTap:(id)arg1;
- (void)clearExcerpts;
- (void)hideForFirstDisplay;
- (id)currentExcerptView;
- (void)showExcerptsForCategory:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ExploreCategoryViewController : BaseViewController <ThumbnailScrollViewDelegate, ThumbnailScrollViewDataSource, ModalInsetViewControllerDelegate, MFMailComposeViewControllerDelegate, SharePopoverViewControllerDelegate>
{
    ExploreCategoryView *exploreCategoryView;
    ExploreCategoryScrollView *exploreCategoryScrollView;
    CoreTextLabel *label;
    MosaicViewController *categoryMosaicViewContoller;
    ZGExcerptCategory *category;
    NavigationInsetViewController *mosaicModalInsetViewController;
    ScreenActivityIndicator *screenActivityIndicator;
    NSMutableDictionary *mosaicImages;
    RootExploreViewController *_rootExploreViewController;
    _Bool categoryNeedsLoading;
    UIView *readNBuyContainer;
    _Bool waitingGigyaResponse;
    _Bool isDeepLinking;
    NSObject<User> *user;
    SharePopoverController *_sharePopoverController;
    UIView *_infoView;
    ZGMagazine *sampleMagazine;
    ZGMagazineIssueCoverImage *sampleCoverImage;
    NSManagedObjectContext *sampleContext;
}

@property(retain, nonatomic) UIView *infoView; // @synthesize infoView=_infoView;
@property(retain, nonatomic) SharePopoverController *sharePopoverController; // @synthesize sharePopoverController=_sharePopoverController;
@property(nonatomic) RootExploreViewController *rootExploreViewController; // @synthesize rootExploreViewController=_rootExploreViewController;
@property(retain, nonatomic) NSObject<User> *user; // @synthesize user;
@property(retain, nonatomic) UIView *readNBuyContainer; // @synthesize readNBuyContainer;
@property(retain, nonatomic) NSMutableDictionary *mosaicImages; // @synthesize mosaicImages;
@property(retain, nonatomic) NSManagedObjectContext *sampleContext; // @synthesize sampleContext;
@property(retain, nonatomic) ZGMagazineIssueCoverImage *sampleCoverImage; // @synthesize sampleCoverImage;
@property(retain, nonatomic) ZGMagazine *sampleMagazine; // @synthesize sampleMagazine;
@property(retain, nonatomic) NavigationInsetViewController *mosaicModalInsetViewController; // @synthesize mosaicModalInsetViewController;
@property(nonatomic) ZGExcerptCategory *category; // @synthesize category;
@property(retain, nonatomic) MosaicViewController *categoryMosaicViewContoller; // @synthesize categoryMosaicViewContoller;
@property(retain, nonatomic) ExploreCategoryScrollView *exploreCategoryScrollView; // @synthesize exploreCategoryScrollView;
@property(retain, nonatomic) ExploreCategoryView *exploreCategoryView; // @synthesize exploreCategoryView;
- (void)_showSheetForServiceType:(id)arg1 shortURL:(id)arg2;
- (void)_showSheetForServiceType:(id)arg1;
- (void)_showEmailSheet;
- (void)didTapShareButton:(id)arg1;
- (void)sharePopoverViewController:(id)arg1 didMakeSelection:(long long)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)dismissAlert:(id)arg1;
- (void)showNoButtonAlertWithMessage:(id)arg1;
- (void)enableApplicationStartupProcedures;
- (void)processUserChange:(id)arg1 newUser:(id)arg2;
- (void)showShareNoConnectionMessage;
- (void)showPopup:(id)arg1;
- (void)dismissModalView;
- (void)hideGigyaView;
- (void)showGigyaLogin:(id)arg1;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)hideSocialSmallPhoto;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotate;
- (void)resetUI;
- (void)retryAfterNetworkServicesManagerError:(id)arg1;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (_Bool)shouldShowFullScreenServerUnavailableErrorMessage;
- (_Bool)shouldShowFullScreenNetworkErrorMessage;
- (_Bool)shouldShowFullScreenOfflineMessageWhenOffline;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)imageFromImageInfo:(id)arg1;
- (id)thumbnailScrollView:(id)arg1 titleAtIndex:(long long)arg2;
- (id)thumbnailScrollView:(id)arg1 imageAtIndex:(long long)arg2;
- (unsigned long long)thumbnailCountForThumbnailScrollView:(id)arg1;
- (void)thumbnailScrollView:(id)arg1 didSelectIndex:(long long)arg2;
- (void)showExploreCategoryMosaic:(id)arg1;
- (void)modalInsetViewController:(id)arg1 didDismiss:(_Bool)arg2;
- (void)modalInsetViewController:(id)arg1 didAppear:(_Bool)arg2;
- (void)buyIssue:(id)arg1;
- (void)readExcerpt:(id)arg1;
- (id)currentExcerpt;
- (void)readAndShareExcerpt:(id)arg1;
- (void)removeViewTimerFired:(id)arg1;
- (void)hideView;
- (void)faultCurrentCategory;
- (void)reloadPage:(int)arg1 showBuyView:(_Bool)arg2;
- (void)showDeepLinkingCategory:(id)arg1 inView:(id)arg2;
- (void)showCategory:(id)arg1 inView:(id)arg2;
- (void)showCategory:(id)arg1 atIndex:(int)arg2 inView:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ExploreExcerptView : UIImageView
{
    ZGExcerpt *excerpt;
    id <ExploreExcerptViewDelegate> delegate;
    int format;
    int number;
    int imagesToLoad;
    int imagesLoaded;
    UIImage *landscapeImage;
    UIImage *portraitImage;
    _Bool loaded;
}

+ (id)excerptViewForExcerpt:(id)arg1 size:(struct CGSize)arg2 format:(int)arg3;
@property(readonly, nonatomic) _Bool loaded; // @synthesize loaded;
@property(retain, nonatomic) UIImage *portraitImage; // @synthesize portraitImage;
@property(retain, nonatomic) UIImage *landscapeImage; // @synthesize landscapeImage;
@property(nonatomic) int number; // @synthesize number;
@property(nonatomic) int format; // @synthesize format;
@property(nonatomic) id <ExploreExcerptViewDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) ZGExcerpt *excerpt; // @synthesize excerpt;
- (void)dealloc;
- (void)removeObservers;
- (void)unload;
- (id)init;
- (void)coreDataNeedsRefresh:(id)arg1;
- (void)imageNotFound:(id)arg1;
- (void)imageLoaded:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)generateCompleteImage;
- (id)loadWithDelegate:(id)arg1;

@end

@interface RootExploreViewController : BaseViewController <ReaderLauncherDelegate>
{
    ZGExplore *explore;
    UIView *contentView;
    ExploreAutoRotateViewController *autoRotateViewController;
    ExploreCategoryViewController *exploreCategoryViewController;
    CategoriesListView *categoriesListView;
    _Bool hasShown;
    _Bool hadUnloaded;
    _Bool shouldExecuteRateAppProcess;
    _Bool exploreNeedsLoaded;
    _Bool waitIndicatorVisible;
    ReaderLauncher *readerLauncher;
    UIView *readerLaunchFromView;
    ZGExcerpt *readerLaunchExcerpt;
    NSFetchedResultsController *fetchedResultsController;
    IntroViewController *introViewController;
    ZGExcerpt *deepLinkingExcerpt;
    NSString *deepLinkingId;
    _Bool waitingOnConfiguration;
    UIView *_rightBarButtonContainerView;
    NSDictionary *restoreState;
}

+ (id)sharedInstance;
@property(retain, nonatomic) UIView *rightBarButtonContainerView; // @synthesize rightBarButtonContainerView=_rightBarButtonContainerView;
@property(retain, nonatomic) NSString *deepLinkingId; // @synthesize deepLinkingId;
@property(retain, nonatomic) ZGExcerpt *deepLinkingExcerpt; // @synthesize deepLinkingExcerpt;
@property(retain, nonatomic) NSDictionary *restoreState; // @synthesize restoreState;
@property(retain, nonatomic) IntroViewController *introViewController; // @synthesize introViewController;
@property(retain, nonatomic) NSFetchedResultsController *fetchedResultsController; // @synthesize fetchedResultsController;
@property(retain, nonatomic) ZGExcerpt *readerLaunchExcerpt; // @synthesize readerLaunchExcerpt;
@property(retain, nonatomic) UIView *readerLaunchFromView; // @synthesize readerLaunchFromView;
@property(retain, nonatomic) ZGExplore *explore; // @synthesize explore;
@property(retain, nonatomic) CategoriesListView *categoriesListView; // @synthesize categoriesListView;
@property(retain, nonatomic) ExploreCategoryViewController *exploreCategoryViewController; // @synthesize exploreCategoryViewController;
@property(retain, nonatomic) ExploreAutoRotateViewController *autoRotateViewController; // @synthesize autoRotateViewController;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView;
- (void)shouldShowCategoriesButton:(_Bool)arg1;
- (void)_didTapCategoriesButton:(id)arg1;
- (void)resetUI;
- (void)populateAndShowData;
- (void)configurationFailed;
- (void)configurationSucceeded;
- (void)waitOnConfiguration;
- (void)showConfigurationFailureMessage;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewDidAppear:(_Bool)arg1;
- (void)introViewControllerDidClose:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)awakeFromNib;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)retryAfterNetworkServicesManagerError:(id)arg1;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (_Bool)shouldShowFullScreenServerUnavailableErrorMessage;
- (_Bool)shouldShowFullScreenNetworkErrorMessage;
- (_Bool)shouldShowFullScreenOfflineMessageWhenOffline;
- (_Bool)shouldActAsNetworkServicesManagerDelegate;
- (_Bool)canShowExplore;
- (void)excerptDownloadCompleted:(id)arg1;
- (void)readerLaunchFadeOutComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (void)fadeExcerptBackInFromReader:(id)arg1;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)readerLauncher:(id)arg1 failedToLaunchExcerpt:(id)arg2 issue:(id)arg3;
- (void)launchReaderForExcerptId:(id)arg1 issueId:(id)arg2;
- (void)launchReaderWithParams:(id)arg1;
- (id)readerLauncher;
- (void)launchReaderForExcerpt:(id)arg1 fromView:(id)arg2;
- (void)faultCategoryForExceprt:(id)arg1;
- (void)stopWaitIndicator;
- (void)stopWaitIndicatorAnimated:(_Bool)arg1;
- (void)startWaitIndicator;
- (void)startWaitIndicatorAfterTimeInterval:(double)arg1;
- (void)startWaitIndicatorAfterTimeIntervalNumber:(id)arg1;
- (void)reloadData;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)excerptsForCategory:(id)arg1;
- (id)excerptsForCategory:(id)arg1 excludeTypes:(id)arg2;
- (id)categoryAtIndex:(int)arg1;
- (id)sortedCategories;
- (void)back:(id)arg1;
- (void)showCurrentView;
- (void)showCategoryExploreViewForCategory:(id)arg1 atIndex:(int)arg2;
- (void)showCategoryExploreViewForCategory:(id)arg1;
- (void)showDeepLinkingCategoryExploreViewForCategory:(id)arg1;
- (void)launchExploreArtileById:(id)arg1;
- (void)showDeepLinkingById:(id)arg1;
- (void)showDeepLinking:(id)arg1;
- (void)showCategory:(id)arg1 atIndex:(int)arg2;
- (void)showCategory:(id)arg1;
- (void)hideBackButton;
- (void)showBackButton;
- (void)showAutoRotateView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ThumbnailScrollView : UIScrollView <UIScrollViewDelegate>
{
    NSMutableSet *reusableCovers;
    int firstVisibleRow;
    int lastVisibleRow;
    int coverCountPerRow;
    double _leftMargin;
    double _topMargin;
    id <ThumbnailScrollViewDelegate> thumbnailDelegate;
    id <ThumbnailScrollViewDataSource> dataSource;
    NSMutableDictionary *cachedCoverImages;
    UIActivityIndicatorView *activityIndicator;
}

@property(nonatomic) double topMargin; // @synthesize topMargin=_topMargin;
@property(nonatomic) double leftMargin; // @synthesize leftMargin=_leftMargin;
@property(nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(nonatomic) id <ThumbnailScrollViewDelegate> thumbnailDelegate; // @synthesize thumbnailDelegate;
@property(nonatomic) id <ThumbnailScrollViewDataSource> dataSource; // @synthesize dataSource;
- (void)dealloc;
- (void)clearCachedCovers;
- (void)handleCoverTap:(id)arg1;
- (void)thumbnailScrollView:(id)arg1 didSelectIndex:(int)arg2;
- (id)imageForFileName:(id)arg1;
- (void)layoutSubviews;
- (void)setImage:(id)arg1 forThumbnailAtIndex:(int)arg2;
- (void)reloadData;
- (id)dequeueReusableCover;
- (int)numberOfRows;
- (void)setFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ExploreAutoRotateInfoView : UIView
{
    ZGExcerpt *excerpt;
}

@property(nonatomic) ZGExcerpt *excerpt; // @synthesize excerpt;
- (void)dealloc;
- (void)awakeFromNib;
- (void)drawRect:(struct CGRect)arg1;
- (void)showInfoForExcerpt:(id)arg1 animateDuration:(double)arg2;
- (void)fadeOutDidComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;

@end

@interface InternationalStoreTableViewCell : UITableViewCell
{
    UILabel *cellLabel;
}

@property(nonatomic) UILabel *cellLabel; // @synthesize cellLabel;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface ZinioTitleHeaderView : UIView
{
    UILabel *titleLabel;
    EmbossedLineView *upperLine;
    EmbossedLineView *lowerLine;
}

- (void)dealloc;
- (void)setTitle:(id)arg1;
- (void)setEmbossedLinesVisible:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ShopCategoryCollectionViewCell : UICollectionViewCell
{
    UIImageView *_thumbnail;
    UILabel *_titleLabel;
    id _category;
}

+ (struct CGSize)cellSizeForInterfaceOrientation:(long long)arg1;
@property(retain, nonatomic) id category; // @synthesize category=_category;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *thumbnail; // @synthesize thumbnail=_thumbnail;
- (void)_imageDidDownloadNotificationHandler:(id)arg1;
- (void)setUpWithCategory:(id)arg1;
- (void)unHighlightCell;
- (void)highlightCell;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ZGCategoryHero : ZGHero
{
}


// Remaining properties
@property(retain, nonatomic) ZGCategory *category; // @dynamic category;
@end

@interface ZGThumbnail : ZGImage
{
}

- (void)copyValues:(id)arg1 isDeepCopy:(_Bool)arg2;
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 asCopyOf:(id)arg3 isDeepCopy:(_Bool)arg4;

// Remaining properties
@property(retain, nonatomic) ZGLibraryIssue *libraryIssue; // @dynamic libraryIssue;
@property(retain, nonatomic) ZGBoundaryResource *resource; // @dynamic resource;

@end

@interface AFHTTPRequestOperationManager : NSObject <NSSecureCoding, NSCopying>
{
    _Bool _shouldUseCredentialStorage;
    NSURL *_baseURL;
    AFHTTPRequestSerializer<AFURLRequestSerialization> *_requestSerializer;
    AFHTTPResponseSerializer<AFURLResponseSerialization> *_responseSerializer;
    NSOperationQueue *_operationQueue;
    NSURLCredential *_credential;
    AFSecurityPolicy *_securityPolicy;
    AFNetworkReachabilityManager *_reachabilityManager;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSObject<OS_dispatch_group> *_completionGroup;
}

+ (_Bool)supportsSecureCoding;
+ (id)manager;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *completionGroup; // @synthesize completionGroup=_completionGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(retain, nonatomic) AFNetworkReachabilityManager *reachabilityManager; // @synthesize reachabilityManager=_reachabilityManager;
@property(retain, nonatomic) AFSecurityPolicy *securityPolicy; // @synthesize securityPolicy=_securityPolicy;
@property(retain, nonatomic) NSURLCredential *credential; // @synthesize credential=_credential;
@property(nonatomic) _Bool shouldUseCredentialStorage; // @synthesize shouldUseCredentialStorage=_shouldUseCredentialStorage;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) AFHTTPResponseSerializer<AFURLResponseSerialization> *responseSerializer; // @synthesize responseSerializer=_responseSerializer;
@property(retain, nonatomic) AFHTTPRequestSerializer<AFURLRequestSerialization> *requestSerializer; // @synthesize requestSerializer=_requestSerializer;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)DELETE:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)PATCH:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)PUT:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)POST:(id)arg1 parameters:(id)arg2 constructingBodyWithBlock:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)POST:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)HEAD:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)GET:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)HTTPRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)initWithBaseURL:(id)arg1;
- (id)init;

@end

@interface ZGShopCountry : ZGCountry
{
}


// Remaining properties
@property(retain, nonatomic) NSManagedObject *shop; // @dynamic shop;
@end

@interface LoginNavigationController : UINavigationController <NewLoginViewDelegate, UIGestureRecognizerDelegate>
{
    id <LoginNavigationControllerDelegate> _loginNavigationControllerDelegate;
    UITapGestureRecognizer *_singleTap;
    UIView *_visualEffectView;
    id <LoginNavigationControllerDelegate> loginNavigationControllerDelegate;
}

+ (id)loginNavigationControllerWithCheckoutButton:(_Bool)arg1;
+ (id)signUpNavigationController;
@property(retain, nonatomic) UITapGestureRecognizer *singleTap; // @synthesize singleTap=_singleTap;
@property(nonatomic) id <LoginNavigationControllerDelegate> loginNavigationControllerDelegate; // @synthesize loginNavigationControllerDelegate;
@property(retain, nonatomic) UIView *visualEffectView; // @synthesize visualEffectView=_visualEffectView;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)_didTapView:(id)arg1;
- (void)newLoginView:(id)arg1 didTapGuestCheckout:(id)arg2;
- (void)_didTapDismissButton:(id)arg1;
- (void)_handleNotification:(id)arg1;
- (void)dismiss;
- (struct CGSize)preferredContentSize;
- (void)presentLoginAtViewController:(id)arg1 shouldBlurBackground:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_internalSetup;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGPublication : ZGBoundaryResource
{
}


// Remaining properties
@property(retain, nonatomic) ZGPublicationCountry *country; // @dynamic country;
@property(retain, nonatomic) NSString *id; // @dynamic id;
@property(retain, nonatomic) ZGPublicationLanguage *language; // @dynamic language;
@property(retain, nonatomic) ZGPublicationList *list; // @dynamic list;
@property(retain, nonatomic) NSSet *paymentTypes; // @dynamic paymentTypes;
@property(retain, nonatomic) NSString *publicationDescription; // @dynamic publicationDescription;
@property(retain, nonatomic) NSString *type; // @dynamic type;
@end

@interface Offer : NSObject
{
    NSMutableArray *_inAppPurchases;
    _Bool _autoRenewable;
    NSString *_offerId;
    NSString *_name;
    unsigned long long _numberOfIssues;
    NSString *_offerType;
    NSString *_payType;
    NSString *_currency;
    NSString *_symbol;
    NSString *_value;
    NSString *_vatValue;
    NSString *_startType;
}

@property(retain, nonatomic) NSMutableArray *inAppPurchases; // @synthesize inAppPurchases=_inAppPurchases;
@property(copy, nonatomic) NSString *startType; // @synthesize startType=_startType;
@property(copy, nonatomic) NSString *vatValue; // @synthesize vatValue=_vatValue;
@property(copy, nonatomic) NSString *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *symbol; // @synthesize symbol=_symbol;
@property(copy, nonatomic) NSString *currency; // @synthesize currency=_currency;
@property(copy, nonatomic) NSString *payType; // @synthesize payType=_payType;
@property(copy, nonatomic) NSString *offerType; // @synthesize offerType=_offerType;
@property(nonatomic) unsigned long long numberOfIssues; // @synthesize numberOfIssues=_numberOfIssues;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *offerId; // @synthesize offerId=_offerId;
@property(nonatomic) _Bool autoRenewable; // @synthesize autoRenewable=_autoRenewable;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

@interface ZGFlag : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) NSManagedObject *country; // @dynamic country;
@end

@interface ZGMagazineIssueCoverImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGMagazine *magazineIssue; // @dynamic magazineIssue;
@end

@interface ZGPromoCategory : ZGCategory
{
}


// Remaining properties
@property(retain, nonatomic) ZGPromoHeaderImage *header; // @dynamic header;
@property(retain, nonatomic) ZGCategory *parentPromoted; // @dynamic parentPromoted;
@property(retain, nonatomic) NSString *promoDescription; // @dynamic promoDescription;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@end

@interface SearchParameters : NSObject
{
    NSString *_searchText;
    unsigned long long _limit;
}

@property(retain, nonatomic) NSString *searchText; // @synthesize searchText=_searchText;
@property(nonatomic) unsigned long long limit; // @synthesize limit=_limit;
- (void)dealloc;
- (id)initWithSearchText:(id)arg1 Limit:(unsigned long long)arg2;

@end

@interface ZGResourceLink : ZGLink
{
}

- (void)copyValues:(id)arg1;
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 asCopyOf:(id)arg3;

// Remaining properties
@property(retain, nonatomic) ZGResource *resource; // @dynamic resource;

@end

@interface AFQueryStringPair : NSObject
{
    id _field;
    id _value;
}

@property(retain, nonatomic) id value; // @synthesize value=_value;
@property(retain, nonatomic) id field; // @synthesize field=_field;
- (void).cxx_destruct;
- (id)URLEncodedStringValueWithEncoding:(unsigned long long)arg1;
- (id)initWithField:(id)arg1 value:(id)arg2;

@end

@interface AFHTTPRequestSerializer : NSObject <AFURLRequestSerialization>
{
    _Bool _allowsCellularAccess;
    _Bool _HTTPShouldHandleCookies;
    _Bool _HTTPShouldUsePipelining;
    unsigned long long _stringEncoding;
    unsigned long long _cachePolicy;
    unsigned long long _networkServiceType;
    double _timeoutInterval;
    NSSet *_HTTPMethodsEncodingParametersInURI;
    NSMutableSet *_mutableObservedChangedKeyPaths;
    NSMutableDictionary *_mutableHTTPRequestHeaders;
    unsigned long long _queryStringSerializationStyle;
    CDUnknownBlockType _queryStringSerialization;
}

+ (_Bool)supportsSecureCoding;
+ (id)serializer;
@property(copy, nonatomic) CDUnknownBlockType queryStringSerialization; // @synthesize queryStringSerialization=_queryStringSerialization;
@property(nonatomic) unsigned long long queryStringSerializationStyle; // @synthesize queryStringSerializationStyle=_queryStringSerializationStyle;
@property(retain, nonatomic) NSMutableDictionary *mutableHTTPRequestHeaders; // @synthesize mutableHTTPRequestHeaders=_mutableHTTPRequestHeaders;
@property(retain, nonatomic) NSMutableSet *mutableObservedChangedKeyPaths; // @synthesize mutableObservedChangedKeyPaths=_mutableObservedChangedKeyPaths;
@property(retain, nonatomic) NSSet *HTTPMethodsEncodingParametersInURI; // @synthesize HTTPMethodsEncodingParametersInURI=_HTTPMethodsEncodingParametersInURI;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) unsigned long long networkServiceType; // @synthesize networkServiceType=_networkServiceType;
@property(nonatomic) _Bool HTTPShouldUsePipelining; // @synthesize HTTPShouldUsePipelining=_HTTPShouldUsePipelining;
@property(nonatomic) _Bool HTTPShouldHandleCookies; // @synthesize HTTPShouldHandleCookies=_HTTPShouldHandleCookies;
@property(nonatomic) unsigned long long cachePolicy; // @synthesize cachePolicy=_cachePolicy;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;
- (id)requestWithMultipartFormRequest:(id)arg1 writingStreamContentsToFile:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)multipartFormRequestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 constructingBodyWithBlock:(CDUnknownBlockType)arg4 error:(id *)arg5;
- (id)multipartFormRequestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 constructingBodyWithBlock:(CDUnknownBlockType)arg4;
- (id)requestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 error:(id *)arg4;
- (id)requestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3;
- (void)setQueryStringSerializationWithBlock:(CDUnknownBlockType)arg1;
- (void)setQueryStringSerializationWithStyle:(unsigned long long)arg1;
- (void)clearAuthorizationHeader;
- (void)setAuthorizationHeaderFieldWithToken:(id)arg1;
- (void)setAuthorizationHeaderFieldWithUsername:(id)arg1 password:(id)arg2;
- (id)valueForHTTPHeaderField:(id)arg1;
- (void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2;
@property(readonly, nonatomic) NSDictionary *HTTPRequestHeaders;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFStreamingMultipartFormData : NSObject <AFMultipartFormData>
{
    NSMutableURLRequest *_request;
    unsigned long long _stringEncoding;
    NSString *_boundary;
    AFMultipartBodyStream *_bodyStream;
}

@property(retain, nonatomic) AFMultipartBodyStream *bodyStream; // @synthesize bodyStream=_bodyStream;
@property(copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(copy, nonatomic) NSMutableURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (id)requestByFinalizingMultipartFormData;
- (void)throttleBandwidthWithPacketSize:(unsigned long long)arg1 delay:(double)arg2;
- (void)appendPartWithHeaders:(id)arg1 body:(id)arg2;
- (void)appendPartWithFormData:(id)arg1 name:(id)arg2;
- (void)appendPartWithFileData:(id)arg1 name:(id)arg2 fileName:(id)arg3 mimeType:(id)arg4;
- (void)appendPartWithInputStream:(id)arg1 name:(id)arg2 fileName:(id)arg3 length:(long long)arg4 mimeType:(id)arg5;
- (_Bool)appendPartWithFileURL:(id)arg1 name:(id)arg2 fileName:(id)arg3 mimeType:(id)arg4 error:(id *)arg5;
- (_Bool)appendPartWithFileURL:(id)arg1 name:(id)arg2 error:(id *)arg3;
- (id)initWithURLRequest:(id)arg1 stringEncoding:(unsigned long long)arg2;

@end

@interface AFMultipartBodyStream : NSInputStream <NSCopying, NSStreamDelegate>
{
    id <NSStreamDelegate> delegate;
    unsigned long long streamStatus;
    NSError *streamError;
    unsigned long long _numberOfBytesInPacket;
    double _delay;
    NSInputStream *_inputStream;
    unsigned long long _stringEncoding;
    NSMutableArray *_HTTPBodyParts;
    NSEnumerator *_HTTPBodyPartEnumerator;
    AFHTTPBodyPart *_currentHTTPBodyPart;
    NSOutputStream *_outputStream;
    NSMutableData *_buffer;
}

@property(retain, nonatomic) NSMutableData *buffer; // @synthesize buffer=_buffer;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) AFHTTPBodyPart *currentHTTPBodyPart; // @synthesize currentHTTPBodyPart=_currentHTTPBodyPart;
@property(retain, nonatomic) NSEnumerator *HTTPBodyPartEnumerator; // @synthesize HTTPBodyPartEnumerator=_HTTPBodyPartEnumerator;
@property(retain, nonatomic) NSMutableArray *HTTPBodyParts; // @synthesize HTTPBodyParts=_HTTPBodyParts;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) double delay; // @synthesize delay=_delay;
@property(nonatomic) unsigned long long numberOfBytesInPacket; // @synthesize numberOfBytesInPacket=_numberOfBytesInPacket;
- (void)setStreamError:(id)arg1;
- (id)streamError;
- (void)setStreamStatus:(unsigned long long)arg1;
- (unsigned long long)streamStatus;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)_setCFClientFlags:(unsigned long long)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(CDStruct_e097db04 *)arg3;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
@property(readonly, nonatomic) unsigned long long contentLength;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)close;
- (void)open;
- (_Bool)hasBytesAvailable;
- (_Bool)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
- (void)appendHTTPBodyPart:(id)arg1;
- (void)setInitialAndFinalBoundaries;
- (id)initWithStringEncoding:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFHTTPBodyPart : NSObject <NSCopying>
{
    int _phase;
    NSInputStream *_inputStream;
    unsigned long long _phaseReadOffset;
    _Bool _hasInitialBoundary;
    _Bool _hasFinalBoundary;
    unsigned long long _stringEncoding;
    NSDictionary *_headers;
    NSString *_boundary;
    id _body;
    unsigned long long _bodyContentLength;
}

@property(nonatomic) _Bool hasFinalBoundary; // @synthesize hasFinalBoundary=_hasFinalBoundary;
@property(nonatomic) _Bool hasInitialBoundary; // @synthesize hasInitialBoundary=_hasInitialBoundary;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) unsigned long long bodyContentLength; // @synthesize bodyContentLength=_bodyContentLength;
@property(retain, nonatomic) id body; // @synthesize body=_body;
@property(copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
@property(retain, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)transitionToNextPhase;
- (long long)readData:(id)arg1 intoBuffer:(char *)arg2 maxLength:(unsigned long long)arg3;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=hasBytesAvailable) _Bool bytesAvailable;
@property(readonly, nonatomic) unsigned long long contentLength;
- (id)stringForHeaders;
- (void)dealloc;
- (id)init;

@end

@interface AFJSONRequestSerializer : AFHTTPRequestSerializer
{
    unsigned long long _writingOptions;
}

+ (id)serializerWithWritingOptions:(unsigned long long)arg1;
+ (id)serializer;
@property(nonatomic) unsigned long long writingOptions; // @synthesize writingOptions=_writingOptions;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;

@end

@interface AFPropertyListRequestSerializer : AFHTTPRequestSerializer
{
    unsigned long long _format;
    unsigned long long _writeOptions;
}

+ (id)serializerWithFormat:(unsigned long long)arg1 writeOptions:(unsigned long long)arg2;
+ (id)serializer;
@property(nonatomic) unsigned long long writeOptions; // @synthesize writeOptions=_writeOptions;
@property(nonatomic) unsigned long long format; // @synthesize format=_format;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;

@end

@interface ZGLink : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSString *href; // @dynamic href;
@property(retain, nonatomic) NSString *rel; // @dynamic rel;
@property(retain, nonatomic) NSString *type; // @dynamic type;
@end

@interface SharePopoverController : UIPopoverController
{
}

- (id)init;

@end

@interface ZGExplore : ZGBoundaryResource
{
}


// Remaining properties
@property(retain, nonatomic) ZGCacheContext *cacheContext; // @dynamic cacheContext;
@property(retain, nonatomic) NSSet *categories; // @dynamic categories;
@end

@interface ZGImage : ZGResource <ImageObject, ImageResource>
{
    _Bool downloading;
    _Bool delayMissingImageDownload;
    NSMutableData *receivedData;
    NSURLConnection *imageConnection;
    ImageProcessingOperation *imageProcessingOperation;
    NSOperation *saveOperation;
    UIImage *image;
}

@property(nonatomic) _Bool delayMissingImageDownload; // @synthesize delayMissingImageDownload;
@property(retain, nonatomic) NSMutableData *receivedData; // @synthesize receivedData;
@property(retain, nonatomic) UIImage *image; // @synthesize image;
- (void)dealloc;
- (void)willTurnIntoFault;
- (void)recycleZGImage;
- (void)beginImageSaveWithQueue:(id)arg1 image:(id)arg2;
- (void)imageProcessingDidComplete:(id)arg1;
- (void)beginImageProcessingWithQueue:(id)arg1;
- (void)setupImageProcessingOperation:(id)arg1;
- (void)setSaveOperation:(id)arg1;
- (void)setImageProcessingOperation:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (_Bool)isPlaceholder;
- (void)setImageConnection:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) id savedImage; // @dynamic savedImage;
@property(readonly) Class superclass;

@end

@interface ZGImageSaveOperation : NSOperation
{
    ZGImage *zgImage;
    UIImage *image;
}

- (void)main;
- (void)cancel;
- (void)dealloc;
- (id)initWithZGImage:(id)arg1 image:(id)arg2;

@end

@interface ZGResource : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) ZGResourceLink *resourceLink; // @dynamic resourceLink;
@end

@interface ZGLanguage : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSString *isoCode; // @dynamic isoCode;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@end

@interface iPadLibraryTableViewSectionHeader : UIView
{
    UILabel *_titleLabel;
}

+ (double)height;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)_internalSetUp;
- (void)setTitle:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithTitle:(id)arg1;

@end

@interface ZGMagazine : ZGPublication
{
}


// Remaining properties
@property(retain, nonatomic) NSSet *backIssues; // @dynamic backIssues;
@property(retain, nonatomic) ZGMagazineIssueCoverImage *cover; // @dynamic cover;
@property(retain, nonatomic) ZGMagazineIssue *currentIssue; // @dynamic currentIssue;
@property(retain, nonatomic) ZGMagazineOffer *offer; // @dynamic offer;
@property(retain, nonatomic) NSSet *offerBundleImages; // @dynamic offerBundleImages;
@property(retain, nonatomic) NSString *tagline; // @dynamic tagline;
@end

@interface ZGHeroImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) NSManagedObject *hero; // @dynamic hero;
@end

@interface ZinioCoverButtonIphone : ZinioCoverButton
{
}

- (void)setLabelText:(id)arg1;
- (void)setImage:(id)arg1 animated:(_Bool)arg2;
- (struct CGRect)maximumBoundsForImageSize:(struct CGSize)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ZGHero : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) ZGHeroImage *heroImage; // @dynamic heroImage;
@property(retain, nonatomic) NSString *id; // @dynamic id;
@property(retain, nonatomic) NSNumber *markedForRetention; // @dynamic markedForRetention;
@property(retain, nonatomic) NSNumber *sortIndex; // @dynamic sortIndex;
@property(retain, nonatomic) ZGHeroTarget *target; // @dynamic target;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@end

@interface ZGPublicationLanguage : ZGLanguage
{
}


// Remaining properties
@property(retain, nonatomic) ZGPublication *publication; // @dynamic publication;
@end

@interface ZGShop : ZGCategory
{
}


// Remaining properties
@property(retain, nonatomic) ZGCacheContext *cacheContext; // @dynamic cacheContext;
@property(retain, nonatomic) ZGShopCountry *country; // @dynamic country;
@end

@interface ZGHeroTarget : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) ZGHero *hero; // @dynamic hero;
@end

@interface ZGBoundaryResource : ZGResource
{
    _Bool isObserving;
}


// Remaining properties
@property(retain, nonatomic) NSNumber *completed; // @dynamic completed;
@property(retain, nonatomic) NSDate *dateServed; // @dynamic dateServed;
@property(retain, nonatomic) NSString *displayName; // @dynamic displayName;
@property(retain, nonatomic) NSNumber *markedForRetention; // @dynamic markedForRetention;
@property(retain, nonatomic) NSNumber *sortIndex; // @dynamic sortIndex;
@property(retain, nonatomic) ZGThumbnail *thumbnail; // @dynamic thumbnail;
@end

@interface ZGCategoryPublicationList : ZGPublicationList
{
}


// Remaining properties
@property(retain, nonatomic) NSManagedObject *category; // @dynamic category;
@end

@interface ZGPublicationList : NSManagedObject
{
}

- (id)description;

// Remaining properties
@property(retain, nonatomic) NSString *displayName; // @dynamic displayName;
@property(retain, nonatomic) NSSet *publications; // @dynamic publications;
@property(retain, nonatomic) NSNumber *sortIndex; // @dynamic sortIndex;
@property(retain, nonatomic) NSString *type; // @dynamic type;

@end

@interface ZGCategory : ZGBoundaryResource
{
}


// Remaining properties
@property(retain, nonatomic) NSSet *childCategories; // @dynamic childCategories;
@property(retain, nonatomic) NSSet *heroItems; // @dynamic heroItems;
@property(retain, nonatomic) NSString *id; // @dynamic id;
@property(retain, nonatomic) NSString *listViewTitle; // @dynamic listViewTitle;
@property(retain, nonatomic) ZGCategory *parentCategory; // @dynamic parentCategory;
@property(retain, nonatomic) NSSet *promotedCategories; // @dynamic promotedCategories;
@property(retain, nonatomic) NSSet *publicationLists; // @dynamic publicationLists;
@property(retain, nonatomic) NSString *type; // @dynamic type;
@end

@interface ZGCountry : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) ZGFlag *flag; // @dynamic flag;
@property(retain, nonatomic) NSString *isoCode; // @dynamic isoCode;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@end

@interface ZGPublicationCountry : ZGCountry
{
}


// Remaining properties
@property(retain, nonatomic) NSSet *publications; // @dynamic publications;
@end

@interface EntryFieldBox : UIView
{
}

- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)configureDefaults;

@end

@interface ZGBaseParserDelegate : NSObject <NSXMLParserDelegate>
{
    ZGBaseParserDelegate *parentDelegate;
    NSObject *target;
    NSString *keypath;
    NSString *rootElementName;
    _Bool serverResponseStatusValid;
    NSMutableDictionary *delegateCache;
}

+ (id)classKeypaths;
+ (id)classDelegates;
@property(retain, nonatomic) NSString *rootElementName; // @synthesize rootElementName;
@property(retain, nonatomic) NSString *keypath; // @synthesize keypath;
@property(retain, nonatomic) NSObject *target; // @synthesize target;
@property(retain, nonatomic) ZGBaseParserDelegate *parentDelegate; // @synthesize parentDelegate;
- (void)dealloc;
- (void)discardWork;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)didPopulateTarget;
- (void)prepareAdhocDelegateWithElementName:(id)arg1;
- (id)createDocumentRootDelegateFromElement:(id)arg1;
- (void)populateTargetWithAttributes:(id)arg1;
- (_Bool)serverResponseStatusValid;
- (void)setServerResponseStatusValid:(_Bool)arg1;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (id)keypathForElementName:(id)arg1;
- (id)keypathsForElementNames;
- (id)delegatesForElementNames;
- (Class)itemDelegateClassForElementName:(id)arg1;
- (void)addToParentTargetForElementName:(id)arg1;
- (Class)nestedDelegateClassForElementName:(id)arg1;
- (_Bool)rejectsChild:(id)arg1 forReason:(id *)arg2;
- (_Bool)rejectedByParentForReason:(id *)arg1;
- (id)createOrRetrieveDelegateFromCacheForClass:(Class)arg1 andElementName:(id)arg2;
- (id)findRootDelegate;
- (void)prepareWithElementName:(id)arg1 andAttributes:(id)arg2;
- (id)delegateforNestedElement:(id)arg1 namespaceURI:(id)arg2 qualifiedName:(id)arg3 attributes:(id)arg4;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)furloughDelegate;
- (void)popToParentParserDelegate:(id)arg1;
- (void)didPopChildParserDelegate:(id)arg1 forElementName:(id)arg2;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parserDidEndDocument:(id)arg1;
- (void)parserDidStartDocument:(id)arg1;
- (id)rootDelegate;
- (void)resetWithParentDelegate:(id)arg1 andElementName:(id)arg2;
- (id)init;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XMLParsingUnitTest : NSObject
{
    NSManagedObjectContext *managedObjectContext_;
    NSManagedObjectModel *managedObjectModel_;
    NSPersistentStoreCoordinator *persistentStoreCoordinator_;
}

+ (id)testParseXML:(id)arg1 withTransientDelegateObject:(id)arg2 rootElement:(id)arg3;
+ (id)testParseXML:(id)arg1 withManagedDelegateObject:(id)arg2 rootElement:(id)arg3;
- (id)applicationDocumentsDirectory;
@property(readonly, retain, nonatomic) NSPersistentStoreCoordinator *persistentStoreCoordinator;
@property(readonly, retain, nonatomic) NSManagedObjectModel *managedObjectModel;
@property(readonly, retain, nonatomic) NSManagedObjectContext *managedObjectContext;
- (void)saveContext;

@end

@interface BookmarksViewController : ModalInsetViewController <NSFetchedResultsControllerDelegate, UITableViewDataSource, UITableViewDelegate, ButtonSwitchDelegate, ReaderLauncherDelegate>
{
    UITableView *tableView;
    NSFetchedResultsController *fetchedResultsController;
    EmbossedLineView *bottomRule;
    UIWebView *noBookmarksView;
    _Bool noBookmarksLoaded;
    IntroViewController *introViewController;
    ReaderLauncher *readerLauncher;
    NSDateFormatter *creationDateFormatter;
    id <AppDataService> appDataService;
    id <LibraryAccess> libraryAccess;
    id <IssueController> issueController;
    BookmarkTableViewCell *tableViewCell;
    NSIndexPath *editIndexPath;
    NSIndexPath *deleteIndexPath;
    NSIndexPath *showIndexPath;
    struct UIEdgeInsets noKeyboardInsets;
    int sortType;
    id <Issue> issueFilter;
    UISegmentedControl *_dateTitleSegmentedControl;
}

+ (_Bool)introBookmarksViewHasShownOnce;
@property(retain, nonatomic) UISegmentedControl *dateTitleSegmentedControl; // @synthesize dateTitleSegmentedControl=_dateTitleSegmentedControl;
@property(retain, nonatomic) IntroViewController *introViewController; // @synthesize introViewController;
@property(nonatomic) id <IssueController> issueController; // @synthesize issueController;
@property(retain, nonatomic) id <Issue> issueFilter; // @synthesize issueFilter;
@property(retain, nonatomic) UIWebView *noBookmarksView; // @synthesize noBookmarksView;
@property(retain, nonatomic) BookmarkTableViewCell *tableViewCell; // @synthesize tableViewCell;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView;
@property(retain, nonatomic) EmbossedLineView *bottomRule; // @synthesize bottomRule;
- (void)popViewController;
- (void)showIssueBookmark:(id)arg1;
- (void)applicationChangedUser:(id)arg1;
- (void)readerLauncher:(id)arg1 failedToLaunchPublication:(id)arg2 issue:(id)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)launchReaderForIssueBookmark:(id)arg1;
- (void)cancelEditBookmark:(id)arg1;
- (void)saveBookmark:(id)arg1;
- (void)stopEditingBookmark:(id)arg1;
- (void)editIssueBookmark:(id)arg1;
- (void)editBookmark:(id)arg1;
- (void)editBookmarkAtIndexPath:(id)arg1 animated:(_Bool)arg2;
- (void)deleteBookmark:(id)arg1;
- (id)cellForSubview:(id)arg1;
- (void)setDeleteIndexPath:(id)arg1;
- (void)setEditIndexPath:(id)arg1;
- (void)exitEditMode;
- (void)controllerDidChangeContent:(id)arg1;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
@property(retain, nonatomic) NSFetchedResultsController *fetchedResultsController; // @synthesize fetchedResultsController;
- (id)fetchRequest;
- (void)dateTitleSegmentedControlValueDidChange:(id)arg1;
- (void)buttonSwitch:(id)arg1 selectedButtonIndex:(long long)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (id)readerLauncher;
- (id)libraryAccess;
- (id)appDataService;
- (void)setupNoBookmarksView;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)awakeFromNib;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SettingsRestorePurchasesViewController : SettingsBaseTableViewController <RestorePurchaseServiceDelegate, UIAlertViewDelegate>
{
    UIView *_footerView;
    UIActivityIndicatorView *_activityIndicator;
    CustomButton *_restoreButton;
    RestorePurchaseService *_restorePurchaseService;
}

@property(retain, nonatomic) RestorePurchaseService *restorePurchaseService; // @synthesize restorePurchaseService=_restorePurchaseService;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator=_activityIndicator;
@property(retain, nonatomic) CustomButton *restoreButton; // @synthesize restoreButton=_restoreButton;
@property(retain, nonatomic) UIView *footerView; // @synthesize footerView=_footerView;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)didSucceedRestore;
- (void)didFailRestore;
- (void)_restore;
- (void)restorePurchases:(id)arg1;
- (void)dealloc;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SocialNetworkLoginController : NSObject <GSSocializeDelegate>
{
}

+ (id)sharedInstance;
- (void)userInfoDidChange:(id)arg1;
- (void)userDidLogout;
- (void)userDidLogin:(id)arg1;
- (void)logoutWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)handleFacebookLogin;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HTTPClientCache : NSObject
{
}

+ (id)sharedInstance;
- (void)flush;
- (id)imageForURLString:(id)arg1;
- (void)setImage:(id)arg1 forURLString:(id)arg2;

@end

@interface ZGUserSetting : NSManagedObject
{
}

- (void)copyValues:(id)arg1 isDeepCopy:(_Bool)arg2;
- (void)setDoubleValue:(double)arg1 forName:(id)arg2;
- (void)setIntValue:(int)arg1 forName:(id)arg2;
- (void)setStringValue:(id)arg1 forName:(id)arg2;
- (void)setBoolValue:(_Bool)arg1 forName:(id)arg2;
- (_Bool)boolValue;
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 asCopyOf:(id)arg3 isDeepCopy:(_Bool)arg4;

// Remaining properties
@property(retain, nonatomic) NSNumber *doubleValue; // @dynamic doubleValue;
@property(retain, nonatomic) NSNumber *intValue; // @dynamic intValue;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSString *stringValue; // @dynamic stringValue;
@property(retain, nonatomic) ZGUser *user; // @dynamic user;

@end

@interface ZGUser : NSManagedObject <User>
{
}

- (void)copyValues:(id)arg1 isDeepCopy:(_Bool)arg2;
- (void)removeBookmarksOfType:(int)arg1 forMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4;
- (void)removeBookmarksOfType:(int)arg1 forMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4 location:(id)arg5;
- (id)getBookmarksOfType:(int)arg1 forForMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4;
- (id)getBookmarksOfType:(int)arg1 forForMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4 location:(id)arg5;
- (id)bookmarkOfType:(int)arg1 forForMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4;
- (id)bookmarkOfType:(int)arg1 forForMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4 location:(id)arg5 create:(_Bool)arg6;
- (id)addBookmarkOfType:(int)arg1 forMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4 location:(id)arg5;
- (id)setBookmarkOfType:(int)arg1 forMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4 location:(id)arg5;
- (id)fetchRequestForBookmarksOfType:(int)arg1 forForMediaType:(int)arg2 publisher:(id)arg3 identifier:(id)arg4 location:(id)arg5;
- (id)getSocialConnectionByProvider:(id)arg1;
- (_Bool)isUserConnectedToProvider:(id)arg1;
- (id)addSocialUserOfProvider:(id)arg1 uid:(id)arg2 email:(id)arg3 nickname:(id)arg4 timestamp:(id)arg5 thumbUrl:(id)arg6 isSiteUid:(_Bool)arg7 uidSignature:(id)arg8 gigyaBirthYear:(id)arg9 gigyaGender:(id)arg10;
- (id)socialUserOfProvider:(id)arg1 uid:(id)arg2 email:(id)arg3 nickname:(id)arg4 timestamp:(id)arg5 thumbUrl:(id)arg6 isSiteUid:(_Bool)arg7 uidSignature:(id)arg8 gigyaBirthYear:(id)arg9 gigyaGender:(id)arg10 create:(_Bool)arg11;
- (void)logoutSocialUser;
- (id)getGender;
- (id)getDob;
- (_Bool)isGigyaLoggedin;
- (id)getLoggedInSocialUser;
- (int)idleTimerDisabled;
- (void)setIdleTimerDisabled:(int)arg1;
- (id)daysBack;
- (void)setDaysBack:(id)arg1;
- (int)homeScreen;
- (void)setHomeScreen:(int)arg1;
- (int)readerTextViewTipShown;
- (void)setReaderTextViewTipShown:(int)arg1;
- (int)readerFirstTimeTipShown;
- (void)setReaderFirstTimeTipShown:(int)arg1;
- (id)lastExcerptViewed;
- (void)setLastExcerptViewed:(id)arg1;
- (id)lastLibraryItemViewed;
- (void)setLastLibraryItemViewed:(id)arg1;
- (int)rateAppReminder;
- (void)setRateAppReminder:(int)arg1;
- (id)rateAppVersion;
- (void)setRateAppVersion:(id)arg1;
- (double)rateAppDate;
- (void)setRateAppDate:(double)arg1;
- (int)rateAppCount;
- (void)setRateAppCount:(int)arg1;
- (int)restoreLibraryItemInstructionsCount;
- (void)setRestoreLibraryItemInstructionsCount:(int)arg1;
- (int)removeLibraryItemInstructionsCount;
- (void)setRemoveLibraryItemInstructionsCount:(int)arg1;
- (id)flowableTextFontSize;
- (void)setFlowableTextFontSize:(id)arg1;
- (id)userSettingForName:(id)arg1 create:(_Bool)arg2;
@property(nonatomic) _Bool loggedIn;
@property(readonly, nonatomic, getter=isDefaultUser) _Bool defaultUser;
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 asCopyOf:(id)arg3 isDeepCopy:(_Bool)arg4;

// Remaining properties
@property(retain, nonatomic) NSSet *bookmarks; // @dynamic bookmarks;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSString *emailAddress; // @dynamic emailAddress;
@property(retain, nonatomic) ZGSocialUser *gigyaUser; // @dynamic gigyaUser;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSSet *libraryIssues; // @dynamic libraryIssues;
@property(retain, nonatomic) NSNumber *loggedInFlag; // @dynamic loggedInFlag;
@property(retain, nonatomic) NSString *newsstandId; // @dynamic newsstandId;
@property(retain, nonatomic) NSString *password; // @dynamic password;
@property(retain, nonatomic) NSSet *settings; // @dynamic settings;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSString *userId; // @dynamic userId;

@end

@interface ZGIssueBookmark : NSManagedObject <IssueBookmark>
{
}

- (void)copyValues:(id)arg1 isDeepCopy:(_Bool)arg2;
@property(nonatomic) int pageOrientation;
@property(nonatomic) int bookmarkMediaType;
@property(nonatomic) int bookmarkType;
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 asCopyOf:(id)arg3 isDeepCopy:(_Bool)arg4;

// Remaining properties
@property(retain, nonatomic) NSDate *created; // @dynamic created;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) UIImage *image; // @dynamic image;
@property(retain, nonatomic) NSString *mediaId; // @dynamic mediaId;
@property(retain, nonatomic) NSString *mediaLocation; // @dynamic mediaLocation;
@property(retain, nonatomic) NSNumber *mediaType; // @dynamic mediaType;
@property(retain, nonatomic) NSNumber *orientation; // @dynamic orientation;
@property(retain, nonatomic) NSString *publisherId; // @dynamic publisherId;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSString *titleGroup; // @dynamic titleGroup;
@property(retain, nonatomic) NSNumber *type; // @dynamic type;
@property(retain, nonatomic) NSDate *updated; // @dynamic updated;
@property(retain, nonatomic) ZGUser *user; // @dynamic user;

@end

@interface AppDataServiceMigration : AppStartupTaskSupport <AppStartupTask>
{
    id <AppDataService> appDataService;
    ApplicationDataService *applicationDataService;
    ContentManager *contentManager;
    NSManagedObjectContext *managedObjectContext;
}

@property(retain, nonatomic) ApplicationDataService *dataService; // @synthesize dataService=applicationDataService;
@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
- (void)migrateData;
- (void)migrateHiddenIssuesForUserId:(id)arg1;
- (void)migrateLibrary;
- (void)migrateUsers;
- (void)migrateUser:(id)arg1;
- (void)migrateUserBookmarks:(id)arg1 toUser:(id)arg2;
- (void)migrateAppData;
- (id)createNewAppData;
- (_Bool)executeTaskPreviouslyFailedToComplete;
- (_Bool)executeTaskInternal;
- (void)dealloc;
- (id)initWithAppDataService:(id)arg1 applicationDataService:(id)arg2 contentManager:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupTaskDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGAppData : NSManagedObject <AppInfo>
{
}

- (void)copyValues:(id)arg1;
@property(retain, nonatomic) NSString *installationUUId;
- (void)setFlag:(int)arg1 active:(_Bool)arg2;
- (_Bool)isFlagActive:(int)arg1;
@property(nonatomic) _Bool registered;
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 asCopyOf:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSString *deviceProfileId; // @dynamic deviceProfileId;
@property(retain, nonatomic) NSNumber *flags; // @dynamic flags;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSNumber *registeredFlag; // @dynamic registeredFlag;
@property(retain, nonatomic) NSString *restoreInitToken; // @dynamic restoreInitToken;
@property(retain, nonatomic) NSString *restoreToken; // @dynamic restoreToken;
@property(retain, nonatomic) NSString *simCarrier; // @dynamic simCarrier;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;

@end

@interface BookmarkTableViewCell : UITableViewCell
{
    UIImageView *iconView;
    UILabel *titleLabel;
    UITextField *titleTextField;
    UILabel *folioLabel;
    UILabel *issueNameLabel;
    UILabel *creationDateLabel;
    UIButton *deleteButton;
    UIButton *editTitleButton;
    UIButton *saveButton;
    UIButton *cancelEditButton;
    UIView *titleRule;
    UIView *editRule;
    UIView *cellRule;
}

@property(retain, nonatomic) UIButton *cancelEditButton; // @synthesize cancelEditButton;
@property(retain, nonatomic) UIButton *saveButton; // @synthesize saveButton;
@property(retain, nonatomic) UIView *cellRule; // @synthesize cellRule;
@property(retain, nonatomic) UIView *editRule; // @synthesize editRule;
@property(retain, nonatomic) UIView *titleRule; // @synthesize titleRule;
@property(retain, nonatomic) UITextField *titleTextField; // @synthesize titleTextField;
@property(retain, nonatomic) UIButton *editTitleButton; // @synthesize editTitleButton;
@property(retain, nonatomic) UIButton *deleteButton; // @synthesize deleteButton;
@property(retain, nonatomic) UILabel *creationDateLabel; // @synthesize creationDateLabel;
@property(retain, nonatomic) UILabel *issueNameLabel; // @synthesize issueNameLabel;
@property(retain, nonatomic) UILabel *folioLabel; // @synthesize folioLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel;
@property(retain, nonatomic) UIImageView *iconView; // @synthesize iconView;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)showEditMode:(_Bool)arg1 animated:(_Bool)arg2;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface ZGNotificationTypeChooser : UIView
{
    UIButton *internalNotificationsButton;
    UIButton *externalNotificationsButton;
    UILabel *internalNotificationsLabel;
    UILabel *externalNotificationsLabel;
    _Bool acceptInternalNotifications;
    _Bool acceptExternalNotifications;
}

@property(readonly, nonatomic) _Bool acceptExternalNotifications; // @synthesize acceptExternalNotifications;
@property(readonly, nonatomic) _Bool acceptInternalNotifications; // @synthesize acceptInternalNotifications;
@property(retain, nonatomic) UILabel *externalNotificationsLabel; // @synthesize externalNotificationsLabel;
@property(retain, nonatomic) UIButton *externalNotificationsButton; // @synthesize externalNotificationsButton;
@property(retain, nonatomic) UILabel *internalNotificationsLabel; // @synthesize internalNotificationsLabel;
@property(retain, nonatomic) UIButton *internalNotificationsButton; // @synthesize internalNotificationsButton;
- (void)externalNotificationsButton:(id)arg1;
- (void)internalNotificationsButton:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (void)setupCheckboxLabel:(id)arg1;

@end

@interface ZGExcerptPubIssue : ZGBoundaryResource
{
}


// Remaining properties
@property(retain, nonatomic) ZGExcerptubIssueImage *cover; // @dynamic cover;
@property(retain, nonatomic) NSDate *issueDate; // @dynamic issueDate;
@property(retain, nonatomic) NSString *issueId; // @dynamic issueId;
@property(retain, nonatomic) ZGExcerptPublication *publication; // @dynamic publication;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@end

@interface ZGExcerptPublication : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSString *brief; // @dynamic brief;
@property(retain, nonatomic) NSString *displayName; // @dynamic displayName;
@property(retain, nonatomic) ZGExcerpt *excerpt; // @dynamic excerpt;
@property(retain, nonatomic) NSString *id; // @dynamic id;
@property(retain, nonatomic) ZGExcerptPubIssue *issue; // @dynamic issue;
@end

@interface ZGExcerptubIssueImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGExcerptPubIssue *issue; // @dynamic issue;
@end

@interface ZGExcerptCategory : ZGBoundaryResource
{
    long long trigger;
}

@property(nonatomic) long long trigger; // @synthesize trigger;

// Remaining properties
@property(retain, nonatomic) NSSet *excerpts; // @dynamic excerpts;
@property(retain, nonatomic) ZGExplore *explore; // @dynamic explore;
@property(retain, nonatomic) NSString *id; // @dynamic id;

@end

@interface ZGExcerpt : NSManagedObject
{
    NSString *impressionId;
}

@property(retain, nonatomic) NSString *impressionId; // @synthesize impressionId;

// Remaining properties
@property(retain, nonatomic) NSString *articlePageURL; // @dynamic articlePageURL;
@property(retain, nonatomic) ZGExcerptCategory *category; // @dynamic category;
@property(retain, nonatomic) NSString *contentType; // @dynamic contentType;
@property(retain, nonatomic) NSString *displayName; // @dynamic displayName;
@property(retain, nonatomic) NSString *id; // @dynamic id;
@property(retain, nonatomic) ZGExcerptLandscapeWallpaperImage *landscapeWallpaper; // @dynamic landscapeWallpaper;
@property(retain, nonatomic) NSString *lead; // @dynamic lead;
@property(retain, nonatomic) ZGExcerptLeftLargeImage *leftLargeImage; // @dynamic leftLargeImage;
@property(retain, nonatomic) ZGExcerptLeftThumbnailImage *leftThumbnail; // @dynamic leftThumbnail;
@property(retain, nonatomic) NSNumber *markedForRetention; // @dynamic markedForRetention;
@property(retain, nonatomic) ZGExcerptPortraitWallpaperImage *portraitWallpaper; // @dynamic portraitWallpaper;
@property(retain, nonatomic) ZGExcerptPublication *publication; // @dynamic publication;
@property(retain, nonatomic) ZGExcerptRightLargeImage *rightLargeImage; // @dynamic rightLargeImage;
@property(retain, nonatomic) ZGExcerptRightThumbnailImage *rightThumbnail; // @dynamic rightThumbnail;
@property(retain, nonatomic) NSNumber *sortIndex; // @dynamic sortIndex;
@property(retain, nonatomic) ZGExcerptSpreadPageImage *spreadPageImage; // @dynamic spreadPageImage;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSString *type; // @dynamic type;

@end

@interface BuyViewController : FlowControlledViewController <ZoomImageViewControllerDataSource, UICollectionViewDataSource, UICollectionViewDelegate, ScrollViewDelegateSetter, ReaderLauncherDelegate, PurchaseServiceDelegate, SKProductsRequestDelegate, FreeOfferServiceDelegate, ModalInsetViewControllerDelegate, PurchaseThanksViewControllerDelegate, MFMailComposeViewControllerDelegate, SharePopoverViewControllerDelegate, ProductPageDataSourceDelegate, LoginNavigationControllerDelegate>
{
    UIView *_detailsView;
    UIView *_buttonsContainerView;
    CustomButton *_previewButton;
    CustomButton *__buySubscriptionButton;
    CustomButton *_buyIssueButton;
    UIImageView *_coverImageView;
    UIImageView *_smallOfferImageView;
    NSString *_dateString;
    UITextView *_pubDescriptionTextView;
    UILabel *_pubCountryLabel;
    UIImageView *_pubCountryImageView;
    UILabel *_pubLanguageLabel;
    UILabel *_subscriptionLengthLabel;
    UILabel *_subscriptionDiscountLabel;
    UILabel *_buyThisIssueLabel;
    UILabel *_singleIssuesLabel;
    struct CGRect _buyIssueButtonOriginalPos;
    struct CGRect _buyIssueLabelOriginalPos;
    UIActivityIndicatorView *_actionActivityIndicator;
    UIActivityIndicatorView *_viewActivityIndicator;
    UIView *_socialCounterBanner;
    ZinioCoversVerticalScrollView *_coversScrollView;
    BuyCoverScrollViewDelegate *_coversScrollViewDelegate;
    ZGMagazine *_targetMagazine;
    ZGMagazine *_backIssueHeir;
    ZGExcerpt *_targetExcerpt;
    int _offerType;
    ReaderLauncher *_readerLauncher;
    id <PurchaseService> _purchaseService;
    id <FreeOfferService> _freeOfferService;
    id <SocialUser> _socialUser;
    id <User> _user;
    NSString *_secondaryImageId;
    NSDecimalNumber *_issuePrice;
    NSDecimalNumber *_offerPrice;
    NSString *_localizedIssuePrice;
    NSString *_localizedOfferPrice;
    NSNumber *_singleIssuePrice;
    NSString *_localizedSingleIssuePrice;
    NSMutableDictionary *_coverIndexPaths;
    NSString *_purchaseType;
    NSString *_fromCategoryId;
    _Bool _waitingToBuyIssue;
    _Bool _waitingToBuySubscription;
    _Bool _waitingGigyaResponse;
    _Bool _showModal;
    UIView *_topBar;
    CustomButton *_subscribeButtoniOS6;
    UIButton *_zoomImageButton;
    UIView *_separationLineView;
    Magazine *_selectedMagazine;
    ProductPageDataSource *_productPageDataSource;
    UIActivityIndicatorView *_loadingPriceActivityIndicator;
    UICollectionView *_collectionView;
    NSLayoutConstraint *_heightConstraint;
    NSLayoutConstraint *_collectionViewHeightConstraint;
    NSLayoutConstraint *_previewButtonHeightConstraint;
    SharePopoverController *_sharePopoverController;
    UIActivityIndicatorView *_backIssuesActivityIndicator;
    UIActivityIndicatorView *_currentActivityIndicator;
    ZoomImageViewController *_zoomImageViewController;
    _Bool _loaded;
    CustomButton *_buySubscriptionButton;
    ViewControllerWithCloseButton_iPad *_signInViewController;
}

@property(retain, nonatomic) NSLayoutConstraint *previewButtonHeightConstraint; // @synthesize previewButtonHeightConstraint=_previewButtonHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *collectionViewHeightConstraint; // @synthesize collectionViewHeightConstraint=_collectionViewHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint=_heightConstraint;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) UIActivityIndicatorView *loadingPriceActivityIndicator; // @synthesize loadingPriceActivityIndicator=_loadingPriceActivityIndicator;
@property(retain, nonatomic) ProductPageDataSource *productPageDataSource; // @synthesize productPageDataSource=_productPageDataSource;
@property(nonatomic, getter=isLoaded) _Bool loaded; // @synthesize loaded=_loaded;
@property(retain, nonatomic) UIView *separationLineView; // @synthesize separationLineView=_separationLineView;
@property(retain, nonatomic) ZoomImageViewController *zoomImageViewController; // @synthesize zoomImageViewController=_zoomImageViewController;
@property(retain, nonatomic) UIButton *zoomImageButton; // @synthesize zoomImageButton=_zoomImageButton;
@property(retain, nonatomic) UILabel *singleIssuesLabel; // @synthesize singleIssuesLabel=_singleIssuesLabel;
@property(retain, nonatomic) UIActivityIndicatorView *currentActivityIndicator; // @synthesize currentActivityIndicator=_currentActivityIndicator;
@property(retain, nonatomic) UIActivityIndicatorView *backIssuesActivityIndicator; // @synthesize backIssuesActivityIndicator=_backIssuesActivityIndicator;
@property(retain, nonatomic) ViewControllerWithCloseButton_iPad *signInViewController; // @synthesize signInViewController=_signInViewController;
@property(retain, nonatomic) SharePopoverController *sharePopoverController; // @synthesize sharePopoverController=_sharePopoverController;
@property(readonly, retain, nonatomic) CustomButton *buySubscriptionButton; // @synthesize buySubscriptionButton=_buySubscriptionButton;
@property(retain, nonatomic) CustomButton *subscribeButtoniOS6; // @synthesize subscribeButtoniOS6=_subscribeButtoniOS6;
@property(retain, nonatomic) NSString *fromCategoryId; // @synthesize fromCategoryId=_fromCategoryId;
@property(retain, nonatomic) id <User> user; // @synthesize user=_user;
@property(retain, nonatomic) id <SocialUser> socialUser; // @synthesize socialUser=_socialUser;
@property(retain, nonatomic) NSString *purchaseType; // @synthesize purchaseType=_purchaseType;
@property(nonatomic) _Bool waitingToBuySubscription; // @synthesize waitingToBuySubscription=_waitingToBuySubscription;
@property(nonatomic) _Bool waitingToBuyIssue; // @synthesize waitingToBuyIssue=_waitingToBuyIssue;
@property(nonatomic) struct CGRect buyIssueLabelOriginalPos; // @synthesize buyIssueLabelOriginalPos=_buyIssueLabelOriginalPos;
@property(nonatomic) struct CGRect buyIssueButtonOriginalPos; // @synthesize buyIssueButtonOriginalPos=_buyIssueButtonOriginalPos;
@property(nonatomic) id <FreeOfferService> freeOfferService; // @synthesize freeOfferService=_freeOfferService;
@property(nonatomic) id <PurchaseService> purchaseService; // @synthesize purchaseService=_purchaseService;
@property(retain, nonatomic) ReaderLauncher *readerLauncher; // @synthesize readerLauncher=_readerLauncher;
@property(retain, nonatomic) UIActivityIndicatorView *actionActivityIndicator; // @synthesize actionActivityIndicator=_actionActivityIndicator;
@property(retain, nonatomic) UIActivityIndicatorView *viewActivityIndicator; // @synthesize viewActivityIndicator=_viewActivityIndicator;
@property(retain, nonatomic) UIImageView *pubCountryImageView; // @synthesize pubCountryImageView=_pubCountryImageView;
@property(retain, nonatomic) NSMutableDictionary *coverIndexPaths; // @synthesize coverIndexPaths=_coverIndexPaths;
@property(retain, nonatomic) NSString *secondaryImageId; // @synthesize secondaryImageId=_secondaryImageId;
@property(nonatomic) int offerType; // @synthesize offerType=_offerType;
@property(retain, nonatomic) NSString *localizedSingleIssuePrice; // @synthesize localizedSingleIssuePrice=_localizedSingleIssuePrice;
@property(retain, nonatomic) NSNumber *singleIssuePrice; // @synthesize singleIssuePrice=_singleIssuePrice;
@property(retain, nonatomic) NSString *localizedOfferPrice; // @synthesize localizedOfferPrice=_localizedOfferPrice;
@property(retain, nonatomic) NSString *localizedIssuePrice; // @synthesize localizedIssuePrice=_localizedIssuePrice;
@property(retain, nonatomic) NSDecimalNumber *offerPrice; // @synthesize offerPrice=_offerPrice;
@property(retain, nonatomic) NSDecimalNumber *issuePrice; // @synthesize issuePrice=_issuePrice;
@property(retain, nonatomic) UILabel *subscriptionLengthLabel; // @synthesize subscriptionLengthLabel=_subscriptionLengthLabel;
@property(retain, nonatomic) UILabel *buyThisIssueLabel; // @synthesize buyThisIssueLabel=_buyThisIssueLabel;
@property(retain, nonatomic) UILabel *subscriptionDiscountLabel; // @synthesize subscriptionDiscountLabel=_subscriptionDiscountLabel;
@property(retain, nonatomic) UILabel *pubLanguageLabel; // @synthesize pubLanguageLabel=_pubLanguageLabel;
@property(retain, nonatomic) UILabel *pubCountryLabel; // @synthesize pubCountryLabel=_pubCountryLabel;
@property(retain, nonatomic) UITextView *pubDescriptionTextView; // @synthesize pubDescriptionTextView=_pubDescriptionTextView;
@property(retain, nonatomic) NSString *dateString; // @synthesize dateString=_dateString;
@property(retain, nonatomic) UIImageView *smallOfferImageView; // @synthesize smallOfferImageView=_smallOfferImageView;
@property(retain, nonatomic) UIImageView *coverImageView; // @synthesize coverImageView=_coverImageView;
@property(retain, nonatomic) CustomButton *buyIssueButton; // @synthesize buyIssueButton=_buyIssueButton;
@property(retain, nonatomic) CustomButton *previewButton; // @synthesize previewButton=_previewButton;
@property(retain, nonatomic) UIView *buttonsContainerView; // @synthesize buttonsContainerView=_buttonsContainerView;
@property(retain, nonatomic) UIView *detailsView; // @synthesize detailsView=_detailsView;
@property(retain, nonatomic) ZGExcerpt *targetExcerpt; // @synthesize targetExcerpt=_targetExcerpt;
@property(retain, nonatomic) ZGMagazine *backIssueHeir; // @synthesize backIssueHeir=_backIssueHeir;
@property(retain, nonatomic) ZGMagazine *targetMagazine; // @synthesize targetMagazine=_targetMagazine;
- (void)_pricesDidLoad;
- (void)_coverImageDidDownloadNotification:(id)arg1;
- (void)_updateCoverImage:(id)arg1;
- (id)_updatedCoverURLString;
- (void)_setTitleAndLoadCoverImage;
- (void)productPageDataSource:(id)arg1 magazinesDidLoad:(id)arg2 magazineId:(id)arg3;
- (id)imageForZoomImageViewController:(id)arg1;
- (struct CGRect)imageFrameForZoomImageViewController:(id)arg1;
- (void)_makeSurePurchaseButtonsAreVisible;
- (void)_orientationDidChangeNotificationHandler:(id)arg1;
- (void)_showSheetForServiceType:(id)arg1 shortURL:(id)arg2;
- (void)_showSheetForServiceType:(id)arg1;
- (void)_updateToolbarVisibility;
- (void)createBuyControllerForIssue:(id)arg1 displayName:(id)arg2;
- (id)takeSnapshotOfView:(id)arg1;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)purchaseThanksViewController:(id)arg1 didTapShopMore:(id)arg2;
- (void)purchaseThanksViewController:(id)arg1 didSelectPublication:(id)arg2;
- (void)purchaseThanksViewController:(id)arg1 presentViewController:(id)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)dismissAlert:(id)arg1;
- (void)showNoButtonAlertWithMessage:(id)arg1;
- (void)stopActivityIndicator;
- (void)startActivityIndicator:(id)arg1 onView:(id)arg2;
- (void)startActivityIndicatorOnButton:(id)arg1;
- (void)askToLaunchReaderForPurchasedPubId:(id)arg1;
- (void)getFreeOfferFailed:(id)arg1 pubId:(id)arg2;
- (void)getFreeOfferSucceeded:(id)arg1 pubId:(id)arg2;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (void)handleNetworkProblemOnNavigationController;
- (void)showProductNotAvailableAlert:(id)arg1;
- (void)askToLaunchReaderForPurchasedIssueId:(id)arg1 storeProductId:(id)arg2;
- (void)purchaseFailed:(id)arg1 storeProductId:(id)arg2 internalProductId:(id)arg3;
- (void)purchaseSucceeded:(id)arg1 storeProductId:(id)arg2 internalProductId:(id)arg3 details:(id)arg4;
- (void)readerLauncher:(id)arg1 failedToLaunchExcerpt:(id)arg2 issue:(id)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)processUserChange:(id)arg1 newUser:(id)arg2;
- (void)enableApplicationStartupProcedures;
- (void)showShareNoConnectionMessage;
- (void)showPopup:(id)arg1;
- (void)_showEmailSheet;
- (void)didTapShareButton:(id)arg1;
- (void)sharePopoverViewController:(id)arg1 didMakeSelection:(long long)arg2;
- (void)dismissModalView;
- (void)dismiss:(id)arg1;
- (void)hideGigyaView;
- (void)showGigyaLogin:(id)arg1;
- (void)clientDataReady:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)configureCell:(id)arg1 forIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (_Bool)viewIsLoaded;
- (id)insetViewController;
- (id)getPubDescription:(id)arg1;
- (int)computeOfferType:(id)arg1;
- (id)imageForIndexPath:(id)arg1;
- (id)backIssueForIndexPath:(id)arg1;
- (void)zoomCoverImage:(id)arg1;
- (id)subscriptionButton;
- (void)zoomToCoverImage;
- (void)hideModalView;
- (void)drawButtons;
- (void)configureViewForModel;
- (void)addCoverDateToTitle;
- (void)drawOfferPurchaseButton;
- (id)subscriptionLabelString:(unsigned long long)arg1;
- (void)drawIssuePurchaseButton;
- (void)setPurchaseIssueButtonPosition;
- (void)collectProductPricing;
- (void)loginNavigationControllerDidCancel:(id)arg1;
- (void)loginNavigationController:(id)arg1 didLoginWithSuccess:(_Bool)arg2;
- (void)showPreview:(id)arg1;
- (void)buySubscription:(id)arg1;
- (void)buyIssue:(id)arg1;
- (void)buyNonGuestSubscription:(id)arg1;
- (void)buyNonGuestIssue:(id)arg1;
- (void)buyNonGuestSubscriptionAfterViewAppear;
- (void)buyNonGuestIssueAfterViewAppear;
- (void)showPurchaseThanks;
- (void)showPurchaseThanksForTransaction:(id)arg1;
- (void)showSignInOnAlternativeFlowWithTargetAction:(SEL)arg1;
- (void)showSecondaryCover;
- (_Bool)configureCoverImage;
- (_Bool)configureBundleImage:(id)arg1;
- (void)decorateCoverImage;
- (void)cleanupObservers;
- (void)coreDataNeedsRefresh:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)closeView;
@property(retain, nonatomic) Magazine *selectedMagazine;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)awakeFromNib;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BuyCoverScrollViewDelegate : NavigationInsetViewDelegate
{
    NSArray *results;
    NavigationInsetViewController *insetViewController;
    NSManagedObjectContext *context;
}

@property(nonatomic) NSManagedObjectContext *context; // @synthesize context;
@property(nonatomic) NavigationInsetViewController *insetViewController; // @synthesize insetViewController;
@property(nonatomic) NSArray *results; // @synthesize results;
- (void)didSelectCell:(id)arg1;

@end

@interface ZinioToolbarView : UIView
{
    UIView *leftView;
    EmbossedLineView *leftViewRule;
    CoreTextLabel *title;
    UIView *rightView;
    _Bool tiledBackgroundImage;
    int style;
    UIView *centerView;
    double horizontalMargin;
}

@property(nonatomic, getter=isTiledBackground) _Bool tiledBackgroundImage; // @synthesize tiledBackgroundImage;
@property(nonatomic) int style; // @synthesize style;
@property(nonatomic) double horizontalMargin; // @synthesize horizontalMargin;
@property(retain, nonatomic) UIView *centerView; // @synthesize centerView;
@property(retain, nonatomic) UIView *rightView; // @synthesize rightView;
@property(retain, nonatomic) CoreTextLabel *title; // @synthesize title;
@property(retain, nonatomic) EmbossedLineView *leftViewRule; // @synthesize leftViewRule;
@property(retain, nonatomic) UIView *leftView; // @synthesize leftView;
- (void)setupRightViewSubviews:(id)arg1;
- (void)setupLeftViewButton:(int)arg1 target:(id)arg2 action:(SEL)arg3;
- (void)removeLeftView;
- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)setupBackground;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)initialize;

@end

@interface CoreTextLabel : UIView
{
    NSArray *textComponents;
    UIFont *font;
    UIColor *textColor;
    UIColor *shadowColor;
    struct CGSize shadowOffset;
    double shadowBlur;
    double verticalOffset;
    int verticalAlignMode;
    unsigned long long squashableComponentIndex;
    long long textAlignment;
    NSMutableDictionary *textParameterAttributes;
    NSMutableAttributedString *string;
}

+ (id)attributesForFontKerning:(double)arg1;
+ (id)attributesForFontColor:(id)arg1;
+ (id)attributesForBoldFont:(id)arg1;
+ (id)attributesForFont:(id)arg1 withSymbolicTraits:(unsigned int)arg2;
@property(nonatomic) long long textAlignment; // @synthesize textAlignment;
@property(nonatomic) unsigned long long squashableComponentIndex; // @synthesize squashableComponentIndex;
@property(nonatomic) double shadowBlur; // @synthesize shadowBlur;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor;
@property(nonatomic) double verticalOffset; // @synthesize verticalOffset;
@property(nonatomic) int verticalAlignMode; // @synthesize verticalAlignMode;
@property(retain, nonatomic) UIFont *font; // @synthesize font;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor;
@property(retain, nonatomic) NSArray *textComponents; // @synthesize textComponents;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct __CTLine *)newCTLineInContext:(struct CGContext *)arg1 maxWidth:(double)arg2 size:(struct CGSize *)arg3;
- (void)createString;
- (id)attributesForTextComponent:(unsigned long long)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)textString;
- (void)setAttributes:(id)arg1 forTextParameter:(unsigned long long)arg2;
- (void)clearAttributes;
@property(retain, nonatomic) NSString *text;
- (void)resetDisplay;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)initialize;

@end

@interface ZGShopParserDelegate : ZGManagedObjectParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (Class)itemDelegateClassForElementName:(id)arg1;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGHeroParserDelegate : ZGManagedObjectItemParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface iPhoneSearchViewController : SearchViewController
{
    UILabel *_titleLabel;
}

@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)dealloc;
- (void)dismiss;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)viewDidLoad;
- (id)init;

@end

@interface Newsstand_ : NSObject
{
    Country *_country;
    NSString *_newsstandId;
    NSString *_code;
    NSString *_locale;
    _Bool _status;
}

@property(nonatomic) _Bool status; // @synthesize status=_status;
@property(copy, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(copy, nonatomic) NSString *code; // @synthesize code=_code;
@property(retain, nonatomic) Country *country; // @synthesize country=_country;
@property(copy, nonatomic) NSString *newsstandId; // @synthesize newsstandId=_newsstandId;
- (id)description;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;

@end

@interface ParseDataManager : NSObject
{
    id <LibraryAccess> _libraryAccess;
    CoreDataAppDataService *_appDataService;
    PFObject *_parseUser;
    _Bool _loadingUser;
}

+ (id)sharedInstance;
@property(retain, nonatomic) CoreDataAppDataService *appDataService; // @synthesize appDataService=_appDataService;
@property(retain, nonatomic) id <LibraryAccess> libraryAccess; // @synthesize libraryAccess=_libraryAccess;
@property(nonatomic, getter=isLoadingUser) _Bool loadingUser; // @synthesize loadingUser=_loadingUser;
@property(retain, nonatomic) PFObject *parseUser; // @synthesize parseUser=_parseUser;
- (void)_handleNotification:(id)arg1;
- (id)_dictionaryWithPropertiesOfObject:(id)arg1;
- (void)_saveParseUser:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_loadParseUser:(CDUnknownBlockType)arg1;
- (void)saveUser;
- (void)subscribeToChannels;
- (void)setApplicationId:(id)arg1 clientKey:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface ZGPublicationListParserDelegate : ZGManagedObjectItemParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGManagedObjectParserDelegate : ZGBaseParserDelegate
{
    NSManagedObjectContext *context;
}

@property(retain, nonatomic) NSManagedObjectContext *context; // @synthesize context;
- (void)discardWork;
- (id)entityName;
- (id)insertTargetAsEntityNamed:(id)arg1;
- (id)insertTargetAsEntity;
- (void)populateTargetWithAttributes:(id)arg1;
- (void)dealloc;
- (id)initWithMOC:(id)arg1;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;

@end

@interface ZGCompleteParserDelegate : ZGManagedObjectParserDelegate
{
}

@end

@interface ZGTextNodeParserDelegate : ZGBaseParserDelegate
{
    NSMutableString *buffer;
}

+ (id)classKeypaths;
+ (id)classDelegates;
@property(readonly, nonatomic) NSMutableString *buffer; // @synthesize buffer;
- (void)addToParentTargetForElementName:(id)arg1;
- (void)populateTargetWithAttributes:(id)arg1;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (id)objectValue;
- (void)parser:(id)arg1 foundCDATA:(id)arg2;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (id)delegateforNestedElement:(id)arg1 namespaceURI:(id)arg2 qualifiedName:(id)arg3 attributes:(id)arg4;
- (void)resetWithParentDelegate:(id)arg1 andElementName:(id)arg2;
- (void)dealloc;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;

@end

@interface Magazine : NSObject
{
    NSMutableArray *_categories;
    NSString *_circulationType;
    Country *_country;
    NSDate *_creationDate;
    Issue_ *_currentIssue;
    Offer *_defaultOffer;
    NSString *_description;
    unsigned long long _favoriteCounter;
    NSString *_publicationCode;
    NSString *_frequency;
    NSString *_fulfillmentHouseId;
    NSString *_magazineId;
    NSString *_internalName;
    NSString *_issn;
    unsigned long long _issuesPerYear;
    Language *_language;
    NSString *_name;
    NSArray *_platforms;
    NSString *_productType;
    Publisher *_publisher;
    NSString *_rating;
    unsigned long long _salesRank;
    NSString *_status;
    NSString *_tagline;
    NSString *_magazinePageURLString;
    NSString *_coverURLString;
    NSDate *_lastModified;
}

@property(copy, nonatomic) NSString *coverURLString; // @synthesize coverURLString=_coverURLString;
@property(retain, nonatomic) Publisher *publisher; // @synthesize publisher=_publisher;
@property(retain, nonatomic) Language *language; // @synthesize language=_language;
@property(retain, nonatomic) Offer *defaultOffer; // @synthesize defaultOffer=_defaultOffer;
@property(retain, nonatomic) Country *country; // @synthesize country=_country;
@property(retain, nonatomic) Issue_ *currentIssue; // @synthesize currentIssue=_currentIssue;
@property(retain, nonatomic) NSMutableArray *categories; // @synthesize categories=_categories;
@property(copy, nonatomic) NSString *circulationType; // @synthesize circulationType=_circulationType;
@property(retain, nonatomic) NSDate *lastModified; // @synthesize lastModified=_lastModified;
@property(retain, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(copy, nonatomic) NSString *description; // @synthesize description=_description;
@property(nonatomic) unsigned long long favoriteCounter; // @synthesize favoriteCounter=_favoriteCounter;
@property(copy, nonatomic) NSString *publicationCode; // @synthesize publicationCode=_publicationCode;
@property(copy, nonatomic) NSString *frequency; // @synthesize frequency=_frequency;
@property(copy, nonatomic) NSString *fulfillmentHouseId; // @synthesize fulfillmentHouseId=_fulfillmentHouseId;
@property(copy, nonatomic) NSString *magazineId; // @synthesize magazineId=_magazineId;
@property(copy, nonatomic) NSString *internalName; // @synthesize internalName=_internalName;
@property(copy, nonatomic) NSString *issn; // @synthesize issn=_issn;
@property(nonatomic) unsigned long long issuesPerYear; // @synthesize issuesPerYear=_issuesPerYear;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSArray *platforms; // @synthesize platforms=_platforms;
@property(copy, nonatomic) NSString *productType; // @synthesize productType=_productType;
@property(copy, nonatomic) NSString *rating; // @synthesize rating=_rating;
@property(nonatomic) unsigned long long salesRank; // @synthesize salesRank=_salesRank;
@property(copy, nonatomic) NSString *status; // @synthesize status=_status;
@property(copy, nonatomic) NSString *tagline; // @synthesize tagline=_tagline;
@property(copy, nonatomic) NSString *magazinePageURLString; // @synthesize magazinePageURLString=_magazinePageURLString;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;

@end

@interface ZGExploreParserDelegate : ZGCompleteParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (void)parserDidEndDocument:(id)arg1;
- (id)entityName;
- (Class)itemDelegateClassForElementName:(id)arg1;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGExcerptPublicationParserDelegate : ZGManagedObjectParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGExcerptParserDelegate : ZGManagedObjectItemParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (void)parserDidEndDocument:(id)arg1;
- (id)entityName;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGManagedObjectCollectionParserDelegate : ZGManagedObjectParserDelegate
{
    Class onlyNestedDelegateClass;
}

+ (id)classKeypaths;
+ (id)classDelegates;
@property(nonatomic) Class onlyNestedDelegateClass; // @synthesize onlyNestedDelegateClass;
- (_Bool)rejectsChild:(id)arg1 forReason:(id *)arg2;
- (id)keypathForElementName:(id)arg1;
- (void)addToParentTargetForElementName:(id)arg1;
- (Class)nestedDelegateClassForElementName:(id)arg1;
- (void)resetWithParentDelegate:(id)arg1 andElementName:(id)arg2;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGRetainedCollectionParserDelegate : ZGManagedObjectCollectionParserDelegate
{
}

- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;

@end

@interface ZGDiscardedCollectionParserDelegate : ZGManagedObjectCollectionParserDelegate
{
}

- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGCategoryParserDelegate : ZGManagedObjectItemParserDelegate
{
    NSString *entityName;
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (Class)itemDelegateClassForElementName:(id)arg1;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;
- (void)resetWithParentDelegate:(id)arg1 andElementName:(id)arg2;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;

@end

@interface ZGResourceLinkParserDelegate : ZGManagedObjectParserDelegate
{
}

- (Class)nestedDelegateClassForElementName:(id)arg1;
- (id)delegateforNestedElement:(id)arg1 namespaceURI:(id)arg2 qualifiedName:(id)arg3 attributes:(id)arg4;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGImageParserDelegate : ZGManagedObjectParserDelegate
{
}

- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)populateTargetWithAttributes:(id)arg1;
- (void)addToParentTargetForElementName:(id)arg1;
- (id)entityName;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;

@end

@interface ZGPaymentType : NSManagedObject
{
    NSNumber *markedForRetention;
}

@property(retain, nonatomic) NSNumber *markedForRetention; // @synthesize markedForRetention;

// Remaining properties
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) ZGPaymentTypeImage *paymentTypeImage; // @dynamic paymentTypeImage;
@property(retain, nonatomic) NSSet *publications; // @dynamic publications;
@property(retain, nonatomic) NSNumber *sortIndex; // @dynamic sortIndex;

@end

@interface ZGMagazineIssue : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSString *appStoreProductIdentifier; // @dynamic appStoreProductIdentifier;
@property(retain, nonatomic) ZGMagazineIssueCoverImage *cover; // @dynamic cover;
@property(retain, nonatomic) ZGCoverDate *coverDate; // @dynamic coverDate;
@property(retain, nonatomic) NSString *excerptId; // @dynamic excerptId;
@property(retain, nonatomic) NSString *id; // @dynamic id;
@property(retain, nonatomic) NSNumber *isFree; // @dynamic isFree;
@property(retain, nonatomic) NSDate *issueDate; // @dynamic issueDate;
@property(retain, nonatomic) NSString *issuePageUrl; // @dynamic issuePageUrl;
@property(retain, nonatomic) NSString *listPrice; // @dynamic listPrice;
@property(retain, nonatomic) ZGMagazine *magazine; // @dynamic magazine;
@property(retain, nonatomic) NSString *purchaseURL; // @dynamic purchaseURL;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@end

@interface FlowControlledViewController : BaseViewController
{
    id <FlowControlledViewControllerDelegate> flowDelegate;
}

@property(retain, nonatomic) id <FlowControlledViewControllerDelegate> flowDelegate; // @synthesize flowDelegate;
- (void)dealloc;

@end

@interface ZGLibraryIssue : NSManagedObject <LibraryIssue>
{
    _Bool downloadedAssetsNeedReprocessing;
    NSDateFormatter *_dateFormatter;
}

+ (void)initialize;
@property(readonly, nonatomic) NSString *coverDateString;
@property(readonly, nonatomic) NSString *issueDateString;
- (void)refresh;
@property(retain, nonatomic) NSString *thumbnailUrl; // @dynamic thumbnailUrl;
- (id)thumbnailFileName;
@property(readonly, nonatomic) NSNumber *coverDateMonth;
@property(readonly, nonatomic) NSNumber *coverDateYear;
@property(readonly, nonatomic) NSNumber *yearMonthKey;
@property(nonatomic) _Bool downloadedAssetsNeedReprocessing;
- (void)setDownloaded:(_Bool)arg1;
- (_Bool)downloaded;
- (void)setIsNew:(_Bool)arg1;
- (_Bool)isNew;
@property(readonly, nonatomic) id <User> owner;
- (void)copyValues:(id)arg1 isDeepCopy:(_Bool)arg2;
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 asCopyOf:(id)arg3 isDeepCopy:(_Bool)arg4;
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 asCopyOf:(id)arg3;
- (void)dealloc;

// Remaining properties
@property(retain, nonatomic) NSDate *coverDate; // @dynamic coverDate;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSString *displayName; // @dynamic displayName;
@property(retain, nonatomic) NSString *displayNameKey; // @dynamic displayNameKey;
@property(retain, nonatomic) NSDate *downloadFailed; // @dynamic downloadFailed;
@property(retain, nonatomic) NSNumber *downloadedFlag; // @dynamic downloadedFlag;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSDate *issueDate; // @dynamic issueDate;
@property(retain, nonatomic) NSString *issueId; // @dynamic issueId;
@property(retain, nonatomic) NSNumber *newFlag; // @dynamic newFlag;
@property(retain, nonatomic) NSNumber *packageSize; // @dynamic packageSize;
@property(retain, nonatomic) NSString *pubId; // @dynamic pubId;
@property(retain, nonatomic) NSString *pubThumbnailUrl; // @dynamic pubThumbnailUrl;
@property(retain, nonatomic) NSNumber *rating; // @dynamic rating;
@property(readonly) Class superclass;
@property(retain, nonatomic) ZGThumbnail *thumbnail; // @dynamic thumbnail;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) ZGUser *user; // @dynamic user;

@end

@interface ZGLibraryIssueHidden : ZGLibraryIssue <HiddenLibraryIssue>
{
}

- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 asCopyOf:(id)arg3 isDeepCopy:(_Bool)arg4;
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 asCopyOf:(id)arg3;

// Remaining properties
@property(readonly, nonatomic) NSNumber *coverDateMonth; // @dynamic coverDateMonth;
@property(readonly, nonatomic) NSNumber *coverDateYear; // @dynamic coverDateYear;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSDate *hiddenDate; // @dynamic hiddenDate;
@property(readonly, nonatomic) id <User> owner; // @dynamic owner;
@property(readonly) Class superclass;

@end

@interface ZGLibraryIssueParserDelegate : ZGManagedObjectParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (void)addToParentTargetForElementName:(id)arg1;
- (void)populateTargetWithAttributes:(id)arg1;
- (id)entityName;

@end

@interface LibraryXMLParser : ZGManagedObjectParserDelegate
{
    ZGUser *user;
    ContentManager *contentManager;
    _Bool saveContextWhenDone;
    unsigned long long parsedCount;
    NSAutoreleasePool *parsePool;
    NSMutableSet *updatedIssueIds;
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
@property(readonly, nonatomic) unsigned long long parsedCount; // @synthesize parsedCount;
@property(nonatomic) _Bool saveContextWhenDone; // @synthesize saveContextWhenDone;
- (void)deleteLostEntitlements;
- (void)didPopChildParserDelegate:(id)arg1 forElementName:(id)arg2;
- (id)entityName;
- (void)parseFile:(id)arg1;
- (void)parseData:(id)arg1;
- (void)dealloc;
- (id)initWithUser:(id)arg1 managedObjectContext:(id)arg2 contentManager:(id)arg3;
- (id)initWithUser:(id)arg1 persistentStoreCoordinator:(id)arg2 contentManager:(id)arg3;

@end

@interface ZGLibraryIssuePublicationParserDelegate : ZGManagedObjectParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (void)addToParentTargetForElementName:(id)arg1;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGLibraryIssueIssueParserDelegate : ZGManagedObjectParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (void)addToParentTargetForElementName:(id)arg1;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface DeepLinkingNavigationController : UINavigationController
{
}

- (unsigned long long)supportedInterfaceOrientations;
- (long long)preferredInterfaceOrientationForPresentation;
- (_Bool)shouldAutorotate;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

@end

@interface ZGRootParserDelegate : ZGBaseParserDelegate
{
    ZGBaseParserDelegate *firstDelegate;
    NSString *firstElementName;
    NSMutableString *statusValue;
    _Bool parsingStatusTag;
}

- (id)firstDelegate;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)addToParentTargetForElementName:(id)arg1;
- (void)dealloc;
- (id)initWithElementName:(id)arg1 andFirstSubDelegate:(id)arg2;

@end

@interface ZGExploreCategoryParserDelegate : ZGManagedObjectItemParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (void)parserDidEndDocument:(id)arg1;
- (id)entityName;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (Class)itemDelegateClassForElementName:(id)arg1;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGNumberNodeParserDelegate : ZGTextNodeParserDelegate
{
    NSNumberFormatter *formatter;
}

- (id)objectValue;
- (void)dealloc;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;

@end

@interface ZGBoolNodeParserDelegate : ZGTextNodeParserDelegate
{
}

- (id)objectValue;

@end

@interface AFHTTPSessionManager : AFURLSessionManager <NSSecureCoding, NSCopying>
{
    NSURL *_baseURL;
    AFHTTPRequestSerializer<AFURLRequestSerialization> *_requestSerializer;
}

+ (_Bool)supportsSecureCoding;
+ (id)manager;
@property(retain, nonatomic) AFHTTPRequestSerializer<AFURLRequestSerialization> *requestSerializer; // @synthesize requestSerializer=_requestSerializer;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)dataTaskWithHTTPMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)DELETE:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)PATCH:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)PUT:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)POST:(id)arg1 parameters:(id)arg2 constructingBodyWithBlock:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)POST:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)HEAD:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)GET:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
@property(retain, nonatomic) AFHTTPResponseSerializer<AFURLResponseSerialization> *responseSerializer;
- (id)initWithBaseURL:(id)arg1 sessionConfiguration:(id)arg2;
- (id)initWithSessionConfiguration:(id)arg1;
- (id)initWithBaseURL:(id)arg1;
- (id)init;

@end

@interface BreadcrumbButtonSwitch : ButtonSwitch
{
    UIFont *buttonTitleFont;
    UIColor *buttonTitleColor;
    UIColor *selectionColor;
    UIView *selectionView;
    double buttonTitleHorizontalMargin;
    double buttonTitleVerticalMargin;
}

@property(retain, nonatomic) UIColor *selectionColor; // @synthesize selectionColor;
@property(nonatomic) double buttonTitleVerticalMargin; // @synthesize buttonTitleVerticalMargin;
@property(nonatomic) double buttonTitleHorizontalMargin; // @synthesize buttonTitleHorizontalMargin;
@property(retain, nonatomic) UIColor *buttonTitleColor; // @synthesize buttonTitleColor;
@property(retain, nonatomic) UIFont *buttonTitleFont; // @synthesize buttonTitleFont;
- (void)dealloc;
- (void)continuationSelect:(id)arg1;
- (void)drawSelection:(id)arg1;
- (void)setTitleColor:(id)arg1 forButton:(id)arg2;
- (void)didSelectButton:(id)arg1;
- (void)addAndSelectButtonWithTitle:(id)arg1;
- (void)drawButtons;
- (struct CGSize)labelSizeForButton:(id)arg1;
- (void)addButtonsWithTitles:(id)arg1;
- (void)selectLastNode;
- (id)createButtonWithTitle:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)configureButtonSwitchDefaults;

@end

@interface ButtonSwitch : UIView
{
    long long selectionIndex;
    NSMutableArray *buttonList;
    id <ButtonSwitchDelegate> delegate;
    _Bool reverseLayoutAlignment;
    _Bool enabled;
}

@property(nonatomic) id <ButtonSwitchDelegate> delegate; // @synthesize delegate;
@property(nonatomic) long long selectionIndex; // @synthesize selectionIndex;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled;
@property(nonatomic, getter=isReverseLayoutAlignment) _Bool reverseLayoutAlignment; // @synthesize reverseLayoutAlignment;
@property(retain, nonatomic) NSMutableArray *buttonList; // @synthesize buttonList;
- (void)selectButton:(id)arg1;
- (void)selectButtonForIndex:(long long)arg1;
- (void)drawButtons;
- (void)removeAllButtons;
- (void)addButtonWithTitle:(id)arg1;
- (void)addButtonsWithTitles:(id)arg1;
- (void)reset;
- (void)notifyDelegateOfButtonSwitchAfterSightDelay:(id)arg1;
- (void)didSelectButton:(id)arg1;
- (void)willSelectButton:(id)arg1;
- (id)createButtonWithTitle:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)configureButtonSwitchDefaults;

@end

@interface ThemesManager : NSObject
{
}

+ (id)theme;

@end

@interface HorizontalButtonSwitch : ButtonSwitch
{
    UIFont *buttonTitleFont;
    UIColor *buttonTitleColor;
    UIColor *selectionColor;
    UIColor *disabledTitleColor;
    UIColor *disabledSelectionColor;
    UIView *selectionView;
    double leftInset;
    double rightInset;
    double topInset;
    double bottomInset;
    double buttonTitleHorizontalMargin;
    double buttonTitleVerticalMargin;
    double selectionVerticalPadFromButton;
    double selectionVerticalSize;
    double selectionAnimationDuration;
}

@property(nonatomic) double bottomInset; // @synthesize bottomInset;
@property(nonatomic) double topInset; // @synthesize topInset;
@property(nonatomic) double rightInset; // @synthesize rightInset;
@property(nonatomic) double leftInset; // @synthesize leftInset;
@property(nonatomic) double selectionAnimationDuration; // @synthesize selectionAnimationDuration;
@property(nonatomic) double selectionVerticalSize; // @synthesize selectionVerticalSize;
@property(nonatomic) double selectionVerticalPadFromButton; // @synthesize selectionVerticalPadFromButton;
@property(retain, nonatomic) UIColor *disabledSelectionColor; // @synthesize disabledSelectionColor;
@property(retain, nonatomic) UIColor *disabledTitleColor; // @synthesize disabledTitleColor;
@property(retain, nonatomic) UIColor *selectionColor; // @synthesize selectionColor;
@property(retain, nonatomic) UIView *selectionView; // @synthesize selectionView;
@property(nonatomic) double buttonTitleVerticalMargin; // @synthesize buttonTitleVerticalMargin;
@property(nonatomic) double buttonTitleHorizontalMargin; // @synthesize buttonTitleHorizontalMargin;
@property(retain, nonatomic) UIColor *buttonTitleColor; // @synthesize buttonTitleColor;
@property(retain, nonatomic) UIFont *buttonTitleFont; // @synthesize buttonTitleFont;
- (void)dealloc;
- (void)setEnabled:(_Bool)arg1;
- (void)drawSelection:(id)arg1;
- (void)drawSelectionForIndex:(unsigned long long)arg1;
- (void)didSelectButton:(id)arg1;
- (void)drawButtons;
- (id)createButtonWithTitle:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)configureButtonSwitchDefaults;

@end

@interface VerticalButtonSwitch : ButtonSwitch
{
    UIFont *buttonTitleFont;
    UIColor *buttonTitleColor;
    struct CGSize buttonSize;
}

@property(nonatomic) struct CGSize buttonSize; // @synthesize buttonSize;
@property(retain, nonatomic) UIColor *buttonTitleColor; // @synthesize buttonTitleColor;
@property(retain, nonatomic) UIFont *buttonTitleFont; // @synthesize buttonTitleFont;
- (void)dealloc;
- (void)didSelectButton:(id)arg1;
- (void)drawButtons;
- (id)createButtonWithTitle:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)configureButtonSwitchDefaults;

@end

@interface ZGManagedObjectItemParserDelegate : ZGCompleteParserDelegate
{
}

- (void)didPopulateTarget;
- (void)addToParentTargetForElementName:(id)arg1;

@end

@interface ZGDateNodeParserDelegate : ZGTextNodeParserDelegate
{
    NSDateFormatter *formatter;
}

- (id)objectValue;
- (void)dealloc;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;

@end

@interface ZGCoverDateParserDelegate : ZGBaseParserDelegate
{
    NSCalendar *calendar;
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (void)setupDateComponents;
- (void)addToParentTargetForElementName:(id)arg1;
- (void)populateTargetWithAttributes:(id)arg1;
- (void)popToParentParserDelegate:(id)arg1;
- (void)resetWithParentDelegate:(id)arg1 andElementName:(id)arg2;
- (void)dealloc;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;

@end

@interface ZGShopCategoryPublicationParserDelegate : ZGManagedObjectParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (id)entityName;
- (void)addToParentTargetForElementName:(id)arg1;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGPromoHeaderImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGPromoCategory *promo; // @dynamic promo;
@end

@interface LibraryIssueViewController : BaseViewController <LibraryViewControllerProtocol, UITableViewDelegate, UITableViewDataSource, NSFetchedResultsControllerDelegate, UIAlertViewDelegate, ButtonSwitchDelegate, ReaderLauncherDelegate, ButtonsCellDelegate, LoginInBannerHeaderDelegate, LibraryShopCellDelegate, UIScrollViewDelegate, UISearchBarDelegate>
{
    UITableView *_tableView;
    LibraryTableViewCell *_libraryCell;
    UIActivityIndicatorView *_spinner;
    UILabel *_spinnerLabel;
    MyLibraryFooter *_libraryFooter;
    DiskSpaceView *_diskSpaceView;
    MyLibraryDeleteView *_libraryDeleteView;
    HorizontalButtonSwitch *_sortSwitch;
    HorizontalButtonSwitch *_restoreSwitch;
    _Bool _shouldExecuteRateAppProcess;
    LibraryShopCell *_libraryShopCell;
    ButtonsCell *_slideOutCell;
    _Bool _completedSignInFromLibrary;
    NSObject<User> *_user;
    id <AppDataService> _appDataService;
    id <LibraryAccess> _libraryAccess;
    int _sortType;
    NSFetchedResultsController *_fetchedResultsController;
    NSDateFormatter *_sectionHeaderDateFormatter;
    NSMutableSet *_selectedIndexPaths;
    unsigned long long _buttonSelectorIndex;
    ReaderLauncher *_readerLauncher;
    _Bool _transitoryNotificationsRegistered;
    _Bool _transitioningToFromEditingMode;
    NSMutableDictionary *_coverIndexPaths;
    LoginBannerHeader *_loginHeader;
    _Bool _isOpen;
    long long _openSectionIndex;
    id <User> _theUser;
    _Bool _isUserDefaultUser;
    id <SocialUser> _socialUser;
    _Bool _isGygyaShow;
    UIButton *_signInButton;
    UIButton *_notMemberButton;
    UIButton *_moreNetworkButton;
    UIView *_notMemberEntryView;
    UIButton *_facebookButton;
    UIButton *_twitterButton;
    UIButton *_linkedinButton;
    UIView *__zinioEntryView;
    UILabel *_signInViewHeader;
    UILabel *_signInTitle;
    UIView *_successEntryView;
    UIView *_loginMainEntryView;
    UIView *_loginMinEntryView;
    UIButton *_facebookMinButton;
    UIButton *_signInMinButton;
    UILabel *_minWelcomeLbl;
    UILabel *_minSignLbl;
    NSString *_pendingOpenIssueId;
    UIButton *_createAccountButton;
    struct CGRect _originalTableFrame;
    UISearchBar *_searchBar;
    UIView *_zinioEntryView;
}

@property(retain, nonatomic) UISearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(nonatomic) struct CGRect originalTableFrame; // @synthesize originalTableFrame=_originalTableFrame;
@property(retain, nonatomic) NSString *pendingOpenIssueId; // @synthesize pendingOpenIssueId=_pendingOpenIssueId;
@property(retain, nonatomic) UIButton *createAccountButton; // @synthesize createAccountButton=_createAccountButton;
@property(retain, nonatomic) UILabel *minWelcomeLbl; // @synthesize minWelcomeLbl=_minWelcomeLbl;
@property(retain, nonatomic) UILabel *minSignLbl; // @synthesize minSignLbl=_minSignLbl;
@property(retain, nonatomic) UIButton *signInMinButton; // @synthesize signInMinButton=_signInMinButton;
@property(retain, nonatomic) UIButton *facebookMinButton; // @synthesize facebookMinButton=_facebookMinButton;
@property(retain, nonatomic) UIView *loginMinEntryView; // @synthesize loginMinEntryView=_loginMinEntryView;
@property(retain, nonatomic) UIView *loginMainEntryView; // @synthesize loginMainEntryView=_loginMainEntryView;
@property(retain, nonatomic) UIView *successEntryView; // @synthesize successEntryView=_successEntryView;
@property(retain, nonatomic) UILabel *signInTitle; // @synthesize signInTitle=_signInTitle;
@property(retain, nonatomic) UILabel *signInViewHeader; // @synthesize signInViewHeader=_signInViewHeader;
@property(retain, nonatomic) UIView *zinioEntryView; // @synthesize zinioEntryView=_zinioEntryView;
@property(retain, nonatomic) UIButton *facebookButton; // @synthesize facebookButton=_facebookButton;
@property(retain, nonatomic) UIView *notMemberEntryView; // @synthesize notMemberEntryView=_notMemberEntryView;
@property(retain, nonatomic) UIButton *notMemberButton; // @synthesize notMemberButton=_notMemberButton;
@property(retain, nonatomic) UIButton *signInButton; // @synthesize signInButton=_signInButton;
@property(retain, nonatomic) id <SocialUser> socialUser; // @synthesize socialUser=_socialUser;
@property(retain, nonatomic) NSObject<User> *user; // @synthesize user=_user;
@property(nonatomic) _Bool completedSignInFromLibrary; // @synthesize completedSignInFromLibrary=_completedSignInFromLibrary;
@property(retain, nonatomic) NSDateFormatter *sectionHeaderDateFormatter; // @synthesize sectionHeaderDateFormatter=_sectionHeaderDateFormatter;
@property(nonatomic) long long openSectionIndex; // @synthesize openSectionIndex=_openSectionIndex;
@property(nonatomic) _Bool isOpen; // @synthesize isOpen=_isOpen;
@property(retain, nonatomic) LoginBannerHeader *loginHeader; // @synthesize loginHeader=_loginHeader;
@property(retain, nonatomic) HorizontalButtonSwitch *restoreSwitch; // @synthesize restoreSwitch=_restoreSwitch;
@property(retain, nonatomic) HorizontalButtonSwitch *sortSwitch; // @synthesize sortSwitch=_sortSwitch;
@property(retain, nonatomic) MyLibraryFooter *libraryFooter; // @synthesize libraryFooter=_libraryFooter;
@property(retain, nonatomic) MyLibraryDeleteView *libraryDeleteView; // @synthesize libraryDeleteView=_libraryDeleteView;
@property(retain, nonatomic) DiskSpaceView *diskSpaceView; // @synthesize diskSpaceView=_diskSpaceView;
@property(retain, nonatomic) UILabel *spinnerLabel; // @synthesize spinnerLabel=_spinnerLabel;
@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)createAccountView;
- (void)submitFacebook;
- (void)moreNetworkView;
- (void)notMemberView;
- (void)signInView;
- (void)enableApplicationStartupProcedures;
- (void)processUserChange:(id)arg1 newUser:(id)arg2;
- (void)hideGigyaView;
- (void)showGigyaLogin:(id)arg1;
- (void)updateNavUI;
- (void)applicationUserChanged:(id)arg1;
- (void)launchReaderAfterSignInForIssue:(id)arg1;
- (void)removeScreen:(id)arg1;
- (void)loadSignInView;
- (void)loadCreateAccountView;
- (void)sectionHeaderView:(id)arg1 sectionClosed:(long long)arg2;
- (void)sectionHeaderView:(id)arg1 sectionOpened:(long long)arg2;
- (void)updateNumNewLibraryIssuesOnTabBadge;
- (void)reloadVisibleTableCells;
- (void)reloadTable;
- (void)setFontSizeOnSegmentedControl:(id)arg1 fontSize:(double)arg2;
- (double)getFitFontSizeOnSegmentedControl:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)deleteIssuesFromDisk;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)returnFromDeleteModeAnimated;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)stopEditing;
- (void)startEditing;
- (void)setMyLibraryDeleteViewLabel;
- (_Bool)editModeIsRestore;
- (void)resetTableView;
- (void)editConfigurationNormal;
- (void)configureEditMode;
- (void)infoMagazines;
- (void)moreMagazines;
- (void)launchReaderForPurchasedIssueId:(id)arg1;
- (void)launchReaderForIssueId:(id)arg1;
- (void)readerLauncher:(id)arg1 failedToLaunchPublication:(id)arg2 issue:(id)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)issueDownloadFailure:(id)arg1;
- (id)readerLauncher;
- (void)prepareLibraryView:(id)arg1;
- (void)libraryUpdateFailed:(id)arg1;
- (void)libraryUpdateSuccess:(id)arg1;
- (void)libraryThumbnailDownloaded:(id)arg1;
- (void)stopSpinner;
- (void)startSpinner;
- (void)stopSelectedRowDownloadingMode;
- (void)clearModal:(id)arg1;
- (void)issueDownloading:(id)arg1;
- (void)issueDownloadedCompletely:(id)arg1;
- (_Bool)isDownloadInProgress:(id)arg1;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)createShopCell;
- (id)createNewCellDropIn;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)resetFetchedResultsController;
- (id)fetchedResultsController;
- (void)setFetchedResultsController:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)buildDoneButton;
- (void)buildEditButton;
- (void)buildRemoveRestore;
- (void)buttonSwitch:(id)arg1 selectedButtonIndex:(long long)arg2;
- (void)buildDateEditButton;
- (void)coreDataNeedsRefresh:(id)arg1;
- (void)registerTransitoryNotifications;
- (void)deregisterTransitoryNotifications;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)configureSignUI:(_Bool)arg1;
- (struct CGRect)tableFrame;
- (void)viewWillAppear:(_Bool)arg1;
- (void)delayedOpenLoginHeader;
- (void)awakeFromNib;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDataLibraryAccess : NSObject <LibraryAccess>
{
    NSManagedObjectContextDataService *managedObjectContextDataService;
    id <AnalyticsManager> analyticsManager;
    ContentManager *contentManager;
    CoreDataAppDataService *appDataService;
}

@property(retain, nonatomic) CoreDataAppDataService *appDataService; // @synthesize appDataService;
@property(retain, nonatomic) NSManagedObjectContextDataService *managedObjectContextDataService; // @synthesize managedObjectContextDataService;
- (void)changeLibraryBackupPolicy:(id)arg1;
- (void)changeLibraryBackupPolicyTo:(int)arg1 forUser:(id)arg2;
- (unsigned long long)countOfNewLibraryIssuesForUser:(id)arg1;
- (id)newLibraryIssuesForUser:(id)arg1;
- (unsigned long long)countOfAllLibraryIssuesForUser:(id)arg1;
- (unsigned long long)countOfHiddenLibraryIssuesForUser:(id)arg1;
- (unsigned long long)countOfNonHiddenLibraryIssuesForUser:(id)arg1;
- (id)hiddenLibraryIssuesForUser:(id)arg1 pubId:(id)arg2;
- (id)libraryIssuesForUser:(id)arg1 pubId:(id)arg2;
- (id)fetchRequestForUser:(id)arg1 filteredByTitle:(id)arg2 showHiddenIssues:(_Bool)arg3;
- (id)libraryIssueRequestForUser:(id)arg1 pubId:(id)arg2 hidden:(_Bool)arg3;
- (id)titleIndexValues;
- (id)currentYear;
- (id)allAvailableLibraryIssueYearsForUser:(id)arg1;
- (id)availableHiddenLibraryIssueYearsForUser:(id)arg1;
- (id)availableLibraryIssueYearsForUser:(id)arg1;
- (id)availableIssueYearsForUser:(id)arg1 hidden:(int)arg2;
- (void)restoreHiddenLibraryIssues:(id)arg1;
- (void)hideLibraryIssues:(id)arg1 removingDownloadedAssets:(_Bool)arg2;
- (void)hideLibraryIssues:(id)arg1;
- (id)allLibraryIssuesForUser:(id)arg1 sortedBy:(int)arg2 usingPredicate:(id)arg3;
- (id)allLibraryIssuesForUser:(id)arg1 sortedBy:(int)arg2;
- (void)saveManagedObjectContext;
- (void)libraryIssueFailedDownloadingForUser:(id)arg1 issueId:(id)arg2;
- (void)libraryIssueFinishedDownloadingForUser:(id)arg1 issueId:(id)arg2;
- (void)markLibraryIssueAsDownloadFailed:(id)arg1;
- (void)markLibraryIssueAsDownloaded:(id)arg1;
- (void)markLibraryIssue:(id)arg1 asRead:(_Bool)arg2 forUser:(id)arg3;
- (id)hiddenLibraryIssuesForUser:(id)arg1 withinYear:(id)arg2 sortedBy:(int)arg3 groupedBy:(int)arg4;
- (id)hiddenLibraryIssuesForUser:(id)arg1 sortedBy:(int)arg2;
- (id)libraryIssuesForUser:(id)arg1 withinYear:(id)arg2 sortedBy:(int)arg3 groupedBy:(int)arg4;
- (id)libraryIssuesForUser:(id)arg1 withinYear:(id)arg2 sortedBy:(int)arg3 groupedBy:(int)arg4 showHiddenIssues:(id)arg5 keyword:(id)arg6;
- (id)libraryIssuesForUser:(id)arg1 sortedBy:(int)arg2 groupedBy:(int)arg3 keyword:(id)arg4;
- (id)libraryIssuesForUser:(id)arg1 sortedBy:(int)arg2;
- (id)libraryIssueRequestForUser:(id)arg1 year:(id)arg2 sortedBy:(int)arg3 groupedBy:(int)arg4 hidden:(_Bool)arg5 predicate:(id)arg6;
- (id)libraryIssuesForUser:(id)arg1 displayKey:(id)arg2;
- (id)libraryIssueRequestForUser:(id)arg1 displayKey:(id)arg2 hidden:(_Bool)arg3;
- (id)hiddenLibraryIssueForUser:(id)arg1 issueId:(id)arg2;
- (id)libraryIssueForUser:(id)arg1 issueId:(id)arg2;
- (id)libraryIssueForUser:(id)arg1 issueId:(id)arg2 includeHidden:(_Bool)arg3;
- (id)libraryBaseDirectoryForUser:(id)arg1;
- (id)managedObjectContext;
- (void)dealloc;
- (void)_handleMarkIssueAsReadNotification:(id)arg1;
- (id)initWithAnalyticsManager:(id)arg1 contentManager:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGCategoryHeroTargetParserDelegate : ZGManagedObjectParserDelegate
{
}

- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface NSManagedObjectContextDataService : NSObject
{
    NSPersistentStoreCoordinator *persistentStoreCoordinator;
    NSManagedObjectModel *managedObjectModel;
    NSManagedObjectContext *managedObjectContext;
}

- (id)insertEntityNamed:(id)arg1;
- (id)storagePath;
- (id)storageName;
- (id)modelName;
- (id)persistentStoreCoordinator;
- (id)managedObjectModel;
- (id)buildManagedObjectContext;
- (id)threadContextKey;
- (id)managedObjectContextForCurrentThread;
- (void)storeManagedObjectContextForCurrentThread:(id)arg1;
- (void)dealloc;

@end

@interface ZGHiddenDataService : NSManagedObjectContextDataService
{
    ZGProxyManager *proxyManager;
    ContentManager *contentManager;
    NSOperationQueue *imageProcessingQueue;
    NSOperationQueue *imageSaveQueue;
    NSOperationQueue *boundaryResourceQueue;
    NSOperationQueue *remoteObjectQueue;
}

@property(retain, nonatomic) NSOperationQueue *remoteObjectQueue; // @synthesize remoteObjectQueue;
@property(retain, nonatomic) NSOperationQueue *boundaryResourceQueue; // @synthesize boundaryResourceQueue;
@property(retain, nonatomic) NSOperationQueue *imageSaveQueue; // @synthesize imageSaveQueue;
@property(retain, nonatomic) NSOperationQueue *imageProcessingQueue; // @synthesize imageProcessingQueue;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
@property(retain, nonatomic) ZGProxyManager *proxyManager; // @synthesize proxyManager;
- (void)dealloc;
- (id)init;
- (id)storageName;
- (id)modelName;

@end

@interface ZGUserHiddenDataService : NSManagedObjectContextDataService
{
    id <AppDataService> appDataService;
    NSOperationQueue *imageProcessingQueue;
    NSOperationQueue *imageSaveQueue;
}

@property(retain, nonatomic) NSOperationQueue *imageSaveQueue; // @synthesize imageSaveQueue;
@property(retain, nonatomic) NSOperationQueue *imageProcessingQueue; // @synthesize imageProcessingQueue;
@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
- (void)dealloc;
- (id)storagePath;
- (id)storageName;
- (id)modelName;
- (id)init;

@end

@interface ZGEntityDescriptor : NSObject
{
    NSString *entity;
    NSString *type;
}

+ (id)descriptorWithEntity:(id)arg1 andType:(id)arg2;
@property(readonly, nonatomic) NSString *entity; // @synthesize entity;
- (void)setTypeOnManagedObject:(id)arg1;

@end

@interface ZGDataService : NSObject
{
}

+ (void)reinjectHiddenDataService;
+ (void)logFetchAllEntitiesNamed:(id)arg1 withMessage:(id)arg2;
+ (void)removeAllRecordsFromEntityNamed:(id)arg1 inContext:(id)arg2;
+ (void)parseDataAndSaveContext:(id)arg1 usingDelegate:(id)arg2;
+ (void)parseData:(id)arg1 usingDelegate:(id)arg2;
+ (id)fetchEntity:(id)arg1 withKeyPath:(id)arg2 andKey:(id)arg3;
+ (id)zgcontext;
+ (id)newsstandId;
+ (void)saveContext;
+ (id)createResourceFromEntityNamed:(id)arg1;
+ (void)signalLoadCompletionForRemoteObject:(id)arg1;
+ (void)signalLoadCompletionForResource:(id)arg1;
+ (void)loadRemoteObject:(id)arg1;
+ (void)loadBoundaryResource:(id)arg1;
+ (void)logMemUsage;
+ (void)purgeUserData;
+ (void)purgeCache;
+ (void)dataServiceForCoreDataLibraryAccess:(id)arg1;
+ (void)dataServiceForCoreDataAppDataService:(id)arg1;
+ (void)beginRemoteObjectOperation:(id)arg1;
+ (void)beginBoundaryResourceOperation:(id)arg1;
+ (void)beginImageSave:(id)arg1 withImage:(id)arg2;
+ (id)imageProcessingQueue;
+ (void)beginImageProcessing:(id)arg1;
+ (id)dummyExcerptCategory;
+ (id)excerptFromLink:(id)arg1;
+ (id)publicationFromLink:(id)arg1;
+ (id)excerptFromData:(id)arg1;
+ (id)excerptFromId:(id)arg1;
+ (id)resourceFromLink:(id)arg1;
+ (id)explore;
+ (id)shop;
+ (void)initializeService;
+ (void)initialize;

@end

@interface ZeitgeistUILabel : UIView
{
    UILabel *leftTextLabel;
    UILabel *rightTextLabel;
    UILabel *dividerTextLabel;
}

@property(retain, nonatomic) UILabel *rightTextLabel; // @synthesize rightTextLabel;
@property(retain, nonatomic) UILabel *dividerTextLabel; // @synthesize dividerTextLabel;
@property(retain, nonatomic) UILabel *leftTextLabel; // @synthesize leftTextLabel;
- (void)dealloc;
- (void)setRightLabelText:(id)arg1;
- (void)setLeftLabelText:(id)arg1;
- (void)updateLabelSize;
- (void)awakeFromNib;

@end

@interface ZGProxyManager : NSObject
{
    ContentManager *contentManager;
    id <AppDataService> appDataService;
}

@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
- (id)getWebResource:(id)arg1;
- (id)postExploreRequest;
- (id)postShopRequest;

@end

@interface HorizontalSlidingMenuCellView : UICollectionViewCell
{
    UILabel *_titleLabel;
}

+ (struct CGSize)cellSizeForText:(id)arg1;
+ (struct CGSize)cellSize;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface DependencyManager : NSObject
{
}

+ (void)inject:(id)arg1;
+ (void)initForApplication;
+ (void)initialize;

@end

@interface AFSecurityPolicy : NSObject
{
    _Bool _validatesCertificateChain;
    _Bool _allowInvalidCertificates;
    _Bool _validatesDomainName;
    unsigned long long _SSLPinningMode;
    NSArray *_pinnedCertificates;
    NSArray *_pinnedPublicKeys;
}

+ (id)keyPathsForValuesAffectingPinnedPublicKeys;
+ (id)policyWithPinningMode:(unsigned long long)arg1;
+ (id)defaultPolicy;
+ (id)defaultPinnedCertificates;
@property(retain, nonatomic) NSArray *pinnedPublicKeys; // @synthesize pinnedPublicKeys=_pinnedPublicKeys;
@property(nonatomic) _Bool validatesDomainName; // @synthesize validatesDomainName=_validatesDomainName;
@property(nonatomic) _Bool allowInvalidCertificates; // @synthesize allowInvalidCertificates=_allowInvalidCertificates;
@property(retain, nonatomic) NSArray *pinnedCertificates; // @synthesize pinnedCertificates=_pinnedCertificates;
@property(nonatomic) _Bool validatesCertificateChain; // @synthesize validatesCertificateChain=_validatesCertificateChain;
@property(nonatomic) unsigned long long SSLPinningMode; // @synthesize SSLPinningMode=_SSLPinningMode;
- (void).cxx_destruct;
- (_Bool)evaluateServerTrust:(struct __SecTrust *)arg1 forDomain:(id)arg2;
- (_Bool)evaluateServerTrust:(struct __SecTrust *)arg1;
- (id)init;

@end

@interface IndexedLibraryViewController : BaseViewController <UIGestureRecognizerDelegate, IndexScrubberViewDataSource, IndexScrubberViewDelegate, LibraryYearChooserDelegate, NSFetchedResultsControllerDelegate, UIPopoverControllerDelegate, LibraryModifyProtocol, LibraryViewControllerProtocol, ZinioCoversVerticalScrollViewDataSource, ZinioCoversVerticalScrollViewDelegate, UIActionSheetDelegate, ReaderLauncherDelegate, UISearchBarDelegate, LibraryIssuePageViewDelegate>
{
    UIButton *scrubberTitle;
    IndexScrubberView *scrubber;
    LibraryIndexScrubPreviewView *scrubPreview;
    UIView *reusableLibraryIndexCellView;
    UIPopoverController *yearChooser;
    UIButton *latestYearButton;
    ZinioCoversVerticalScrollView *scrollView;
    UIView *reusableLibraryCellView;
    UIView *reusableLibraryPageView;
    UIActivityIndicatorView *spinnerView;
    UIButton *editButton;
    UIButton *editDoneButton;
    NSMutableDictionary *indexToSectionMapping;
    NSDateFormatter *indexDateFormatter;
    NSMutableArray *availableYears;
    int editMode;
    UIPopoverController *removeRecoverDecisionPopupController;
    UIActionSheet *removeConfirmAlertView;
    _Bool skipEditModeInstructions;
    id <LibraryAccess> libraryAccess;
    id <AppDataService> appDataService;
    NSFetchedResultsController *fetchedResultsController;
    NSNumber *yearFilter;
    NSMutableDictionary *sectionFilters;
    NSMutableDictionary *scrollPositions;
    NSString *pubIdFilter;
    NSString *pubIdFilterTitle;
    int sortType;
    UserLibraryMetadata *libraryMetadata;
    NSMutableDictionary *coverIndexPaths;
    _Bool viewReady;
    ReaderLauncher *readerLauncher;
    _Bool transitoryIssueNotificationsRegistered;
    _Bool shouldExecuteRateAppProcess;
    _Bool stackExplosion;
    struct CGPoint stackHomeCenter;
    LibraryIssuePageView *stackCell;
    NSArray *stackImages;
    double stackPinchScaleStart;
    UIPinchGestureRecognizer *stackUnexplodeRecognizer;
    NavigationInsetViewController *insetController;
    NavigationInsetViewFlowControl *flowController;
    _Bool userLibraryEmpty;
    _Bool appeared;
    _Bool isLibraryTabSelected;
    NSString *pendingOpenIssueId;
    id <User> user;
    id <SocialUser> socialUser;
    UISegmentedControl *_dateTitleSegmentedControl;
    UISegmentedControl *_removeRestoreSegmentedControl;
    UISearchBar *_searchBar;
    UIView *_searchBarBackgroundView;
    UIButton *_bookmarkButton;
    UIView *_editButtonContainerView;
    UIView *_doneButtonContainerView;
    UIView *_noContent;
    NSMutableArray *_searchResults;
    _Bool _batchDownloadingEnabled;
    NSMutableArray *_downloadButtonTappedIssues;
    int _networkStatus;
    UIAlertView *_batchDownloadingPromotionAlertView;
    UITapGestureRecognizer *_tapNavigationBarGestureRecognizer;
    _Bool _userSearching;
    UIButton *_backButton;
    id <LibraryIssue> issueWaitingForPackingList;
}

@property(nonatomic, getter=isUserSearching) _Bool userSearching; // @synthesize userSearching=_userSearching;
@property(retain, nonatomic) UIView *noContent; // @synthesize noContent=_noContent;
@property(retain, nonatomic) UITapGestureRecognizer *tapNavigationBarGestureRecognizer; // @synthesize tapNavigationBarGestureRecognizer=_tapNavigationBarGestureRecognizer;
@property(retain, nonatomic) UIAlertView *batchDownloadingPromotionAlertView; // @synthesize batchDownloadingPromotionAlertView=_batchDownloadingPromotionAlertView;
@property(nonatomic) int networkStatus; // @synthesize networkStatus=_networkStatus;
@property(retain, nonatomic) UIView *doneButtonContainerView; // @synthesize doneButtonContainerView=_doneButtonContainerView;
@property(retain, nonatomic) UIView *editButtonContainerView; // @synthesize editButtonContainerView=_editButtonContainerView;
@property(retain, nonatomic) UIButton *bookmarkButton; // @synthesize bookmarkButton=_bookmarkButton;
@property(retain, nonatomic) NSMutableArray *searchResults; // @synthesize searchResults=_searchResults;
@property(retain, nonatomic) UIView *searchBarBackgroundView; // @synthesize searchBarBackgroundView=_searchBarBackgroundView;
@property(retain, nonatomic) UISearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(retain, nonatomic) UISegmentedControl *removeRestoreSegmentedControl; // @synthesize removeRestoreSegmentedControl=_removeRestoreSegmentedControl;
@property(retain, nonatomic) UISegmentedControl *dateTitleSegmentedControl; // @synthesize dateTitleSegmentedControl=_dateTitleSegmentedControl;
@property(retain, nonatomic) NSString *pendingOpenIssueId; // @synthesize pendingOpenIssueId;
@property(retain, nonatomic) id <SocialUser> socialUser; // @synthesize socialUser;
@property(retain, nonatomic) NSObject<User> *user; // @synthesize user;
@property(nonatomic) _Bool isLibraryTabSelected; // @synthesize isLibraryTabSelected;
@property(retain, nonatomic) NavigationInsetViewFlowControl *flowController; // @synthesize flowController;
@property(retain, nonatomic) NavigationInsetViewController *insetController; // @synthesize insetController;
@property(retain, nonatomic) id <LibraryIssue> issueWaitingForPackingList; // @synthesize issueWaitingForPackingList;
@property(retain, nonatomic) NSString *pubIdFilterTitle; // @synthesize pubIdFilterTitle;
@property(retain, nonatomic) NSString *pubIdFilter; // @synthesize pubIdFilter;
@property(retain, nonatomic) NSNumber *yearFilter; // @synthesize yearFilter;
@property(retain, nonatomic) UIButton *editDoneButton; // @synthesize editDoneButton;
@property(retain, nonatomic) UIButton *editButton; // @synthesize editButton;
@property(retain, nonatomic) UIActivityIndicatorView *spinnerView; // @synthesize spinnerView;
@property(retain, nonatomic) ZinioCoversVerticalScrollView *scrollView; // @synthesize scrollView;
@property(retain, nonatomic) UIView *reusableLibraryPageView; // @synthesize reusableLibraryPageView;
@property(retain, nonatomic) UIView *reusableLibraryCellView; // @synthesize reusableLibraryCellView;
@property(retain, nonatomic) UIButton *latestYearButton; // @synthesize latestYearButton;
@property(retain, nonatomic) UIPopoverController *yearChooser; // @synthesize yearChooser;
@property(retain, nonatomic) UIView *reusableLibraryIndexCellView; // @synthesize reusableLibraryIndexCellView;
@property(retain, nonatomic) LibraryIndexScrubPreviewView *scrubPreview; // @synthesize scrubPreview;
@property(retain, nonatomic) IndexScrubberView *scrubber; // @synthesize scrubber;
@property(retain, nonatomic) UIButton *scrubberTitle; // @synthesize scrubberTitle;
@property(nonatomic, getter=isBatchDownloadingEnabled) _Bool batchDownloadingEnabled; // @synthesize batchDownloadingEnabled=_batchDownloadingEnabled;
- (void)_scrollLibraryToTop:(id)arg1;
- (void)_registerForNotifications;
- (void)_hideBackButton;
- (void)_showBackButton;
- (void)_updateLeftBarButtonItem;
- (void)_updateRightBarButtonItem;
- (_Bool)_launchReaderIfNecessary:(id)arg1;
- (void)_displayBatchDowloadingAlertIfNecessary;
- (void)_handleBatchDownloadingSwitchValueChangedNotification:(id)arg1;
- (void)_updateDownloadRelatedUI;
- (_Bool)_shouldEnableDateTitleSegmentedControl;
- (void)_resignSearchbarAsFirstResponder;
- (_Bool)_isInSearchMode;
- (void)_switchToTitleView;
- (void)_switchToDateView;
- (void)_switchToRestoreView;
- (void)_switchToRemoveView;
- (void)_handleReachabilityChangedNotification:(id)arg1;
- (_Bool)_isNotReachable;
- (void)_updateNetworkStatus;
- (void)handleLongPressGectureRecognizer:(id)arg1;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (void)handleNetworkProblemOnNavigationController;
- (long long)libraryIssuePageView:(id)arg1 stateForIssue:(id)arg2;
- (void)userDidSelectLibraryTab;
- (void)libraryTabSelected;
- (void)showEmptyLibraryAlert;
- (void)didGoOnline:(id)arg1;
- (_Bool)shouldShowFullScreenServerUnavailableErrorMessage;
- (_Bool)shouldShowFullScreenNetworkErrorMessage;
- (_Bool)shouldShowFullScreenOfflineMessageWhenOffline;
- (_Bool)shouldActAsNetworkServicesManagerDelegate;
- (void)launchReaderForPurchasedIssueId:(id)arg1;
- (void)launchReaderForIssueId:(id)arg1;
- (void)initiateStackExplosionForCell:(id)arg1;
- (void)handleUnexplodePinch:(id)arg1;
- (void)handleStackPinch:(id)arg1;
- (void)initializeStackExplode;
- (void)stackScrollViewDidHide:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)explodeStackCell;
- (void)explodeStackDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)showStackCellView;
- (void)stackImageAnimationIsComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)exitStackExplosion;
- (void)exitStackExplosion:(_Bool)arg1;
- (void)unexplodeStackImages;
- (void)stackCellViewDidHide:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)unexplodeStackDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)libraryUpdateFailed:(id)arg1;
- (void)libraryUpdated:(id)arg1;
- (void)libraryStartedLoading:(id)arg1;
- (void)updateLibraryUI;
- (void)applicationChangedUser:(id)arg1;
- (void)issueDownloadFailure:(id)arg1;
- (void)issueDownloadCancelled:(id)arg1;
- (void)issueDownloadCompleted:(id)arg1;
- (void)issueDownloadProgress:(id)arg1;
- (void)readerThumbnailGenerationProgress:(id)arg1;
- (void)handleDownloadComplete:(id)arg1 success:(_Bool)arg2;
- (void)handleDownload:(id)arg1 progress:(float)arg2;
- (void)issueObjectTouchUpForPageView:(id)arg1;
- (void)_setUpDownloadOperationsForPageView:(id)arg1;
- (void)issueObjectTouchUp:(id)arg1;
- (void)didTapDownloadButton:(id)arg1;
- (id)getLibraryIssuePageViewForIssueId:(id)arg1;
- (unsigned long long)indexOfLibraryIssueInPageView:(id)arg1;
- (id)getLibraryIssuePageViewForSubview:(id)arg1;
- (void)readerLauncher:(id)arg1 failedToLaunchPublication:(id)arg2 issue:(id)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (void)unlockUIForCompletedDownloadOfIssue:(id)arg1;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)hideGigyaView;
- (void)showGigyaLogin:(id)arg1;
- (void)enableApplicationStartupProcedures;
- (void)processUserChange:(id)arg1 newUser:(id)arg2;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)removeIssueAtIndex:(unsigned long long)arg1;
- (void)removeIssue:(id)arg1;
- (void)recoverIssueAtIndex:(unsigned long long)arg1;
- (void)libraryChangeComplete:(id)arg1;
- (void)noLibraryModification;
- (void)dismissRemoveRecoverDecisionPopoverController;
- (void)recoverIssueObject:(id)arg1;
- (void)removeIssueObject:(id)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)toggleEditMode;
- (void)handleEditModeInstructions;
- (void)updateDiskUsage;
- (void)renderStackCell:(id)arg1 inPageView:(id)arg2;
- (void)setupCellImage:(id)arg1 forIssue:(id)arg2 atPath:(id)arg3;
- (void)verticalScrollView:(id)arg1 configureCell:(id)arg2 forIndexPath:(id)arg3;
- (id)cellForVerticalScrollView:(id)arg1;
- (struct CGPoint)sectionTitleOriginOffset:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (double)sectionTitleHeightForSection:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (id)titleForSection:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (unsigned long long)numberOfCellsForSection:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (unsigned long long)numberOfSectionsForVerticalScrollView:(id)arg1;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)didChooseYear:(unsigned long long)arg1;
- (void)handleLatestYearTap:(id)arg1;
- (void)handleIndexYearTap:(id)arg1;
- (id)titleForIndexScrubberIndex:(unsigned long long)arg1;
- (void)indexScrubber:(id)arg1 didScrubOverIndex:(unsigned long long)arg2;
- (void)indexScrubber:(id)arg1 didUnselectCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)indexScrubber:(id)arg1 didSelectCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)resetForNewIndex;
- (_Bool)indexScrubber:(id)arg1 canSelectCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)createScrubPreviewView:(id)arg1;
- (void)renderCell:(unsigned long long)arg1 inView:(id)arg2 forIndexScrubber:(id)arg3;
- (id)createCellForIndexScrubber:(id)arg1;
- (unsigned long long)totalCountForIndexScrubber:(id)arg1;
- (void)saveSectionFilters;
- (unsigned long long)scrubberIndexForSectionFilter:(id)arg1;
- (void)setScrollPosition:(id)arg1 forSortType:(int)arg2;
- (id)scrollPositionForSortType:(int)arg1;
- (void)setSectionFilter:(id)arg1 forSortType:(int)arg2;
- (id)sectionFilterForSortType:(int)arg1;
- (void)setObject:(id)arg1 forIntKey:(int)arg2 inDictionary:(id)arg3;
- (_Bool)isPublicationIssueDownloaded:(id)arg1;
- (_Bool)isDownloadInProgress:(id)arg1;
- (_Bool)isIssueDownloading:(id)arg1;
- (id)libraryIssueAtCellIndex:(unsigned long long)arg1;
- (unsigned long long)libraryIssueCellCount;
- (void)refreshLibrary;
- (void)refreshAllData;
- (void)updateIssueCountUI;
- (void)updateUIFromModel;
- (void)reloadIndex;
- (void)resetLibrary;
- (void)resetIndex;
- (void)resetAllData;
- (void)loadLibraryMetadata;
- (void)imageResourceDidDownload:(id)arg1;
- (void)packingListAvailable:(id)arg1;
- (id)titleIndexFetchedResultsController;
- (void)resetFetchedResultsController;
- (id)fetchedResultsController;
- (void)setFetchedResultsController:(id)arg1;
- (void)hideSpinner;
- (void)showSpinner;
- (void)reloadLibrary:(id)arg1;
- (void)removeRestoreSegmentedControlValueDidChange:(id)arg1;
- (void)dateTitleSegmentedControlValueDidChange:(id)arg1;
- (void)goToShop:(id)arg1;
- (void)didTapBookmarksButton:(id)arg1;
- (void)showLoginFacebook:(id)arg1;
- (void)showCreateAccount:(id)arg1;
- (void)showSignIn:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)searchBarTextDidEndEditing:(id)arg1;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (void)launchReaderAfterSignInForIssue:(id)arg1;
- (id)readerLauncher;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)dealloc;
- (void)viewDidLoad;
- (void)awakeFromNib;
- (void)fadeLibraryViewIn;
- (void)fadeLibraryViewOut;
- (id)libraryView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGExcerptLeftLargeImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGExcerpt *excerpt; // @dynamic excerpt;
@end

@interface ZGExcerptRightThumbnailImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGExcerpt *excerpt; // @dynamic excerpt;
@end

@interface SocialSharing : NSObject
{
}

+ (void)createPinForExcerpt:(id)arg1;
+ (void)createPinForMagazine:(id)arg1;
+ (id)_mailComposeViewControllerWithSubject:(id)arg1 image:(id)arg2 linkURLString:(id)arg3 delegate:(id)arg4;
+ (id)mailComposeViewControllerForMagazine:(id)arg1 delegate:(id)arg2 dateString:(id)arg3;
+ (id)initialTextForMagazine:(id)arg1;
+ (id)initialTextForMagazine:(id)arg1 urlString:(id)arg2;
+ (id)initialTextForExcerpt:(id)arg1;
+ (id)mailComposeViewControllerForExcerpt:(id)arg1 delegate:(id)arg2;
+ (id)magazineReaderURLForExcerptId:(id)arg1;
+ (void)showActionSheetInView:(id)arg1 delegate:(id)arg2;
+ (id)_socialSharingViewControllerForServiceType:(id)arg1 initialText:(id)arg2 URL:(id)arg3 image:(id)arg4;
+ (id)socialSharingViewControllerForServiceType:(id)arg1 magazine:(id)arg2 urlString:(id)arg3;
+ (id)socialSharingViewControllerForServiceType:(id)arg1 excerpt:(id)arg2 urlString:(id)arg3;

@end

@interface Theme : NSObject
{
    NSDictionary *_setting;
}

@property(retain, nonatomic) NSDictionary *settings; // @synthesize settings=_setting;
- (id)fontForKey:(id)arg1;
- (id)colorForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ZGExcerptRightLargeImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGExcerpt *excerpt; // @dynamic excerpt;
@end

@interface ZGExcerptLandscapeWallpaperImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGExcerpt *excerpt; // @dynamic excerpt;
@end

@interface ZGExcerptLeftThumbnailImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGExcerpt *excerpt; // @dynamic excerpt;
@end

@interface ZGExcerptPortraitWallpaperImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGExcerpt *excerpt; // @dynamic excerpt;
@end

@interface ZGExcerptPublicationIssueParserDelegate : ZGManagedObjectParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (id)entityName;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface SearchCategoryTableViewCell : UITableViewCell
{
    UILabel *_titleLabel;
    NSString *_categoryId;
}

+ (id)backgroundColor;
+ (double)height;
@property(retain, nonatomic) NSString *categoryId; // @synthesize categoryId=_categoryId;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)dealloc;
- (void)setUpWithSearchResult:(id)arg1;

@end

@interface ZGRemoteObject : NSObject
{
    NSNumber *completed;
}

@property(nonatomic) NSNumber *completed; // @synthesize completed;
- (void)reset;

@end

@interface ZGTransientLink : NSObject <ZGAtomLink>
{
    NSString *rel;
    NSString *type;
    NSString *href;
}

@property(retain, nonatomic) NSString *href; // @synthesize href;
@property(retain, nonatomic) NSString *type; // @synthesize type;
@property(retain, nonatomic) NSString *rel; // @synthesize rel;
- (void)dealloc;

@end

@interface ZGTransientLinkParserDelegate : ZGBaseParserDelegate
{
}

- (Class)nestedDelegateClassForElementName:(id)arg1;
- (id)delegateforNestedElement:(id)arg1 namespaceURI:(id)arg2 qualifiedName:(id)arg3 attributes:(id)arg4;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGTransientObjectCollectionParserDelegate : ZGBaseParserDelegate
{
    Class onlyNestedDelegateClass;
}

+ (id)classKeypaths;
+ (id)classDelegates;
@property(nonatomic) Class onlyNestedDelegateClass; // @synthesize onlyNestedDelegateClass;
- (_Bool)rejectsChild:(id)arg1 forReason:(id *)arg2;
- (id)keypathForElementName:(id)arg1;
- (void)addToParentTargetForElementName:(id)arg1;
- (Class)nestedDelegateClassForElementName:(id)arg1;
- (void)resetWithParentDelegate:(id)arg1 andElementName:(id)arg2;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface NewSettingsViewController : UIViewController <SettingsTableViewControllerDelegate, UIGestureRecognizerDelegate>
{
    id <NewSettingsViewControllerDelegate> _delegate;
    UIImageView *_blurredBackgroundImage;
    UIView *_containerView;
    SettingsTableViewController *_settingsTableViewController;
    UIImage *_backgroundImage;
    SettingsViewControllerTransitioningDelegate *_transitioningDelegate;
    UIView *_visualEffectView;
    UIImageView *_blurredBackgroundImageView;
    UIImageView *_backgroundImageView;
}

@property(retain, nonatomic) UIView *visualEffectView; // @synthesize visualEffectView=_visualEffectView;
@property(retain, nonatomic) SettingsViewControllerTransitioningDelegate *transitioningDelegate; // @synthesize transitioningDelegate=_transitioningDelegate;
@property(retain, nonatomic) UIImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
@property(retain, nonatomic) UIImageView *blurredBackgroundImageView; // @synthesize blurredBackgroundImageView=_blurredBackgroundImageView;
@property(retain, nonatomic) UIImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
@property(retain, nonatomic) SettingsTableViewController *settingsTableViewController; // @synthesize settingsTableViewController=_settingsTableViewController;
@property(nonatomic) id <NewSettingsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)shouldAutorotate;
- (void)_handleTapOnAccountView:(id)arg1;
- (id)_takeSnapshotOfView:(id)arg1;
- (void)_dismiss;
- (void)didTapDismissButton:(id)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)applicationChangedUser:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)popViewController;
- (void)popViewControllerNotification:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)awakeFromNib;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGTransientObjectItemParserDelegate : ZGBaseParserDelegate
{
}

- (void)addToParentTargetForElementName:(id)arg1;

@end

@interface ZGPaymentTypeImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGPaymentType *paymentType; // @dynamic paymentType;
@end

@interface ZGPublicationOfferParserDelegate : ZGManagedObjectParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (Class)itemDelegateClassForElementName:(id)arg1;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGLanguageParserDelegate : ZGManagedObjectItemParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface WSAServerError : NSObject
{
}

+ (_Bool)validateWSAErrorResponse:(id)arg1;
+ (id)_localizedMessageForCode:(long long)arg1;
+ (id)errorForServerErrorData:(id)arg1;

@end

@interface ZGCountryParserDelegate : ZGManagedObjectItemParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGPaymentTypeParserDelegate : ZGManagedObjectItemParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGTransientImageParserDelegate : ZGBaseParserDelegate
{
}

- (id)keypathForElementName:(id)arg1;
- (Class)nestedDelegateClassForElementName:(id)arg1;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;

@end

@interface TermsOfServiceViewController : UIViewController
{
    UITextView *_textView;
}

@property(retain, nonatomic) UITextView *textView; // @synthesize textView=_textView;
- (void)dealloc;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface ZGTransientImage : ZGTransientResource <ImageObject>
{
    _Bool downloading;
    _Bool delayMissingImageDownload;
    NSMutableData *receivedData;
    NSURLConnection *imageConnection;
    ImageProcessingOperation *imageProcessingOperation;
    UIImage *image;
}

@property(retain, nonatomic) NSMutableData *receivedData; // @synthesize receivedData;
@property(nonatomic) _Bool delayMissingImageDownload; // @synthesize delayMissingImageDownload;
@property(retain, nonatomic) UIImage *image; // @synthesize image;
- (void)dealloc;
@property(retain, nonatomic) ImageProcessingOperation *imageProcessingOperation;
- (void)recycleZGTransientImage;
- (void)imageProcessingDidComplete:(id)arg1;
- (void)beginImageProcessingWithQueue:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGTransientThumbnail : ZGTransientImage
{
}

@end

@interface LibraryYearChooserViewController : UIViewController <UIPickerViewDataSource, UIPickerViewDelegate>
{
    id <LibraryYearChooserDelegate> chooserDelegate;
    UIPickerView *yearPicker;
    NSArray *validYears;
    UILabel *pickerTitle;
    int selectedYear;
}

@property(retain, nonatomic) UILabel *pickerTitle; // @synthesize pickerTitle;
@property(nonatomic) int selectedYear; // @synthesize selectedYear;
@property(retain, nonatomic) NSArray *validYears; // @synthesize validYears;
@property(nonatomic) id <LibraryYearChooserDelegate> chooserDelegate; // @synthesize chooserDelegate;
@property(retain, nonatomic) UIPickerView *yearPicker; // @synthesize yearPicker;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (struct CGSize)contentSizeForViewInPopover;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGTransientResource : NSObject
{
    ZGTransientLink *resourceLink;
}

@property(retain, nonatomic) ZGTransientLink *resourceLink; // @synthesize resourceLink;
- (void)dealloc;
- (id)objectID;

@end

@interface ZGMagazineBundleOfferImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) NSString *id; // @dynamic id;
@property(retain, nonatomic) NSNumber *markedForRetention; // @dynamic markedForRetention;
@property(retain, nonatomic) NSManagedObject *offer; // @dynamic offer;
@property(retain, nonatomic) NSNumber *sortIndex; // @dynamic sortIndex;
@end

@interface LibraryRemoveRecoverIssueDecisionController : UITableViewController <UIPopoverControllerDelegate>
{
    _Bool decisionMade;
    int decisionMode;
    id <LibraryModifyProtocol> delegate;
    unsigned long long issueIndex;
}

@property(nonatomic) unsigned long long issueIndex; // @synthesize issueIndex;
@property(nonatomic) id <LibraryModifyProtocol> delegate; // @synthesize delegate;
@property(nonatomic) int decisionMode; // @synthesize decisionMode;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGMagazineCoverImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGMagazine *magazine; // @dynamic magazine;
@end

@interface ZGMagazineOffer : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSNumber *allowsAutoRenew; // @dynamic allowsAutoRenew;
@property(retain, nonatomic) NSString *appStoreProductIdentifier; // @dynamic appStoreProductIdentifier;
@property(retain, nonatomic) NSSet *bundleOffers; // @dynamic bundleOffers;
@property(retain, nonatomic) NSString *currency; // @dynamic currency;
@property(retain, nonatomic) NSString *displayName; // @dynamic displayName;
@property(retain, nonatomic) NSString *id; // @dynamic id;
@property(retain, nonatomic) NSNumber *isBundle; // @dynamic isBundle;
@property(retain, nonatomic) NSNumber *isFree; // @dynamic isFree;
@property(retain, nonatomic) NSString *listPrice; // @dynamic listPrice;
@property(retain, nonatomic) ZGMagazine *magazine; // @dynamic magazine;
@property(retain, nonatomic) NSNumber *markedForRetention; // @dynamic markedForRetention;
@property(retain, nonatomic) NSNumber *numberOfIssues; // @dynamic numberOfIssues;
@property(retain, nonatomic) ZGMagazineOffer *parentOffer; // @dynamic parentOffer;
@property(retain, nonatomic) NSString *purchaseURL; // @dynamic purchaseURL;
@property(retain, nonatomic) NSString *valueProposition; // @dynamic valueProposition;
@end

@interface AsyncImageView : UIImageView <AsyncImage>
{
    NSString *imagePath;
    double fadeDuration;
    UIImage *_blurredImage;
    UIImage *_originalImage;
    _Bool _blurEnabled;
}

@property(retain, nonatomic) UIImage *originalImage; // @synthesize originalImage=_originalImage;
@property(retain, nonatomic) UIImage *blurredImage; // @synthesize blurredImage=_blurredImage;
@property(nonatomic) double fadeDuration; // @synthesize fadeDuration;
- (id)ribbonBadgeView;
- (void)disableShadow;
- (void)enableShadow;
- (void)setupShadow;
- (void)clearImage;
- (void)showImageAtPath:(id)arg1 withRibbonBadge:(_Bool)arg2;
- (void)showImageAtPath:(id)arg1;
- (void)loadImageAtPath:(id)arg1;
- (void)setupRibbonBadgePosition:(id)arg1;
- (void)displayImage:(id)arg1;
@property(retain, nonatomic) UIImage *image; // @dynamic image;
@property(nonatomic, getter=isBlurEnabled) _Bool blurEnabled;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)configureImageView;

@end

@interface ZGMagazineOfferParserDelegate : ZGManagedObjectItemParserDelegate
{
    NSString *entityName;
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (Class)itemDelegateClassForElementName:(id)arg1;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;
- (void)resetWithParentDelegate:(id)arg1 andElementName:(id)arg2;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;

@end

@interface NewLoginViewController : UIViewController <UITextFieldDelegate, UIAlertViewDelegate>
{
    UILabel *_emailAddressLabel;
    CustomTextField *_emailAddressTextField;
    UILabel *_passwordLabel;
    CustomTextField *_passwordTextField;
    UIButton *_submitButton;
    UIButton *_forgotPasswordButton;
    UIButton *_joinZinioButton;
    UILabel *_titleLabel;
    UILabel *_orLabel;
    CustomButton *_facebookButton;
    UIButton *_guestCheckoutButton;
    UIButton *_signUpButton;
    _Bool _showCheckoutButton;
    id <NewLoginViewDelegate> _delegate;
    UISwitch *_stagingSwitch;
    UILabel *_stagingSwitchLabel;
}

@property(retain, nonatomic) UILabel *stagingSwitchLabel; // @synthesize stagingSwitchLabel=_stagingSwitchLabel;
@property(retain, nonatomic) UISwitch *stagingSwitch; // @synthesize stagingSwitch=_stagingSwitch;
@property(nonatomic) id <NewLoginViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool showCheckoutButton; // @synthesize showCheckoutButton=_showCheckoutButton;
@property(retain, nonatomic) UIButton *signUpButton; // @synthesize signUpButton=_signUpButton;
@property(retain, nonatomic) UIButton *guestCheckoutButton; // @synthesize guestCheckoutButton=_guestCheckoutButton;
@property(retain, nonatomic) UILabel *orLabel; // @synthesize orLabel=_orLabel;
@property(retain, nonatomic) CustomButton *facebookButton; // @synthesize facebookButton=_facebookButton;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIButton *joinZinioButton; // @synthesize joinZinioButton=_joinZinioButton;
@property(retain, nonatomic) UIButton *forgotPasswordButton; // @synthesize forgotPasswordButton=_forgotPasswordButton;
@property(retain, nonatomic) UIButton *submitButton; // @synthesize submitButton=_submitButton;
@property(retain, nonatomic) CustomTextField *passwordTextField; // @synthesize passwordTextField=_passwordTextField;
@property(retain, nonatomic) UILabel *passwordLabel; // @synthesize passwordLabel=_passwordLabel;
@property(retain, nonatomic) CustomTextField *emailAddressTextField; // @synthesize emailAddressTextField=_emailAddressTextField;
@property(retain, nonatomic) UILabel *emailAddressLabel; // @synthesize emailAddressLabel=_emailAddressLabel;
- (void)_stagingSwitchDidChangeValue:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)didTapGuestCheckout:(id)arg1;
- (void)didTapCloseButton:(id)arg1;
- (void)didTapFacebookButton:(id)arg1;
- (void)didTapSubmitButton:(id)arg1;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGMagazineIssueParserDelegate : ZGManagedObjectItemParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (Class)itemDelegateClassForElementName:(id)arg1;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGBundleImageParserDelegate : ZGManagedObjectItemParserDelegate
{
}

- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;
- (id)initWithParentDelegate:(id)arg1 andElementName:(id)arg2;

@end

@interface ZGIgnoredElementParserDelegate : ZGBaseParserDelegate
{
}

- (void)prepareWithElementName:(id)arg1 andAttributes:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;

@end

@interface ZGHeroCategory : ZGCategory
{
}


// Remaining properties
@property(retain, nonatomic) ZGHeroCategoryTarget *heroCategoryTarget; // @dynamic heroCategoryTarget;
@end

@interface ZGHeroMagazineTarget : ZGHeroTarget
{
}


// Remaining properties
@property(retain, nonatomic) ZGHeroMagazine *magazine; // @dynamic magazine;
@end

@interface ZGHeroCategoryTarget : ZGHeroTarget
{
}


// Remaining properties
@property(retain, nonatomic) ZGHeroCategory *category; // @dynamic category;
@end

@interface ZGHeroMagazine : ZGMagazine
{
}


// Remaining properties
@property(retain, nonatomic) ZGHeroMagazineTarget *heroMagazineTarget; // @dynamic heroMagazineTarget;
@end

@interface SearchResult : NSObject <ZGAtomLink>
{
    NSURL *_coverImageURL;
    NSString *_currentIssueId;
    NSString *_publicationId;
    NSString *_name;
    NSString *_newstandId;
}

+ (id)noResultsFoundItem;
@property(retain, nonatomic) NSString *newsstandId; // @synthesize newsstandId=_newstandId;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *publicationId; // @synthesize publicationId=_publicationId;
@property(retain, nonatomic) NSString *currentIssueId; // @synthesize currentIssueId=_currentIssueId;
@property(retain, nonatomic) NSURL *coverImageURL; // @synthesize coverImageURL=_coverImageURL;
@property(retain, nonatomic) NSString *href;
@property(retain, nonatomic) NSString *type;
@property(retain, nonatomic) NSString *rel;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;

@end

@interface AFHTTPResponseSerializer : NSObject <AFURLResponseSerialization>
{
    unsigned long long _stringEncoding;
    NSIndexSet *_acceptableStatusCodes;
    NSSet *_acceptableContentTypes;
}

+ (_Bool)supportsSecureCoding;
+ (id)serializer;
@property(copy, nonatomic) NSSet *acceptableContentTypes; // @synthesize acceptableContentTypes=_acceptableContentTypes;
@property(copy, nonatomic) NSIndexSet *acceptableStatusCodes; // @synthesize acceptableStatusCodes=_acceptableStatusCodes;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (_Bool)validateResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFJSONResponseSerializer : AFHTTPResponseSerializer
{
    _Bool _removesKeysWithNullValues;
    unsigned long long _readingOptions;
}

+ (id)serializerWithReadingOptions:(unsigned long long)arg1;
+ (id)serializer;
@property(nonatomic) _Bool removesKeysWithNullValues; // @synthesize removesKeysWithNullValues=_removesKeysWithNullValues;
@property(nonatomic) unsigned long long readingOptions; // @synthesize readingOptions=_readingOptions;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFXMLParserResponseSerializer : AFHTTPResponseSerializer
{
}

+ (id)serializer;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFPropertyListResponseSerializer : AFHTTPResponseSerializer
{
    unsigned long long _format;
    unsigned long long _readOptions;
}

+ (id)serializerWithFormat:(unsigned long long)arg1 readOptions:(unsigned long long)arg2;
+ (id)serializer;
@property(nonatomic) unsigned long long readOptions; // @synthesize readOptions=_readOptions;
@property(nonatomic) unsigned long long format; // @synthesize format=_format;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFImageResponseSerializer : AFHTTPResponseSerializer
{
    _Bool _automaticallyInflatesResponseImage;
    double _imageScale;
}

@property(nonatomic) _Bool automaticallyInflatesResponseImage; // @synthesize automaticallyInflatesResponseImage=_automaticallyInflatesResponseImage;
@property(nonatomic) double imageScale; // @synthesize imageScale=_imageScale;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFCompoundResponseSerializer : AFHTTPResponseSerializer
{
    NSArray *_responseSerializers;
}

+ (id)compoundSerializerWithResponseSerializers:(id)arg1;
@property(copy, nonatomic) NSArray *responseSerializers; // @synthesize responseSerializers=_responseSerializers;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;

@end

@interface ImageProcessingOperation : NSOperation
{
    NSData *imageBytes;
    _Bool trimImage;
    _Bool addShadow;
    _Bool addTransparentBorder;
    NSObject<ImageObject> *imageDelegate;
}

@property(nonatomic) NSObject<ImageObject> *imageDelegate; // @synthesize imageDelegate;
@property(nonatomic) _Bool addTransparentBorder; // @synthesize addTransparentBorder;
@property(nonatomic) _Bool trimImage; // @synthesize trimImage;
@property(nonatomic) _Bool addShadow; // @synthesize addShadow;
@property(retain, nonatomic) NSData *imageBytes; // @synthesize imageBytes;
- (void)main;
- (id)processImage:(id)arg1;
- (void)dealloc;

@end

@interface ZGShopCountryParserDelegate : ZGManagedObjectParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGCoverDate : NSManagedObject
{
}

- (id)stringFromZGCoverDate:(unsigned long long)arg1;
- (id)stringFromDate:(id)arg1 withFormat:(id)arg2;
- (id)dateFromZGCoverDate;

// Remaining properties
@property(retain, nonatomic) NSNumber *day; // @dynamic day;
@property(retain, nonatomic) ZGMagazineIssue *magazineIssue; // @dynamic magazineIssue;
@property(retain, nonatomic) NSNumber *month; // @dynamic month;
@property(retain, nonatomic) NSNumber *year; // @dynamic year;

@end

@interface ZGSimpleCoverDateParserDelegate : ZGManagedObjectItemParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface TiledPagesPDFView : TiledPDFView
{
    int pageStackDirection;
}

- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)drawContentInLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (_Bool)shouldDrawContent;
- (unsigned long long)pdfPageCountInDocument:(struct CGPDFDocument *)arg1;
- (void)drawPage:(unsigned long long)arg1 inLayer:(id)arg2 inContext:(struct CGContext *)arg3;
- (void)drawPage:(unsigned long long)arg1 inBounds:(struct CGSize)arg2 inContext:(struct CGContext *)arg3 inRect:(struct CGRect)arg4 atSize:(struct CGSize)arg5;
- (_Bool)drawRectForPage:(unsigned long long)arg1 clipRect:(struct CGRect)arg2 inBounds:(struct CGSize)arg3 inContext:(struct CGContext *)arg4 drawRect:(struct CGRect *)arg5 pdfSize:(struct CGSize *)arg6;
- (struct CGSize)pdfPageSizeForIndex:(unsigned long long)arg1 inDocument:(struct CGPDFDocument *)arg2;
- (struct CGPDFPage *)pdfPageForIndex:(unsigned long long)arg1 inDocument:(struct CGPDFDocument *)arg2;
- (void)setupPdfPageSize;
- (struct CGSize)pdfPageSize:(struct CGPDFPage *)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface LibrarySideLoadingViewController : UIViewController <ZipArchiveDelegate>
{
    UIProgressView *progress;
    UILabel *filePathLabel;
    NSMutableArray *archiveList;
    NSString *archivePath;
    NSString *destinationDirectory;
    id completeTarget;
    SEL completeAction;
    id completeObject;
    NSString *currFilePath;
}

@property(retain, nonatomic) UIProgressView *progress; // @synthesize progress;
@property(retain, nonatomic) UILabel *filePathLabel; // @synthesize filePathLabel;
@property(retain, nonatomic) NSString *destinationDirectory; // @synthesize destinationDirectory;
@property(retain, nonatomic) id completeTarget; // @synthesize completeTarget;
@property(retain, nonatomic) id completeObject; // @synthesize completeObject;
@property(nonatomic) SEL completeAction; // @synthesize completeAction;
@property(retain, nonatomic) NSString *archivePath; // @synthesize archivePath;
@property(retain, nonatomic) NSMutableArray *archiveList; // @synthesize archiveList;
- (void)zipArchive:(id)arg1 didUnzipFile:(id)arg2 toPath:(id)arg3 count:(unsigned long long)arg4 totalCount:(unsigned long long)arg5;
- (void)zipArchive:(id)arg1 willUnzipFile:(id)arg2 toPath:(id)arg3 count:(unsigned long long)arg4 totalCount:(unsigned long long)arg5;
- (void)updateProgress:(id)arg1;
- (void)unarchive;
- (void)viewDidAppear:(_Bool)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGBoundaryResourceOperation : NSOperation
{
    NSManagedObjectID *boundaryResourceObjectID;
    NSManagedObjectContextDataService *managedObjectContextDataService;
    NSManagedObject<ZGBoundaryResourceOperationDelegate> *delegate;
}

@property(retain, nonatomic) NSManagedObjectID *boundaryResourceObjectID; // @synthesize boundaryResourceObjectID;
@property(retain, nonatomic) NSManagedObjectContextDataService *managedObjectContextDataService; // @synthesize managedObjectContextDataService;
@property(retain, nonatomic) NSManagedObject<ZGBoundaryResourceOperationDelegate> *delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)cancel;
- (void)main;

@end

@interface BaseViewController : UIViewController <NetworkServicesManagerDelegate>
{
    ContentManager *contentManager;
    NetworkServicesManager *networkManager;
    RateOurApp *_rateOurApp;
    _Bool disappeared;
    UILabel *_titleLabel;
}

@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(readonly, nonatomic, getter=isDisappeared) _Bool disappeared; // @synthesize disappeared;
@property(retain, nonatomic) RateOurApp *rateOurApp; // @synthesize rateOurApp=_rateOurApp;
@property(retain, nonatomic) NetworkServicesManager *networkManager; // @synthesize networkManager;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (void)didGoOnline:(id)arg1;
- (_Bool)shouldShowFullScreenServerUnavailableErrorMessage;
- (_Bool)shouldShowFullScreenNetworkErrorMessage;
- (_Bool)shouldShowFullScreenOfflineMessageWhenOffline;
- (_Bool)shouldActAsNetworkServicesManagerDelegate;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ContentAuditor : NSObject
{
    NSMutableDictionary *audits;
    NSMutableDictionary *totalAudits;
    NSMutableDictionary *logs;
    NSMutableArray *connectionQueue;
    NSURLConnection *currentConnection;
    NSTimer *connectionTimer;
    NSOperation *auditOperation;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSOperation *auditOperation; // @synthesize auditOperation;
@property(retain, nonatomic) NSTimer *connectionTimer; // @synthesize connectionTimer;
@property(retain, nonatomic) NSURLConnection *currentConnection; // @synthesize currentConnection;
@property(retain, nonatomic) NSMutableArray *connectionQueue; // @synthesize connectionQueue;
@property(retain, nonatomic) NSMutableDictionary *logs; // @synthesize logs;
@property(retain, nonatomic) NSMutableDictionary *totalAudits; // @synthesize totalAudits;
@property(retain, nonatomic) NSMutableDictionary *audits; // @synthesize audits;
- (void)dealloc;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)endAuditForObject:(id)arg1;
- (void)auditURL:(id)arg1 forObject:(id)arg2;
- (void)startNextConnectionInQueue;
- (void)beginAuditForObject:(id)arg1;
- (void)updateLogItem:(id)arg1 withValue:(id)arg2 forObject:(id)arg3;
- (id)logItem:(id)arg1 forObject:(id)arg2;
- (void)decreaseAuditCountForObject:(id)arg1;
- (int)remainingAuditsForObject:(id)arg1;
- (void)reviewFinalAuditForObject:(id)arg1;
- (void)increaseAuditCountForObject:(id)arg1;
- (int)totalAuditsForObject:(id)arg1;
- (int)auditsRemainingForObject:(id)arg1;
- (id)logForObject:(id)arg1;
- (void)clear;

@end

@interface ContentAuditorURLConnection : NSURLConnection
{
    id object;
    NSURL *url;
    NSTimer *timer;
}

@property(retain, nonatomic) NSTimer *timer; // @synthesize timer;
@property(retain, nonatomic) NSURL *url; // @synthesize url;
@property(retain, nonatomic) id object; // @synthesize object;
- (void)dealloc;

@end

@interface PurchaseThanksViewController : BaseViewController <GridCollectionViewControllerDelegate, ReaderLauncherDelegate>
{
    UIImageView *coverIssueImageView;
    UILabel *thanksLabel;
    UILabel *infoLabel;
    UILabel *_mayAlsoLikeLabel;
    CustomButton *_readButton;
    CustomButton *_shopButton;
    UIActivityIndicatorView *activityIndicator;
    ReaderLauncher *readerLauncher;
    ZGMagazine *targetMagazine;
    UIImage *coverImage;
    id <PurchaseThanksViewControllerDelegate> _delegate;
    Magazine *_selectedMagazine;
    ZinioShopCategoriesDatasource *_categoriesDataSource;
    ZGShop *_currentCategory;
    GridCollectionViewController *_collectionViewController;
}

@property(retain, nonatomic) Magazine *selectedMagazine; // @synthesize selectedMagazine=_selectedMagazine;
@property(retain, nonatomic) GridCollectionViewController *collectionViewController; // @synthesize collectionViewController=_collectionViewController;
@property(retain, nonatomic) ZGShop *currentCategory; // @synthesize currentCategory=_currentCategory;
@property(nonatomic) id <PurchaseThanksViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIImage *coverImage; // @synthesize coverImage;
@property(retain, nonatomic) ZGMagazine *targetMagazine; // @synthesize targetMagazine;
@property(nonatomic) ReaderLauncher *readerLauncher; // @synthesize readerLauncher;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(retain, nonatomic) CustomButton *shopButton; // @synthesize shopButton=_shopButton;
@property(retain, nonatomic) CustomButton *readButton; // @synthesize readButton=_readButton;
@property(retain, nonatomic) UILabel *mayAlsoLikeLabel; // @synthesize mayAlsoLikeLabel=_mayAlsoLikeLabel;
@property(retain, nonatomic) UILabel *infoLabel; // @synthesize infoLabel;
@property(retain, nonatomic) UILabel *thanksLabel; // @synthesize thanksLabel;
@property(retain, nonatomic) UIImageView *coverIssueImageView; // @synthesize coverIssueImageView;
- (void)_updatedCoverLayer;
- (void)_coverImageDidDownloadNotification:(id)arg1;
- (id)_updatedCoverURLString;
- (void)arrangeButtonsInView;
- (void)addMayAlsoLikeView;
- (void)gridCollectionViewController:(id)arg1 didSelectPublication:(id)arg2;
- (void)readerLauncher:(id)arg1 failedToLaunchExcerpt:(id)arg2 issue:(id)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)shopMore;
- (void)readIssue;
@property(retain, nonatomic) ZinioShopCategoriesDatasource *categoriesDataSource; // @synthesize categoriesDataSource=_categoriesDataSource;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ContentAuditorInfoView : UIView <MFMailComposeViewControllerDelegate>
{
    NSMutableDictionary *progressViews;
    int currentViewY;
    UIViewController *viewController;
    struct CGPoint dragStart;
    struct CGPoint viewStart;
}

+ (void)showViewAtPoint:(struct CGPoint)arg1;
+ (void)showViewAtPoint:(struct CGPoint)arg1 inViewController:(id)arg2;
@property(nonatomic) UIViewController *viewController; // @synthesize viewController;
@property(nonatomic) int currentViewY; // @synthesize currentViewY;
@property(retain, nonatomic) NSMutableDictionary *progressViews; // @synthesize progressViews;
- (void)dealloc;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)auditRunning:(id)arg1;
- (void)report:(id)arg1;
- (void)clear:(id)arg1;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)auditComplete:(id)arg1;
- (void)auditCountDecreased:(id)arg1;
- (void)auditCountIncreased:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LibraryLoginViewController : NavigationInsetViewController
{
    UIImageView *background;
}

@property(retain, nonatomic) UIImageView *background; // @synthesize background;
- (void)changeViewController:(_Bool)arg1 newViewController:(id)arg2 oldViewController:(id)arg3 withTransition:(int)arg4;
- (void)showNormalSizeViewForController:(id)arg1 withCloseButton:(_Bool)arg2;
- (void)addShieldView;
- (void)dealloc;

@end

@interface NavigationInsetViewController : ModalInsetViewController <ViewControllerNavigationDelegate, TopNavigationViewDelegate>
{
    InsetView *insetView;
    NSMutableArray *viewControllerStack;
    UIView *controlView;
    UIView<NavigationControlDelegate> *navigationControlView;
    NSString *navigationItemName;
    NavigationInsetViewDelegate *defaultInsetScrollViewDelegate;
    UIView *defaultControlView;
    UIViewController *disappearingViewController;
    UIViewController *appearingViewController;
    UIView *fromView;
    UIView *toView;
    NSString *toViewName;
    _Bool zoomingPreparedContent;
    _Bool showNavigationBar;
    _Bool showControlView;
    _Bool rootHasCloseButton;
    _Bool isHidden;
    _Bool isCoveredByWebDialog;
    TopNavigationView *navigationView;
    int type;
    int defaultNextViewAnimation;
    int defaultPreviousViewAnimation;
    int defaultRootViewAnimation;
    _Bool abortZoomAnimationForNetworkServicesManagerDelegate;
    double insetViewVerticalMargin;
    double insetViewHorizontalMargin;
    struct CGSize panelViewSize;
}

@property(nonatomic) _Bool isHidden; // @synthesize isHidden;
@property(nonatomic) _Bool rootHasCloseButton; // @synthesize rootHasCloseButton;
@property(nonatomic) int defaultPreviousViewAnimation; // @synthesize defaultPreviousViewAnimation;
@property(nonatomic) int defaultRootViewAnimation; // @synthesize defaultRootViewAnimation;
@property(nonatomic) int defaultNextViewAnimation; // @synthesize defaultNextViewAnimation;
@property(nonatomic) int type; // @synthesize type;
@property(retain, nonatomic) TopNavigationView *navigationView; // @synthesize navigationView;
@property(nonatomic) _Bool showNavigationBar; // @synthesize showNavigationBar;
@property(nonatomic) _Bool showControlView; // @synthesize showControlView;
@property(retain, nonatomic) InsetView *insetView; // @synthesize insetView;
@property(nonatomic) struct CGSize panelViewSize; // @synthesize panelViewSize;
@property(nonatomic) double insetViewHorizontalMargin; // @synthesize insetViewHorizontalMargin;
@property(nonatomic) double insetViewVerticalMargin; // @synthesize insetViewVerticalMargin;
@property(retain, nonatomic) NSMutableArray *viewControllerStack; // @synthesize viewControllerStack;
@property(retain, nonatomic) NSString *toViewName; // @synthesize toViewName;
@property(retain, nonatomic) UIView *toView; // @synthesize toView;
@property(retain, nonatomic) UIView *fromView; // @synthesize fromView;
@property(retain, nonatomic) UIView *defaultControlView; // @synthesize defaultControlView;
@property(retain, nonatomic) NavigationInsetViewDelegate *defaultInsetScrollViewDelegate; // @synthesize defaultInsetScrollViewDelegate;
@property(retain, nonatomic) UIViewController *disappearingViewController; // @synthesize disappearingViewController;
@property(retain, nonatomic) UIViewController *appearingViewController; // @synthesize appearingViewController;
@property(retain, nonatomic) UIView<NavigationControlDelegate> *navigationControlView; // @synthesize navigationControlView;
@property(retain, nonatomic) UIView *controlView; // @synthesize controlView;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (void)abortOtherViewOperations;
- (void)abortZoomAnimationForNetworkServicesManagerDelegate;
- (void)navigateBack:(id)arg1;
- (void)viewControllerViewDidRemove:(id)arg1 animated:(_Bool)arg2;
- (void)viewControllerViewWillRemove:(id)arg1 animated:(_Bool)arg2;
- (void)viewControllerViewDidAdd:(id)arg1 animated:(_Bool)arg2;
- (void)viewControllerViewWillAdd:(id)arg1 animated:(_Bool)arg2;
- (struct CGSize)panelViewSizeForView:(id)arg1 withBottonMargin:(_Bool)arg2;
- (_Bool)isRootViewController;
- (void)showRootCloseButton;
- (void)reset;
- (void)assignDefaultScrollDelegate:(id)arg1;
- (double)insetScrollViewWidth;
- (void)computeViewFrameForInsetView:(id)arg1;
- (void)initializeInsetViewWithSlots:(_Bool)arg1;
- (void)setDefaultPropertiesForModalType:(int)arg1;
- (void)showViewWithAnimation:(int)arg1;
- (void)hideViewWithAnimation:(int)arg1;
- (void)slideRightView;
- (void)slideLeftView;
- (void)fadeOutView;
- (void)fadeInView;
- (void)panelViewFadeComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)animatingImageViewSlideComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)animatingImageViewRiseComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)zoomPreparedContentToView:(id)arg1;
- (void)prepareWithContentFromViewController:(id)arg1 toAnimateFromView:(id)arg2;
- (void)contractToCenterViewDidComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)contractViewController:(_Bool)arg1 newViewController:(id)arg2 oldViewController:(id)arg3;
- (void)expandViewFullScreenDidComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)expandViewController:(_Bool)arg1 newViewController:(id)arg2 oldViewController:(id)arg3;
- (void)slideViewControllersRightComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)slideViewControllersRight:(_Bool)arg1 newViewController:(id)arg2 oldViewController:(id)arg3;
- (void)slideViewControllersLeftComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)slideViewControllersLeft:(_Bool)arg1 newViewController:(id)arg2 oldViewController:(id)arg3;
- (void)flipToNewRootViewControllerComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)flipToNewRootViewController:(_Bool)arg1 rootViewController:(id)arg2 oldViewController:(id)arg3;
- (void)fadeInViewControllerComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)fadeInViewController:(_Bool)arg1 rootViewController:(id)arg2;
- (void)replaceRootViewController:(id)arg1 animated:(_Bool)arg2;
- (void)popToRootViewController:(_Bool)arg1;
- (void)popViewController:(_Bool)arg1;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)replaceRootViewController:(id)arg1 animated:(_Bool)arg2 withAnimation:(int)arg3;
- (void)popToRootViewController:(_Bool)arg1 withAnimation:(int)arg2;
- (void)popViewController:(_Bool)arg1 withAnimation:(int)arg2;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2 withAnimation:(int)arg3;
- (void)handleNavigationViewForController:(id)arg1;
- (void)hideTopNavigationView;
- (void)showTopNavigationView:(id)arg1 hidden:(_Bool)arg2;
- (void)hideNavigationControlView;
- (void)addNavigationControlToControlView;
- (void)replaceControlViewWithView:(id)arg1;
- (void)replaceControlViewWithControlViewOf:(id)arg1;
- (void)createsDefaultControlView;
- (void)changeViewController:(_Bool)arg1 newViewController:(id)arg2 oldViewController:(id)arg3 withTransition:(int)arg4;
- (void)unCoveredByGigyaWebDialog;
- (void)coveredByGigyaWebDialog;
- (void)hide;
- (void)showViewFullScreenFromPoint:(struct CGPoint)arg1 inView:(id)arg2 withCloseButton:(_Bool)arg3;
- (void)showViewController:(_Bool)arg1 rootViewController:(id)arg2;
- (void)showViewForController:(id)arg1 withModalViewType:(int)arg2 withCloseButton:(_Bool)arg3;
- (void)showViewForController:(id)arg1 withModalViewType:(int)arg2 zoomFromView:(id)arg3 toViewPropertyNamed:(id)arg4 withCloseButton:(_Bool)arg5;
- (void)showFullScreenSizeViewForController:(id)arg1;
- (void)showNormalSizeViewForController:(id)arg1 withCloseButton:(_Bool)arg2;
- (void)showFullSizeViewForController:(id)arg1 zoomFromView:(id)arg2 toViewPropertyNamed:(id)arg3 withCloseButton:(_Bool)arg4;
- (void)showFullSizeViewForController:(id)arg1 withCloseButton:(_Bool)arg2;
- (void)showFullSizeViewForControllerWithCloseButton:(_Bool)arg1;
- (void)showFullSizeViewForController:(id)arg1 fromPoint:(struct CGPoint)arg2 inView:(id)arg3 withCloseButton:(_Bool)arg4;
@property(retain, nonatomic) NSString *navigationItemName;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NavigationInsetViewFlowControl : NSObject <FlowControlledViewControllerDelegate>
{
    NavigationInsetViewController *insetViewController;
}

@property(nonatomic) NavigationInsetViewController *insetViewController; // @synthesize insetViewController;
- (void)finish;
- (void)restartWith:(id)arg1 withAnimation:(int)arg2;
- (void)showPreviousViewControllerWithAnimation:(int)arg1;
- (void)showNextViewController:(id)arg1 withAnimation:(int)arg2;
- (void)restartWith:(id)arg1;
- (void)goBackToBegining;
- (void)showPreviousViewController;
- (void)showNextViewController:(id)arg1;

@end

@interface ZGBackIssue : ZGMagazine
{
}


// Remaining properties
@property(retain, nonatomic) NSString *appStoreProductIdentifier; // @dynamic appStoreProductIdentifier;
@property(retain, nonatomic) ZGBackIssueCoverImage *coverImage; // @dynamic coverImage;
@property(retain, nonatomic) NSString *issuePageUrl; // @dynamic issuePageUrl;
@property(retain, nonatomic) ZGMagazine *offerMagazine; // @dynamic offerMagazine;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@end

@interface DispatchInsetViewFlowControl : NavigationInsetViewFlowControl
{
    FlowControlledViewController *targetViewController;
    SEL targetSelector;
}

@property(nonatomic) SEL targetSelector; // @synthesize targetSelector;
@property(nonatomic) FlowControlledViewController *targetViewController; // @synthesize targetViewController;
- (void)restartWith:(id)arg1 withAnimation:(int)arg2;
- (void)showPreviousViewControllerWithAnimation:(int)arg1;
- (void)showNextViewController:(id)arg1 withAnimation:(int)arg2;
- (void)restartWith:(id)arg1;
- (void)goBackToBegining;
- (void)showPreviousViewController;
- (void)showNextViewController:(id)arg1;

@end

@interface RibbonBadgeView : UIView
{
    double foldBackSize;
    double ribbonSize;
    double badgeSize;
    UIColor *frontColor;
    UIColor *backColor;
    NSString *text;
    UIFont *font;
    UIColor *fontColor;
}

@property(nonatomic) double ribbonSize; // @synthesize ribbonSize;
@property(nonatomic) double badgeSize; // @synthesize badgeSize;
@property(nonatomic) double foldBackSize; // @synthesize foldBackSize;
@property(retain, nonatomic) UIColor *fontColor; // @synthesize fontColor;
@property(retain, nonatomic) UIFont *font; // @synthesize font;
@property(retain, nonatomic) NSString *text; // @synthesize text;
@property(retain, nonatomic) UIColor *backColor; // @synthesize backColor;
@property(retain, nonatomic) UIColor *frontColor; // @synthesize frontColor;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)initialize;

@end

@interface DarkTheme : Theme <Theme>
{
}

+ (id)_navigationBarBackButtonImageName;
+ (id)_toolbarBarckgroundImageName;
- (void)configTextField:(id)arg1;
- (id)loginFlowMainTextColor;
- (id)backLoginIcon;
- (id)closeLoginIcon;
- (id)loginFlowBackgroundColor;
- (id)settingsHomescreenSelectedIconColor;
- (id)readHomescreenIcon;
- (id)shopHomescreenIcon;
- (id)exploreHomescreenIcon;
- (id)settingHomescreenUnselectedTextColor;
- (id)buyButtonColor;
- (id)settingsTableViewTextColor;
- (id)settingsTableViewButtonTextColor;
- (id)settingsTableViewCellBackgroundColor;
- (id)settingsTableViewSeparatorColor;
- (id)settingsTableViewBackgroundColor;
- (id)fontForTabBar;
- (id)applicationFontBold;
- (id)applicationTextColor;
- (id)applicationBackgroundColor;
- (void)configSubmitButton:(id)arg1;
- (void)configButton:(id)arg1;
- (id)basicButtonWithFrame:(struct CGRect)arg1 title:(id)arg2;
- (id)closeIcon;
- (id)backArrowImage;
- (void)setAppearance;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NavigationInsetViewDelegate : NSObject <UIScrollViewDelegate>
{
    id <InsetViewDelegate> insetViewDelegate;
}

@property(nonatomic) id <InsetViewDelegate> insetViewDelegate; // @synthesize insetViewDelegate;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface InsetScrollView : UIScrollView
{
    id <InsetScrollViewDelegate> insetScrollViewDelegate;
}

@property(nonatomic) id <InsetScrollViewDelegate> insetScrollViewDelegate; // @synthesize insetScrollViewDelegate;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface InsetView : UIView <InsetViewDelegate>
{
    _Bool scrollViewSlotsAreShowing;
    EmbossedLineView *scrollViewEmbossedLineTop;
    EmbossedLineView *scrollViewEmbossedLineBottom;
    EmbossedLineView *scrollViewEmbossedLineWithSlotTop;
    EmbossedLineView *scrollViewEmbossedLineWithSlotBottom;
    EmbossedLineView *scrollViewEmbossedWithSlotLineTop;
    EmbossedLineView *scrollViewEmbossedWithSlotLineBottom;
}

@property(retain, nonatomic) EmbossedLineView *scrollViewEmbossedWithSlotLineBottom; // @synthesize scrollViewEmbossedWithSlotLineBottom;
@property(retain, nonatomic) EmbossedLineView *scrollViewEmbossedWithSlotLineTop; // @synthesize scrollViewEmbossedWithSlotLineTop;
@property(retain, nonatomic) EmbossedLineView *scrollViewEmbossedLineBottom; // @synthesize scrollViewEmbossedLineBottom;
@property(retain, nonatomic) EmbossedLineView *scrollViewEmbossedLineTop; // @synthesize scrollViewEmbossedLineTop;
@property(nonatomic) _Bool scrollViewSlotsAreShowing; // @synthesize scrollViewSlotsAreShowing;
- (void)showBottomSlotOnly;
- (void)showTopSlotOnly;
- (void)showSlots;
- (void)hideSlots;
- (void)showSlots:(double)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)createSubviews;

@end

@interface TopNavigationView : UIViewController
{
    EmbossedLineView *navigationEmbossedLineView;
    UILabel *navigationTitle;
    UIButton *navigationBackButton;
    UIImageView *navigationBackground;
    id <TopNavigationViewDelegate> navigationDelegate;
}

@property(nonatomic) id <TopNavigationViewDelegate> navigationDelegate; // @synthesize navigationDelegate;
@property(retain, nonatomic) UIImageView *navigationBackground; // @synthesize navigationBackground;
@property(retain, nonatomic) UIButton *navigationBackButton; // @synthesize navigationBackButton;
@property(retain, nonatomic) UILabel *navigationTitle; // @synthesize navigationTitle;
@property(retain, nonatomic) EmbossedLineView *navigationEmbossedLineView; // @synthesize navigationEmbossedLineView;
- (void)navigateBack:(id)arg1;
- (void)dealloc;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)loadView;
- (void)changeWidth:(double)arg1;

@end

@interface AFNetworkReachabilityManager : NSObject
{
    long long _networkReachabilityStatus;
    struct __SCNetworkReachability *_networkReachability;
    unsigned long long _networkReachabilityAssociation;
    CDUnknownBlockType _networkReachabilityStatusBlock;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)managerForAddress:(const void *)arg1;
+ (id)managerForDomain:(id)arg1;
+ (id)sharedManager;
@property(copy, nonatomic) CDUnknownBlockType networkReachabilityStatusBlock; // @synthesize networkReachabilityStatusBlock=_networkReachabilityStatusBlock;
@property(nonatomic) unsigned long long networkReachabilityAssociation; // @synthesize networkReachabilityAssociation=_networkReachabilityAssociation;
@property(nonatomic) struct __SCNetworkReachability *networkReachability; // @synthesize networkReachability=_networkReachability;
@property(nonatomic) long long networkReachabilityStatus; // @synthesize networkReachabilityStatus=_networkReachabilityStatus;
- (void).cxx_destruct;
- (void)setReachabilityStatusChangeBlock:(CDUnknownBlockType)arg1;
- (id)localizedNetworkReachabilityStatusString;
- (void)stopMonitoring;
- (void)startMonitoring;
@property(readonly, nonatomic, getter=isReachableViaWiFi) _Bool reachableViaWiFi;
@property(readonly, nonatomic, getter=isReachableViaWWAN) _Bool reachableViaWWAN;
@property(readonly, nonatomic, getter=isReachable) _Bool reachable;
- (void)dealloc;
- (id)initWithReachability:(struct __SCNetworkReachability *)arg1;

@end

@interface LeftNavigationView : UIView <NavigationControlDelegate>
{
    UIButton *backButton;
    UIButton *backText;
    id <ViewControllerNavigationDelegate> navDelegate;
}

@property(nonatomic) id <ViewControllerNavigationDelegate> navDelegate; // @synthesize navDelegate;
@property(retain, nonatomic) UIButton *backText; // @synthesize backText;
@property(retain, nonatomic) UIButton *backButton; // @synthesize backButton;
- (void)backButtonPressed:(id)arg1;
- (void)viewControllerStackChanged:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)configure;

@end

@interface LeftRootAnchor : LeftNavigationView
{
    UIViewController *rootInsetViewController;
}

@property(retain, nonatomic) UIViewController *rootInsetViewController; // @synthesize rootInsetViewController;
- (void)viewControllerStackChanged:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)backButtonPressed:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface LeftTitleStack : LeftNavigationView
{
    UIViewController *rootInsetViewController;
}

@property(retain, nonatomic) UIViewController *rootInsetViewController; // @synthesize rootInsetViewController;
- (void)viewControllerStackChanged:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)backButtonPressed:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ZGBackIssueParserDelegate : ZGManagedObjectItemParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (Class)itemDelegateClassForElementName:(id)arg1;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface ZGBackIssueCoverImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGBackIssue *backIssue; // @dynamic backIssue;
@end

@interface UserLibraryMetadata : NSObject
{
    NSString *userId;
    NSString *libraryPath;
    _Bool dirty;
    NSMutableDictionary *metadata;
    NSLock *lock;
}

@property(readonly, nonatomic) NSString *libraryPath; // @synthesize libraryPath;
@property(readonly, nonatomic) NSString *userId; // @synthesize userId;
- (id)getObjectForMetadata:(int)arg1;
- (void)setObject:(id)arg1 forMetadata:(int)arg2;
- (void)persist;
- (void)persistInBackground;
- (void)load;
- (void)dealloc;
- (id)initWithUserId:(id)arg1 libraryPath:(id)arg2;

@end

@interface ZinioBottomTabBariPhone : UITabBar
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface ZGRemoteObjectOperation : NSOperation
{
    NSAutoreleasePool *boundaryPool;
    ZGRemoteObject *remoteObject;
    id <ZGRemoteObjectOperationDelegate> delegate;
}

@property(retain, nonatomic) ZGRemoteObject *remoteObject; // @synthesize remoteObject;
@property(nonatomic) NSAutoreleasePool *boundaryPool; // @synthesize boundaryPool;
@property(nonatomic) id <ZGRemoteObjectOperationDelegate> delegate; // @synthesize delegate;
- (void)cancel;
- (void)main;
- (void)dealloc;

@end

@interface ReaderLauncher : NSObject <UIAlertViewDelegate>
{
    id <AppDataService> appDataService;
    id <LibraryAccess> libraryAccess;
    ContentManager *contentManager;
    NetworkServicesManager *networkManager;
    NSMutableDictionary *asyncDownloadData;
    id <ReaderLauncherDelegate> delegate;
}

@property(retain, nonatomic) id <ReaderLauncherDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) NetworkServicesManager *networkManager; // @synthesize networkManager;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
@property(retain, nonatomic) id <LibraryAccess> libraryAccess; // @synthesize libraryAccess;
@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
- (id)createReaderForIssue:(id)arg1;
- (void)handleLaunchForIssue:(id)arg1;
- (void)handleFailureForIssue:(id)arg1 pubId:(id)arg2;
- (void)handleFailureForExcerpt:(id)arg1 issueId:(id)arg2;
- (void)handleFailureForAsyncDownloadData;
- (id)issueForPublication:(id)arg1 issue:(id)arg2;
- (void)downloadPublication:(id)arg1 issue:(id)arg2 user:(id)arg3;
- (void)downloadExcerpt:(id)arg1 issue:(id)arg2;
- (void)issueDownloadCancelled:(id)arg1;
- (void)issueDownloadFailure:(id)arg1;
- (void)issuePackingListAvailable:(id)arg1;
- (void)alertView:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)pushReaderController:(id)arg1 ontoTabbedController:(id)arg2 animated:(_Bool)arg3;
- (void)pushReaderController:(id)arg1 ontoNavigationController:(id)arg2 animated:(_Bool)arg3;
- (void)prepareReaderControllerForLaunch:(id)arg1 fromController:(id)arg2;
- (void)launchReaderForExcerpt:(id)arg1 issue:(id)arg2;
- (_Bool)isReaderLaunchPendingForPublication:(id)arg1 issue:(id)arg2;
- (void)launchReaderForPublication:(id)arg1 issue:(id)arg2;
- (void)downloadPublicationId:(id)arg1 issueId:(id)arg2;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ExploreCategoryScrollView : UIScrollView <ExploreExcerptViewDelegate, UIScrollViewDelegate>
{
    UIView *upsellView;
    CoreTextLabel *upsellTitleLabel;
    UILabel *upsellDateLabel;
    UITextView *upsellDescription;
    UIImageView *upsellImageView;
    OutlineButton *upsellReadButton;
    OutlineButton *upsellBuyButton;
    ColorizedPageControl *pageControl;
    int currentExcerptNumber;
    int nextExcerptNumber;
    ExploreExcerptView *currentExcerptView;
    ExploreExcerptView *nextExcerptView;
    ExploreExcerptView *previousExcerptView;
    NSMutableDictionary *views;
    _Bool scrollingForPageChange;
    _Bool firstExcerptLoaded;
    ZGExcerptCategory *category;
    _Bool scrolling;
    int pageToReload;
    _Bool showBuyViewOnReload;
    UIButton *shareExploreButton;
    int scrollDirection;
    ExploreExcerptView *viewToShowAfterScroll;
    NSString *_lastTrackedExcerptId;
}

@property(retain, nonatomic) NSString *lastTrackedExcerptId; // @synthesize lastTrackedExcerptId=_lastTrackedExcerptId;
@property(retain, nonatomic) OutlineButton *upsellReadButton; // @synthesize upsellReadButton;
@property(retain, nonatomic) OutlineButton *upsellBuyButton; // @synthesize upsellBuyButton;
@property(nonatomic) int pageToReload; // @synthesize pageToReload;
@property(nonatomic) ExploreExcerptView *viewToShowAfterScroll; // @synthesize viewToShowAfterScroll;
@property(retain, nonatomic) ZGExcerptCategory *category; // @synthesize category;
@property(retain, nonatomic) NSMutableDictionary *views; // @synthesize views;
@property(retain, nonatomic) UIImageView *upsellImageView; // @synthesize upsellImageView;
@property(retain, nonatomic) UITextView *upsellDescription; // @synthesize upsellDescription;
@property(retain, nonatomic) UILabel *upsellDateLabel; // @synthesize upsellDateLabel;
@property(retain, nonatomic) CoreTextLabel *upsellTitleLabel; // @synthesize upsellTitleLabel;
@property(retain, nonatomic) UIView *upsellView; // @synthesize upsellView;
@property(retain, nonatomic) ColorizedPageControl *pageControl; // @synthesize pageControl;
@property(nonatomic) int currentExcerptNumber; // @synthesize currentExcerptNumber;
@property(retain, nonatomic) ExploreExcerptView *previousExcerptView; // @synthesize previousExcerptView;
@property(retain, nonatomic) ExploreExcerptView *nextExcerptView; // @synthesize nextExcerptView;
@property(retain, nonatomic) ExploreExcerptView *currentExcerptView; // @synthesize currentExcerptView;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)imageNotFound:(id)arg1;
- (void)excerptViewHasLoaded:(id)arg1;
- (id)excerpts;
- (void)clearCategory;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)reloadCurrentPage;
- (void)scrollViewDidScroll:(id)arg1;
- (void)changePage:(id)arg1;
- (void)reloadPage:(int)arg1 showBuyView:(_Bool)arg2;
- (void)excerptFadeInDidFinish:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)setUpsellData;
- (id)currentExcerpt;
- (void)fadeInExcerptView:(id)arg1;
- (void)showExcerptsForCategory:(id)arg1;
- (id)orderedExceprts;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DefaultPurchaseService : NSObject <PurchaseService, SKPaymentTransactionObserver, SKProductsRequestDelegate, UIAlertViewDelegate>
{
    NSMutableArray *purchaseTickets;
    id <AppDataService> appDataService;
    ContentManager *contentManager;
    NSMutableArray *transactionIdentifiersNeedingDetails;
    NSString *workingInternalProductId;
    _Bool delayProcessingITunesTransaction;
    _Bool _shouldShowAlreadyEntitledAlert;
}

@property(nonatomic) _Bool shouldShowAlreadyEntitledAlert; // @synthesize shouldShowAlreadyEntitledAlert=_shouldShowAlreadyEntitledAlert;
@property(nonatomic) _Bool delayProcessingITunesTransaction; // @synthesize delayProcessingITunesTransaction;
@property(retain, nonatomic) NSString *workingInternalProductId; // @synthesize workingInternalProductId;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)addPaymentToQueue:(id)arg1;
- (void)verifyProductPurchasedStatus:(id)arg1;
- (void)showAlreadyEntitledAlert:(id)arg1;
- (void)showPaymentDisabledAlert;
- (void)showNeedRestorePurchaseAlert;
- (void)showVerifyEntitlementFailedAlert;
- (void)confirmPurchaseTicketsInBackground;
- (id)confirmStorePurchase:(id)arg1 storeReceipt:(id)arg2;
- (void)notifyPurchaseTicketDelegateOfFailureWithData:(id)arg1;
- (void)notifyPurchaseTicketDelegateOfFailure:(id)arg1 transaction:(id)arg2;
- (void)askToLaunchReaderForPurchasedIssueId:(id)arg1 pubId:(id)arg2 message:(id)arg3 launcher:(id)arg4;
- (void)askToLaunchReaderForPurchasedIssueId:(id)arg1 pubId:(id)arg2 message:(id)arg3 launcher:(id)arg4 user:(id)arg5;
- (void)notifyPurchaseTicketDelegateWithData:(id)arg1;
- (void)notifyPurchaseTicketDelegateOfCompletion:(_Bool)arg1 withData:(id)arg2;
- (void)notifyPurchaseTicketDelegate:(id)arg1 details:(id)arg2 ticket:(id)arg3;
- (void)restoreTransaction:(id)arg1;
- (void)failedTransaction:(id)arg1;
- (void)completeTransaction:(id)arg1;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
- (void)markTicketForDeletion:(id)arg1;
- (void)removePurchaseTicketFuture:(id)arg1;
- (void)paymentQueue:(id)arg1 removedTransactions:(id)arg2;
- (void)paymentQueue:(id)arg1 restoreCompletedTransactionsFailedWithError:(id)arg2;
- (void)paymentQueueRestoreCompletedTransactionsFinished:(id)arg1;
- (void)clearWorkingInternalProductId:(id)arg1;
- (void)handleTicketForTransactionIdentifierNeedingDetails:(id)arg1 description:(id)arg2;
- (id)purchaseTicketForTransactionIdentifierNeedingDetails:(id)arg1;
- (id)addTransactionIdentifierNeedingDetails:(id)arg1;
- (void)handleFailedStoreProductIdRequest:(id)arg1;
- (id)updatePurchaseTicketForTransaction:(id)arg1;
- (void)removePurchaseTickets:(id)arg1;
- (void)removePurchaseTicket:(id)arg1;
- (id)purchaseTicketForTransaction:(id)arg1;
- (id)purchaseTicketForStoreProductId:(id)arg1 internalProductId:(id)arg2 excludeTombstone:(_Bool)arg3;
- (id)purchaseTicketsFilePath;
- (void)savePurchaseTickets;
- (void)addPurchaseTicket:(id)arg1;
- (void)loadPurchaseTickets;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)restorePurchases;
- (void)retryPurchases;
- (id)purchaseTickets;
- (void)purchase:(id)arg1 internalProductId:(id)arg2 delegate:(id)arg3;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PurchaseTicket : NSObject <NSCoding, NSCopying>
{
    NSString *storeProductId;
    NSDecimalNumber *storePrice;
    NSLocale *storeLocale;
    NSData *storeReceipt;
    NSString *storeTransactionIdentifier;
    NSString *userId;
    NSString *internalProductId;
    NSDate *initiateDate;
    id <PurchaseServiceDelegate> delegate;
    _Bool purchased;
    _Bool confirmed;
    NSNumber *confirmCount;
    _Bool tombstone;
}

@property(nonatomic) _Bool tombstone; // @synthesize tombstone;
@property(nonatomic) _Bool confirmed; // @synthesize confirmed;
@property(retain, nonatomic) NSString *storeTransactionIdentifier; // @synthesize storeTransactionIdentifier;
@property(retain, nonatomic) NSNumber *confirmCount; // @synthesize confirmCount;
@property(retain, nonatomic) NSLocale *storeLocale; // @synthesize storeLocale;
@property(retain, nonatomic) NSDecimalNumber *storePrice; // @synthesize storePrice;
@property(retain, nonatomic) NSData *storeReceipt; // @synthesize storeReceipt;
@property(nonatomic) _Bool purchased; // @synthesize purchased;
@property(nonatomic) NSDate *initiateDate; // @synthesize initiateDate;
@property(retain, nonatomic) id <PurchaseServiceDelegate> delegate; // @synthesize delegate;
@property(nonatomic) NSString *internalProductId; // @synthesize internalProductId;
@property(nonatomic) NSString *storeProductId; // @synthesize storeProductId;
@property(nonatomic) NSString *userId; // @synthesize userId;
- (long long)compare:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithUserId:(id)arg1 storeProductId:(id)arg2 internalProductId:(id)arg3 delegate:(id)arg4;

@end

@interface PurchaseAccess : NSObject
{
    NSString *internalProductId;
    _Bool access;
    int type;
    unsigned long long remainingIssues;
    _Bool autoRenew;
}

@property(readonly, nonatomic, getter=isAutoRenew) _Bool autoRenew; // @synthesize autoRenew;
@property(readonly, nonatomic) unsigned long long remainingIssues; // @synthesize remainingIssues;
@property(readonly, nonatomic) int type; // @synthesize type;
@property(readonly, nonatomic, getter=isAccess) _Bool access; // @synthesize access;
@property(readonly, nonatomic) NSString *internalProductId; // @synthesize internalProductId;
- (void)dealloc;
- (id)initWithInternalProductId:(id)arg1 access:(_Bool)arg2 type:(int)arg3 remainingIssues:(unsigned long long)arg4 autoRenew:(_Bool)arg5;

@end

@interface BasicPurchaseDetails : NSObject <PurchaseDetail>
{
    NSString *userId;
    NSString *publicationId;
    NSString *issueId;
}

@property(readonly, nonatomic) NSString *issueId; // @synthesize issueId;
@property(readonly, nonatomic) NSString *publicationId; // @synthesize publicationId;
@property(readonly, nonatomic) NSString *userId; // @synthesize userId;
- (void)dealloc;
- (id)initWithUserId:(id)arg1 publicationId:(id)arg2 issueId:(id)arg3;

@end

@interface NetworkServicesManager : NSObject
{
    Zinio_Reachability *reachability;
    id <NetworkServicesManagerDelegate> rootDelegate;
    id <NetworkServicesManagerDelegate> topDelegate;
    id <AppDataService> appDataService;
}

@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
@property(retain, nonatomic) id <NetworkServicesManagerDelegate> topDelegate; // @synthesize topDelegate;
@property(retain, nonatomic) id <NetworkServicesManagerDelegate> rootDelegate; // @synthesize rootDelegate;
- (void)networkCommunicationFailure:(id)arg1;
- (void)reachabilityChanged:(id)arg1;
- (id)networkCarrier;
- (id)simCarrier;
- (_Bool)highCapacityNetworkConnection;
- (_Bool)networkConnectionUnavailable;
- (int)currentNetworkConnectionType;

@end

@interface ImageTOCGridViewController : BaseTableOfContentsViewController <ZinioCoversVerticalScrollViewDataSource, ZinioCoversVerticalScrollViewDelegate>
{
    ZinioCoversVerticalScrollView *scrollView;
    SpreadTOCPageView *tocPageView;
    id <Spread> startingSpread;
    NSMutableSet *bookmarkedFolios;
}

@property(retain, nonatomic) id <Spread> startingSpread; // @synthesize startingSpread;
@property(retain, nonatomic) ZinioCoversVerticalScrollView *scrollView; // @synthesize scrollView;
@property(retain, nonatomic) UIView *tocPageView; // @synthesize tocPageView;
- (void)loadBookmarks;
- (void)verticalScrollView:(id)arg1 didSingleTapCell:(id)arg2 forIndexPath:(id)arg3 atPoint:(struct CGPoint)arg4;
- (void)verticalScrollView:(id)arg1 configureCell:(id)arg2 forIndexPath:(id)arg3;
- (id)cellForVerticalScrollView:(id)arg1;
- (struct CGPoint)sectionTitleOriginOffset:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (double)sectionTitleHeightForSection:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (id)titleForSection:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (unsigned long long)numberOfCellsForSection:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (unsigned long long)numberOfSectionsForVerticalScrollView:(id)arg1;
- (void)configureScrollViewForInteraceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)buildCloseButton;
- (id)buildTitleText;
- (void)setIssue:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PurchaseWebUISupport : NSObject <SKProductsRequestDelegate>
{
    id <PurchaseService> purchaseService;
    UIWebView *webView;
    NSSet *appleProductIds;
}

+ (_Bool)handleProductPriceInjection:(id)arg1 purchaseService:(id)arg2;
+ (_Bool)initiatePurchaseFromURL:(id)arg1 purchaseService:(id)arg2 delegate:(id)arg3;
+ (_Bool)shouldInitiatePurchaseForWebview:(id)arg1 andRequest:(id)arg2;
+ (id)purchaseTagQueryString:(id)arg1;
+ (id)purchaseTagQueryStringRelativePath:(id)arg1;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)dealloc;
- (id)initWithPurchaseService:(id)arg1 webView:(id)arg2 appleProductIds:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Country : NSObject
{
    long long _continent;
    long long _countryId;
    NSString *_ISO3Code;
    NSString *_name;
    NSString *_region;
}

@property(copy, nonatomic) NSString *region; // @synthesize region=_region;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *ISO3Code; // @synthesize ISO3Code=_ISO3Code;
@property(nonatomic) long long countryId; // @synthesize countryId=_countryId;
@property(nonatomic) long long continent; // @synthesize continent=_continent;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;

@end

@interface TopAlighedLabel : UILabel
{
    struct CGSize maxSize;
}

@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize;
- (void)setText:(id)arg1;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1 limitedToNumberOfLines:(long long)arg2;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ImageGroupView : UIView
{
    NSMutableArray *group;
    double margin;
}

@property(nonatomic) double margin; // @synthesize margin;
- (void)layoutSubviews;
- (void)addImage:(id)arg1;
- (void)clearGroup;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)initImageGroupView;

@end

@interface ZinioImageDataTransformer : NSValueTransformer
{
}

+ (Class)transformedValueClass;
+ (_Bool)allowsReverseTransformation;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface DefaultFreeOfferService : NSObject <FreeOfferService>
{
    id <FreeOfferServiceDelegate> delegate;
    id <AppDataService> appDataService;
    ContentManager *contentManager;
}

@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
@property(retain, nonatomic) id <FreeOfferServiceDelegate> delegate; // @synthesize delegate;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)getFreeOfferFailed:(id)arg1;
- (void)getFreeOfferSucceeded:(id)arg1;
- (void)grantOffer:(id)arg1 toUser:(id)arg2;
- (void)getFreeOffer:(id)arg1 delegate:(id)arg2;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGMagazineHeroTargetParserDelegate : ZGManagedObjectParserDelegate
{
}

- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (id)entityName;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface CachePurgeViewController : ModalInsetViewController
{
    UIImageView *backgroundImage;
    UILabel *sizeLabel;
    UIButton *purgeButton;
    UIActivityIndicatorView *spinner;
    NSTimer *dbSizeMonitor;
    UISwitch *iTunesTransactionSwitch;
    UILabel *iTunesTransactionLabel;
}

@property(retain, nonatomic) UISwitch *iTunesTransactionSwitch; // @synthesize iTunesTransactionSwitch;
@property(retain, nonatomic) UILabel *iTunesTransactionLabel; // @synthesize iTunesTransactionLabel;
@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner;
@property(retain, nonatomic) UIButton *purgeButton; // @synthesize purgeButton;
@property(retain, nonatomic) UILabel *sizeLabel; // @synthesize sizeLabel;
@property(retain, nonatomic) UIImageView *backgroundImage; // @synthesize backgroundImage;
- (void)updateiTunesTransactionText;
- (void)toggleProcessTransactions:(id)arg1;
- (void)refreshSizeLabel:(id)arg1;
- (void)cleanup;
- (void)purgeCache;
- (void)resetUI;
- (void)purgeClicked:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface ZinioMemoryMeterTabBarView : TabbedBarButtonItemView
{
    ZinioMemoryMeterView *memoryMeter;
}

- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ZinioProgressView : UIProgressView
{
}

- (void)_commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;

@end

@interface DashboardViewController : UIViewController
{
    UIView *translucentInsetView;
    ZinioProgressView *systemMemoryMeter;
    ZinioProgressView *usedMemoryMeter;
    UILabel *systemMemoryValue;
    UILabel *zinioMemoryValue;
    UILabel *freeMemoryValue;
    UILabel *totalMemoryValue;
    UILabel *memoryWarningsValue;
    UIView *systemColorKey;
    UIView *zinioColorKey;
    UIView *freeColorKey;
    unsigned long long memWarningCount;
    NSTimer *memoryTimer;
}

@property(retain, nonatomic) UIView *freeColorKey; // @synthesize freeColorKey;
@property(retain, nonatomic) UIView *systemColorKey; // @synthesize systemColorKey;
@property(retain, nonatomic) UIView *zinioColorKey; // @synthesize zinioColorKey;
@property(retain, nonatomic) UILabel *memoryWarningsValue; // @synthesize memoryWarningsValue;
@property(retain, nonatomic) UILabel *totalMemoryValue; // @synthesize totalMemoryValue;
@property(retain, nonatomic) UILabel *freeMemoryValue; // @synthesize freeMemoryValue;
@property(retain, nonatomic) UILabel *systemMemoryValue; // @synthesize systemMemoryValue;
@property(retain, nonatomic) UILabel *zinioMemoryValue; // @synthesize zinioMemoryValue;
@property(retain, nonatomic) ZinioProgressView *usedMemoryMeter; // @synthesize usedMemoryMeter;
@property(retain, nonatomic) ZinioProgressView *systemMemoryMeter; // @synthesize systemMemoryMeter;
@property(retain, nonatomic) UIView *translucentInsetView; // @synthesize translucentInsetView;
- (void)refreshMemoryStats:(id)arg1;
- (void)hideDashboard:(id)arg1;
- (void)didRotate:(id)arg1;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface DashboardView : UIView
{
}

- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SettingsSendRequestViewController : SettingsBaseTableViewController
{
}

- (void)dismiss:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

@end

@interface AFURLSessionManagerTaskDelegate : NSObject <NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate>
{
    AFURLSessionManager *_manager;
    NSMutableData *_mutableData;
    NSProgress *_progress;
    NSURL *_downloadFileURL;
    CDUnknownBlockType _downloadTaskDidFinishDownloading;
    CDUnknownBlockType _completionHandler;
}

@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidFinishDownloading; // @synthesize downloadTaskDidFinishDownloading=_downloadTaskDidFinishDownloading;
@property(copy, nonatomic) NSURL *downloadFileURL; // @synthesize downloadFileURL=_downloadFileURL;
@property(retain, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
@property(retain, nonatomic) NSMutableData *mutableData; // @synthesize mutableData=_mutableData;
@property(nonatomic) __weak AFURLSessionManager *manager; // @synthesize manager=_manager;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFURLSessionManager : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate, NSSecureCoding, NSCopying>
{
    _Bool _attemptsToRecreateUploadTasksForBackgroundSessions;
    NSURLSession *_session;
    NSOperationQueue *_operationQueue;
    id <AFURLResponseSerialization> _responseSerializer;
    AFSecurityPolicy *_securityPolicy;
    AFNetworkReachabilityManager *_reachabilityManager;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSObject<OS_dispatch_group> *_completionGroup;
    NSURLSessionConfiguration *_sessionConfiguration;
    NSMutableDictionary *_mutableTaskDelegatesKeyedByTaskIdentifier;
    NSLock *_lock;
    CDUnknownBlockType _sessionDidBecomeInvalid;
    CDUnknownBlockType _sessionDidReceiveAuthenticationChallenge;
    CDUnknownBlockType _didFinishEventsForBackgroundURLSession;
    CDUnknownBlockType _taskWillPerformHTTPRedirection;
    CDUnknownBlockType _taskDidReceiveAuthenticationChallenge;
    CDUnknownBlockType _taskNeedNewBodyStream;
    CDUnknownBlockType _taskDidSendBodyData;
    CDUnknownBlockType _taskDidComplete;
    CDUnknownBlockType _dataTaskDidReceiveResponse;
    CDUnknownBlockType _dataTaskDidBecomeDownloadTask;
    CDUnknownBlockType _dataTaskDidReceiveData;
    CDUnknownBlockType _dataTaskWillCacheResponse;
    CDUnknownBlockType _downloadTaskDidFinishDownloading;
    CDUnknownBlockType _downloadTaskDidWriteData;
    CDUnknownBlockType _downloadTaskDidResume;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidResume; // @synthesize downloadTaskDidResume=_downloadTaskDidResume;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidWriteData; // @synthesize downloadTaskDidWriteData=_downloadTaskDidWriteData;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidFinishDownloading; // @synthesize downloadTaskDidFinishDownloading=_downloadTaskDidFinishDownloading;
@property(copy, nonatomic) CDUnknownBlockType dataTaskWillCacheResponse; // @synthesize dataTaskWillCacheResponse=_dataTaskWillCacheResponse;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidReceiveData; // @synthesize dataTaskDidReceiveData=_dataTaskDidReceiveData;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidBecomeDownloadTask; // @synthesize dataTaskDidBecomeDownloadTask=_dataTaskDidBecomeDownloadTask;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidReceiveResponse; // @synthesize dataTaskDidReceiveResponse=_dataTaskDidReceiveResponse;
@property(copy, nonatomic) CDUnknownBlockType taskDidComplete; // @synthesize taskDidComplete=_taskDidComplete;
@property(copy, nonatomic) CDUnknownBlockType taskDidSendBodyData; // @synthesize taskDidSendBodyData=_taskDidSendBodyData;
@property(copy, nonatomic) CDUnknownBlockType taskNeedNewBodyStream; // @synthesize taskNeedNewBodyStream=_taskNeedNewBodyStream;
@property(copy, nonatomic) CDUnknownBlockType taskDidReceiveAuthenticationChallenge; // @synthesize taskDidReceiveAuthenticationChallenge=_taskDidReceiveAuthenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType taskWillPerformHTTPRedirection; // @synthesize taskWillPerformHTTPRedirection=_taskWillPerformHTTPRedirection;
@property(copy, nonatomic) CDUnknownBlockType didFinishEventsForBackgroundURLSession; // @synthesize didFinishEventsForBackgroundURLSession=_didFinishEventsForBackgroundURLSession;
@property(copy, nonatomic) CDUnknownBlockType sessionDidReceiveAuthenticationChallenge; // @synthesize sessionDidReceiveAuthenticationChallenge=_sessionDidReceiveAuthenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType sessionDidBecomeInvalid; // @synthesize sessionDidBecomeInvalid=_sessionDidBecomeInvalid;
@property(retain, nonatomic) NSLock *lock; // @synthesize lock=_lock;
@property(retain, nonatomic) NSMutableDictionary *mutableTaskDelegatesKeyedByTaskIdentifier; // @synthesize mutableTaskDelegatesKeyedByTaskIdentifier=_mutableTaskDelegatesKeyedByTaskIdentifier;
@property(retain, nonatomic) NSURLSessionConfiguration *sessionConfiguration; // @synthesize sessionConfiguration=_sessionConfiguration;
@property(nonatomic) _Bool attemptsToRecreateUploadTasksForBackgroundSessions; // @synthesize attemptsToRecreateUploadTasksForBackgroundSessions=_attemptsToRecreateUploadTasksForBackgroundSessions;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *completionGroup; // @synthesize completionGroup=_completionGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(retain, nonatomic) AFNetworkReachabilityManager *reachabilityManager; // @synthesize reachabilityManager=_reachabilityManager;
@property(retain, nonatomic) AFSecurityPolicy *securityPolicy; // @synthesize securityPolicy=_securityPolicy;
@property(retain, nonatomic) id <AFURLResponseSerialization> responseSerializer; // @synthesize responseSerializer=_responseSerializer;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (_Bool)respondsToSelector:(SEL)arg1;
@property(readonly, copy) NSString *description;
- (void)setDownloadTaskDidResumeBlock:(CDUnknownBlockType)arg1;
- (void)setDownloadTaskDidWriteDataBlock:(CDUnknownBlockType)arg1;
- (void)setDownloadTaskDidFinishDownloadingBlock:(CDUnknownBlockType)arg1;
- (void)setDataTaskWillCacheResponseBlock:(CDUnknownBlockType)arg1;
- (void)setDataTaskDidReceiveDataBlock:(CDUnknownBlockType)arg1;
- (void)setDataTaskDidBecomeDownloadTaskBlock:(CDUnknownBlockType)arg1;
- (void)setDataTaskDidReceiveResponseBlock:(CDUnknownBlockType)arg1;
- (void)setTaskDidCompleteBlock:(CDUnknownBlockType)arg1;
- (void)setTaskDidSendBodyDataBlock:(CDUnknownBlockType)arg1;
- (void)setTaskDidReceiveAuthenticationChallengeBlock:(CDUnknownBlockType)arg1;
- (void)setTaskWillPerformHTTPRedirectionBlock:(CDUnknownBlockType)arg1;
- (void)setTaskNeedNewBodyStreamBlock:(CDUnknownBlockType)arg1;
- (void)setDidFinishEventsForBackgroundURLSessionBlock:(CDUnknownBlockType)arg1;
- (void)setSessionDidReceiveAuthenticationChallengeBlock:(CDUnknownBlockType)arg1;
- (void)setSessionDidBecomeInvalidBlock:(CDUnknownBlockType)arg1;
- (id)downloadProgressForTask:(id)arg1;
- (id)uploadProgressForTask:(id)arg1;
- (id)downloadTaskWithResumeData:(id)arg1 progress:(id *)arg2 destination:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)downloadTaskWithRequest:(id)arg1 progress:(id *)arg2 destination:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)uploadTaskWithStreamedRequest:(id)arg1 progress:(id *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)uploadTaskWithRequest:(id)arg1 fromData:(id)arg2 progress:(id *)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)uploadTaskWithRequest:(id)arg1 fromFile:(id)arg2 progress:(id *)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)dataTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)invalidateSessionCancelingTasks:(_Bool)arg1;
@property(readonly, nonatomic) NSArray *downloadTasks;
@property(readonly, nonatomic) NSArray *uploadTasks;
@property(readonly, nonatomic) NSArray *dataTasks;
@property(readonly, nonatomic) NSArray *tasks;
- (id)tasksForKeyPath:(id)arg1;
- (void)removeAllDelegates;
- (void)removeDelegateForTask:(id)arg1;
- (void)addDelegateForDownloadTask:(id)arg1 progress:(id *)arg2 destination:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)addDelegateForUploadTask:(id)arg1 progress:(id *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)addDelegateForDataTask:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setDelegate:(id)arg1 forTask:(id)arg2;
- (id)delegateForTask:(id)arg1;
- (id)initWithSessionConfiguration:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreTextBreadCrumb : BreadcrumbButtonSwitch
{
}

- (void)setTitleColor:(id)arg1 forButton:(id)arg2;
- (struct CGSize)labelSizeForButton:(id)arg1;
- (id)createButtonWithTitle:(id)arg1;

@end

@interface StoryBasedReaderClotheslineInfoView : UIView
{
    UIView *backgroundView;
    TopAlighedLabel *sectionLabel;
    TopAlighedLabel *titleLabel;
    TopAlighedLabel *kickerLabel;
    TopAlighedLabel *authorLabel;
    TopAlighedLabel *blurbLabel;
    ImageGroupView *icons;
}

@property(retain, nonatomic) ImageGroupView *icons; // @synthesize icons;
@property(retain, nonatomic) TopAlighedLabel *kickerLabel; // @synthesize kickerLabel;
@property(retain, nonatomic) TopAlighedLabel *sectionLabel; // @synthesize sectionLabel;
@property(retain, nonatomic) TopAlighedLabel *titleLabel; // @synthesize titleLabel;
@property(retain, nonatomic) TopAlighedLabel *blurbLabel; // @synthesize blurbLabel;
@property(retain, nonatomic) TopAlighedLabel *authorLabel; // @synthesize authorLabel;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView;
- (void)layoutSubviews;
- (void)dealloc;

@end

@interface ZinioPhoneNavBar : UINavigationBar
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface ZinioMemoryMeterView : ZinioProgressView
{
    UILabel *memoryLabel;
    NSTimer *memoryTimer;
    _Bool shouldShowLabel;
}

@property(nonatomic) _Bool shouldShowLabel; // @synthesize shouldShowLabel;
@property(retain, nonatomic) UILabel *memoryLabel; // @synthesize memoryLabel;
- (void)refreshMemoryMeter:(id)arg1;
- (void)dealloc;
- (void)configureView;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ProductPageDataSource : NSObject
{
    id <ProductPageDataSourceDelegate> _delegate;
    Magazine *_selectedMagazine;
    NSArray *_backIssueMagazines;
}

@property(retain, nonatomic) NSArray *backIssueMagazines; // @synthesize backIssueMagazines=_backIssueMagazines;
@property(nonatomic) id <ProductPageDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
- (void)loadBackIssues;
@property(retain, nonatomic) Magazine *selectedMagazine; // @synthesize selectedMagazine=_selectedMagazine;
- (void)dealloc;
- (id)init;

@end

@interface OneSheetViewController : UIViewController
{
    CoreTextLabel *exploreTitleLabel;
    CoreTextLabel *libraryTitleLabel;
    CoreTextLabel *shopTitleLabel;
    CoreTextLabel *settingsTitleLabel;
    CoreTextLabel *bookmarksTitleLabel;
    CoreTextLabel *closeButtonText;
    UIColor *tint;
    UIColor *tintInactive;
    UIColor *shadowColor;
    UIColor *textColor;
    UIColor *titleShadowColor;
    struct CGSize titleShadowOffset;
    struct CGSize shadowOffset;
    double shadowBlur;
    double letterSpacing;
    UILabel *exploreDescriptionLabel;
    UILabel *libraryDescriptionLabel;
    UILabel *shopDescriptionLabel;
    UILabel *oneSheetTitle;
    UILabel *oneSheetDescription;
    UIButton *closeButton;
    UIColor *tintInteractive;
}

@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton;
@property(retain, nonatomic) CoreTextLabel *closeButtonText; // @synthesize closeButtonText;
@property(nonatomic) struct CGSize titleShadowOffset; // @synthesize titleShadowOffset;
@property(nonatomic) double letterSpacing; // @synthesize letterSpacing;
@property(retain, nonatomic) UIColor *tintInteractive; // @synthesize tintInteractive;
@property(retain, nonatomic) UIColor *titleShadowColor; // @synthesize titleShadowColor;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor;
@property(nonatomic) double shadowBlur; // @synthesize shadowBlur;
@property(retain, nonatomic) UIColor *tint; // @synthesize tint;
@property(retain, nonatomic) UILabel *oneSheetDescription; // @synthesize oneSheetDescription;
@property(retain, nonatomic) UILabel *oneSheetTitle; // @synthesize oneSheetTitle;
@property(retain, nonatomic) UILabel *shopDescriptionLabel; // @synthesize shopDescriptionLabel;
@property(retain, nonatomic) UILabel *libraryDescriptionLabel; // @synthesize libraryDescriptionLabel;
@property(retain, nonatomic) UILabel *exploreDescriptionLabel; // @synthesize exploreDescriptionLabel;
@property(retain, nonatomic) CoreTextLabel *bookmarksTitleLabel; // @synthesize bookmarksTitleLabel;
@property(retain, nonatomic) CoreTextLabel *settingsTitleLabel; // @synthesize settingsTitleLabel;
@property(retain, nonatomic) CoreTextLabel *shopTitleLabel; // @synthesize shopTitleLabel;
@property(retain, nonatomic) CoreTextLabel *libraryTitleLabel; // @synthesize libraryTitleLabel;
@property(retain, nonatomic) CoreTextLabel *exploreTitleLabel; // @synthesize exploreTitleLabel;
- (void)removeOneSheetFromView;
- (void)closeOneSheet:(id)arg1;
- (void)showViewInsideView:(id)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface CustomVerticalButtonSwitch : VerticalButtonSwitch
{
    UIColor *selectionColor;
}

@property(retain, nonatomic) UIColor *selectionColor; // @synthesize selectionColor;
- (void)dealloc;
- (void)continuationSelect:(id)arg1;
- (void)drawSelection:(id)arg1;
- (void)setTitleColor:(id)arg1 forButton:(id)arg2;
- (void)didSelectButton:(id)arg1;
- (void)addButtonWithTitle:(id)arg1;
- (void)addAndSelectButtonWithTitle:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)configureButtonSwitchDefaults;

@end

@interface SettingsViewController : BaseViewController <UITableViewDelegate, UITableViewDataSource, UIGestureRecognizerDelegate>
{
    UIView *accountView;
    struct CGRect canonicalSettingsFrame;
    NSObject<User> *currentUser;
    UIPopoverController *popoverReference;
    UITableView *settingsTable;
    double settingsWidth;
}

@property(retain, nonatomic) UITableView *settingsTable; // @synthesize settingsTable;
@property(retain, nonatomic) UIPopoverController *popoverReference; // @synthesize popoverReference;
@property(retain, nonatomic) NSObject<User> *currentUser; // @synthesize currentUser;
@property(retain, nonatomic) UIView *accountView; // @synthesize accountView;
- (void)_logout;
- (void)presentPopover;
- (void)handleTapOnAccountView:(id)arg1;
- (void)applicationChangedUser:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)launchLeaveApplicationAlert;
- (id)labelWithText:(id)arg1 inFrame:(struct CGRect)arg2 withFontSize:(float)arg3;
- (id)labelWithText:(id)arg1 inFrame:(struct CGRect)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (id)getUnselectedBackgroundImage;
- (void)setTableViewSeparatorColor:(id)arg1;
- (void)setCellBackgroundColor:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)configureCellForLoggedInUser:(id)arg1 atIndexPath:(id)arg2;
- (void)configureCellForDefaultUser:(id)arg1 atIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)navigationBarTitle;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)reset;
- (void)initialize;
- (void)initializeViewFrames;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SettingsTableViewController : SettingsBaseTableViewController <UITableViewDelegate, UITableViewDataSource, UIGestureRecognizerDelegate, MFMailComposeViewControllerDelegate>
{
    UITableView *_tableView;
    id <SettingsTableViewControllerDelegate> _delegate;
    NSMutableArray *_tags;
    id <AppDataService> _appDataService;
    NSObject<User> *_currentUser;
    UIButton *_signInOutButton;
    UITapGestureRecognizer *_singleTap;
    UILabel *_appVersionLabel;
}

@property(retain, nonatomic) UILabel *appVersionLabel; // @synthesize appVersionLabel=_appVersionLabel;
@property(retain, nonatomic) UITapGestureRecognizer *singleTap; // @synthesize singleTap=_singleTap;
@property(retain, nonatomic) UIButton *signInOutButton; // @synthesize signInOutButton=_signInOutButton;
@property(retain, nonatomic) NSObject<User> *currentUser; // @synthesize currentUser=_currentUser;
@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService=_appDataService;
@property(retain, nonatomic) NSMutableArray *tags; // @synthesize tags=_tags;
@property(nonatomic) id <SettingsTableViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)didTapDismissButton:(id)arg1;
- (void)_didTapView:(id)arg1;
- (void)_dismissViewControllerWithCompletionBlock:(CDUnknownBlockType)arg1 sender:(id)arg2;
- (id)_mailViewcontroller;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (id)_viewControllerAtIndexPath:(id)arg1;
- (int)_tagForIndexPath:(id)arg1;
- (void)_createTagsArray;
- (id)_cellIdentifierForTag:(id)arg1;
- (id)_titleForTag:(int)arg1;
- (void)_resetTableView;
- (void)didTapSignInOutButton;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)configureCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SettingsNotificationViewController : SettingsBaseTableViewController
{
    UITableView *_tableView;
    NSArray *_listData;
    NSArray *_messageData;
    _Bool _deliveryFlag;
    _Bool _renewFlag;
    _Bool _updateFlag;
    UITextView *_footerTextView;
}

@property(retain, nonatomic) UITextView *footerTextView; // @synthesize footerTextView=_footerTextView;
@property(retain, nonatomic) NSArray *messageData; // @synthesize messageData=_messageData;
@property(retain, nonatomic) NSArray *listData; // @synthesize listData=_listData;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)cell:(id)arg1 selected:(_Bool)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)configureCell:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface BaseBarButtonItemView : UIView
{
    UIImage *image;
    NSString *pdfImagePath;
    struct CGSize pdfSize;
    UIFont *font;
    CoreTextLabel *title;
    UIColor *titleColor;
    UIColor *titleColorInactive;
    UIColor *tint;
    UIColor *tintInactive;
    _Bool selected;
    _Bool highlighted;
    _Bool segmentLeft;
    _Bool segmentRight;
    double letterSpacing;
    struct UIEdgeInsets edgeInsets;
}

@property(nonatomic) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets;
@property(nonatomic) double letterSpacing; // @synthesize letterSpacing;
@property(retain, nonatomic) NSString *pdfImagePath; // @synthesize pdfImagePath;
@property(retain, nonatomic) UIColor *titleColorInactive; // @synthesize titleColorInactive;
@property(retain, nonatomic) UIColor *titleColor; // @synthesize titleColor;
@property(retain, nonatomic) UIColor *tintInactive; // @synthesize tintInactive;
@property(retain, nonatomic) UIColor *tint; // @synthesize tint;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted;
@property(nonatomic, getter=isSelected) _Bool selected; // @synthesize selected;
@property(nonatomic, getter=isSegmentRight) _Bool segmentRight; // @synthesize segmentRight;
@property(nonatomic, getter=isSegmentLeft) _Bool segmentLeft; // @synthesize segmentLeft;
@property(retain, nonatomic) UIFont *font; // @synthesize font;
- (struct CGPDFDocument *)newPdfDocument;
- (void)drawPdfInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawImageInRect:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (struct CGRect)textFrameInSize:(struct CGSize)arg1;
- (struct CGSize)pdfSizeInSize:(struct CGSize)arg1;
- (struct CGSize)imageSizeInSize:(struct CGSize)arg1;
- (id)currentTitleColor;
@property(retain, nonatomic) NSString *titleText;
- (void)dealloc;
- (id)initWithPdfImage:(id)arg1 title:(id)arg2;
- (id)initWithImage:(id)arg1 title:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithTitle:(id)arg1;
- (void)initialize;

@end

@interface ZGCommonSettingsTableViewCell : UITableViewCell
{
    EntryFieldBox *entryFieldBox;
    UIImageView *imageView;
    UIImageViewPDF *pdfView;
    UILabel *textLabel;
}

@property(retain, nonatomic) UIImageViewPDF *pdfView; // @synthesize pdfView;
@property(retain, nonatomic) EntryFieldBox *entryFieldBox; // @synthesize entryFieldBox;
@property(retain, nonatomic) UILabel *textLabel; // @synthesize textLabel;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView;
- (void)drawRect:(struct CGRect)arg1;
- (void)showUpperLine;
- (void)hideUpperLine;
- (void)configureCell:(id)arg1 pdfImage:(id)arg2;
- (void)configureCell:(id)arg1 image:(id)arg2;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 textOnly:(_Bool)arg3;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 pdfImage:(_Bool)arg3;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)initialize:(_Bool)arg1 textOnly:(_Bool)arg2;
- (void)dealloc;

@end

@interface UnderlineButton : UIButton
{
}

- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UnderlinedUILabel : UILabel
{
    UIColor *colorForText;
    UIFont *_lineFont;
}

@property(nonatomic) UIFont *lineFont; // @synthesize lineFont=_lineFont;
@property(retain, nonatomic) UIColor *colorForText; // @synthesize colorForText;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface UIImageViewPDF : UIView
{
    NSString *pdfImagePath;
    struct CGSize pdfSize;
    UIColor *tint;
    UIColor *tintInactive;
    UIColor *shadowColor;
    struct CGSize shadowOffset;
    double shadowBlur;
    _Bool selected;
    _Bool highlighted;
    struct UIEdgeInsets edgeInsets;
}

@property(nonatomic) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets;
@property(retain, nonatomic) NSString *pdfImagePath; // @synthesize pdfImagePath;
@property(retain, nonatomic) UIColor *tintInactive; // @synthesize tintInactive;
@property(retain, nonatomic) UIColor *tint; // @synthesize tint;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor;
@property(nonatomic) double shadowBlur; // @synthesize shadowBlur;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted;
@property(nonatomic, getter=isSelected) _Bool selected; // @synthesize selected;
- (struct CGPDFDocument *)newPdfDocument;
- (void)drawPdfInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGSize)pdfSizeInSize:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithPdfImage:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)initialize;

@end

@interface SearchCategoryResult : NSObject <ZGAtomLink>
{
    NSString *_categoryId;
    NSString *_name;
    _Bool _parent;
    NSString *_rel;
    NSString *_type;
    NSString *_href;
}

+ (id)noResultsFoundItem;
@property(retain, nonatomic) NSString *href; // @synthesize href=_href;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *rel; // @synthesize rel=_rel;
@property(readonly, nonatomic, getter=isParent) _Bool parent; // @synthesize parent=_parent;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *categoryId; // @synthesize categoryId=_categoryId;
- (id)initWithDictionary:(id)arg1;

@end

@interface ZGHeroPromoCategoryTarget : ZGHeroTarget
{
}


// Remaining properties
@property(retain, nonatomic) ZGHeroPromoCategory *category; // @dynamic category;
@end

@interface ZGHeroPromoCategory : ZGPromoCategory
{
}


// Remaining properties
@property(retain, nonatomic) ZGHeroPromoCategoryTarget *heroCategoryTarget; // @dynamic heroCategoryTarget;
@end

@interface IntroViewController : UIViewController
{
    UIView *contentView;
    UILabel *iconLabel;
    UILabel *captionLabel;
    UILabel *titleLabel;
    UILabel *descriptionLabel;
    UILabel *descriptionLabel2;
    UILabel *closeLabel1;
    UILabel *closeLabel2;
    UIButton *readButton;
    UIButton *exploreButton;
    UIButton *shopButton;
    UIButton *singleBookmarkButton;
    UIButton *doubleBookmarkButton;
    UIButton *closeButton1;
    UIButton *closeButton2;
    UIImageView *iconLargeImageView;
    UIImageView *iconLargeImageView2;
    UIImageView *verticalLineImageView;
    UIImageView *baseLineImageView;
    UIImageView *closeImageView1;
    UIImageView *closeImageView2;
    UIView *descriptionView;
    UIView *iconLargeView;
    UIView *transitionLabelFromView;
    UIView *transitionLabelToView;
    UIView *transitionImageFromView;
    UIView *transitionImageToView;
    id delegate;
    _Bool transitioning;
    int animationCounter;
    _Bool isBookmarksView;
}

+ (_Bool)introHasShownOnce;
@property(nonatomic) UIView *transitionImageToView; // @synthesize transitionImageToView;
@property(nonatomic) UIView *transitionImageFromView; // @synthesize transitionImageFromView;
@property(nonatomic) UIView *transitionLabelToView; // @synthesize transitionLabelToView;
@property(nonatomic) UIView *transitionLabelFromView; // @synthesize transitionLabelFromView;
@property(retain, nonatomic) UIView *iconLargeView; // @synthesize iconLargeView;
@property(retain, nonatomic) UIView *descriptionView; // @synthesize descriptionView;
@property(nonatomic) _Bool isBookmarksView; // @synthesize isBookmarksView;
@property(nonatomic) id delegate; // @synthesize delegate;
@property(retain, nonatomic) UIImageView *closeImageView2; // @synthesize closeImageView2;
@property(retain, nonatomic) UIImageView *closeImageView1; // @synthesize closeImageView1;
@property(retain, nonatomic) UIImageView *baseLineImageView; // @synthesize baseLineImageView;
@property(retain, nonatomic) UIImageView *verticalLineImageView; // @synthesize verticalLineImageView;
@property(retain, nonatomic) UIImageView *iconLargeImageView2; // @synthesize iconLargeImageView2;
@property(retain, nonatomic) UIImageView *iconLargeImageView; // @synthesize iconLargeImageView;
@property(retain, nonatomic) UILabel *descriptionLabel2; // @synthesize descriptionLabel2;
@property(retain, nonatomic) UILabel *descriptionLabel; // @synthesize descriptionLabel;
@property(retain, nonatomic) UILabel *closeLabel2; // @synthesize closeLabel2;
@property(retain, nonatomic) UILabel *closeLabel1; // @synthesize closeLabel1;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel;
@property(retain, nonatomic) UILabel *captionLabel; // @synthesize captionLabel;
@property(retain, nonatomic) UILabel *iconLabel; // @synthesize iconLabel;
@property(retain, nonatomic) UIButton *closeButton2; // @synthesize closeButton2;
@property(retain, nonatomic) UIButton *closeButton1; // @synthesize closeButton1;
@property(retain, nonatomic) UIButton *doubleBookmarkButton; // @synthesize doubleBookmarkButton;
@property(retain, nonatomic) UIButton *singleBookmarkButton; // @synthesize singleBookmarkButton;
@property(retain, nonatomic) UIButton *shopButton; // @synthesize shopButton;
@property(retain, nonatomic) UIButton *exploreButton; // @synthesize exploreButton;
@property(retain, nonatomic) UIButton *readButton; // @synthesize readButton;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView;
- (void)clickDoubleBookmarkButton:(id)arg1;
- (void)clickSingleBookmarkButton:(id)arg1;
- (void)clickShopButton:(id)arg1;
- (void)clickReadButton:(id)arg1;
- (void)clickExploreButton:(id)arg1;
- (void)animateDescriptionandImage;
- (void)fadeIn:(id)arg1 withDuration:(double)arg2 andWait:(double)arg3;
- (void)fadeOut:(id)arg1 withDuration:(double)arg2 andWait:(double)arg3 didStopSelector:(SEL)arg4;
- (void)fadeInImageAndDescriptionView;
- (void)slideLabelDownComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)slideImageViewDownComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)transitionView:(id)arg1 toView:(id)arg2 didStopSelector:(SEL)arg3;
- (void)transitionImageView:(id)arg1 toView:(id)arg2 didStopSelector:(SEL)arg3;
- (void)transitionLabel:(id)arg1 toLabel:(id)arg2;
- (void)transitionImage:(id)arg1 toImageView:(id)arg2;
- (void)hideBottomView;
- (void)showBottomView;
- (void)hideIntroIcons;
- (void)showIntroIcons;
- (void)removeIntroFromView;
- (void)introViewControllerDidClose:(id)arg1;
- (void)closeIntroComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)closeIntro:(id)arg1;
- (void)showViewInsideView:(id)arg1;
- (void)centerContentView;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)initializeIntroBookmarksText;
- (id)resizedFontForLabel:(id)arg1 maxFontSize:(int)arg2 minFontSize:(int)arg3;
- (void)initializeIntroText;
- (void)initializeText;
- (void)adjustTextToFit:(id)arg1 onLabel:(id)arg2;
- (void)initialize;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface ZGRequest : NSObject
{
    NSString *profileId;
    NSString *deviceProfileId;
    _Bool requiresAuthorization;
}

@property(nonatomic) NSString *deviceProfileId; // @synthesize deviceProfileId;
@property(nonatomic) NSString *profileId; // @synthesize profileId;
@property(nonatomic) _Bool requiresAuthorization; // @synthesize requiresAuthorization;
- (void)dealloc;

@end

@interface LeftTitleStackWithRootBack : LeftNavigationView
{
    UIViewController *rootInsetViewController;
    NSString *rootBackTitle;
}

@property(copy, nonatomic) NSString *rootBackTitle; // @synthesize rootBackTitle;
@property(retain, nonatomic) UIViewController *rootInsetViewController; // @synthesize rootInsetViewController;
- (void)viewControllerStackChanged:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)rootBackButtonPressed:(id)arg1;
- (void)backButtonPressed:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface DiskSpaceView : UIView
{
    UILabel *label1;
    UILabel *label2;
    UILabel *label3;
}

@property(nonatomic) UILabel *label3; // @synthesize label3;
@property(nonatomic) UILabel *label2; // @synthesize label2;
@property(nonatomic) UILabel *label1; // @synthesize label1;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface MosaicViewController : UIViewController
{
    UILabel *_titleLabel;
    ThumbnailScrollView *_thumbnailScrollView;
}

@property(retain, nonatomic) ThumbnailScrollView *thumbnailScrollView; // @synthesize thumbnailScrollView=_thumbnailScrollView;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)viewDidLoad;
- (void)_commonInit;
- (void)dealloc;
- (id)init;

@end

@interface LoginBannerHeader : UIView
{
    UILabel *messageLabel;
    LibraryLoginBanner *backgroundTagView;
    id <LoginInBannerHeaderDelegate> delegate;
    long long section;
    UIButton *logoButton;
    UIImageView *closeImage;
    UIImageView *topShadingView;
    UIImageView *bottomShadingView;
}

@property(retain, nonatomic) UIImageView *bottomShadingView; // @synthesize bottomShadingView;
@property(retain, nonatomic) UIImageView *topShadingView; // @synthesize topShadingView;
@property(retain, nonatomic) UIImageView *closeImage; // @synthesize closeImage;
@property(retain, nonatomic) UIButton *logoButton; // @synthesize logoButton;
@property(nonatomic) long long section; // @synthesize section;
@property(nonatomic) id <LoginInBannerHeaderDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) LibraryLoginBanner *backgroundTagView; // @synthesize backgroundTagView;
@property(retain, nonatomic) UILabel *messageLabel; // @synthesize messageLabel;
- (void)dealloc;
- (void)slideOpenWithUserAction:(_Bool)arg1;
- (void)slideOpen:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 title:(id)arg2 section:(long long)arg3 delegate:(id)arg4;

@end

@interface RestorePurchasesViewController : UIViewController <RestorePurchaseServiceDelegate, UIAlertViewDelegate>
{
    UILabel *labelTop;
    UILabel *labelBottom;
    OutlineButton *_restoreButton;
    RestorePurchaseService *restorePurchaseService;
    UIActivityIndicatorView *spinner;
    OutlineButton *restoreButton;
}

@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner;
@property(retain, nonatomic) RestorePurchaseService *restorePurchaseService; // @synthesize restorePurchaseService;
@property(retain, nonatomic) OutlineButton *restoreButton; // @synthesize restoreButton;
@property(retain, nonatomic) UILabel *labelBottom; // @synthesize labelBottom;
@property(retain, nonatomic) UILabel *labelTop; // @synthesize labelTop;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)didFailRestore;
- (void)didSucceedRestore;
- (id)getTitleString;
- (void)backbutton:(id)arg1;
- (void)restore;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RestorePurchasesViewControllerLarge : RestorePurchasesViewController
{
    UIPopoverController *popoverReference;
}

@property(retain, nonatomic) UIPopoverController *popoverReference; // @synthesize popoverReference;
- (void)restore;
- (void)viewDidLoad;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SignInHeaderCell : UIView
{
    _Bool isSettings;
    _Bool isLibrary;
    _Bool isPurchase;
    UILabel *headerLabel;
    id <SignInHeaderCellDelegate> delegate;
    UIButton *selectionButton;
    long long section;
    UIButton *guestCheckout;
    UIView *spacerLine;
}

@property(retain, nonatomic) UIView *spacerLine; // @synthesize spacerLine;
@property(nonatomic) _Bool isPurchase; // @synthesize isPurchase;
@property(retain, nonatomic) UIButton *guestCheckout; // @synthesize guestCheckout;
@property(nonatomic) _Bool isLibrary; // @synthesize isLibrary;
@property(nonatomic) _Bool isSettings; // @synthesize isSettings;
@property(nonatomic) long long section; // @synthesize section;
@property(retain, nonatomic) UIButton *selectionButton; // @synthesize selectionButton;
@property(nonatomic) id <SignInHeaderCellDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) UILabel *headerLabel; // @synthesize headerLabel;
- (void)dealloc;
- (void)slideOpenWithUserAction:(_Bool)arg1;
- (void)continueAsGuest:(id)arg1;
- (void)loadSignInView:(id)arg1;
- (void)slideOpen:(id)arg1;
- (void)sizeSelectionButtonToFit;
- (id)initWithFrame:(struct CGRect)arg1 title:(id)arg2 section:(long long)arg3 delegate:(id)arg4;

@end

@interface ButtonsCell : UITableViewCell
{
    UIButton *signInButton;
    UIButton *continueAsGuestButton;
    UIButton *joinButton;
    UILabel *labelOr;
    UILabel *continuedLabel;
    UIImageView *bottomShadow;
    UIView *separatorLine;
    _Bool guestPurchase;
    _Bool joinScreen;
    id <ButtonsCellDelegate> delegate;
}

+ (Class)layerClass;
@property(retain, nonatomic) UIView *separatorLine; // @synthesize separatorLine;
@property(retain, nonatomic) UIImageView *bottomShadow; // @synthesize bottomShadow;
@property(retain, nonatomic) UILabel *continuedLabel; // @synthesize continuedLabel;
@property(retain, nonatomic) UILabel *labelOr; // @synthesize labelOr;
@property(nonatomic) _Bool joinScreen; // @synthesize joinScreen;
@property(nonatomic) _Bool guestPurchase; // @synthesize guestPurchase;
@property(nonatomic) id <ButtonsCellDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) UIButton *continueAsGuestButton; // @synthesize continueAsGuestButton;
@property(retain, nonatomic) UIButton *joinButton; // @synthesize joinButton;
@property(retain, nonatomic) UIButton *signInButton; // @synthesize signInButton;
- (void)dealloc;
- (void)moveToSignIn;
- (void)letGuestContinue;
- (void)startAccountCreation;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)letThemSignOnIn:(id)arg1;
- (void)guestContinue:(id)arg1;
- (void)createAccount:(id)arg1;
- (id)createBackgroundView;
- (void)arrangeButtons;
- (void)awakeFromNib;

@end

@interface ZRPCContext : NSObject <UINavigationControllerDelegate, UIImagePickerControllerDelegate, UIPopoverControllerDelegate>
{
    UIViewController *viewController;
    UIWebView *webView;
    NSString *callbackMethod;
    NSMutableDictionary *params;
}

@property(retain, nonatomic) UIWebView *webView; // @synthesize webView;
@property(retain, nonatomic) UIViewController *viewController; // @synthesize viewController;
@property(retain, nonatomic) NSMutableDictionary *params; // @synthesize params;
@property(retain, nonatomic) NSString *callbackMethod; // @synthesize callbackMethod;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (void)image:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)rpcSavePhoto;
- (void)closeImagePicker;
- (void)rpcGetPhoto;
- (void)rpcIssueScriptEval;
- (id)evaluateCallback:(_Bool)arg1;
- (void)cleanup;
@property(readonly, copy) NSString *description;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CreateAccountNavHeader : UIView
{
    id <CreateAccountNavHeaderDelegate> delegate;
    UIButton *backButton;
    UILabel *titleLabel;
}

@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel;
@property(retain, nonatomic) UIButton *backButton; // @synthesize backButton;
@property(nonatomic) id <CreateAccountNavHeaderDelegate> delegate; // @synthesize delegate;
- (void)dealloc;
- (void)dismissModal;
- (void)removeMyMainWindow:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 title:(id)arg2 delegate:(id)arg3;

@end

@interface RestorePurchaseService : NSObject
{
    id <RestorePurchaseServiceDelegate> delegate;
    ContentManager *contentManager;
}

@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
@property(retain, nonatomic) id <RestorePurchaseServiceDelegate> delegate; // @synthesize delegate;
- (void)restoreFailed:(id)arg1;
- (void)restoreSucceeded:(id)arg1;
- (void)restorePurchases;
- (void)dealloc;
- (id)init;

@end

@interface LibraryShopCell : UITableViewCell
{
    UIImageView *selectorIndicator;
    UILabel *cellLabel;
    id <LibraryShopCellDelegate> delegate;
}

@property(nonatomic) id <LibraryShopCellDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) UILabel *cellLabel; // @synthesize cellLabel;
@property(retain, nonatomic) UIImageView *selectorIndicator; // @synthesize selectorIndicator;
- (void)dealloc;
- (id)getSelectedBackgroundImage;
- (id)getUnselectedBackgroundImage;
- (void)startShopProcess;
- (void)moveToShop:(id)arg1;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)awakeFromNib;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface DeviceIdManager : NSObject <UIAlertViewDelegate>
{
    id <AppDataService> appDataService;
    NSString *spoofDeviceId;
    _Bool deviceProfileIdHasBeenReplaced;
    NSString *deviceId;
}

@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (id)generateUUID;
- (id)deviceIdentifierFromkeychain;
- (id)macAddress;
- (id)deviceProfileId;
- (id)installationUUID;
- (id)deviceUUID;
- (void)checkForSpoofing;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AnimationSpecKeyframe : NSObject <NSCopying>
{
    float offset;
    double value;
    int curve;
}

@property(readonly, nonatomic) double value; // @synthesize value;
@property(readonly, nonatomic) float offset; // @synthesize offset;
@property(nonatomic) int curve; // @synthesize curve;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithOffset:(float)arg1 value:(double)arg2;

@end

@interface AnimationSpecKeypath : NSObject <NSCopying>
{
    int calculationMode;
    int rotationMode;
    UIBezierPath *path;
    struct CGAffineTransform offset;
}

@property(nonatomic) int rotationMode; // @synthesize rotationMode;
@property(nonatomic) int calculationMode; // @synthesize calculationMode;
- (struct CGPath *)pathWithTransform:(struct CGAffineTransform)arg1;
- (struct CGPath *)path;
- (void)finishPath:(_Bool)arg1;
- (void)addCurveToPoint:(struct CGPoint)arg1 control1:(struct CGPoint)arg2 control2:(struct CGPoint)arg3;
- (void)addQuadraticCurveToPoint:(struct CGPoint)arg1 control:(struct CGPoint)arg2;
- (void)addLineToPoint:(struct CGPoint)arg1;
- (void)startPath:(struct CGPoint)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IssueXMLParser : NSObject
{
}

+ (void)parseIssueXML:(id)arg1 intoIssue:(id)arg2 isExcerpt:(_Bool)arg3 contentManager:(id)arg4;
+ (void)readPages:(id)arg1 intoIssue:(id)arg2 forOrientation:(int)arg3 withContext:(id)arg4;
+ (CDStruct_79c71658)parseAspectRatio:(id)arg1;
+ (id)parsePageObject:(id)arg1 withContext:(id)arg2;
+ (id)parseAnimationSpecSet:(id)arg1 forPageObject:(id)arg2;
+ (id)parsePageHyperlink:(id)arg1;
+ (void)readAnimationSpecSet:(id)arg1 intoSpec:(id)arg2;
+ (id)parseAnimationAction:(id)arg1;
+ (void)readAnimationSpecs:(id)arg1 intoContainer:(id)arg2;
+ (id)parseAnimationScript:(id)arg1;
+ (id)parseAnimationSpecTranslation:(id)arg1;
+ (void)readBaseAnimationSpecAttributes:(id)arg1 intoSpec:(id)arg2 withDefaultTiming:(int)arg3;
+ (id)parseAnimationSpecKeypath:(id)arg1 startingAt:(struct CGPoint)arg2 endingAt:(struct CGPoint)arg3;
+ (int)parseContentMode:(id)arg1 withDefault:(int)arg2;

@end

@interface CheckoutLoginNavigationController : LoginNavigationController
{
}

- (id)init;

@end

@interface IssueTOCXMLParser : NSObject
{
}

+ (void)parseTOC:(id)arg1 withParser:(id)arg2 intoIssue:(id)arg3 isExcerpt:(_Bool)arg4;
+ (void)logError:(id)arg1;

@end

@interface IssueAssetCache : NSObject
{
    id <Issue> issue;
    NSMutableDictionary *cache;
    NSMutableDictionary *partitions;
}

@property(retain, nonatomic) id <Issue> issue; // @synthesize issue;
- (void)clearCacheForFolio:(id)arg1;
- (id)dataForAssetPath:(id)arg1 inFolio:(id)arg2;
- (void)dealloc;
- (id)initWithIssue:(id)arg1;

@end

@interface TiledIssuePagePDFView : TiledPagesPDFView
{
    id <Issue> issue;
    id <Page> page;
    NSMutableArray *pdfPaths;
    NSMutableArray *pageSizes;
}

@property(readonly, nonatomic) NSArray *pdfPaths; // @synthesize pdfPaths;
@property(readonly, retain, nonatomic) id <Page> page; // @synthesize page;
@property(retain, nonatomic) id <Issue> issue; // @synthesize issue;
- (void)setupNewPage;
- (void)drawContentInLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (struct CGSize)pdfPageSizeForIndex:(unsigned long long)arg1 inDocument:(struct CGPDFDocument *)arg2;
- (struct CGPDFPage *)pdfPageForIndex:(unsigned long long)arg1 inDocument:(struct CGPDFDocument *)arg2;
- (_Bool)shouldDrawContent;
- (void)setPage:(id)arg1 withHyperlinks:(id)arg2;
- (_Bool)setPage:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DDAbstractDatabaseLogger : DDAbstractLogger
{
    unsigned long long saveThreshold;
    double saveInterval;
    double maxAge;
    double deleteInterval;
    _Bool deleteOnEverySave;
    _Bool saveTimerSuspended;
    unsigned long long unsavedCount;
    unsigned long long unsavedTime;
    NSObject<OS_dispatch_source> *saveTimer;
    unsigned long long lastDeleteTime;
    NSObject<OS_dispatch_source> *deleteTimer;
}

- (void)flush;
- (void)logMessage:(id)arg1;
- (void)willRemoveLogger;
- (void)didAddLogger;
- (void)deleteOldLogEntries;
- (void)savePendingLogEntries;
@property _Bool deleteOnEverySave;
@property double deleteInterval;
@property double maxAge;
@property double saveInterval;
@property unsigned long long saveThreshold;
- (void)createAndStartDeleteTimer;
- (void)updateDeleteTimer;
- (void)destroyDeleteTimer;
- (void)createSuspendedSaveTimer;
- (void)updateAndResumeSaveTimer;
- (void)destroySaveTimer;
- (void)performDelete;
- (void)performSaveAndSuspendSaveTimer;
- (void)db_saveAndDelete;
- (void)db_delete;
- (void)db_save;
- (_Bool)db_log:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DDASLLogger : DDAbstractLogger <DDLogger>
{
    struct __asl_object_s *client;
}

+ (id)sharedInstance;
+ (void)initialize;
- (id)loggerName;
- (void)logMessage:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DDLogFileManagerDefault : NSObject <DDLogFileManager>
{
    unsigned long long maximumNumberOfLogFiles;
    NSString *_logsDirectory;
}

@property(nonatomic) unsigned long long maximumNumberOfLogFiles; // @synthesize maximumNumberOfLogFiles;
- (id)createNewLogFile;
- (id)generateShortUUID;
- (id)sortedLogFileInfos;
- (id)sortedLogFileNames;
- (id)sortedLogFilePaths;
- (id)unsortedLogFileInfos;
- (id)unsortedLogFileNames;
- (id)unsortedLogFilePaths;
- (_Bool)isLogFile:(id)arg1;
- (id)logsDirectory;
- (id)defaultLogsDirectory;
- (void)deleteOldLogFiles;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithLogsDirectory:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DDLogFileFormatterDefault : NSObject <DDLogFormatter>
{
    NSDateFormatter *dateFormatter;
}

- (void)dealloc;
- (id)formatLogMessage:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DDFileLogger : DDAbstractLogger <DDLogger>
{
    id <DDLogFileManager> logFileManager;
    DDLogFileInfo *currentLogFileInfo;
    NSFileHandle *currentLogFileHandle;
    NSTimer *rollingTimer;
    unsigned long long maximumFileSize;
    double rollingFrequency;
}

@property(readonly, nonatomic) id <DDLogFileManager> logFileManager; // @synthesize logFileManager;
- (id)loggerName;
- (void)logMessage:(id)arg1;
- (id)currentLogFileHandle;
- (id)currentLogFileInfo;
- (void)maybeRollLogFileDueToSize;
- (void)maybeRollLogFileDueToAge:(id)arg1;
- (void)rollLogFileNow;
- (void)rollLogFile;
- (void)scheduleTimerToRollLogFileDueToAge;
@property(nonatomic) double rollingFrequency; // @synthesize rollingFrequency;
@property(nonatomic) unsigned long long maximumFileSize; // @synthesize maximumFileSize;
- (void)dealloc;
- (id)initWithLogFileManager:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DDLogFileInfo : NSObject
{
    NSString *filePath;
    NSString *fileName;
    NSDictionary *fileAttributes;
    NSDate *creationDate;
    NSDate *modificationDate;
    unsigned long long fileSize;
}

+ (id)logFileWithPath:(id)arg1;
@property(readonly, nonatomic) NSString *filePath; // @synthesize filePath;
- (long long)reverseCompareByModificationDate:(id)arg1;
- (long long)reverseCompareByCreationDate:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)removeExtendedAttributeWithName:(id)arg1;
- (void)addExtendedAttributeWithName:(id)arg1;
- (_Bool)hasExtendedAttributeWithName:(id)arg1;
- (void)renameFile:(id)arg1;
- (void)reset;
@property(nonatomic) _Bool isArchived; // @dynamic isArchived;
- (id)description;
@property(readonly, nonatomic) double age; // @dynamic age;
@property(readonly, nonatomic) unsigned long long fileSize; // @dynamic fileSize;
@property(readonly, nonatomic) NSDate *creationDate; // @dynamic creationDate;
@property(readonly, nonatomic) NSDate *modificationDate; // @dynamic modificationDate;
@property(readonly, nonatomic) NSString *fileName; // @dynamic fileName;
@property(readonly, nonatomic) NSDictionary *fileAttributes; // @dynamic fileAttributes;
- (void)dealloc;
- (id)initWithFilePath:(id)arg1;

@end

@interface DDLog : NSObject
{
}

+ (void)lt_flush;
+ (void)lt_log:(id)arg1;
+ (void)lt_removeAllLoggers;
+ (void)lt_removeLogger:(id)arg1;
+ (void)lt_addLogger:(id)arg1;
+ (void)setLogLevel:(int)arg1 forClassWithName:(id)arg2;
+ (void)setLogLevel:(int)arg1 forClass:(Class)arg2;
+ (int)logLevelForClassWithName:(id)arg1;
+ (int)logLevelForClass:(Class)arg1;
+ (id)registeredClassNames;
+ (id)registeredClasses;
+ (_Bool)isRegisteredClass:(Class)arg1;
+ (void)flushLog;
+ (void)log:(_Bool)arg1 level:(int)arg2 flag:(int)arg3 context:(int)arg4 file:(const char *)arg5 function:(const char *)arg6 line:(int)arg7 format:(id)arg8;
+ (void)queueLogMessage:(id)arg1 asynchronously:(_Bool)arg2;
+ (void)removeAllLoggers;
+ (void)removeLogger:(id)arg1;
+ (void)addLogger:(id)arg1;
+ (void)applicationWillTerminate:(id)arg1;
+ (id)loggingQueue;
+ (void)initialize;

@end

@interface DDLogMessage : NSObject
{
    int logLevel;
    int logFlag;
    int logContext;
    NSString *logMsg;
    NSDate *timestamp;
    const char *file;
    const char *function;
    int lineNumber;
    unsigned int machThreadID;
    NSString *threadID;
    NSString *fileName;
    NSString *methodName;
}

- (void)dealloc;
- (id)methodName;
- (id)fileName;
- (id)threadID;
- (id)initWithLogMsg:(id)arg1 level:(int)arg2 flag:(int)arg3 context:(int)arg4 file:(const char *)arg5 function:(const char *)arg6 line:(int)arg7;

@end

@interface DDAbstractLogger : NSObject <DDLogger>
{
    id <DDLogFormatter> formatter;
    NSObject<OS_dispatch_queue> *loggerQueue;
}

- (id)loggerName;
- (id)loggerQueue;
- (void)setLogFormatter:(id)arg1;
- (id)logFormatter;
- (void)logMessage:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DDTTYLogger : DDAbstractLogger <DDLogger>
{
    _Bool isaTTY;
    NSDateFormatter *dateFormatter;
    char *app;
    char *pid;
    unsigned long long appLen;
    unsigned long long pidLen;
}

+ (id)sharedInstance;
+ (void)initialize;
- (id)loggerName;
- (void)logMessage:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZinioLogFormatter : NSObject <DDLogFormatter>
{
    NSDateFormatter *dateFormatter;
}

- (void)dealloc;
- (id)formatLogMessage:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PageScriptSupport : BaseScriptSupport
{
    id <AnimationController> animationController;
    NSMutableDictionary *objectCache;
    struct OpaqueJSClass *pageClass;
    struct OpaqueJSClass *objectsClass;
    struct OpaqueJSClass *groupsClass;
    struct OpaqueJSClass *objectClass;
    struct OpaqueJSClass *textObjectClass;
    struct OpaqueJSClass *transitionableObjectClass;
    struct OpaqueJSClass *groupClass;
}

@property(nonatomic) id <AnimationController> animationController; // @synthesize animationController;
- (void)cacheJSObject:(struct OpaqueJSValue *)arg1 forKey:(struct __CFString *)arg2 type:(struct __CFString *)arg3;
- (struct OpaqueJSValue *)cachedJSObjectForKey:(struct __CFString *)arg1 type:(struct __CFString *)arg2;
- (id)eval:(id)arg1 forObjectKey:(id)arg2 withParameters:(id)arg3;
- (void)reset;
- (struct OpaqueJSClass *)groupClass;
- (struct OpaqueJSClass *)transitionableObjectClass;
- (struct OpaqueJSClass *)textObjectClass;
- (struct OpaqueJSClass *)objectClass;
- (struct OpaqueJSContext *)context;
- (struct OpaqueJSValue *)jsObjectForObjectKey:(id)arg1;
- (void)initializeJSGlobalContext;
- (void)resetJSGlobalContext;
- (id)exceptionContext;
- (void)dealloc;

@end

@interface PageScriptSupportCachedJSValue : NSObject
{
    struct OpaqueJSContext *context;
    struct OpaqueJSValue *value;
}

@property(readonly, nonatomic) struct OpaqueJSValue *value; // @synthesize value;
@property(readonly, nonatomic) struct OpaqueJSContext *context; // @synthesize context;
- (void)dealloc;
- (id)initWithJSValue:(struct OpaqueJSValue *)arg1 context:(struct OpaqueJSContext *)arg2;
- (id)init;

@end

@interface ZinioDDLog : DDLog
{
}

+ (void)configureDynamicLog;
+ (int)logLevelForKey:(id)arg1;
+ (void)setLogLevel:(int)arg1 forClass:(Class)arg2;
+ (int)logLevelForClass:(Class)arg1;
+ (void)initialize;

@end

@interface AnimationScript : NSObject <NSCopying>
{
    NSString *target;
    NSString *script;
}

@property(retain, nonatomic) NSString *target; // @synthesize target;
@property(readonly, nonatomic) NSString *script; // @synthesize script;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithScript:(id)arg1;

@end

@interface AnimatablePageObjectView : UIView <AnimatablePageObject>
{
    id <AnimationController> animationController;
    id <PageObject> pageObject;
}

- (void)setViewValue:(id)arg1 forKeyPath:(id)arg2;
- (id)currentViewValueForKeyPath:(id)arg1;
- (void)setOpacity:(double)arg1;
- (double)currentOpacity;
- (struct CGPoint)currentPagePosition;
- (void)setPosition:(struct CGPoint)arg1;
- (struct CGPoint)currentPosition;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 controller:(id)arg2 pageObject:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DelegateViewAnimatablePageObject : NSObject <AnimatablePageObject>
{
    UIView *view;
    id <AnimationController> animationController;
    id <PageObject> pageObject;
}

@property(readonly, nonatomic) UIView *view; // @synthesize view;
@property(readonly, nonatomic) id <PageObject> pageObject; // @synthesize pageObject;
@property(readonly, nonatomic) id <AnimationController> animationController; // @synthesize animationController;
- (void)setViewValue:(id)arg1 forKeyPath:(id)arg2;
- (id)currentViewValueForKeyPath:(id)arg1;
- (void)setOpacity:(double)arg1;
- (double)currentOpacity;
- (struct CGPoint)currentPagePosition;
- (void)setPosition:(struct CGPoint)arg1;
- (struct CGPoint)currentPosition;
- (id)init;
- (id)initWithView:(id)arg1 controller:(id)arg2 pageObject:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface JavaScriptPageSupport : NSObject
{
}

+ (struct OpaqueJSClass *)newPageGroupJSClass;
+ (struct OpaqueJSClass *)newPageGroupsJSClass;
+ (struct OpaqueJSClass *)newTransitionableObjectJSClass:(struct OpaqueJSClass *)arg1;
+ (struct OpaqueJSClass *)newTextObjectJSClass:(struct OpaqueJSClass *)arg1;
+ (struct OpaqueJSClass *)newPageObjectJSClass;
+ (struct OpaqueJSClass *)newPageObjectsJSClass;
+ (struct OpaqueJSClass *)newPageJSClass;

@end

@interface SlideshowIssueControlController : IssueControlController <PagingScrollViewDataSource, PagingScrollViewDelegate, UIScrollViewDelegate>
{
    NSArray *slideAssetPaths;
    UIView<PagingScrollView> *scroller;
    UIButton *previewButton;
    unsigned long long currPage;
    double maxZoom;
    _Bool starting;
    UIColor *fullscreenBackgroundColor;
    UIView *fullscreenBackground;
    UIView *transitionSlide;
    _Bool fullscreen;
}

- (void)handleMessage:(id)arg1 withParameters:(id)arg2 fromObject:(id)arg3;
- (void)pagingScrollView:(id)arg1 gotDoubleTapOn:(id)arg2 index:(unsigned long long)arg3 at:(struct CGPoint)arg4;
- (void)pagingScrollView:(id)arg1 gotSingleTapOn:(id)arg2 index:(unsigned long long)arg3 at:(struct CGPoint)arg4;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)pagingScrollView:(id)arg1 didChangeToPage:(unsigned long long)arg2;
- (void)renderPage:(unsigned long long)arg1 inView:(id)arg2 forScrollView:(id)arg3;
- (double)pageWidthForScrollView:(id)arg1;
- (id)createReusablePageViewForScrollView:(id)arg1;
- (unsigned long long)totalPageCountForScrollView:(id)arg1;
- (_Bool)handlesTap:(struct CGPoint)arg1;
- (void)stop;
- (void)start;
- (void)prepare;
- (void)stopSlideshow;
- (void)startSlideshow;
- (void)viewBoundsChangedWithTransform:(struct CGAffineTransform)arg1;
- (void)exitInline;
- (void)enterInline;
- (void)exitFullScreen;
- (void)exitFullScreenUsingFlip;
- (void)exitFullscreenUsingZoom;
- (void)enterFullScreen;
- (void)enterFullScreenUsingFlip;
- (void)zoomAnimationComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)enterFullScreenUsingZoom;
- (id)contentViewOnPage:(unsigned long long)arg1 inScrollView:(id)arg2;
- (void)postViewPageMessage:(unsigned long long)arg1 oldPage:(unsigned long long)arg2;
- (_Bool)handlesDoubleTap:(struct CGPoint)arg1;
- (id)slideViewForAssetPath:(id)arg1 currView:(id)arg2 immediate:(_Bool)arg3;
- (_Bool)supportsAssetPath:(id)arg1;
- (_Bool)isFullscreen;
- (id)scroller;
- (void)setFullscreenBackgroundColor:(id)arg1;
- (void)setFullscreenBackground:(id)arg1;
- (void)setTransitionSlide:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CenteringZoomScrollView : UIScrollView
{
    UIView *zoomView;
}

@property(retain, nonatomic) UIView *zoomView; // @synthesize zoomView;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)dealloc;

@end

@interface FlowControlledWebViewController : FlowControlledViewController
{
    UIWebView *webView;
    UILabel *viewTitle;
    NSURL *url;
    _Bool loaded;
}

@property(retain, nonatomic) UIWebView *webView; // @synthesize webView;
@property(retain, nonatomic) UILabel *viewTitle; // @synthesize viewTitle;
@property(retain, nonatomic) NSURL *url; // @synthesize url;
- (void)load;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface AnimatableTextView : AnimatablePageObjectView <TextPageObject>
{
    UILabel *label;
}

@property(readonly, nonatomic) UILabel *label; // @synthesize label;
- (void)setShadowOffset:(struct CGSize)arg1;
- (struct CGSize)shadowOffset;
- (void)setShadowColor:(id)arg1;
- (id)shadowColor;
- (void)setMaxiumLines:(unsigned long long)arg1;
- (unsigned long long)maximumLines;
- (void)setFont:(id)arg1;
- (id)font;
- (void)setTextColor:(id)arg1;
- (id)textColor;
- (void)setText:(id)arg1;
- (id)text;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 controller:(id)arg2 pageObject:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SharePopoverViewController : UITableViewController
{
    id <SharePopoverViewControllerDelegate> _delegate;
    UIPopoverController *_presentingPopoverController;
    UILabel *_facebookLabel;
    UILabel *_twitterLabel;
    UILabel *_emailLabel;
    UILabel *_pinterestLabel;
}

@property(retain, nonatomic) UILabel *pinterestLabel; // @synthesize pinterestLabel=_pinterestLabel;
@property(retain, nonatomic) UILabel *emailLabel; // @synthesize emailLabel=_emailLabel;
@property(retain, nonatomic) UILabel *twitterLabel; // @synthesize twitterLabel=_twitterLabel;
@property(retain, nonatomic) UILabel *facebookLabel; // @synthesize facebookLabel=_facebookLabel;
@property(nonatomic) UIPopoverController *presentingPopoverController; // @synthesize presentingPopoverController=_presentingPopoverController;
@property(nonatomic) id <SharePopoverViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dealloc;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;

@end

@interface TextViewViewController : BaseViewController <ZoomTransitionSupport>
{
    UIView *rightNavBarView;
    struct CGRect zoomFrom;
    UITextView *displayTextView;
}

@property(nonatomic) struct CGRect zoomFrom; // @synthesize zoomFrom;
@property(retain, nonatomic) UIView *rightNavBarView; // @synthesize rightNavBarView;
@property(retain, nonatomic) UITextView *displayTextView; // @synthesize displayTextView;
- (void)done;
- (_Bool)shouldAutorotate;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;

@end

@interface FlowControlTextViewController : FlowControlledViewController
{
    UILabel *viewTitle;
    UITextView *displayTextView;
    NSString *displayTextViewContent;
}

@property(retain, nonatomic) NSString *displayTextViewContent; // @synthesize displayTextViewContent;
@property(retain, nonatomic) UITextView *displayTextView; // @synthesize displayTextView;
@property(retain, nonatomic) UILabel *viewTitle; // @synthesize viewTitle;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface ImageMigrationOperation : ImageProcessingOperation
{
    NSManagedObjectID *libraryIssueID;
    NSString *path;
    NSPersistentStoreCoordinator *coordinator;
    ZGImageMover *mover;
    NSCache *_savedImagesCache;
}

- (void)main;
- (id)savedImagesCache;
- (void)dealloc;
- (id)initWithLibraryIssueID:(id)arg1 path:(id)arg2 coordinator:(id)arg3 mover:(id)arg4;

@end

@interface ZGImageMover : AppStartupTaskSupport <AppStartupTask>
{
    id <AppDataService> _appDataService;
    id <LibraryAccess> _libraryAccess;
    ContentManager *contentManager;
    unsigned long long totalTasks;
    unsigned long long completeTasks;
}

+ (_Bool)imagesHaveMovedOnce;
@property(nonatomic) id <LibraryAccess> libraryAccess; // @synthesize libraryAccess=_libraryAccess;
@property(nonatomic) id <AppDataService> appDataService; // @synthesize appDataService=_appDataService;
@property(nonatomic) ContentManager *contentManager; // @synthesize contentManager;
- (_Bool)executeTaskPreviouslyFailedToComplete;
- (_Bool)executeTaskInternal;
- (void)taskComplete;
- (id)getPathForAsset:(id)arg1 issueID:(id)arg2 userId:(id)arg3;
- (void)moveImagesToCoreDataInCurrentThread;
- (void)moveImagesToCoreData;
- (void)moveImagesToCoreDataInBackground:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupTaskDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LocalEnvironmentManager : NSObject
{
    NSDictionary *dictionary;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSDictionary *dictionary; // @synthesize dictionary;
- (void)reloadDataFromURL:(id)arg1;
- (void)reloadData;
- (void)dealloc;

@end

@interface AnimatorIssueControlController : IssueControlController <UIGestureRecognizerDelegate>
{
    NSArray *assetPaths;
    int fps;
    unsigned long long repeat;
    unsigned long long currentIndex;
    unsigned long long scrubStartingIndex;
    _Bool pageMessagesEnabled;
    CADisplayLink *timer;
    double lastTime;
    unsigned long long repeatCount;
}

- (void)handleMessage:(id)arg1 withParameters:(id)arg2 fromObject:(id)arg3;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)handleScrub:(id)arg1;
- (void)stop;
- (void)pause;
- (void)prepare;
- (void)startAnimation;
- (void)drawFrame;
- (void)drawFrame:(unsigned long long)arg1;
- (void)configureParameters;
- (void)setFPS:(int)arg1;
- (_Bool)supportsAssetPath:(id)arg1;
- (void)setTimer:(id)arg1;
- (void)setAssetPaths:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FlowControlledTableViewController : FlowControlledViewController
{
    UITableView *tableView;
    UIActivityIndicatorView *activityView;
    UILabel *activityLabel;
    NSArray *dataArray;
}

@property(retain, nonatomic) NSArray *dataArray; // @synthesize dataArray;
@property(retain, nonatomic) UILabel *activityLabel; // @synthesize activityLabel;
@property(retain, nonatomic) UIActivityIndicatorView *activityView; // @synthesize activityView;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;

@end

@interface AppStartupViewController : UIViewController
{
    UIImageView *backgroundImageView;
    UIActivityIndicatorView *spinnerView;
    ZinioProgressView *progressView;
}

@property(retain, nonatomic) ZinioProgressView *progressView; // @synthesize progressView;
@property(retain, nonatomic) UIActivityIndicatorView *spinnerView; // @synthesize spinnerView;
@property(retain, nonatomic) UIImageView *backgroundImageView; // @synthesize backgroundImageView;
- (void)updateProgressOnMainThread:(id)arg1;
- (void)updateProgress:(id)arg1 message:(id)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface AppStartupServiceSupport : NSObject <AppStartupTasksExecutorDelegate>
{
    id <PurchaseService> purchaseService;
    id <AppDataService> appDataService;
    ContentManager *contentManager;
    ApplicationDataService *dataService;
    DeviceIdManager *deviceIdManager;
    id <AnalyticsManager> analyticsManager;
    id <BrandManager> brandManager;
    id <AppStartupServiceDelegate> delegate;
    AppStartupTasksExecutor *taskExecutor;
    NSDictionary *launchOptions;
    UIWindow *window;
    UIApplication *application;
}

+ (id)startupServiceForDeviceType:(int)arg1 application:(id)arg2 window:(id)arg3 launchOptions:(id)arg4;
@property(retain, nonatomic) id <PurchaseService> purchaseService; // @synthesize purchaseService;
@property(retain, nonatomic) DeviceIdManager *deviceIdManager; // @synthesize deviceIdManager;
@property(nonatomic) id <AppStartupServiceDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) ApplicationDataService *dataService; // @synthesize dataService;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
@property(retain, nonatomic) id <BrandManager> brandManager; // @synthesize brandManager;
@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
@property(retain, nonatomic) id <AnalyticsManager> analyticsManager; // @synthesize analyticsManager;
- (void)appStartupTasksComplete;
- (void)setupAudioBehavior;
- (void)checkServerDomain;
- (void)mainUIShownPostProcessing;
- (void)showMainUI;
- (void)retryPendingPurchasesInDelay;
- (void)enterStartupStage2;
- (void)executeApplicationStartupTasks;
- (void)fadeInView;
- (id)candidateStartupTasks;
- (void)dealloc;
- (id)init;
- (id)initWithApplication:(id)arg1 window:(id)arg2 launchOptions:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FusionViewerAppStartupService : AppStartupServiceSupport <AppStartupService>
{
}

- (id)candidateStartupTasks;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupServiceDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface iPhoneAppStartupService : AppStartupServiceSupport <AppStartupService>
{
}

- (void)mainUIShownPostProcessing;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupServiceDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface iPadAppStartupService : AppStartupServiceSupport <AppStartupService>
{
}

- (void)showMainUI;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupServiceDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LibrarySideLoadingTask : AppStartupTaskSupport <AppStartupTask>
{
    ContentManager *contentManager;
    id <AppDataService> appDataService;
    NSMutableArray *archiveList;
    NSString *archivePath;
    NSString *destinationDirectory;
    NSString *currFilePath;
}

+ (id)archivePath;
@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
@property(retain, nonatomic) NSString *destinationDirectory; // @synthesize destinationDirectory;
@property(retain, nonatomic) NSMutableArray *archiveList; // @synthesize archiveList;
@property(retain, nonatomic) NSString *archivePath; // @synthesize archivePath;
- (void)zipArchive:(id)arg1 didUnzipFile:(id)arg2 toPath:(id)arg3 count:(unsigned long long)arg4 totalCount:(unsigned long long)arg5;
- (void)zipArchive:(id)arg1 willUnzipFile:(id)arg2 toPath:(id)arg3 count:(unsigned long long)arg4 totalCount:(unsigned long long)arg5;
- (void)unzipArchive;
- (_Bool)executeTaskInternal;
- (_Bool)taskNeedsToExecute;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupTaskDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AppStartupTaskSupport : NSOperation
{
    id <AppStartupTaskDelegate> delegate;
}

@property(nonatomic) id <AppStartupTaskDelegate> delegate; // @synthesize delegate;
- (void)checkZListForTestInstructions;
- (_Bool)fileManager:(id)arg1 shouldRemoveItemAtPath:(id)arg2;
- (void)main;
- (void)handleUncaughtException:(id)arg1;
- (id)crashMarkerFilePath;
- (id)crashMarkerFileName;
- (void)finishTask;
- (void)updateProgress:(id)arg1 message:(id)arg2;
- (_Bool)executeTaskPreviouslyFailedToComplete;
- (_Bool)executeTaskInternal;
- (void)executeTask;
- (_Bool)taskNeedsToExecute;
- (id)taskVersion;
- (void)setDefaultNeedsToRunNext:(_Bool)arg1;
- (_Bool)defaultNeedsToRun;
- (id)runMarkerFilePath;
- (id)runMarkerFileName;
- (_Bool)createMarkerFile:(id)arg1;
- (void)dealloc;

@end

@interface CoreDataModelDataMigrationTask : AppStartupTaskSupport <AppStartupTask>
{
}

- (_Bool)fileManager:(id)arg1 shouldRemoveItemAtURL:(id)arg2;
- (void)handleUncaughtException:(id)arg1;
- (_Bool)executeTaskPreviouslyFailedToComplete;
- (_Bool)executeTaskInternal;
- (_Bool)taskNeedsToExecute;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupTaskDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MigrationTaskDataService : NSManagedObjectContextDataService
{
}

- (id)persistentStoreCoordinator;
- (id)storeURL;
- (id)storagePath;
- (id)storageName;
- (id)modelName;

@end

@interface InitializeDependencyManagerTask : AppStartupTaskSupport <AppStartupTask>
{
}

- (_Bool)executeTaskInternal;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupTaskDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DeleteTempFilesTask : AppStartupTaskSupport <AppStartupTask>
{
}

- (_Bool)executeTaskInternal;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupTaskDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AppStartupTasksExecutor : NSObject <AppStartupTaskDelegate>
{
    UIWindow *window;
    UIApplication *application;
    NSArray *tasks;
    NSOperationQueue *operationQueue;
    unsigned long long taskCount;
    unsigned long long taskCompleteCount;
    AppStartupViewController *viewController;
    _Bool executing;
    NSString *exitMessage;
    NSCondition *condition;
    double overallProgress;
    id <AppStartupTasksExecutorDelegate> delegate;
}

@property(retain, nonatomic) id <AppStartupTasksExecutorDelegate> delegate; // @synthesize delegate;
@property(readonly, nonatomic) UIWindow *window; // @synthesize window;
@property(readonly, nonatomic) UIApplication *application; // @synthesize application;
- (id)startupTaskPersistentDataDirectory;
- (id)startupTaskTemporaryDataDirectory;
- (void)appShouldExitWithMessage:(id)arg1;
- (void)taskFinished;
- (void)updateProgress:(id)arg1 message:(id)arg2;
- (_Bool)executeTasks;
- (void)waitForTasksToCompleteInBackground;
- (void)executeTasksInBackground;
- (void)handleExitMessage;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)dealloc;
- (id)initWithApplication:(id)arg1 window:(id)arg2 tasks:(id)arg3;

@end

@interface FusionViewerLoadTask : LibrarySideLoadingTask <AppStartupTask>
{
    unsigned long long pubCount;
    unsigned long long pubCompleteCount;
}

+ (id)archiveFilePaths;
- (void)updateProgress:(id)arg1 message:(id)arg2;
- (_Bool)executeTaskInternal;
- (_Bool)taskNeedsToExecute;
- (void)fusionArchivePackingListError:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupTaskDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LibraryDataInDocumentsCheckTask : AppStartupTaskSupport
{
    ContentManager *contentManager;
}

@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
- (_Bool)executeTaskInternal;
- (void)dealloc;

@end

@interface CoreDataInDocumentsCheckTask : AppStartupTaskSupport
{
}

- (_Bool)fileManager:(id)arg1 shouldMoveItemAtPath:(id)arg2 toPath:(id)arg3;
- (_Bool)taskNeedsToExecute;

@end

@interface ZGDownloadManager : NSObject
{
    ContentManager *contentManager;
    id <AppDataService> appDataService;
    id <LibraryAccess> libraryAccess;
    _Bool disableIdleTimer;
    NSNumber *daysBack;
    ZGLibraryIssue *currentIssueDownloading;
    NetworkServicesManager *networkManager;
    unsigned int downloadManagerStatus;
    NSNumber *dmTimerInterval;
}

@property(retain, nonatomic) NSNumber *dmTimerInterval; // @synthesize dmTimerInterval;
@property(nonatomic) unsigned int downloadManagerStatus; // @synthesize downloadManagerStatus;
@property(retain, nonatomic) NetworkServicesManager *networkManager; // @synthesize networkManager;
@property(retain, nonatomic) ZGLibraryIssue *currentIssueDownloading; // @synthesize currentIssueDownloading;
@property(nonatomic) id <LibraryAccess> libraryAccess; // @synthesize libraryAccess;
@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
- (id)nextUndownloadedIssue;
- (void)automaticDownload:(id)arg1;
@property(nonatomic) _Bool disableIdleTimer;
@property(retain, nonatomic) NSNumber *daysBack;
- (void)dealloc;
- (void)privateStartupProcessing;
- (void)startupProcessing;
- (void)resetCurrentIssueDownloading;
- (void)idleTimerOn:(_Bool)arg1;

@end

@interface DownloadSettingsViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
{
    UIScrollView *scrollView;
    UITableView *tableView;
    UITextView *descriptionTextView;
    UILabel *autoLockLabel;
    UISwitch *autoLockSwitch;
    UITextView *autoLockTextView;
    NSArray *listData;
    NSArray *daysBackList;
    NSNumber *daysBack;
    ZGDownloadManager *downloadManager;
    NSIndexPath *selectedIndexPath;
    EntryFieldBox *entryFieldBox;
}

@property(retain, nonatomic) EntryFieldBox *entryFieldBox; // @synthesize entryFieldBox;
@property(retain, nonatomic) NSIndexPath *selectedIndexPath; // @synthesize selectedIndexPath;
@property(retain, nonatomic) ZGDownloadManager *downloadManager; // @synthesize downloadManager;
@property(retain, nonatomic) NSNumber *daysBack; // @synthesize daysBack;
@property(retain, nonatomic) NSArray *daysBackList; // @synthesize daysBackList;
@property(retain, nonatomic) NSArray *listData; // @synthesize listData;
@property(retain, nonatomic) UITextView *autoLockTextView; // @synthesize autoLockTextView;
@property(retain, nonatomic) UISwitch *autoLockSwitch; // @synthesize autoLockSwitch;
@property(retain, nonatomic) UILabel *autoLockLabel; // @synthesize autoLockLabel;
@property(retain, nonatomic) UITextView *descriptionTextView; // @synthesize descriptionTextView;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView;
- (void)switchAutoLockAction:(id)arg1;
- (void)cell:(id)arg1 selected:(_Bool)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)dealloc;
- (void)viewDidLoad;
- (void)initialize;
- (void)hideAutoLock:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface URLServiceTest : URLService
{
}

+ (_Bool)testZinioHomepageURL;
+ (_Bool)testPurchaseAccessURL;
+ (_Bool)testPurchaseURL;
+ (_Bool)testShopLandingURL;
+ (_Bool)testExploreLandingURL;
+ (_Bool)testRestorePurchasesServiceURL;
+ (_Bool)testDisableExpiringSubscriptionUpsellServiceURL;
+ (_Bool)testExpiringSubscriptionsServiceURL;
+ (_Bool)testSelectSubscriptionOfferServiceURL;
+ (_Bool)testSubscriptionOfferServiceURL;
+ (_Bool)testiTunesAppStoreReviewURL;
+ (_Bool)testConfigurationServiceURL;
+ (_Bool)testIssueDownloadNotificationServiceURL;
+ (_Bool)testForgetPasswordServiceURL;
+ (_Bool)testChangePasswordServiceURL;
+ (_Bool)testRegisterUserServiceURL;
+ (_Bool)testExcerptDataServiceURL;
+ (_Bool)testIssueDataServiceURL;
+ (_Bool)testCategoryExcerptServiceURL;
+ (_Bool)testLibraryServiceURL;
+ (_Bool)testAuthenticateUserServiceURL;
+ (_Bool)testGetAppId;
+ (_Bool)testGetPort;
+ (_Bool)testGetDomain;
+ (_Bool)testGetProtocol;
+ (_Bool)runTests;

@end

@interface CoreDataSwapOldDataToNewDataStoreMigrationTask : AppStartupTaskSupport <AppStartupTask>
{
    id <AppDataService> appDataService;
}

@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
- (_Bool)fileManager:(id)arg1 shouldRemoveItemAtURL:(id)arg2;
- (void)handleUncaughtException:(id)arg1;
- (_Bool)executeTaskPreviouslyFailedToComplete;
- (_Bool)executeTaskInternal;
- (_Bool)taskNeedsToExecute;
- (id)storeSplitMarkerPath;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupTaskDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HiddenMigrationContextDataService : NSManagedObjectContextDataService
{
}

- (id)persistentStoreCoordinator;
- (id)storeURL;
- (id)storagePath;
- (id)storageName;
- (id)modelName;

@end

@interface IndexedLibraryView : UIView
{
    ZinioCoversVerticalScrollView *scrollView;
    UIView *scrubberContainerView;
    UIView *scrubber;
    LibraryLoginView *_loginBanner;
    UIButton *skipButton;
    UIImageView *loginBannerLogoImageView;
    _Bool libraryUpdateDidFail;
    int sortType;
    id <User> user;
    id <LibraryAccess> libraryAccess;
    UIView *notMemberView;
    UILabel *_emptyLibraryLabel;
    UIButton *_browseAndShopNowButton;
}

@property(retain, nonatomic) UIButton *browseAndShopNowButton; // @synthesize browseAndShopNowButton=_browseAndShopNowButton;
@property(retain, nonatomic) UILabel *emptyLibraryLabel; // @synthesize emptyLibraryLabel=_emptyLibraryLabel;
@property(retain, nonatomic) UIView *notMemberView; // @synthesize notMemberView;
@property(nonatomic) _Bool libraryUpdateDidFail; // @synthesize libraryUpdateDidFail;
@property(retain, nonatomic) LibraryLoginView *loginBanner; // @synthesize loginBanner=_loginBanner;
@property(retain, nonatomic) UIView *scrubberContainerView; // @synthesize scrubberContainerView;
@property(retain, nonatomic) UIView *scrubber; // @synthesize scrubber;
@property(nonatomic) int sortType; // @synthesize sortType;
@property(retain, nonatomic) id <LibraryAccess> libraryAccess; // @synthesize libraryAccess;
@property(retain, nonatomic) id <User> user; // @synthesize user;
@property(retain, nonatomic) ZinioCoversVerticalScrollView *scrollView; // @synthesize scrollView;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (void)configureScrollViewForInteraceOrientation:(long long)arg1;
- (void)configureScrubberViewForInterfaceOrientation:(long long)arg1;
- (void)configureBannerForInterfaceOrientation:(long long)arg1;
- (void)configureUIWithLoginBannerHeight:(double)arg1;
- (void)showBanner;
- (_Bool)shouldShowNoTitlesAlert;
- (_Bool)loginBannerShouldBeVisible;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface LibraryLoginBanner : UIView <CloseButtonDelegate>
{
    struct CGRect arrowRect;
    _Bool showCloseButton;
    struct CGRect closeButtonRect;
    struct CGRect originalFrame;
    double closeButtonRadius;
    double leftLogoPadding;
    UIImageView *logoImageView;
    CloseButtonView *closeButtonView;
    id <CloseButtonDelegate> delegate;
}

@property(nonatomic) double leftLogoPadding; // @synthesize leftLogoPadding;
@property(retain, nonatomic) UIImageView *logoImageView; // @synthesize logoImageView;
@property(nonatomic) id <CloseButtonDelegate> delegate; // @synthesize delegate;
@property(nonatomic) double closeButtonRadius; // @synthesize closeButtonRadius;
- (void)dealloc;
- (void)closeButtonPressed:(id)arg1;
- (void)animateCloseDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)animateClose;
- (void)drawRect:(struct CGRect)arg1;
@property(retain, nonatomic) UIView *closeButtonView;
@property(nonatomic) _Bool showCloseButton;
@property(nonatomic) struct CGRect arrowRect;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)configureView;

@end

@interface CloseButtonView : UIView
{
    struct CGRect closeButtonRect;
    double closeButtonRadius;
    id <CloseButtonDelegate> delegate;
}

@property(nonatomic) id <CloseButtonDelegate> delegate; // @synthesize delegate;
- (void)dealloc;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
@property(nonatomic) double closeButtonRadius;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)configureView;

@end

@interface AppDataInitialization : AppStartupTaskSupport <AppStartupTask>
{
    id <AppDataService> appDataService;
}

@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
- (_Bool)executeTaskInternal;
- (id)createUUID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupTaskDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IssueScriptSupport : BaseScriptSupport
{
    id <IssueController> issueController;
    struct OpaqueJSContextGroup *issueContextGroup;
    struct OpaqueJSClass *issueClass;
}

@property(readonly, nonatomic) id <IssueController> issueController; // @synthesize issueController;
@property(readonly, nonatomic) struct OpaqueJSContextGroup *issueContextGroup;
- (struct OpaqueJSContext *)context;
- (void)setupIssueContext;
- (void)dealloc;
- (id)initWithIssueController:(id)arg1;

@end

@interface JavaScriptIssueSupport : NSObject
{
}

+ (struct OpaqueJSClass *)newIssueJSClass;

@end

@interface BaseScriptSupport : NSObject
{
    struct OpaqueJSContext *ctx;
}

- (id)eval:(id)arg1;
- (struct OpaqueJSContext *)context;
- (void)dealloc;

@end

@interface ZGPackingListBackgroundUpdater : ZGPackingListUpdater
{
}

- (_Bool)executeTaskPreviouslyFailedToComplete;
- (id)findDownloadedPackingListInfoLessThanVersion:(id)arg1;
- (unsigned long long)downloadPackingLists:(id)arg1;
- (void)main;

@end

@interface ForgotPasswordViewController : BaseEditFieldViewController <UITableViewDataSource, UITableViewDelegate>
{
    id <User> user;
    UILabel *descriptionLabel;
    UILabel *successMsgLabel;
    UIActivityIndicatorView *busyIndicator;
    UIButton *submitButton;
    _Bool isModal;
    UIButton *closeButton;
    UIView *_footerView;
    UIView *_succesView;
    UIButton *_closeSuccess;
}

@property(retain, nonatomic) UIButton *closeSuccess; // @synthesize closeSuccess=_closeSuccess;
@property(retain, nonatomic) UIView *succesView; // @synthesize succesView=_succesView;
@property(retain, nonatomic) UIView *footerView; // @synthesize footerView=_footerView;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton;
@property(nonatomic) _Bool isModal; // @synthesize isModal;
@property(retain, nonatomic) UIButton *submitButton; // @synthesize submitButton;
@property(retain, nonatomic) UIActivityIndicatorView *busyIndicator; // @synthesize busyIndicator;
@property(retain, nonatomic) UILabel *successMsgLabel; // @synthesize successMsgLabel;
@property(retain, nonatomic) UILabel *descriptionLabel; // @synthesize descriptionLabel;
@property(retain, nonatomic) id <User> user; // @synthesize user;
- (_Bool)shouldAutorotate;
- (id)tableViewBackgroundColor;
- (_Bool)displayToolbar;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)dismissScreen;
- (void)stopActivityIndicator;
- (void)submitAction;
- (void)closeButtonAction:(id)arg1;
- (void)dealloc;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GigyaUtility : NSObject
{
}

+ (id)getFacebookAppId;
+ (id)getApiKey;

@end

@interface RootIPhoneExploreViewController : BaseViewController <ReaderLauncherDelegate>
{
    ZGExplore *explore;
    UIImageView *topBar;
    UIView *contentView;
    ExploreiPhoneAutoRotateViewController *autoRotateViewController;
    ExploreiPhoneCategoryViewController *exploreCategoryViewController;
    CategoriesiPhoneListView *categoriesListView;
    _Bool hasShown;
    _Bool hadUnloaded;
    _Bool shouldExecuteRateAppProcess;
    _Bool exploreNeedsLoaded;
    _Bool waitIndicatorVisible;
    ReaderLauncher *readerLauncher;
    UIView *readerLaunchFromView;
    ZGExcerpt *readerLaunchExcerpt;
    NSFetchedResultsController *fetchedResultsController;
    IntroViewController *introViewController;
    ZGExcerpt *deepLinkingExcerpt;
    NSString *deepLinkingId;
    _Bool waitingOnConfiguration;
    _Bool _excerptFromExplore;
    NSDictionary *restoreState;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool excerptFromExplore; // @synthesize excerptFromExplore=_excerptFromExplore;
@property(retain, nonatomic) NSString *deepLinkingId; // @synthesize deepLinkingId;
@property(retain, nonatomic) ZGExcerpt *deepLinkingExcerpt; // @synthesize deepLinkingExcerpt;
@property(retain, nonatomic) NSDictionary *restoreState; // @synthesize restoreState;
@property(retain, nonatomic) IntroViewController *introViewController; // @synthesize introViewController;
@property(retain, nonatomic) NSFetchedResultsController *fetchedResultsController; // @synthesize fetchedResultsController;
@property(retain, nonatomic) ZGExcerpt *readerLaunchExcerpt; // @synthesize readerLaunchExcerpt;
@property(retain, nonatomic) UIView *readerLaunchFromView; // @synthesize readerLaunchFromView;
@property(retain, nonatomic) ZGExplore *explore; // @synthesize explore;
@property(retain, nonatomic) CategoriesiPhoneListView *categoriesListView; // @synthesize categoriesListView;
@property(retain, nonatomic) ExploreiPhoneCategoryViewController *exploreCategoryViewController; // @synthesize exploreCategoryViewController;
@property(retain, nonatomic) ExploreiPhoneAutoRotateViewController *autoRotateViewController; // @synthesize autoRotateViewController;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView;
@property(retain, nonatomic) UIImageView *topBar; // @synthesize topBar;
- (void)resetUI;
- (void)populateAndShowData;
- (void)configurationFailed;
- (void)configurationSucceeded;
- (void)waitOnConfiguration;
- (void)showConfigurationFailureMessage;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)introViewControllerDidClose:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)awakeFromNib;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)retryAfterNetworkServicesManagerError:(id)arg1;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (_Bool)shouldShowFullScreenServerUnavailableErrorMessage;
- (_Bool)shouldShowFullScreenNetworkErrorMessage;
- (_Bool)shouldShowFullScreenOfflineMessageWhenOffline;
- (_Bool)shouldActAsNetworkServicesManagerDelegate;
- (_Bool)canShowExplore;
- (void)excerptDownloadCompleted:(id)arg1;
- (void)readerLaunchFadeOutComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (void)fadeExcerptBackInFromReader:(id)arg1;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)readerLauncher:(id)arg1 failedToLaunchExcerpt:(id)arg2 issue:(id)arg3;
- (void)launchReaderForExcerptId:(id)arg1 issueId:(id)arg2;
- (void)launchReaderWithParams:(id)arg1;
- (id)readerLauncher;
- (void)launchReaderForExcerpt:(id)arg1 fromView:(id)arg2;
- (void)faultCategoryForExceprt:(id)arg1;
- (void)stopWaitIndicator;
- (void)stopWaitIndicatorAnimated:(_Bool)arg1;
- (void)startWaitIndicator;
- (void)startWaitIndicatorAfterTimeInterval:(double)arg1;
- (void)startWaitIndicatorAfterTimeIntervalNumber:(id)arg1;
- (void)reloadData;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)excerptsForCategory:(id)arg1;
- (id)excerptsForCategory:(id)arg1 excludeTypes:(id)arg2;
- (id)categoryAtIndex:(int)arg1;
- (id)sortedCategories;
- (void)back:(id)arg1;
- (void)showCurrentView;
- (void)showCategoryExploreViewForCategory:(id)arg1;
- (void)showCategoryExploreViewForCategory:(id)arg1 atIndex:(int)arg2;
- (void)showDeepLinkingCategoryExploreViewForCategory:(id)arg1;
- (void)launchExploreArtileById:(id)arg1;
- (void)showDeepLinkingById:(id)arg1;
- (void)showDeepLinking:(id)arg1;
- (void)showCategory:(id)arg1 atIndex:(int)arg2;
- (void)showCategory:(id)arg1;
- (void)showAutoRotateView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ArticlePurchaseThanksViewController : ModalInsetViewController <GridCollectionViewControllerDelegate>
{
    UIImageView *coverIssueImageView;
    UILabel *thanksLabel;
    UILabel *infoLabel;
    CustomButton *_readButton;
    CustomButton *_shopButton;
    UIActivityIndicatorView *activityIndicator;
    ReaderLauncher *readerLauncher;
    ZGMagazine *targetMagazine;
    UIImage *coverImage;
    ReaderViewController *readerController;
    id <ArticlePurchaseThanksViewControllerDelegate> _purchaseDelegate;
    UILabel *_youMayAlsoLikeLabel;
    ZinioShopCategoriesDatasource *_categoriesDataSource;
    ZGShop *_currentCategory;
    GridCollectionViewController *_collectionViewController;
}

@property(nonatomic) id <ArticlePurchaseThanksViewControllerDelegate> purchaseDelegate; // @synthesize purchaseDelegate=_purchaseDelegate;
@property(retain, nonatomic) GridCollectionViewController *collectionViewController; // @synthesize collectionViewController=_collectionViewController;
@property(retain, nonatomic) ZGShop *currentCategory; // @synthesize currentCategory=_currentCategory;
@property(retain, nonatomic) UILabel *youMayAlsoLikeLabel; // @synthesize youMayAlsoLikeLabel=_youMayAlsoLikeLabel;
@property(nonatomic) ReaderLauncher *readerLauncher; // @synthesize readerLauncher;
@property(retain, nonatomic) UIImage *coverImage; // @synthesize coverImage;
@property(retain, nonatomic) ZGMagazine *targetMagazine; // @synthesize targetMagazine;
@property(nonatomic) ReaderViewController *readerController; // @synthesize readerController;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(retain, nonatomic) CustomButton *shopButton; // @synthesize shopButton=_shopButton;
@property(retain, nonatomic) CustomButton *readButton; // @synthesize readButton=_readButton;
@property(retain, nonatomic) UILabel *infoLabel; // @synthesize infoLabel;
@property(retain, nonatomic) UILabel *thanksLabel; // @synthesize thanksLabel;
@property(retain, nonatomic) UIImageView *coverIssueImageView; // @synthesize coverIssueImageView;
- (void)arrangeButtonsInView;
- (void)addMayAlsoLikeView;
- (void)gridCollectionViewController:(id)arg1 didSelectPublication:(id)arg2;
@property(retain, nonatomic) ZinioShopCategoriesDatasource *categoriesDataSource; // @synthesize categoriesDataSource=_categoriesDataSource;
- (void)readerLauncher:(id)arg1 failedToLaunchExcerpt:(id)arg2 issue:(id)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)shopMore;
- (void)readIssue;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGSocialUser : NSManagedObject <SocialUser>
{
}

- (id)addSocialConnectionOfProvider:(id)arg1 email:(id)arg2 nickname:(id)arg3 thumbUrl:(id)arg4;
- (id)socialConnectionOfProvider:(id)arg1 email:(id)arg2 nickname:(id)arg3 thumbUrl:(id)arg4 create:(_Bool)arg5;
- (id)getSocialConnectionByProvider:(id)arg1;
- (id)getAllSocialConnections;
- (id)getSocialConnectionsOfProvider:(id)arg1;
- (id)fetchRequestForSocialConnectionOfProvider:(id)arg1;
@property(retain, nonatomic) NSString *thumbUrl; // @dynamic thumbUrl;
- (void)copyValues:(id)arg1 isDeepCopy:(_Bool)arg2;
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 asCopyOf:(id)arg3 isDeepCopy:(_Bool)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSString *email; // @dynamic email;
@property(retain, nonatomic) NSString *gigyaBirthYear; // @dynamic gigyaBirthYear;
@property(retain, nonatomic) NSString *gigyaGender; // @dynamic gigyaGender;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSNumber *isSiteUid; // @dynamic isSiteUid;
@property(retain, nonatomic) NSNumber *loggedIn; // @dynamic loggedIn;
@property(retain, nonatomic) NSString *loginProvider; // @dynamic loginProvider;
@property(retain, nonatomic) NSString *nickname; // @dynamic nickname;
@property(retain, nonatomic) NSSet *socialConnections; // @dynamic socialConnections;
@property(readonly) Class superclass;
@property(retain, nonatomic) ZGThumbnail *thumbnail; // @dynamic thumbnail;
@property(retain, nonatomic) NSString *timestamp; // @dynamic timestamp;
@property(retain, nonatomic) NSString *uid; // @dynamic uid;
@property(retain, nonatomic) NSString *uidSignature; // @dynamic uidSignature;
@property(retain, nonatomic) ZGUser *user; // @dynamic user;

@end

@interface JsonApiClient : NSObject
{
    NSURLConnection *connection;
    NSMutableData *receivedData;
    id <JsonClientDelegate> delegate;
}

@property(nonatomic) id <JsonClientDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) NSMutableData *receivedData; // @synthesize receivedData;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection;
- (void)sendCountRequestWithUrl:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

@end

@interface ZGPackingListUpdater : AppStartupTaskSupport <AppStartupTask>
{
    ContentManager *contentManager;
    id <AppDataService> appDataService;
    NetworkServicesManager *networkManager;
}

@property(retain, nonatomic) NetworkServicesManager *networkManager; // @synthesize networkManager;
@property(retain, nonatomic) id <AppDataService> appDataService; // @synthesize appDataService;
@property(retain, nonatomic) ContentManager *contentManager; // @synthesize contentManager;
- (_Bool)executeTaskPreviouslyFailedToComplete;
- (_Bool)executeTaskInternal;
- (void)markPackingListsAsVersion:(id)arg1;
- (unsigned long long)downloadPackingLists:(id)arg1;
- (id)findDownloadedPackingListInfoLessThanVersion:(id)arg1;
- (void)downloadPackingList:(id)arg1 excerptId:(id)arg2;
- (void)downloadPackingList:(id)arg1 pubId:(id)arg2;
- (_Bool)isDownloadedPackingListInfoLessThanVersion:(id)arg1 excerptId:(id)arg2;
- (_Bool)isDownloadedPackingListInfoLessThanVersion:(id)arg1 pubId:(id)arg2;
- (void)backgroundUpdatePackingListsToVersion:(id)arg1;
- (_Bool)updatePackingListsToVersion:(id)arg1;
- (void)handleBackgroundUpdateToVersion:(id)arg1;
- (_Bool)haveUpdatedPackingListsToVersion:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <AppStartupTaskDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGResetKeyChainViewController : UIViewController
{
    UILabel *keyTitle;
    UITextField *keyTextField;
    UIButton *resetButton;
}

@property(retain, nonatomic) UIButton *resetButton; // @synthesize resetButton;
@property(retain, nonatomic) UITextField *keyTextField; // @synthesize keyTextField;
@property(retain, nonatomic) UILabel *keyTitle; // @synthesize keyTitle;
- (void)reset;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface ZGExcerptSpreadPageImage : ZGImage
{
}


// Remaining properties
@property(retain, nonatomic) ZGExcerpt *excerpt; // @dynamic excerpt;
@end

@interface ZGSocialFriend : NSObject <SocialFriend>
{
    NSString *nickname;
    NSString *providerId;
}

@property(retain, nonatomic) NSString *providerId; // @synthesize providerId;
@property(retain, nonatomic) NSString *nickname; // @synthesize nickname;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGSocialConnection : NSManagedObject <SocialConnection>
{
}

@property(retain, nonatomic) NSString *thumbUrl; // @dynamic thumbUrl;
- (void)copyValues:(id)arg1 isDeepCopy:(_Bool)arg2;
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 asCopyOf:(id)arg3 isDeepCopy:(_Bool)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSString *email; // @dynamic email;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSString *nickname; // @dynamic nickname;
@property(retain, nonatomic) NSString *provider; // @dynamic provider;
@property(retain, nonatomic) ZGSocialUser *socialUser; // @dynamic socialUser;
@property(readonly) Class superclass;
@property(retain, nonatomic) ZGThumbnail *thumbnail; // @dynamic thumbnail;

@end

@interface GSFBLoginDialog : GSFBDialog
{
    id <GSFBLoginDialogDelegate> _loginDelegate;
}

- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)dialogDidCancel:(id)arg1;
- (void)dialogDidSucceed:(id)arg1;
- (id)initWithURL:(id)arg1 loginParams:(id)arg2 delegate:(id)arg3;

@end

@interface GSFBDialog : UIView <UIWebViewDelegate>
{
    id <GSFBDialogDelegate> _delegate;
    NSMutableDictionary *_params;
    NSString *_serverURL;
    NSURL *_loadingURL;
    UIWebView *_webView;
    UIActivityIndicatorView *_spinner;
    UIImageView *_iconView;
    UILabel *_titleLabel;
    UIButton *_closeButton;
    long long _orientation;
    _Bool _showingKeyboard;
    UIView *_modalBackgroundView;
}

@property(retain, nonatomic) NSMutableDictionary *params; // @synthesize params=_params;
@property(nonatomic) id <GSFBDialogDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dialogDidCancel:(id)arg1;
- (void)dialogDidSucceed:(id)arg1;
- (void)dialogWillDisappear;
- (void)dialogWillAppear;
- (void)dismissWithError:(id)arg1 animated:(_Bool)arg2;
- (void)dismissWithSuccess:(_Bool)arg1 animated:(_Bool)arg2;
- (void)show;
- (void)loadURL:(id)arg1 get:(id)arg2;
- (void)load;
@property(copy, nonatomic) NSString *title;
- (id)initWithURL:(id)arg1 params:(id)arg2 delegate:(id)arg3;
- (id)getStringFromUrl:(id)arg1 needle:(id)arg2;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)deviceOrientationDidChange:(void *)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)init;
- (void)cancel;
- (void)dismiss:(_Bool)arg1;
- (void)postDismissCleanup;
- (void)removeObservers;
- (void)addObservers;
- (id)generateURL:(id)arg1 params:(id)arg2;
- (void)bounce2AnimationStopped;
- (void)bounce1AnimationStopped;
- (void)updateWebOrientation;
- (void)sizeToFitOrientation:(_Bool)arg1;
- (struct CGAffineTransform)transformForOrientation;
- (_Bool)shouldRotateToOrientation:(long long)arg1;
- (void)strokeLines:(struct CGRect)arg1 stroke:(const double *)arg2;
- (void)drawRect:(struct CGRect)arg1 fill:(const double *)arg2 radius:(double)arg3;
- (void)addRoundedRectToPath:(struct CGContext *)arg1 rect:(struct CGRect)arg2 radius:(float)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ExploreiPhoneCategoryViewController : BaseViewController <ThumbnailScrollViewDelegate, ThumbnailScrollViewDataSource, ModalInsetViewControllerDelegate, MFMailComposeViewControllerDelegate, NetworkServicesManagerDelegate, UIActionSheetDelegate>
{
    ExploreCategoryView *exploreCategoryView;
    ExploreCategoryScrollView *exploreCategoryScrollView;
    UIView *toolbarContainerView;
    UIView *toolbarView;
    CoreTextLabel *label;
    UIButton *categoryMosaicViewButton;
    UIViewController *categoryMosaicViewContoller;
    ZGExcerptCategory *category;
    NavigationInsetViewController *mosaicModalInsetViewController;
    ScreenActivityIndicator *screenActivityIndicator;
    NSMutableDictionary *mosaicImages;
    NavigationInsetViewController *buyInsetViewController;
    NavigationInsetViewFlowControl *buyInsetViewFlowControl;
    _Bool categoryNeedsLoading;
    _Bool waitingGigyaResponse;
    NSObject<User> *user;
    _Bool isDeepLinking;
    UIButton *imageViewBtn;
    _Bool changeViewIPhone;
    ZGMagazine *sampleMagazine;
    ZGMagazineIssueCoverImage *sampleCoverImage;
    NSManagedObjectContext *sampleContext;
}

@property(retain, nonatomic) UIButton *imageViewBtn; // @synthesize imageViewBtn;
@property(retain, nonatomic) NSObject<User> *user; // @synthesize user;
@property(retain, nonatomic) NavigationInsetViewFlowControl *buyInsetViewFlowControl; // @synthesize buyInsetViewFlowControl;
@property(retain, nonatomic) NavigationInsetViewController *buyInsetViewController; // @synthesize buyInsetViewController;
@property(retain, nonatomic) NSMutableDictionary *mosaicImages; // @synthesize mosaicImages;
@property(retain, nonatomic) NSManagedObjectContext *sampleContext; // @synthesize sampleContext;
@property(retain, nonatomic) ZGMagazineIssueCoverImage *sampleCoverImage; // @synthesize sampleCoverImage;
@property(retain, nonatomic) ZGMagazine *sampleMagazine; // @synthesize sampleMagazine;
@property(retain, nonatomic) NavigationInsetViewController *mosaicModalInsetViewController; // @synthesize mosaicModalInsetViewController;
@property(nonatomic) ZGExcerptCategory *category; // @synthesize category;
@property(retain, nonatomic) UIViewController *categoryMosaicViewContoller; // @synthesize categoryMosaicViewContoller;
@property(retain, nonatomic) UIButton *categoryMosaicViewButton; // @synthesize categoryMosaicViewButton;
@property(retain, nonatomic) CoreTextLabel *label; // @synthesize label;
@property(retain, nonatomic) UIView *toolbarView; // @synthesize toolbarView;
@property(retain, nonatomic) UIView *toolbarContainerView; // @synthesize toolbarContainerView;
@property(retain, nonatomic) ExploreCategoryScrollView *exploreCategoryScrollView; // @synthesize exploreCategoryScrollView;
@property(retain, nonatomic) ExploreCategoryView *exploreCategoryView; // @synthesize exploreCategoryView;
- (void)_showEmailSheet;
- (void)_showSheetForServiceType:(id)arg1 shortURL:(id)arg2;
- (void)_showSheetForServiceType:(id)arg1;
- (void)showEmailSheet:(id)arg1;
- (void)showTwitterSheet:(id)arg1;
- (void)showFacebookSheet:(id)arg1;
- (void)dismissAlert:(id)arg1;
- (void)showNoButtonAlertWithMessage:(id)arg1;
- (void)enableApplicationStartupProcedures;
- (void)processUserChange:(id)arg1 newUser:(id)arg2;
- (void)showPopup:(id)arg1;
- (void)dismissPostView;
- (void)dismissModalView;
- (void)hideGigyaView;
- (void)showGigyaLogin:(id)arg1;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)resetUI;
- (void)retryAfterNetworkServicesManagerError:(id)arg1;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (_Bool)shouldShowFullScreenServerUnavailableErrorMessage;
- (_Bool)shouldShowFullScreenNetworkErrorMessage;
- (_Bool)shouldShowFullScreenOfflineMessageWhenOffline;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)imageFromImageInfo:(id)arg1;
- (id)thumbnailScrollView:(id)arg1 titleAtIndex:(long long)arg2;
- (id)thumbnailScrollView:(id)arg1 imageAtIndex:(long long)arg2;
- (unsigned long long)thumbnailCountForThumbnailScrollView:(id)arg1;
- (void)thumbnailScrollView:(id)arg1 didSelectIndex:(long long)arg2;
- (void)showExploreCategoryMosaic:(id)arg1;
- (void)modalInsetViewController:(id)arg1 didDismiss:(_Bool)arg2;
- (void)modalInsetViewController:(id)arg1 didAppear:(_Bool)arg2;
- (void)buyIssue:(id)arg1;
- (void)readExcerpt:(id)arg1;
- (id)currentExcerpt;
- (void)readAndShareExcerpt:(id)arg1;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)didTapShareButton:(id)arg1;
- (void)goBack;
- (void)removeViewTimerFired:(id)arg1;
- (void)hideView;
- (void)faultCurrentCategory;
- (void)reloadPage:(int)arg1 showBuyView:(_Bool)arg2;
- (void)showDeepLinkingCategory:(id)arg1 inView:(id)arg2;
- (void)showCategory:(id)arg1 inView:(id)arg2;
- (void)showCategory:(id)arg1 atIndex:(int)arg2 inView:(id)arg3;

// Remaining properties
@property(retain, nonatomic) ContentManager *contentManager;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NetworkServicesManager *networkManager;
@property(readonly) Class superclass;

@end

@interface ExploreiPhoneCategoryScrollView : UIScrollView <ExploreExcerptViewDelegate, UIScrollViewDelegate>
{
    UIView *upsellView;
    CoreTextLabel *upsellTitleLabel;
    UILabel *upsellDateLabel;
    UITextView *upsellDescription;
    UIImageView *upsellImageView;
    OutlineButton *upsellReadButton;
    OutlineButton *upsellBuyButton;
    ColorizedPageControl *pageControl;
    int currentExcerptNumber;
    int nextExcerptNumber;
    ExploreExcerptView *currentExcerptView;
    ExploreExcerptView *nextExcerptView;
    ExploreExcerptView *previousExcerptView;
    NSMutableDictionary *views;
    _Bool scrollingForPageChange;
    _Bool firstExcerptLoaded;
    ZGExcerptCategory *category;
    _Bool scrolling;
    int pageToReload;
    _Bool showBuyViewOnReload;
    UIButton *shareExploreButton;
    ExploreExcerptView *viewToShowAfterScroll;
}

@property(retain, nonatomic) UIButton *shareExploreButton; // @synthesize shareExploreButton;
@property(retain, nonatomic) OutlineButton *upsellReadButton; // @synthesize upsellReadButton;
@property(retain, nonatomic) OutlineButton *upsellBuyButton; // @synthesize upsellBuyButton;
@property(nonatomic) int pageToReload; // @synthesize pageToReload;
@property(nonatomic) ExploreExcerptView *viewToShowAfterScroll; // @synthesize viewToShowAfterScroll;
@property(retain, nonatomic) ZGExcerptCategory *category; // @synthesize category;
@property(retain, nonatomic) NSMutableDictionary *views; // @synthesize views;
@property(retain, nonatomic) UIImageView *upsellImageView; // @synthesize upsellImageView;
@property(retain, nonatomic) UITextView *upsellDescription; // @synthesize upsellDescription;
@property(retain, nonatomic) UILabel *upsellDateLabel; // @synthesize upsellDateLabel;
@property(retain, nonatomic) CoreTextLabel *upsellTitleLabel; // @synthesize upsellTitleLabel;
@property(retain, nonatomic) UIView *upsellView; // @synthesize upsellView;
@property(retain, nonatomic) ColorizedPageControl *pageControl; // @synthesize pageControl;
@property(nonatomic) int currentExcerptNumber; // @synthesize currentExcerptNumber;
@property(retain, nonatomic) ExploreExcerptView *previousExcerptView; // @synthesize previousExcerptView;
@property(retain, nonatomic) ExploreExcerptView *nextExcerptView; // @synthesize nextExcerptView;
@property(retain, nonatomic) ExploreExcerptView *currentExcerptView; // @synthesize currentExcerptView;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)imageNotFound:(id)arg1;
- (void)excerptViewHasLoaded:(id)arg1;
- (id)excerpts;
- (void)clearCategory;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)reloadCurrentPage;
- (void)scrollViewDidScroll:(id)arg1;
- (void)changePage:(id)arg1;
- (void)reloadPage:(int)arg1 showBuyView:(_Bool)arg2;
- (void)excerptFadeInDidFinish:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)setUpsellData;
- (void)fadeInExcerptView:(id)arg1;
- (void)showExcerptsForCategory:(id)arg1;
- (id)orderedExceprts;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CategoriesiPhoneListView : UIView
{
    id dataSource;
    id delegate;
    NSString *title;
    UILabel *titleLabel;
    int rows;
    _Bool hasImages;
    UIScrollView *scrollView;
    UIView *contentView;
    CategoriesiPhoneListViewCell *focusedCell;
}

@property(retain, nonatomic) CategoriesiPhoneListViewCell *focusedCell; // @synthesize focusedCell;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView;
@property(nonatomic) int rows; // @synthesize rows;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel;
@property(retain, nonatomic) NSString *title; // @synthesize title;
@property(nonatomic) id delegate; // @synthesize delegate;
@property(nonatomic) id dataSource; // @synthesize dataSource;
- (void)cellSelected:(id)arg1;
- (void)awakeFromNib;
- (void)reloadData;
- (void)setColumns:(int)arg1;

@end

@interface AFNetworkActivityIndicatorManager : NSObject
{
    _Bool _enabled;
    long long _activityCount;
    NSTimer *_activityIndicatorVisibilityTimer;
}

+ (id)keyPathsForValuesAffectingIsNetworkActivityIndicatorVisible;
+ (id)sharedManager;
@property(retain, nonatomic) NSTimer *activityIndicatorVisibilityTimer; // @synthesize activityIndicatorVisibilityTimer=_activityIndicatorVisibilityTimer;
@property(nonatomic) long long activityCount; // @synthesize activityCount=_activityCount;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (void)networkRequestDidFinish:(id)arg1;
- (void)networkRequestDidStart:(id)arg1;
- (void)decrementActivityCount;
- (void)incrementActivityCount;
- (void)updateNetworkActivityIndicatorVisibility;
@property(readonly, nonatomic, getter=isNetworkActivityIndicatorVisible) _Bool networkActivityIndicatorVisible; // @dynamic networkActivityIndicatorVisible;
- (void)updateNetworkActivityIndicatorVisibilityDelayed;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) _Bool isNetworkActivityIndicatorVisible;

@end

@interface CategoriesiPhoneListViewCell : UIView
{
    NSString *title;
    NSString *identifier;
    NSURL *url;
    UIImage *image;
    ZGThumbnail *thumbnail;
    id delegate;
    int number;
    float selectionOpacity;
    NSURLConnection *imageServerConnection;
    NSMutableData *imageData;
    _Bool showUpperLine;
    _Bool showBottomLine;
}

+ (id)cellWithTitle:(id)arg1 identifier:(id)arg2 image:(id)arg3;
+ (id)cellWithTitle:(id)arg1 identifier:(id)arg2 imageURL:(id)arg3;
+ (id)cellWithTitle:(id)arg1 identifier:(id)arg2 thumbnail:(id)arg3;
+ (id)cellWithTitle:(id)arg1 identifier:(id)arg2;
@property(nonatomic) _Bool showBottomLine; // @synthesize showBottomLine;
@property(nonatomic) _Bool showUpperLine; // @synthesize showUpperLine;
@property(retain, nonatomic) ZGThumbnail *thumbnail; // @synthesize thumbnail;
@property(retain, nonatomic) NSMutableData *imageData; // @synthesize imageData;
@property(retain, nonatomic) NSURLConnection *imageServerConnection; // @synthesize imageServerConnection;
@property(nonatomic) int number; // @synthesize number;
@property(nonatomic) id delegate; // @synthesize delegate;
@property(retain, nonatomic) UIImage *image; // @synthesize image;
@property(retain, nonatomic) NSURL *url; // @synthesize url;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier;
@property(retain, nonatomic) NSString *title; // @synthesize title;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)tapTimerFired:(id)arg1;
- (void)handleTap:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;

@end

@interface SettingsHelpViewController : UIViewController <UIWebViewDelegate>
{
    UIWebView *_webView;
}

@property(retain, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ExploreiPhoneAutoRotateViewController : BaseViewController <CategoriesiPhoneListViewDataSource, CategoriesiPhoneListViewDelegate>
{
    NSMutableDictionary *categoryCells;
    UIView *toolbarContainerView;
    UIView *toolbarView;
    CoreTextLabel *toolbarLabel;
    ExploreAutoRotateView *rotateView;
    CategoriesiPhoneListView *categoriesListView;
    _Bool hasBeenShownOnce;
    ScreenActivityIndicator *screenActivityIndicator;
    UILabel *_categoriesLabel;
}

@property(retain, nonatomic) UILabel *categoriesLabel; // @synthesize categoriesLabel=_categoriesLabel;
@property(retain, nonatomic) NSMutableDictionary *categoryCells; // @synthesize categoryCells;
@property(retain, nonatomic) ScreenActivityIndicator *screenActivityIndicator; // @synthesize screenActivityIndicator;
@property(retain, nonatomic) CategoriesiPhoneListView *categoriesListView; // @synthesize categoriesListView;
@property(retain, nonatomic) ExploreAutoRotateView *rotateView; // @synthesize rotateView;
@property(retain, nonatomic) CoreTextLabel *toolbarLabel; // @synthesize toolbarLabel;
@property(retain, nonatomic) UIView *toolbarView; // @synthesize toolbarView;
@property(retain, nonatomic) UIView *toolbarContainerView; // @synthesize toolbarContainerView;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)resetUI;
- (void)retryAfterNetworkServicesManagerError:(id)arg1;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (void)listView:(id)arg1 cellSelected:(id)arg2;
- (id)cellForCategoryNumber:(int)arg1 listView:(id)arg2;
- (int)numberOfCategoriesForListView:(id)arg1;
- (id)titleForListView:(id)arg1;
- (void)removeView;
- (void)hideCategoriesList;
- (void)hideView;
- (void)faultFeaturedCategory;
- (void)showCategoriesList;
- (void)showViewInsideView:(id)arg1;
- (void)showViewInsideView:(id)arg1 animated:(_Bool)arg2;
- (void)shownFirstTime;

@end

@interface SettingsHelpCenterViewController : SettingsBaseTableViewController <UISearchBarDelegate, UISearchDisplayDelegate>
{
    ZDKHelpCenterCategory *_currentCategory;
    ZDKHelpCenterSection *_currentSection;
    UISearchDisplayController *_searchArticleDisplayController;
    UIRefreshControl *_refreshControl;
    NSArray *_FAQArray;
    NSArray *_searchResultsArray;
    _Bool _loading;
    NSError *_error;
}

@property(retain, nonatomic) UIRefreshControl *refreshControl; // @synthesize refreshControl=_refreshControl;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic, getter=isLoading) _Bool loading; // @synthesize loading=_loading;
@property(retain, nonatomic) UISearchDisplayController *searchArticleDisplayController; // @synthesize searchArticleDisplayController=_searchArticleDisplayController;
@property(retain, nonatomic) ZDKHelpCenterSection *currentSection; // @synthesize currentSection=_currentSection;
@property(retain, nonatomic) ZDKHelpCenterCategory *currentCategory; // @synthesize currentCategory=_currentCategory;
@property(retain, nonatomic) NSArray *searchResultsArray; // @synthesize searchResultsArray=_searchResultsArray;
@property(retain, nonatomic) NSArray *FAQArray; // @synthesize FAQArray=_FAQArray;
- (id)filterZendeskItems:(id)arg1;
- (void)_loadContent;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)_performSearch:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)configureSearchCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (void)configureCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ExploreiPhoneAutoRotateView : UIView <ExploreExcerptViewDelegate>
{
    NSArray *excerpts;
    int currentExcerpt;
    NSTimer *rotateTimer;
    ExploreExcerptView *loadedExcerptView;
    ExploreExcerptView *excerpt1;
    ExploreExcerptView *excerpt2;
    _Bool firstExcerpt;
    float bounceBack;
    _Bool paused;
    _Bool noRotateDelayOnNextPause;
    ExploreAutoRotateInfoView *infoView;
    double animationDuration;
}

@property(nonatomic) double animationDuration; // @synthesize animationDuration;
@property(retain, nonatomic) ExploreAutoRotateInfoView *infoView; // @synthesize infoView;
@property(nonatomic) _Bool paused; // @synthesize paused;
@property(retain, nonatomic) ExploreExcerptView *excerpt2; // @synthesize excerpt2;
@property(retain, nonatomic) ExploreExcerptView *excerpt1; // @synthesize excerpt1;
@property(retain, nonatomic) ExploreExcerptView *loadedExcerptView; // @synthesize loadedExcerptView;
@property(retain, nonatomic) NSTimer *rotateTimer; // @synthesize rotateTimer;
@property(retain, nonatomic) NSArray *excerpts; // @synthesize excerpts;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)excerptViewHasLoaded:(id)arg1;
- (void)handleTap:(id)arg1;
- (void)bounceBackComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)crossfadeDidComplete:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)rotateTimerFired:(id)arg1;
- (void)loadExcerptView;
- (void)stopRotateAnimation;
- (void)startRotateAnimationWithInitialDelay:(double)arg1;
- (void)startRotateAnimation;
- (void)swipedLeft:(id)arg1;
- (void)startRotatingExcerpts;
- (void)stopRotatingExcerpts;
- (void)clearCurrentExcerptViews;

@end

@interface PreLiveSecurityManager : NSObject
{
}

+ (id)appendTokenToUrl:(id)arg1 forIssue:(id)arg2;
+ (_Bool)enablePackingListCache;
+ (_Bool)isIssueTokenValid:(id)arg1;

@end

@interface ZinioIPhoneShopViewController : BaseViewController <NSFetchedResultsControllerDelegate, ZinioCoversGridViewDelegate, ZinioIPhoneShopHeroScrollViewDelegate, ButtonSwitchDelegate, CategoriesListViewDelegateIPhoneShop, ModalInsetViewControllerDelegate, SearchViewControllerDelegate, UISearchBarDelegate>
{
    UIButton *shopRegionButton;
    UIButton *navigationBackButton;
    ZinioIPhoneCoversPagingScrollView *pagingCoversScrollView;
    ZinioIPhoneShopHeroScrollView *heroScrollView;
    UIView *heroDropShadowView;
    CategoriesListViewIPhoneShop *categoriesScrollView;
    ZinioIPhoneShopCategoriesDatasource *categoriesDataSource;
    HorizontalButtonSwitch *horizontalPublicationLists;
    EmbossedLineView *rightEmbossedLineView;
    EmbossedLineView *leftEmbossedLineView;
    EmbossedLineView *navigationLeftEmbossedLineView;
    CoreTextBreadCrumb *topNavigationBreadcrumbView;
    ColorizedPageControl *coversPageControl;
    NavigationInsetViewController *shopInsetScrollViewController;
    NavigationInsetViewFlowControl *shopInsetScrollViewFlowControl;
    ZGCategory *currentCategory;
    _Bool rootObjectWillChange;
    _Bool didChangeNewsstands;
    UIImageView *toolbarBackground;
    ZinioIPhoneShopViewController *rootShopStackViewController;
    BuyIPhoneViewController *buyViewController;
    UIImageView *background;
    unsigned long long selectedPublicationListIndex;
    NSMutableDictionary *coverIndexes;
    IntroViewController *introViewController;
    NSString *fromCategoryId;
    UISearchBar *_searchBar;
    iPhoneSearchViewController *_improvedSearchViewController;
    _Bool _initialized;
    NSArray *sortedHeroItems;
}

@property(retain, nonatomic) NSString *fromCategoryId; // @synthesize fromCategoryId;
@property(retain, nonatomic) BuyIPhoneViewController *buyViewController; // @synthesize buyViewController;
@property(nonatomic, getter=isInitialized) _Bool initialized; // @synthesize initialized=_initialized;
@property(retain, nonatomic) UISearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(retain, nonatomic) iPhoneSearchViewController *improvedSearchViewController; // @synthesize improvedSearchViewController=_improvedSearchViewController;
@property(retain, nonatomic) UIImageView *background; // @synthesize background;
@property(retain, nonatomic) UIImageView *toolbarBackground; // @synthesize toolbarBackground;
@property(retain, nonatomic) UIView *heroDropShadowView; // @synthesize heroDropShadowView;
@property(retain, nonatomic) NavigationInsetViewFlowControl *shopInsetScrollViewFlowControl; // @synthesize shopInsetScrollViewFlowControl;
@property(retain, nonatomic) NavigationInsetViewController *shopInsetScrollViewController; // @synthesize shopInsetScrollViewController;
@property(nonatomic) _Bool didChangeNewsstands; // @synthesize didChangeNewsstands;
@property(retain, nonatomic) NSArray *sortedHeroItems; // @synthesize sortedHeroItems;
@property(retain, nonatomic) UIButton *shopRegionButton; // @synthesize shopRegionButton;
@property(retain, nonatomic) ZinioIPhoneShopCategoriesDatasource *categoriesDataSource; // @synthesize categoriesDataSource;
@property(retain, nonatomic) CategoriesListViewIPhoneShop *categoriesScrollView; // @synthesize categoriesScrollView;
@property(retain, nonatomic) ZinioIPhoneShopHeroScrollView *heroScrollView; // @synthesize heroScrollView;
@property(retain, nonatomic) ZinioIPhoneCoversPagingScrollView *pagingCoversScrollView; // @synthesize pagingCoversScrollView;
@property(retain, nonatomic) EmbossedLineView *navigationLeftEmbossedLineView; // @synthesize navigationLeftEmbossedLineView;
@property(retain, nonatomic) CoreTextBreadCrumb *topNavigationBreadcrumbView; // @synthesize topNavigationBreadcrumbView;
@property(retain, nonatomic) EmbossedLineView *rightEmbossedLineView; // @synthesize rightEmbossedLineView;
@property(retain, nonatomic) HorizontalButtonSwitch *horizontalPublicationLists; // @synthesize horizontalPublicationLists;
@property(retain, nonatomic) ZGCategory *currentCategory; // @synthesize currentCategory;
@property(retain, nonatomic) EmbossedLineView *leftEmbossedLineView; // @synthesize leftEmbossedLineView;
@property(retain, nonatomic) UIButton *navigationBackButton; // @synthesize navigationBackButton;
@property(retain, nonatomic) ColorizedPageControl *coversPageControl; // @synthesize coversPageControl;
- (unsigned long long)supportedInterfaceOrientations;
- (void)launchBuyIssue:(id)arg1;
- (void)launchBuyPublication:(id)arg1 newsstandId:(id)arg2;
- (void)resetUI;
- (void)stopObservingFlag;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (_Bool)shouldShowFullScreenServerUnavailableErrorMessage;
- (_Bool)shouldShowFullScreenNetworkErrorMessage;
- (_Bool)shouldShowFullScreenOfflineMessageWhenOffline;
- (_Bool)isDisplayable;
- (_Bool)shouldActAsNetworkServicesManagerDelegate;
- (void)dealloc;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)buttonSwitch:(id)arg1 selectedButtonIndex:(long long)arg2;
- (void)pagingScrollView:(id)arg1 configureCell:(id)arg2 forIndex:(unsigned long long)arg3;
- (void)launchBuyViewForMagazine:(id)arg1 fromView:(id)arg2;
- (void)didSelectCoverAtIndex:(unsigned long long)arg1;
- (void)searchViewController:(id)arg1 didSelectCategory:(id)arg2;
- (void)searchViewController:(id)arg1 didSelectMagazine:(id)arg2;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (void)showSearchView:(id)arg1;
- (void)navigateBackOneCategory:(id)arg1;
- (void)listView:(id)arg1 categorySelected:(int)arg2;
- (void)showCategory:(id)arg1;
- (void)didShowHeroItem:(unsigned long long)arg1;
- (void)didSelectIPhoneHeroItem:(unsigned long long)arg1;
- (id)heroItemTitleForIndex:(unsigned long long)arg1;
- (id)heroImageForIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfHeroItems;
- (unsigned long long)actualNumberOfHeroItems;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)introViewControllerDidClose:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)imageDidDownload:(id)arg1;
- (void)configureViewForModel;
- (void)moveHorizontalPromotionalBar:(id)arg1 duration:(double)arg2 curve:(int)arg3 x:(double)arg4 y:(double)arg5;
- (int)verticalStretchOffsetAmount;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZinioShopCoversIPhoneViewController : BaseViewController <ZinioIPhoneCoversVerticalScrollViewDataSource, ZinioIPhoneCoversVerticalScrollViewDelegate, ButtonSwitchDelegate, ModalInsetViewControllerDelegate, SearchViewControllerDelegate, DeepLinking>
{
    CoreTextBreadCrumb *topNavigationBreadcrumbView;
    ZinioIPhoneCoversVerticalScrollView *coversScrollView;
    ZGCategory *currentCategory;
    NavigationInsetViewFlowControl *shopInsetViewFlowControl;
    NavigationInsetViewController *shopInsetViewController;
    NSFetchedResultsController *fetchedResultsController;
    UIActivityIndicatorView *activityIndicator;
    ZinioIPhoneShopViewController *rootShopStackViewController;
    BuyIPhoneViewController *buyViewController;
    _Bool rootObjectWillChange;
    _Bool scrollViewDidScroll;
    NSMutableDictionary *coverIndexPaths;
    UIButton *searchButton;
    UILabel *searchButtonLabel;
    UIImageView *toolbarBackground;
    UIImageView *background;
    NSString *fromCategoryId;
    NSDictionary *_deepLinking;
    UIButton *_backButton;
    UILabel *_categoryDisplayNameLabel;
    SearchViewController *_improvedSearchViewController;
}

@property(retain, nonatomic) UILabel *categoryDisplayNameLabel; // @synthesize categoryDisplayNameLabel=_categoryDisplayNameLabel;
@property(retain, nonatomic) UIButton *backButton; // @synthesize backButton=_backButton;
@property(retain, nonatomic) NSDictionary *deepLinking; // @synthesize deepLinking=_deepLinking;
@property(retain, nonatomic) SearchViewController *improvedSearchViewController; // @synthesize improvedSearchViewController=_improvedSearchViewController;
@property(retain, nonatomic) BuyIPhoneViewController *buyViewController; // @synthesize buyViewController;
@property(retain, nonatomic) NSString *fromCategoryId; // @synthesize fromCategoryId;
@property(retain, nonatomic) UIImageView *background; // @synthesize background;
@property(retain, nonatomic) UIImageView *toolbarBackground; // @synthesize toolbarBackground;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(retain, nonatomic) NSFetchedResultsController *fetchedResultsController; // @synthesize fetchedResultsController;
@property(retain, nonatomic) UILabel *searchButtonLabel; // @synthesize searchButtonLabel;
@property(retain, nonatomic) UIButton *searchButton; // @synthesize searchButton;
@property(retain, nonatomic) NavigationInsetViewFlowControl *shopInsetViewFlowControl; // @synthesize shopInsetViewFlowControl;
@property(retain, nonatomic) NavigationInsetViewController *shopInsetViewController; // @synthesize shopInsetViewController;
@property(retain, nonatomic) ZGCategory *currentCategory; // @synthesize currentCategory;
@property(retain, nonatomic) ZinioIPhoneCoversVerticalScrollView *coversScrollView; // @synthesize coversScrollView;
@property(retain, nonatomic) CoreTextBreadCrumb *topNavigationBreadcrumbView; // @synthesize topNavigationBreadcrumbView;
- (void)goBack;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (_Bool)shouldShowFullScreenServerUnavailableErrorMessage;
- (_Bool)shouldShowFullScreenNetworkErrorMessage;
- (_Bool)shouldShowFullScreenOfflineMessageWhenOffline;
- (_Bool)shouldActAsNetworkServicesManagerDelegate;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)boundaryResourceDownloadFailure:(id)arg1;
- (void)dealloc;
- (void)faultCurrentCategory;
- (void)buttonSwitch:(id)arg1 selectedButtonIndex:(long long)arg2;
- (void)configureViewForInterfaceOrientation:(long long)arg1;
- (void)navigateBackOneCategory:(id)arg1;
- (void)searchViewController:(id)arg1 didSelectCategory:(id)arg2;
- (void)searchViewController:(id)arg1 didSelectMagazine:(id)arg2;
- (void)showSearchView:(id)arg1;
- (void)verticalScrollView:(id)arg1 configureCell:(id)arg2 forIndexPath:(id)arg3;
- (void)verticalScrollView:(id)arg1 didSelectCell:(id)arg2;
- (id)cellForVerticalScrollView:(id)arg1;
- (struct CGPoint)sectionTitleOriginOffset:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (double)sectionTitleHeightForSection:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (id)titleForSection:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (unsigned long long)numberOfCellsForSection:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (unsigned long long)numberOfSectionsForVerticalScrollView:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)coreDataNeedsRefresh:(id)arg1;
- (void)configureViewForModel;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZinioIPhoneCoversPagingScrollView : UIScrollView <UIScrollViewDelegate>
{
    ColorizedPageControl *pageControl;
    NSMutableSet *recycledCovers;
    NSMutableDictionary *visibleCovers;
    double rowHeight;
    unsigned long long numberOfRows;
    unsigned long long numberOfColumns;
    unsigned long long numberOfCovers;
    unsigned long long numberOfCoversPerPage;
    id <ZinioCoversGridViewDataSource> coverImageDatasource;
    id <ZinioCoversGridViewDelegate> coverImageDelegate;
    _Bool layoutAnimated;
}

@property(nonatomic) _Bool layoutAnimated; // @synthesize layoutAnimated;
@property(nonatomic) double rowHeight; // @synthesize rowHeight;
@property(nonatomic) id <ZinioCoversGridViewDelegate> coverImageDelegate; // @synthesize coverImageDelegate;
@property(nonatomic) id <ZinioCoversGridViewDataSource> coverImageDatasource; // @synthesize coverImageDatasource;
@property(nonatomic) unsigned long long numberOfCovers; // @synthesize numberOfCovers;
@property(nonatomic) unsigned long long numberOfColumns; // @synthesize numberOfColumns;
@property(nonatomic) unsigned long long numberOfCoversPerPage; // @synthesize numberOfCoversPerPage;
@property(retain, nonatomic) ColorizedPageControl *pageControl; // @synthesize pageControl;
@property(nonatomic) unsigned long long numberOfRows; // @synthesize numberOfRows;
- (void)dealloc;
- (id)dequeueRecycledCover;
- (id)coverImageViewForIndex:(unsigned long long)arg1;
- (struct CGPoint)positionForIndex:(unsigned long long)arg1;
- (void)refreshCoverForIndex:(unsigned long long)arg1;
- (void)layoutSubviews;
- (void)reloadDataPreserveSelection;
- (void)reloadData;
- (void)reloadDataForPage:(struct CGPoint)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)updateContentSize;
- (void)updatePageControlIndex;
- (void)changePage:(id)arg1;
- (void)handleCoverTap:(id)arg1;
- (double)coverCellWidth;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SettingsViewControllerTransitioningDelegate : NSObject <UIViewControllerAnimatedTransitioning, UIViewControllerTransitioningDelegate>
{
    _Bool _presenting;
    struct CGRect _fromRect;
}

@property(nonatomic) struct CGRect fromRect; // @synthesize fromRect=_fromRect;
@property(nonatomic, getter=isPresenting) _Bool presenting; // @synthesize presenting=_presenting;
- (struct CGRect)_dismissFinalFrame:(struct CGRect)arg1 orientation:(long long)arg2;
- (struct CGRect)_presentingFinalFrame:(struct CGRect)arg1 orientation:(long long)arg2;
- (struct CGRect)_presentingInitialFrame:(struct CGRect)arg1 orientation:(long long)arg2;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (void)animationEnded:(_Bool)arg1;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZinioIPhoneShopCategoriesDatasource : NSObject <CategoriesListViewDataSourceIPhoneShop, ZinioCoversGridViewDataSource>
{
    ZGCategory *targetCategory;
    ZGCategoryPublicationList *targetPublicationList;
    NSArray *sortedSubcategories;
    NSArray *sortedHeroItems;
    NSArray *sortedPromoCategories;
    NSArray *sortedCategoryPublicationLists;
    NSArray *sortedCurrentPublicationListContent;
    NSMutableDictionary *categoryCells;
    ZinioIPhoneCoversPagingScrollView *pagingScrollView;
}

@property(retain, nonatomic) ZinioIPhoneCoversPagingScrollView *pagingScrollView; // @synthesize pagingScrollView;
@property(retain, nonatomic) ZGCategoryPublicationList *targetPublicationList; // @synthesize targetPublicationList;
@property(retain, nonatomic) ZGCategory *targetCategory; // @synthesize targetCategory;
- (void)dealloc;
- (void)faultManagedObjects;
- (void)faultManagedObjects:(id)arg1;
- (id)coverImageForIndex:(unsigned long long)arg1;
- (id)cellForPagingScrollView:(id)arg1;
- (unsigned long long)numberOfCovers;
- (id)categoryPublicationListForIndex:(unsigned long long)arg1;
- (id)promoCategoryForIndex:(unsigned long long)arg1;
- (int)numberOfCategoriesForListView:(id)arg1;
- (id)titleForListView:(id)arg1;
- (id)cellForCategoryNumber:(int)arg1 listView:(id)arg2;
- (id)categoryForIndex:(unsigned long long)arg1;
- (id)promotedContentForIndex:(unsigned long long)arg1;
- (id)init;

@end

@interface ZinioIPhoneShopHeroScrollView : UIScrollView <UIScrollViewDelegate>
{
    NSMutableSet *recycledHeroes;
    NSMutableSet *visibleHeroes;
    NSMutableSet *recycledLabels;
    NSMutableSet *visibleLabels;
    unsigned long long firstVisibleHero;
    unsigned long long lastVisibleHero;
    id <ZinioIPhoneShopHeroScrollViewDataSource> heroDataSource;
    id <ZinioIPhoneShopHeroScrollViewDelegate> heroDelegate;
    _Bool shouldAutoAdvance;
    _Bool userDidDrag;
    unsigned long long selectedIndex;
}

@property(nonatomic) _Bool shouldAutoAdvance; // @synthesize shouldAutoAdvance;
@property(nonatomic) id <ZinioIPhoneShopHeroScrollViewDelegate> heroDelegate; // @synthesize heroDelegate;
@property(nonatomic) id <ZinioIPhoneShopHeroScrollViewDataSource> heroDataSource; // @synthesize heroDataSource;
- (void)dealloc;
- (id)dequeueRecycledHero;
- (id)dequeueRecycledLabel;
- (void)layoutSubviews;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)setSelectedIndex:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)handleIPhoneHeroTap:(id)arg1;
- (void)updateContentSize;
- (void)autoAdvanceScrollView;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CategoriesListViewIPhoneShop : UIView
{
    id _dataSource;
    id _delegate;
    NSString *_title;
    UILabel *_titleLabel;
    int _rows;
    _Bool _hasImages;
    UIScrollView *_scrollView;
    UIView *_contentView;
    CategoriesListViewCellIPhoneShop *_focusedCell;
}

@property(retain, nonatomic) CategoriesListViewCellIPhoneShop *focusedCell; // @synthesize focusedCell=_focusedCell;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(nonatomic) int rows; // @synthesize rows=_rows;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(nonatomic) id dataSource; // @synthesize dataSource=_dataSource;
- (void)cellSelected:(id)arg1;
- (void)reloadData;
- (void)setColumns:(int)arg1;

@end

@interface CategoriesListViewCellIPhoneShop : UIView
{
    NSString *title;
    NSString *identifier;
    NSURL *url;
    UIImage *image;
    ZGThumbnail *thumbnail;
    id delegate;
    int number;
    float selectionOpacity;
    NSURLConnection *imageServerConnection;
    NSMutableData *imageData;
    _Bool showUpperLine;
    _Bool showBottomLine;
}

+ (id)cellWithTitle:(id)arg1 identifier:(id)arg2 image:(id)arg3;
+ (id)cellWithTitle:(id)arg1 identifier:(id)arg2 imageURL:(id)arg3;
+ (id)cellWithTitle:(id)arg1 identifier:(id)arg2 thumbnail:(id)arg3;
+ (id)cellWithTitle:(id)arg1 identifier:(id)arg2;
+ (int)cellHeight;
@property(nonatomic) _Bool showBottomLine; // @synthesize showBottomLine;
@property(nonatomic) _Bool showUpperLine; // @synthesize showUpperLine;
@property(retain, nonatomic) ZGThumbnail *thumbnail; // @synthesize thumbnail;
@property(retain, nonatomic) NSMutableData *imageData; // @synthesize imageData;
@property(retain, nonatomic) NSURLConnection *imageServerConnection; // @synthesize imageServerConnection;
@property(nonatomic) int number; // @synthesize number;
@property(nonatomic) id delegate; // @synthesize delegate;
@property(retain, nonatomic) UIImage *image; // @synthesize image;
@property(retain, nonatomic) NSURL *url; // @synthesize url;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier;
@property(retain, nonatomic) NSString *title; // @synthesize title;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)tapTimerFired:(id)arg1;
- (void)handleTap:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;

@end

@interface BuyIPhoneViewController : FlowControlledViewController <ZoomImageViewControllerDataSource, ZinioIPhoneCoversVerticalScrollViewDataSource, ZinioIPhoneCoversVerticalScrollViewDelegate, ScrollViewDelegateSetter, ReaderLauncherDelegate, PurchaseServiceDelegate, SKProductsRequestDelegate, FreeOfferServiceDelegate, ModalInsetViewControllerDelegate, NetworkServicesManagerDelegate, UIActionSheetDelegate, MFMailComposeViewControllerDelegate, PurchaseIPhoneThanksViewControllerDelegate>
{
    UIView *_detailsView;
    UIView *_buttonsContainerView;
    CustomButton *_previewButton;
    CustomButton *_buySubscriptionButton;
    CustomButton *_buyIssueButton;
    UIImageView *_coverImageView;
    UIImageView *_smallOfferImageView;
    NSString *_dateString;
    UILabel *_pubCountryLabel;
    UIImageView *_pubCountryImageView;
    UILabel *_pubLanguageLabel;
    UILabel *_subscriptionLengthLabel;
    UILabel *_subscriptionDiscountLabel;
    UILabel *_buyThisIssueLabel;
    UILabel *_singleIssuesLabel;
    UILabel *_pubDescriptionLabel;
    struct CGRect buyIssueButtonOriginalPos;
    struct CGRect buyIssueLabelOriginalPos;
    ZinioIPhoneCoversVerticalScrollView *_coversScrollView;
    BuyIPhoneCoverScrollViewDelegate *_coversScrollViewDelegate;
    ZGMagazine *_targetMagazine;
    ZGMagazine *_backIssueHeir;
    ZGExcerpt *_targetExcerpt;
    NSString *_secondaryImageId;
    NSDecimalNumber *_issuePrice;
    NSDecimalNumber *_offerPrice;
    NSString *_localizedIssuePrice;
    NSString *_localizedOfferPrice;
    NSNumber *_singleIssuePrice;
    NSString *_localizedSingleIssuePrice;
    NSMutableDictionary *_coverIndexPaths;
    NSFetchedResultsController *_fetchedResultsController;
    int _offerType;
    NSString *_purchaseType;
    UIActivityIndicatorView *_actionActivityIndicator;
    UIActivityIndicatorView *_viewActivityIndicator;
    UIActivityIndicatorView *_backIssuesActivityIndicator;
    UIActivityIndicatorView *_currentActivityIndicator;
    UIActivityIndicatorView *_loadingPricesActivityIndicator;
    ReaderLauncher *_readerLauncher;
    id <PurchaseService> _purchaseService;
    id <FreeOfferService> _freeOfferService;
    DispatchInsetViewFlowControl *_signInWallFlowControl;
    _Bool _waitingToBuyIssue;
    _Bool _waitingToBuySubscription;
    _Bool _waitingGigyaResponse;
    UIButton *_shareButton;
    UIView *_socialCounterBanner;
    UILabel *_numOfLikeLabel;
    UILabel *_numOfTweetLabel;
    id <SocialUser> _socialUser;
    id <User> _user;
    int _buyType;
    NSMutableDictionary *_productData;
    NSString *_fromCategoryId;
    UILabel *_titleLbl;
    UIButton *_zoomImageButton;
    UIView *_separationLineView;
    ZoomImageViewController *_zoomImageViewController;
}

@property(retain, nonatomic) UIActivityIndicatorView *loadingPricesActivityIndicator; // @synthesize loadingPricesActivityIndicator=_loadingPricesActivityIndicator;
@property(retain, nonatomic) UILabel *pubDescriptionLabel; // @synthesize pubDescriptionLabel=_pubDescriptionLabel;
@property(retain, nonatomic) UIView *separationLineView; // @synthesize separationLineView=_separationLineView;
@property(retain, nonatomic) ZoomImageViewController *zoomImageViewController; // @synthesize zoomImageViewController=_zoomImageViewController;
@property(retain, nonatomic) UIButton *zoomImageButton; // @synthesize zoomImageButton=_zoomImageButton;
@property(retain, nonatomic) UILabel *singleIssuesLabel; // @synthesize singleIssuesLabel=_singleIssuesLabel;
@property(retain, nonatomic) UILabel *titleLbl; // @synthesize titleLbl=_titleLbl;
@property(retain, nonatomic) NSString *fromCategoryId; // @synthesize fromCategoryId=_fromCategoryId;
@property(retain, nonatomic) NSMutableDictionary *productData; // @synthesize productData=_productData;
@property(retain, nonatomic) NSObject<User> *user; // @synthesize user=_user;
@property(retain, nonatomic) id <SocialUser> socialUser; // @synthesize socialUser=_socialUser;
@property(retain, nonatomic) UILabel *numOfTweetLabel; // @synthesize numOfTweetLabel=_numOfTweetLabel;
@property(retain, nonatomic) UILabel *numOfLikeLabel; // @synthesize numOfLikeLabel=_numOfLikeLabel;
@property(retain, nonatomic) UIView *socialCounterBanner; // @synthesize socialCounterBanner=_socialCounterBanner;
@property(retain, nonatomic) UIButton *shareButton; // @synthesize shareButton=_shareButton;
@property(retain, nonatomic) NSString *purchaseType; // @synthesize purchaseType=_purchaseType;
@property(nonatomic) _Bool waitingToBuySubscription; // @synthesize waitingToBuySubscription=_waitingToBuySubscription;
@property(nonatomic) _Bool waitingToBuyIssue; // @synthesize waitingToBuyIssue=_waitingToBuyIssue;
@property(retain, nonatomic) DispatchInsetViewFlowControl *signInWallFlowControl; // @synthesize signInWallFlowControl=_signInWallFlowControl;
@property(nonatomic) struct CGRect buyIssueLabelOriginalPos; // @synthesize buyIssueLabelOriginalPos;
@property(nonatomic) struct CGRect buyIssueButtonOriginalPos; // @synthesize buyIssueButtonOriginalPos;
@property(nonatomic) id <FreeOfferService> freeOfferService; // @synthesize freeOfferService=_freeOfferService;
@property(nonatomic) id <PurchaseService> purchaseService; // @synthesize purchaseService=_purchaseService;
@property(retain, nonatomic) ReaderLauncher *readerLauncher; // @synthesize readerLauncher=_readerLauncher;
@property(retain, nonatomic) UIActivityIndicatorView *backIssuesActivityIndicator; // @synthesize backIssuesActivityIndicator=_backIssuesActivityIndicator;
@property(nonatomic) UIActivityIndicatorView *currentActivityIndicator; // @synthesize currentActivityIndicator=_currentActivityIndicator;
@property(retain, nonatomic) UIActivityIndicatorView *actionActivityIndicator; // @synthesize actionActivityIndicator=_actionActivityIndicator;
@property(retain, nonatomic) UIActivityIndicatorView *viewActivityIndicator; // @synthesize viewActivityIndicator=_viewActivityIndicator;
@property(retain, nonatomic) NSFetchedResultsController *fetchedResultsController; // @synthesize fetchedResultsController=_fetchedResultsController;
@property(retain, nonatomic) BuyIPhoneCoverScrollViewDelegate *coversScrollViewDelegate; // @synthesize coversScrollViewDelegate=_coversScrollViewDelegate;
@property(retain, nonatomic) ZinioIPhoneCoversVerticalScrollView *coversScrollView; // @synthesize coversScrollView=_coversScrollView;
@property(retain, nonatomic) UIImageView *pubCountryImageView; // @synthesize pubCountryImageView=_pubCountryImageView;
@property(retain, nonatomic) NSMutableDictionary *coverIndexPaths; // @synthesize coverIndexPaths=_coverIndexPaths;
@property(retain, nonatomic) NSString *secondaryImageId; // @synthesize secondaryImageId=_secondaryImageId;
@property(nonatomic) int offerType; // @synthesize offerType=_offerType;
@property(retain, nonatomic) NSString *localizedSingleIssuePrice; // @synthesize localizedSingleIssuePrice=_localizedSingleIssuePrice;
@property(retain, nonatomic) NSNumber *singleIssuePrice; // @synthesize singleIssuePrice=_singleIssuePrice;
@property(retain, nonatomic) NSString *localizedOfferPrice; // @synthesize localizedOfferPrice=_localizedOfferPrice;
@property(retain, nonatomic) NSString *localizedIssuePrice; // @synthesize localizedIssuePrice=_localizedIssuePrice;
@property(retain, nonatomic) NSDecimalNumber *offerPrice; // @synthesize offerPrice=_offerPrice;
@property(retain, nonatomic) NSDecimalNumber *issuePrice; // @synthesize issuePrice=_issuePrice;
@property(retain, nonatomic) UILabel *buyThisIssueLabel; // @synthesize buyThisIssueLabel=_buyThisIssueLabel;
@property(retain, nonatomic) UILabel *subscriptionDiscountLabel; // @synthesize subscriptionDiscountLabel=_subscriptionDiscountLabel;
@property(retain, nonatomic) UILabel *subscriptionLengthLabel; // @synthesize subscriptionLengthLabel=_subscriptionLengthLabel;
@property(retain, nonatomic) UILabel *pubLanguageLabel; // @synthesize pubLanguageLabel=_pubLanguageLabel;
@property(retain, nonatomic) UILabel *pubCountryLabel; // @synthesize pubCountryLabel=_pubCountryLabel;
@property(retain, nonatomic) NSString *dateString; // @synthesize dateString=_dateString;
@property(retain, nonatomic) UIImageView *smallOfferImageView; // @synthesize smallOfferImageView=_smallOfferImageView;
@property(retain, nonatomic) UIImageView *coverImageView; // @synthesize coverImageView=_coverImageView;
@property(retain, nonatomic) CustomButton *buyIssueButton; // @synthesize buyIssueButton=_buyIssueButton;
@property(retain, nonatomic) CustomButton *buySubscriptionButton; // @synthesize buySubscriptionButton=_buySubscriptionButton;
@property(retain, nonatomic) CustomButton *previewButton; // @synthesize previewButton=_previewButton;
@property(retain, nonatomic) UIView *buttonsContainerView; // @synthesize buttonsContainerView=_buttonsContainerView;
@property(retain, nonatomic) UIView *detailsView; // @synthesize detailsView=_detailsView;
@property(retain, nonatomic) ZGExcerpt *targetExcerpt; // @synthesize targetExcerpt=_targetExcerpt;
@property(retain, nonatomic) ZGMagazine *backIssueHeir; // @synthesize backIssueHeir=_backIssueHeir;
@property(retain, nonatomic) ZGMagazine *targetMagazine; // @synthesize targetMagazine=_targetMagazine;
- (id)imageForZoomImageViewController:(id)arg1;
- (struct CGRect)imageFrameForZoomImageViewController:(id)arg1;
- (void)purchaseIPhoneThanksViewController:(id)arg1 didTapShopMore:(id)arg2;
- (void)purchaseIPhoneThanksViewController:(id)arg1 didSelectPublication:(id)arg2;
- (id)takeSnapshotOfView:(id)arg1;
- (void)zoomCoverImage:(id)arg1;
- (void)addCoverDateToTitle;
- (void)createBuyControllerForIssue:(id)arg1 displayName:(id)arg2;
- (void)_showEmailSheet;
- (void)_showSheetForServiceType:(id)arg1 shortURL:(id)arg2;
- (void)_showSheetForServiceType:(id)arg1;
- (void)dismissAlert:(id)arg1;
- (void)showNoButtonAlertWithMessage:(id)arg1;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)showShareActionSheet:(id)arg1;
- (void)stopActivityIndicator;
- (void)startActivityIndicator:(id)arg1 onView:(id)arg2;
- (void)startActivityIndicatorOnButton:(id)arg1;
- (void)askToLaunchReaderForPurchasedPubId:(id)arg1;
- (void)getFreeOfferFailed:(id)arg1 pubId:(id)arg2;
- (void)getFreeOfferSucceeded:(id)arg1 pubId:(id)arg2;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)didEncounterOtherError:(id)arg1 resource:(id)arg2 errorCode:(int)arg3;
- (void)didTimeOut:(id)arg1 resource:(id)arg2;
- (void)didReceiveFileNotFound:(id)arg1 resource:(id)arg2;
- (void)didReceiveServiceUnavailable:(id)arg1 resource:(id)arg2;
- (void)didEncounterNetworkError:(id)arg1 resource:(id)arg2;
- (void)didEncounterReachabilityProblem:(id)arg1 resource:(id)arg2;
- (void)handleNetworkProblemOnNavigationController;
- (void)showProductNotAvailableAlert:(id)arg1;
- (void)askToLaunchReaderForPurchasedIssueId:(id)arg1 storeProductId:(id)arg2;
- (void)purchaseFailed:(id)arg1 storeProductId:(id)arg2 internalProductId:(id)arg3;
- (void)purchaseSucceeded:(id)arg1 storeProductId:(id)arg2 internalProductId:(id)arg3 details:(id)arg4;
- (void)readerLauncher:(id)arg1 failedToLaunchExcerpt:(id)arg2 issue:(id)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)processUserChange:(id)arg1 newUser:(id)arg2;
- (void)enableApplicationStartupProcedures;
- (void)showShareNoConnectionMessage;
- (void)showPopup:(id)arg1;
- (void)dismissModalView;
- (void)hideGigyaView;
- (void)showGigyaLogin:(id)arg1;
- (void)clientDataReady:(id)arg1;
- (id)scrollViewDelegate;
- (void)setScrollViewDelegate:(id)arg1;
- (id)insetViewDelegate;
- (void)setInsetViewDelegate:(id)arg1;
- (void)verticalScrollView:(id)arg1 didSelectCell:(id)arg2;
- (void)verticalScrollView:(id)arg1 configureCell:(id)arg2 forIndexPath:(id)arg3;
- (id)cellForVerticalScrollView:(id)arg1;
- (struct CGPoint)sectionTitleOriginOffset:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (double)sectionTitleHeightForSection:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (id)titleForSection:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (unsigned long long)numberOfCellsForSection:(unsigned long long)arg1 verticalScrollView:(id)arg2;
- (unsigned long long)numberOfSectionsForVerticalScrollView:(id)arg1;
- (_Bool)viewIsLoaded;
- (id)insetViewController;
- (id)getPubDescription:(id)arg1;
- (int)computeOfferType:(id)arg1;
- (id)imageForIndexPath:(id)arg1;
- (id)backIssueForIndexPath:(id)arg1;
- (id)attributedTitle:(id)arg1 detail:(id)arg2;
- (void)zoomToCoverImage;
- (void)hideModalView;
- (void)configureViewForModel;
- (void)drawButtons;
- (void)repositionViews;
- (void)drawOfferPurchaseButton;
- (id)subscriptionLabelString:(unsigned long long)arg1;
- (void)drawIssuePurchaseButton;
- (void)setPurchaseIssueButtonPosition;
- (void)collectProductPricing;
- (void)showPreview:(id)arg1;
- (void)buySubscription:(id)arg1;
- (void)buyIssue:(id)arg1;
- (void)buyNonGuestSubscription:(id)arg1;
- (void)buyNonGuestIssue:(id)arg1;
- (void)buyNonGuestSubscriptionAfterViewAppear;
- (void)buyNonGuestIssueAfterViewAppear;
- (void)showPurchaseThanks;
- (void)showPurchaseThanksForTransaction:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)userSelectGuestCheckoutIPhone;
- (void)showSignInOnAlternativeFlowWithTargetAction:(SEL)arg1;
- (void)showSecondaryCover;
- (_Bool)configureCoverImage;
- (_Bool)configureBundleImage:(id)arg1;
- (void)decorateCoverImage;
- (void)cleanupObservers;
- (void)coreDataNeedsRefresh:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (void)showServerUnavailableError;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)goBack:(id)arg1;
- (void)viewDidLoad;
- (void)awakeFromNib;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NetworkServicesManager *networkManager;
@property(readonly) Class superclass;

@end

@interface BuyIPhoneCoverScrollViewDelegate : NavigationInsetViewDelegate
{
    NSArray *results;
    NavigationInsetViewController *insetViewController;
    NSManagedObjectContext *context;
}

@property(nonatomic) NSManagedObjectContext *context; // @synthesize context;
@property(nonatomic) NavigationInsetViewController *insetViewController; // @synthesize insetViewController;
@property(nonatomic) NSArray *results; // @synthesize results;
- (void)didSelectCell:(id)arg1;

@end

@interface ZinioIPhoneCoversVerticalScrollView : UIScrollView <UIScrollViewDelegate>
{
    NSMutableSet *reusableCells;
    NSMutableDictionary *sectionFrameDictionary;
    NSMutableDictionary *visibleCells;
    NSMutableSet *reusableTitles;
    NSMutableDictionary *visibleTitlesDictionary;
    unsigned long long firstVisibleRow;
    unsigned long long lastVisibleRow;
    unsigned long long numberOfColumns;
    unsigned long long sectionCount;
    double rowHeight;
    double cellWidth;
    double cellHeight;
    double leftHorizontalPadding;
    double rightHorizontalPadding;
    UIView *headerView;
    UITextView *headerTextView;
    UILabel *headerLabel;
    EmbossedLineView *headerEmbossedLineView;
    _Bool reserveFirstCellSpotForHeaderText;
    _Bool rtl;
    id <ZinioIPhoneCoversVerticalScrollViewDelegate> scrollViewDelegate;
    id <ZinioIPhoneCoversVerticalScrollViewDataSource> scrollViewDataSource;
}

@property(nonatomic) _Bool rtl; // @synthesize rtl;
@property(nonatomic) double rightHorizontalPadding; // @synthesize rightHorizontalPadding;
@property(nonatomic) double leftHorizontalPadding; // @synthesize leftHorizontalPadding;
@property(retain, nonatomic) EmbossedLineView *headerEmbossedLineView; // @synthesize headerEmbossedLineView;
@property(retain, nonatomic) UITextView *headerTextView; // @synthesize headerTextView;
@property(retain, nonatomic) UILabel *headerLabel; // @synthesize headerLabel;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView;
@property(nonatomic) double cellHeight; // @synthesize cellHeight;
@property(nonatomic) double rowHeight; // @synthesize rowHeight;
@property(nonatomic) unsigned long long numberOfColumns; // @synthesize numberOfColumns;
@property(nonatomic) id <ZinioIPhoneCoversVerticalScrollViewDataSource> scrollViewDataSource; // @synthesize scrollViewDataSource;
@property(nonatomic) id <ZinioIPhoneCoversVerticalScrollViewDelegate> scrollViewDelegate; // @synthesize scrollViewDelegate;
- (void)dealloc;
- (void)scrollToRowAtIndexPath:(id)arg1 animated:(_Bool)arg2;
- (void)handleCellTap:(id)arg1;
- (void)handleSelectCell:(id)arg1;
- (id)visibleCellsIndexPaths;
- (struct CGPoint)positionForCell:(id)arg1;
- (void)updateImageForCell:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)refreshCellForIndexPath:(id)arg1;
- (void)reloadVisibleCells;
- (void)layoutSubviews;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)reloadData:(_Bool)arg1;
- (void)setHeaderViewTitle:(id)arg1;
- (void)setHeaderLabelText:(id)arg1;
- (double)sectionTitleHeightForSection:(unsigned long long)arg1;
- (unsigned long long)rowIndexInSection:(unsigned long long)arg1 forCoordinate:(double)arg2;
- (unsigned long long)sectionIndexForCoordinate:(double)arg1;
- (id)dequeueReusableTitle;
- (void)setupCellWidth;
- (id)dequeueReusableCell;
- (void)setFrame:(struct CGRect)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PurchaseIPhoneThanksViewController : UIViewController <GridCollectionViewControllerDelegate, ReaderLauncherDelegate>
{
    UIImageView *coverIssueImageView;
    UILabel *thanksLabel;
    UILabel *infoLabel;
    UILabel *_mayAlsoLikeLabel;
    UIButton *readButton;
    UIButton *shopButton;
    UIActivityIndicatorView *activityIndicator;
    ReaderLauncher *readerLauncher;
    ZGMagazine *targetMagazine;
    UIImage *coverImage;
    id <PurchaseIPhoneThanksViewControllerDelegate> _delegate;
    ZinioShopCategoriesDatasource *_categoriesDataSource;
    ZGShop *_currentCategory;
    GridCollectionViewController *_collectionViewController;
}

@property(nonatomic) id <PurchaseIPhoneThanksViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) GridCollectionViewController *collectionViewController; // @synthesize collectionViewController=_collectionViewController;
@property(retain, nonatomic) ZGShop *currentCategory; // @synthesize currentCategory=_currentCategory;
@property(retain, nonatomic) UILabel *mayAlsoLikeLabel; // @synthesize mayAlsoLikeLabel=_mayAlsoLikeLabel;
@property(retain, nonatomic) UIImage *coverImage; // @synthesize coverImage;
@property(retain, nonatomic) ZGMagazine *targetMagazine; // @synthesize targetMagazine;
@property(nonatomic) ReaderLauncher *readerLauncher; // @synthesize readerLauncher;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(retain, nonatomic) UIButton *shopButton; // @synthesize shopButton;
@property(retain, nonatomic) UIButton *readButton; // @synthesize readButton;
@property(retain, nonatomic) UILabel *infoLabel; // @synthesize infoLabel;
@property(retain, nonatomic) UILabel *thanksLabel; // @synthesize thanksLabel;
@property(retain, nonatomic) UIImageView *coverIssueImageView; // @synthesize coverIssueImageView;
- (void)gridCollectionViewController:(id)arg1 didSelectPublication:(id)arg2;
- (void)addMayAlsoLikeView;
@property(retain, nonatomic) ZinioShopCategoriesDatasource *categoriesDataSource; // @synthesize categoriesDataSource=_categoriesDataSource;
- (void)readerLauncher:(id)arg1 failedToLaunchExcerpt:(id)arg2 issue:(id)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)shopMore;
- (void)readIssue;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface VerticalIPhoneButtonSwitch : ButtonSwitch
{
    UIFont *buttonTitleFont;
    UIColor *buttonTitleColor;
    struct CGSize buttonSize;
}

@property(nonatomic) struct CGSize buttonSize; // @synthesize buttonSize;
@property(retain, nonatomic) UIColor *buttonTitleColor; // @synthesize buttonTitleColor;
@property(retain, nonatomic) UIFont *buttonTitleFont; // @synthesize buttonTitleFont;
- (void)dealloc;
- (void)didSelectButton:(id)arg1;
- (void)drawButtons;
- (id)createButtonWithTitle:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)configureButtonSwitchDefaults;

@end

@interface NotificationSettingsViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
{
    UILabel *titleLabel;
    UITableView *tableView;
    UITextView *descriptionTextView;
    NSArray *listData;
    NSArray *messageData;
    UIView *autoLockView;
    _Bool deliveryFlag;
    _Bool renewFlag;
    _Bool updateFlag;
}

@property(retain, nonatomic) NSArray *messageData; // @synthesize messageData;
@property(retain, nonatomic) NSArray *listData; // @synthesize listData;
@property(retain, nonatomic) UITextView *descriptionTextView; // @synthesize descriptionTextView;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel;
- (void)cell:(id)arg1 selected:(_Bool)arg2;
- (void)tableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZGSingleExcerptParserDelegate : ZGManagedObjectParserDelegate
{
}

+ (id)classKeypaths;
+ (id)classDelegates;
+ (void)initialize;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parserDidEndDocument:(id)arg1;
- (id)entityName;
- (id)entityForElementName:(id)arg1;
- (id)parentKeypathForElementName:(id)arg1;
- (void)populateTargetWithAttributes:(id)arg1;

@end

@interface CoreDataAppDataService : NSObject <AppDataService>
{
    id <AnalyticsManager> analyticsManager;
    NSManagedObjectContextDataService *managedObjectContextDataService;
}

@property(retain, nonatomic) NSManagedObjectContextDataService *managedObjectContextDataService; // @synthesize managedObjectContextDataService;
@property(retain, nonatomic) id <AnalyticsManager> analyticsManager; // @synthesize analyticsManager;
- (void)didSaveManagedObjectContext:(id)arg1;
- (void)logoutUser:(id)arg1;
- (void)moveLibraryFromUser:(id)arg1 toUser:(id)arg2;
- (void)logoutUser;
- (void)loginUser:(id)arg1;
- (void)saveUser:(id)arg1;
- (id)getDefaultUser;
- (id)getUserForUserId:(id)arg1;
- (id)getUser;
- (id)createNewUser;
- (id)getAppData;
@property(readonly, nonatomic) NSManagedObjectContext *managedObjectContext;
- (id)managedObjectModel;
- (void)deleteUser:(id)arg1;
- (void)saveManagedObjectContext;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BookmarksIPhoneViewController : ModalInsetViewController <NSFetchedResultsControllerDelegate, UIActionSheetDelegate, UITableViewDataSource, UITableViewDelegate, ButtonSwitchDelegate, ReaderLauncherDelegate>
{
    UITableView *tableView;
    NSFetchedResultsController *fetchedResultsController;
    HorizontalButtonSwitch *sortSwitch;
    BaseBarButtonItemView *iconTitleView;
    BaseBarButtonItemView *iconTitleViewLandscape;
    EmbossedLineView *bottomRule;
    UIWebView *noBookmarksView;
    _Bool noBookmarksLoaded;
    IntroViewController *introViewController;
    ReaderLauncher *readerLauncher;
    NSDateFormatter *creationDateFormatter;
    id <AppDataService> appDataService;
    id <LibraryAccess> libraryAccess;
    id <IssueController> issueController;
    BookmarkIPhoneTableViewCell *tableViewCell;
    NSIndexPath *editIndexPath;
    NSIndexPath *deleteIndexPath;
    NSIndexPath *showIndexPath;
    struct UIEdgeInsets noKeyboardInsets;
    int sortType;
    id <Issue> issueFilter;
    UIView *topBookmarkBar;
    _Bool bookmarkCheck;
    UIView *bookmarkTableView;
    struct CGRect originalFrame;
}

+ (_Bool)introBookmarksViewHasShownOnce;
@property(retain, nonatomic) UIView *bookmarkTableView; // @synthesize bookmarkTableView;
@property(nonatomic) _Bool bookmarkCheck; // @synthesize bookmarkCheck;
@property(retain, nonatomic) UIView *topBookmarkBar; // @synthesize topBookmarkBar;
@property(retain, nonatomic) IntroViewController *introViewController; // @synthesize introViewController;
@property(nonatomic) id <IssueController> issueController; // @synthesize issueController;
@property(retain, nonatomic) id <Issue> issueFilter; // @synthesize issueFilter;
@property(retain, nonatomic) UIWebView *noBookmarksView; // @synthesize noBookmarksView;
@property(retain, nonatomic) BookmarkIPhoneTableViewCell *tableViewCell; // @synthesize tableViewCell;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView;
@property(retain, nonatomic) HorizontalButtonSwitch *sortSwitch; // @synthesize sortSwitch;
@property(retain, nonatomic) BaseBarButtonItemView *iconTitleViewLandscape; // @synthesize iconTitleViewLandscape;
@property(retain, nonatomic) BaseBarButtonItemView *iconTitleView; // @synthesize iconTitleView;
@property(retain, nonatomic) EmbossedLineView *bottomRule; // @synthesize bottomRule;
- (void)backButton:(id)arg1;
- (void)showIssueBookmark:(id)arg1;
- (void)applicationChangedUser:(id)arg1;
- (void)readerLauncher:(id)arg1 failedToLaunchPublication:(id)arg2 issue:(id)arg3;
- (void)readerLauncher:(id)arg1 issueReady:(id)arg2 inReader:(id)arg3;
- (struct CGSize)readerViewSize;
- (long long)readerInterfaceOrientation;
- (void)launchReaderForIssueBookmark:(id)arg1;
- (void)cancelEditBookmark:(id)arg1;
- (void)saveBookmark:(id)arg1;
- (void)stopEditingBookmark:(id)arg1;
- (void)editIssueBookmark:(id)arg1;
- (void)editBookmark:(id)arg1;
- (void)editBookmarkAtIndexPath:(id)arg1 animated:(_Bool)arg2;
- (void)deleteBookmark:(id)arg1;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (id)cellForSubview:(id)arg1;
- (void)setDeleteIndexPath:(id)arg1;
- (void)setEditIndexPath:(id)arg1;
- (void)exitEditMode;
- (void)controllerDidChangeContent:(id)arg1;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
@property(retain, nonatomic) NSFetchedResultsController *fetchedResultsController; // @synthesize fetchedResultsController;
- (id)fetchRequest;
- (void)buttonSwitch:(id)arg1 selectedButtonIndex:(long long)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotate;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (id)readerLauncher;
- (id)libraryAccess;
- (id)appDataService;
- (void)setupNoBookmarksView;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)awakeFromNib;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BookmarkIPhoneTableViewCell : UITableViewCell
{
    UIImageView *iconView;
    UILabel *titleLabel;
    UITextField *titleTextField;
    UILabel *folioLabel;
    UILabel *issueNameLabel;
    UILabel *creationDateLabel;
    UIButton *deleteButton;
    UIButton *editTitleButton;
    UIButton *saveButton;
    UIButton *cancelEditButton;
    UIView *titleRule;
    UIView *editRule;
    UIView *cellRule;
}

@property(retain, nonatomic) UIButton *cancelEditButton; // @synthesize cancelEditButton;
@property(retain, nonatomic) UIButton *saveButton; // @synthesize saveButton;
@property(retain, nonatomic) UIView *cellRule; // @synthesize cellRule;
@property(retain, nonatomic) UIView *editRule; // @synthesize editRule;
@property(retain, nonatomic) UIView *titleRule; // @synthesize titleRule;
@property(retain, nonatomic) UITextField *titleTextField; // @synthesize titleTextField;
@property(retain, nonatomic) UIButton *editTitleButton; // @synthesize editTitleButton;
@property(retain, nonatomic) UIButton *deleteButton; // @synthesize deleteButton;
@property(retain, nonatomic) UILabel *creationDateLabel; // @synthesize creationDateLabel;
@property(retain, nonatomic) UILabel *issueNameLabel; // @synthesize issueNameLabel;
@property(retain, nonatomic) UILabel *folioLabel; // @synthesize folioLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel;
@property(retain, nonatomic) UIImageView *iconView; // @synthesize iconView;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)showEditMode:(_Bool)arg1 animated:(_Bool)arg2;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface EventTrackingTask : NSOperation
{
    unsigned long long trackingType;
    NSString *eventName;
    NSString *eventValue;
    NSDictionary *parameters;
    WTEvent *webtrendEvent;
    double throttleSeconds;
    long long stateInfo;
}

+ (id)newAppsFlyerEvent:(id)arg1 eventValue:(id)arg2;
+ (id)newFlurryEvent:(id)arg1 parameters:(id)arg2;
+ (id)newWebTrendEvent:(id)arg1;
@property(nonatomic) unsigned long long trackingType; // @synthesize trackingType;
@property(nonatomic) double throttleSeconds; // @synthesize throttleSeconds;
@property(retain, nonatomic) WTEvent *webtrendEvent; // @synthesize webtrendEvent;
@property(retain, nonatomic) NSDictionary *parameters; // @synthesize parameters;
@property(retain, nonatomic) NSString *eventValue; // @synthesize eventValue;
@property(retain, nonatomic) NSString *eventName; // @synthesize eventName;
- (void)start;
- (_Bool)isFinished;
- (_Bool)isExecuting;
- (_Bool)isConcurrent;
- (void)dealloc;
- (id)initWithTrackingType:(unsigned long long)arg1;

@end

@interface EventTrackingCoordinator : NSObject
{
    NSOperationQueue *eventQueue;
}

+ (id)sharedInstance;
- (void)cancelAllEvents;
- (void)addFlurryEvent:(id)arg1 parameters:(id)arg2;
- (void)addWebTrendEvent:(id)arg1;
- (void)addOperation:(id)arg1;
- (_Bool)canAddNewEvent;
- (id)init;

@end

@interface CLSClientBase : NSObject
{
    CLSWebClient *_webClient;
    id <CLSClientDelegate> _delegate;
    NSArray *_pinnedCertificatesArray;
}

+ (char *)newHashedKeyWithSeed:(id)arg1 salt:(id)arg2;
@property(retain, nonatomic) CLSWebClient *webClient; // @synthesize webClient=_webClient;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
- (void)dealloc;
- (id)headerDataForArray:(id)arg1;
- (id)headerDataForDictionary:(id)arg1;
- (id)headerStringForDictionary:(id)arg1;
- (id)headerDataForData:(id)arg1;
- (char *)newHashedKey;
@property(readonly, nonatomic) unsigned int deviceState;
- (id)sourceString;
@property(readonly, nonatomic) NSData *identificationData;
- (id)builtSDKVersion;
- (id)minimumSDKVersion;
- (id)alternateExecutableSlices;
- (id)executableSlices;
@property(readonly, copy, nonatomic) NSString *instanceIdentifier;
@property(readonly, nonatomic) NSString *shortBundleVersion;
@property(readonly, nonatomic) NSString *bundleVersion;
@property(readonly, copy, nonatomic) NSString *applicationName;
@property(readonly, nonatomic) NSString *bundleId;
@property(readonly, nonatomic) NSString *APIKey;
- (id)initWithURL:(id)arg1;

@end

@interface CLSBetaClient : CLSClientBase
{
}

- (id)appendUpdateQueryParamsToURL:(id)arg1;
- (void)getUpdateWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

@interface CLSSettingsClient : CLSClientBase
{
    NSDictionary *_SDKKitVersions;
}

@property(copy, nonatomic) NSDictionary *SDKKitVersions; // @synthesize SDKKitVersions=_SDKKitVersions;
- (void)submitEventLogFilesAtPaths:(id)arg1 toURL:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)submitInvalidRecordAtPath:(id)arg1 toURL:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)submitCLSFileAtPath:(id)arg1 toURL:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)submitCLSFileAtPath:(id)arg1 toURL:(id)arg2 asInvalid:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)configureApplicationUsingURL:(id)arg1 asNewApp:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)loadSettingsWithCompletion:(CDUnknownBlockType)arg1;
- (void)removeInstallEventKey;
- (id)eventData;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property(nonatomic) id <CLSSettingsClientDelegate> delegate;

@end

@interface CLSCrashFile : NSObject <CLSCrashReport>
{
    NSDictionary *_crashData;
    NSString *_processingExecutableUUID;
    _Bool _executablesMatch;
    NSString *_logFilePath;
    NSMutableArray *_uuids;
    NSMutableArray *_threads;
    NSArray *_exceptionFrames;
}

+ (id)parse:(id)arg1;
@property(readonly, copy, nonatomic) NSString *logFilePath; // @synthesize logFilePath=_logFilePath;
@property(readonly, nonatomic) _Bool executablesMatch; // @synthesize executablesMatch=_executablesMatch;
@property(retain, nonatomic) NSString *processingExecutableUUID; // @synthesize processingExecutableUUID=_processingExecutableUUID;
- (void)freeEvent:(struct _Crashlytics__Session__Event *)arg1;
- (void)populatePbufFrames:(struct _Crashlytics__Session__Event__Application__Execution__Thread__Frame **)arg1 usingFrames:(id)arg2;
- (_Bool)populateEvent:(struct _Crashlytics__Session__Event *)arg1;
- (void)freeDevice:(struct _Crashlytics__Session__Device *)arg1;
- (_Bool)populateDevice:(struct _Crashlytics__Session__Device *)arg1;
- (_Bool)populateOS:(struct _Crashlytics__Session__OperatingSystem *)arg1;
- (void)freeApp:(struct _Crashlytics__Session__Application *)arg1;
- (_Bool)populateApp:(struct _Crashlytics__Session__Application *)arg1;
- (_Bool)populateUser:(struct _Crashlytics__Session__User *)arg1;
- (_Bool)populateSession:(struct _Crashlytics__Session *)arg1;
- (int)architecture;
- (struct _ProtobufCBinaryData)binaryDataFromString:(id)arg1;
- (_Bool)writeCLSFileToPath:(id)arg1;
- (void)symbolicateWithUUIDMap:(id)arg1;
- (id)frameFromDictionary:(id)arg1;
- (void)symbolicateFrame:(id)arg1 UUIDMap:(id)arg2;
- (_Bool)lookupUUID:(id *)arg1 andBaseAddress:(unsigned long long *)arg2 forAddress:(unsigned long long)arg3;
- (id)objcSelectorName;
@property(readonly, nonatomic) NSString *OSBuildVersion;
@property(readonly, nonatomic) NSString *OSVersion;
@property(readonly, nonatomic) NSDate *crashedOnDate;
@property(readonly, nonatomic) NSString *bundleShortVersionString;
@property(readonly, nonatomic) NSString *bundleVersion;
@property(readonly, nonatomic) _Bool isValid;
@property(readonly, copy, nonatomic) NSString *vendorId;
- (id)fontToken;
@property(readonly, copy, nonatomic) NSString *advertisingId;
@property(readonly, copy, nonatomic) NSString *deviceId;
@property(readonly, nonatomic) NSDictionary *customKeys;
@property(readonly, nonatomic) NSString *identifier;
@property(readonly, nonatomic) NSArray *exceptionBacktrace;
@property(readonly, nonatomic) NSArray *threads;
@property(readonly, retain, nonatomic) NSArray *binaryImageUUIDs;
@property(readonly, copy, nonatomic) NSString *mainExecutableUUID;
- (id)sortedBinaryImageData;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface CLSStackFrame : NSObject
{
    NSString *_symbol;
    NSString *_fileName;
    unsigned long long _lineNumber;
    unsigned long long _offset;
    unsigned long long _address;
    unsigned int _importance;
}

+ (id)stackFrameWithAddress:(unsigned long long)arg1;
+ (id)stackFrame;
@property(nonatomic) unsigned int importance; // @synthesize importance=_importance;
@property(nonatomic) unsigned long long address; // @synthesize address=_address;
@property(nonatomic) unsigned long long offset; // @synthesize offset=_offset;
@property(nonatomic) unsigned long long lineNumber; // @synthesize lineNumber=_lineNumber;
@property(copy, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(copy, nonatomic) NSString *symbol; // @synthesize symbol=_symbol;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CLSAnalyticsController : NSObject <CLSAnalyticsViewControllerTrackingDelegate>
{
    NSURL *_analyticsRootDirectoryURL;
    CLSSettings *_settings;
    _Bool _haveSettings;
    _Bool _settingsShouldCollectAnalytics;
    NSURL *_settingsAnalyticsURL;
    _Bool _settingsShouldTrackViewControllers;
    _Bool _settingsShouldFlushOnBackground;
    unsigned long long _settingsMaxByteSizePerFile;
    unsigned int _settingsFlushIntervalSecs;
    unsigned int _settingsMaxPendingSendFileCount;
    CLSSettingsClient *_settingsClient;
    NSString *_sessionIdentifier;
    unsigned long long _sessionTimestamp;
    NSFileManager *_fileManager;
    NSString *_currentSessionFragmentIdentifier;
    unsigned long long _currentSessionFragmentTimestamp;
    NSURL *_currentSessionFragmentDirectoryURL;
    _Bool _performSessionMaintenanceAfterSettingsArrive;
    CLSEventLogSessionRepository *_logSessionRepository;
    CLSAnalyticsMetadataController *_metadataController;
    CLSAnalyticsIdentifierGenerator *_identifierGenerator;
    CLSAnalyticsTimestampGenerator *_timestampGenerator;
    NSMutableArray *_sessionFragmentsToTransmit;
    struct dispatch_queue_s *_sessionMaintenanceQueue;
    struct dispatch_source_s *_sessionFragmentMaintenanceTimerSource;
    struct dispatch_queue_s *_priorityEventLoggingQueues[3];
    NSURL *_priorityCurrentFragmentEventFileURLs[3];
    CLSEventLogEventFile *_priorityCurrentFragmentEventFiles[3];
    _Bool _loggedAnalyticsEnabled;
    NSString *_lastSessionIdentifier;
    unsigned long long _lastSessionTimestamp;
    NSData *_lastSessionMetadata;
}

+ (id)mutableSortedFileURLsGroupedByPrioritiesFromLogFileURLs:(id)arg1;
+ (_Bool)deviceMeetsMinimumRequirements;
+ (_Bool)supported;
@property(readonly, nonatomic) unsigned long long sessionTimestamp; // @synthesize sessionTimestamp=_sessionTimestamp;
@property(readonly, copy, nonatomic) NSString *sessionIdentifier; // @synthesize sessionIdentifier=_sessionIdentifier;
@property(readonly, retain, nonatomic) CLSSettingsClient *settingsClient; // @synthesize settingsClient=_settingsClient;
@property(readonly, copy, nonatomic) NSURL *analyticsRootDirectoryURL; // @synthesize analyticsRootDirectoryURL=_analyticsRootDirectoryURL;
@property(retain, nonatomic) CLSSettings *settings; // @synthesize settings=_settings;
- (void)maintainSessionFragments:(CDUnknownBlockType)arg1;
- (void)maintainSessionFragmentsIgnoringError;
- (void)cleanUpRepository:(CDUnknownBlockType)arg1;
- (void)pruneSessionFragmentLogFiles:(CDUnknownBlockType)arg1;
- (id)nonCurrentLogFileURLsForAllStates:(id *)arg1;
- (void)scheduleSessionMaintenance;
- (unsigned long long)initialMaintenanceTimeWithFlushInterval:(double)arg1;
- (void)cancelSessionMaintenance;
- (void)saveLastMaintenanceDate:(id)arg1;
- (id)lastMaintenanceDate;
- (void)transmitPackagedSessionFragments:(CDUnknownBlockType)arg1;
- (void)transmitNextPackagedSessionFragment:(CDUnknownBlockType)arg1;
- (void)transmitLogsForSessionFragmentDirectory:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)packageClosedSessionFragments:(CDUnknownBlockType)arg1;
- (_Bool)runPackageClosedSessionFragments:(id *)arg1;
- (_Bool)packageLogsFromActiveSessionFragmentDirectoryURL:(id)arg1 intoPackagedSessionFragmentDirectoryURL:(id)arg2 error:(id *)arg3;
- (_Bool)isOpenSessionFragmentDirectoryURL:(id)arg1;
- (_Bool)purgePackagedPrepSessionFragmentDirectories;
- (id)sessionFragmentDirectoryURLsForStateName:(id)arg1 error:(id *)arg2;
- (void)openNewSessionFragment:(CDUnknownBlockType)arg1;
- (_Bool)runOpenNewSessionFragment:(id *)arg1;
- (void)viewControllerTrackingController:(id)arg1 didDetectDisappearanceOfViewController:(id)arg2;
- (void)viewControllerTrackingController:(id)arg1 didDetectAppearanceOfViewController:(id)arg2;
- (void)logPreviousSessionCrashedOnDate:(id)arg1;
- (void)logAppLaunched;
- (void)logAppInstalled;
- (_Bool)prepareNewSessionFragmentWithIdentifier:(id)arg1 timestamp:(unsigned long long)arg2 error:(id *)arg3;
- (_Bool)addMetadataEventToFragmentEventFile:(id)arg1 withPriority:(unsigned long long)arg2 timestamp:(unsigned long long)arg3 error:(id *)arg4;
- (id)createEventFileURLForPriority:(unsigned long long)arg1 error:(id *)arg2;
- (void)logEvent:(id)arg1;
- (_Bool)ensureLogFileExistsForPriority:(unsigned long long)arg1 error:(id *)arg2;
- (_Bool)handlePriorityTriggeredMaintainSessionFragmentForEvent:(id)arg1;
- (_Bool)handleSizeTriggeredMaintainSessionFragmentForLogFile:(id)arg1;
- (void)applicationLifecycleEvent:(id)arg1;
- (void)dispatchToQueue:(struct dispatch_queue_s *)arg1 asynchronous:(_Bool)arg2 block:(CDUnknownBlockType)arg3;
- (void)handleDisabledFeatureSwitch;
- (void)saveCurrentSessionInformation;
- (void)readLastSessionInformation;
- (void)saveShouldStartTrackingViewControllers:(_Bool)arg1;
- (_Bool)readShouldStartTrackingViewControllers;
- (_Bool)analyticsFeatureSwitchEnabled;
- (id)init;
- (id)initWithSettingsClient:(id)arg1 sessionIdentifier:(id)arg2 analyticsRootDirectoryWithURL:(id)arg3 identifierGenerator:(id)arg4 timestampGenerator:(id)arg5;
- (void)dealloc;

@end

@interface CLSTracer : NSObject
{
    int _fileDescriptor;
    struct dispatch_queue_s *_queue;
    struct dispatch_source_s *_samplingTimer;
}

- (void)sample;
- (void)handleNotification:(id)arg1;
- (void)handleInitialNotification:(id)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface CLSAnalyticsMetadataEvent : CLSEventLogEvent
{
    NSDictionary *_metadataJSONData;
}

@property(readonly, copy, nonatomic) NSDictionary *metadataJSONData; // @synthesize metadataJSONData=_metadataJSONData;
- (id)initWithPriority:(unsigned long long)arg1 timestamp:(unsigned long long)arg2 key:(id)arg3 payload:(id)arg4;
- (id)initWithPriority:(unsigned long long)arg1 timestamp:(unsigned long long)arg2 metadataJSONData:(id)arg3;

@end

@interface CLSEventLogEvent : NSObject
{
    unsigned long long _priority;
    unsigned long long _timestamp;
    NSString *_key;
    NSData *_payload;
}

@property(readonly, copy, nonatomic) NSData *payload; // @synthesize payload=_payload;
@property(readonly, copy, nonatomic) NSString *key; // @synthesize key=_key;
@property(readonly, nonatomic) unsigned long long timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) unsigned long long priority; // @synthesize priority=_priority;
- (id)eventData;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithPriority:(unsigned long long)arg1 timestamp:(unsigned long long)arg2 key:(id)arg3;
- (id)initWithPriority:(unsigned long long)arg1 timestamp:(unsigned long long)arg2 key:(id)arg3 payload:(id)arg4;
- (void)dealloc;

@end

@interface CLSBetaUpdate : NSObject
{
    NSURL *url;
    NSString *version;
    NSString *promptMessage;
    NSString *promptTitle;
    NSString *cancelLabel;
    NSString *installLabel;
}

@property(retain, nonatomic) NSString *installLabel; // @synthesize installLabel;
@property(retain, nonatomic) NSString *cancelLabel; // @synthesize cancelLabel;
@property(retain, nonatomic) NSString *promptTitle; // @synthesize promptTitle;
@property(retain, nonatomic) NSString *promptMessage; // @synthesize promptMessage;
@property(retain, nonatomic) NSString *version; // @synthesize version;
@property(retain, nonatomic) NSURL *url; // @synthesize url;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

@interface CLSUserDefaults : NSObject
{
    struct dispatch_queue_s *_access_queue;
    struct dispatch_queue_s *_io_queue;
    NSMutableDictionary *_dataDictionary;
    NSURL *_directoryURL;
    NSURL *_fileURL;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)standardUserDefaults;
- (void)migrateFromNSUserDefaults:(id)arg1;
- (id)loadDictionaryFromDisk;
- (void)synchronize;
- (id)dictionaryRepresentation;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (_Bool)boolForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface CLSEventLogSessionRepository : NSObject
{
    NSURL *_rootDirectoryURL;
    NSFileManager *_fileManager;
}

+ (id)sessionFragmentDirectoryURLForLogFileURL:(id)arg1;
+ (id)sessionDirectoryURLForSessionFragmentDirectoryURL:(id)arg1;
+ (id)stateDirectoryURLForSessionDirectoryURL:(id)arg1;
+ (_Bool)isPrepDirectoryURL:(id)arg1;
+ (id)prepDirectoryForDirectoryURL:(id)arg1;
+ (id)sessionFragmentDirectoryNameWithIdentifier:(id)arg1 timestamp:(unsigned long long)arg2;
+ (id)sessionDirectoryNameWithIdentifier:(id)arg1 timestamp:(unsigned long long)arg2;
+ (unsigned long long)priorityForEventLogFileWithName:(id)arg1;
+ (id)activeEventLogFileNameForPriority:(unsigned long long)arg1;
- (_Bool)cleanUpEventLogRepositoryIgnorningSessionFragmentDirectoryURL:(id)arg1 error:(id *)arg2;
- (_Bool)cleanUpStateDirectoryURL:(id)arg1 ignoringSessionFragmentDirectoryURL:(id)arg2 shouldDelete:(_Bool *)arg3 error:(id *)arg4;
- (_Bool)cleanUpSessionDirectoryURL:(id)arg1 ignoringSessionFragmentDirectoryURL:(id)arg2 shouldDelete:(_Bool *)arg3 error:(id *)arg4;
- (_Bool)cleanUpSessionFragmentDirectoryURL:(id)arg1 shouldDelete:(_Bool *)arg2 error:(id *)arg3;
- (_Bool)cleanUpDirectoryURL:(id)arg1 shouldDelete:(_Bool *)arg2 error:(id *)arg3 withCleanUpBlock:(CDUnknownBlockType)arg4;
- (_Bool)cleanUpLogFileURL:(id)arg1 shouldDelete:(_Bool *)arg2 error:(id *)arg3;
- (id)contentsOfDirectoryURL:(id)arg1 error:(id *)arg2;
- (_Bool)itemURL:(id)arg1 hasPathExtensionMatching:(id)arg2;
- (_Bool)itemURL:(id)arg1 hasNameMatching:(id)arg2;
- (_Bool)isDirectoryURL:(id)arg1;
- (_Bool)deleteItemAtURL:(id)arg1 error:(id *)arg2;
- (_Bool)removeLogFile:(id)arg1 error:(id *)arg2;
- (id)logFileURLsForAllStates:(id *)arg1;
- (id)logFileURLsForSessionFragmentDirectory:(id)arg1 error:(id *)arg2;
- (id)eventLogFileURLForStateName:(id)arg1 sessionIdentifier:(id)arg2 sessionTimestamp:(unsigned long long)arg3 sessionFragmentIdentifier:(id)arg4 sessionFragmentTimestamp:(unsigned long long)arg5 eventPriority:(unsigned long long)arg6 error:(id *)arg7;
- (_Bool)removeSessionFragmentDirectory:(id)arg1 error:(id *)arg2;
- (id)sessionFragmentDirectoryURLForStateName:(id)arg1 sessionIdentifier:(id)arg2 sessionTimestamp:(unsigned long long)arg3 sessionFragmentIdentifier:(id)arg4 sessionFragmentTimestamp:(unsigned long long)arg5 error:(id *)arg6;
- (id)sessionFragmentDirectoryURLsForSessionDirectory:(id)arg1 error:(id *)arg2;
- (_Bool)purgePrepSessionFragmentDirectoriesForStateName:(id)arg1 error:(id *)arg2;
- (id)removePrepStatusFromSessionFragmentDirectoryURL:(id)arg1 error:(id *)arg2;
- (id)prepSessionFragmentDirectoryURLForStateName:(id)arg1 sessionFragmentDirectoryURL:(id)arg2 error:(id *)arg3;
- (id)sessionDirectoryURLForStateName:(id)arg1 sessionIdentifier:(id)arg2 sessionTimestamp:(unsigned long long)arg3 error:(id *)arg4;
- (id)sessionDirectoryURLsForStateName:(id)arg1 error:(id *)arg2;
- (id)arrayByFilteringNonDirectoriesFromURLs:(id)arg1;
- (id)stateDirectoryURLForStateName:(id)arg1 error:(id *)arg2;
- (id)statesDirectoryURL:(id *)arg1;
- (_Bool)createDirectoryWithURL:(id)arg1 error:(id *)arg2;
- (_Bool)createFileWithURL:(id)arg1 error:(id *)arg2;
- (_Bool)deleteItemAtPath:(id)arg1 ifNotOfType:(int)arg2 error:(id *)arg3;
- (id)versionDirectoryName;
- (id)init;
- (id)initWithRootDirectoryPath:(id)arg1;
- (id)initWithRootDirectoryURL:(id)arg1;
- (void)dealloc;

@end

@interface CLSAnalyticsIdentifierGenerator : NSObject
{
}

- (id)generateEventIdentifier;
- (id)generateSessionFragmentIdentifier;

@end

@interface CLSWebRequest : NSObject
{
    NSString *_method;
    NSString *_path;
    NSURL *_URL;
    NSDictionary *_parameters;
    NSMutableDictionary *_customHeaders;
    NSMutableArray *_formFields;
    CDUnknownBlockType _protectionSpaceHandler;
}

+ (id)requestWithMethod:(id)arg1 path:(id)arg2;
@property(copy, nonatomic) CDUnknownBlockType protectionSpaceHandler; // @synthesize protectionSpaceHandler=_protectionSpaceHandler;
@property(copy, nonatomic) NSString *method; // @synthesize method=_method;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(readonly, nonatomic) NSArray *formFields; // @synthesize formFields=_formFields;
@property(readonly, nonatomic) NSDictionary *customHeaders; // @synthesize customHeaders=_customHeaders;
@property(retain, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(copy, nonatomic) NSString *path; // @synthesize path=_path;
- (void)setFormData:(id)arg1;
- (id)formData;
- (void)addData:(id)arg1 MIMEType:(id)arg2 fileName:(id)arg3 forFormField:(id)arg4;
- (void)addValueForFormFromDict:(id)arg1 withPrefix:(id)arg2;
- (void)addValueForFormFromDict:(id)arg1;
- (void)addValue:(id)arg1 forFormField:(id)arg2;
- (void)addFormRecord:(id)arg1;
- (void)addHeaders:(id)arg1;
- (void)addValue:(id)arg1 forHTTPHeaderField:(id)arg2;
@property(readonly, retain, nonatomic) NSURLRequest *URLRequest;
@property(readonly, retain, nonatomic) NSURL *fullURL;
- (void)dealloc;
- (id)initWithMethod:(id)arg1;

@end

@interface CLSWebResponse : NSObject
{
    NSURL *_requestURL;
    unsigned long long _statusCode;
    id _body;
    NSError *_error;
    NSDictionary *_responseHeaders;
    NSMutableData *_responseData;
}

@property(readonly, retain, nonatomic) NSData *responseData; // @synthesize responseData=_responseData;
@property(copy, nonatomic) NSDictionary *responseHeaders; // @synthesize responseHeaders=_responseHeaders;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) id body; // @synthesize body=_body;
@property(nonatomic) unsigned long long statusCode; // @synthesize statusCode=_statusCode;
@property(retain, nonatomic) NSURL *requestURL; // @synthesize requestURL=_requestURL;
- (void)appendData:(id)arg1;
@property(readonly, nonatomic) _Bool wasSuccessful;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CLSEventLogEventFile : CLSEventLogFile
{
}

- (_Bool)appendEvent:(id)arg1 error:(id *)arg2;

@end

@interface CLSAnalyticsViewControllerTrackingController : NSObject
{
    _Bool _isTracking;
    id <CLSAnalyticsViewControllerTrackingDelegate> _delegate;
    NSMutableSet *_blackListViewControllerClasses;
}

+ (_Bool)replaceMethodImplementationForClass:(Class)arg1 selector:(SEL)arg2 withImplementation:(CDUnknownFunctionPointerType)arg3 storingOldImplementation:(CDUnknownFunctionPointerType *)arg4;
+ (id)sharedInstance;
@property(nonatomic) __weak id <CLSAnalyticsViewControllerTrackingDelegate> delegate; // @synthesize delegate=_delegate;
- (void)cleanUpUIViewControllerSwizzle;
- (void)setUpUIViewControllerSwizzle;
- (_Bool)shouldLogViewController:(id)arg1;
- (_Bool)isBlacklistedViewControllerClass:(Class)arg1;
- (void)removeBlackListViewControllerClass:(Class)arg1;
- (void)addBlackListViewControllerClass:(Class)arg1;
- (void)startTracking;
- (id)init;
- (void)dealloc;

@end

@interface CLSAppIconController : NSObject
{
    CLSIcon *_cachedAppIcon;
}

+ (id)iconNameSetWithAlternateNamesAddedToIconNameSet:(id)arg1;
+ (void)addIconNameWithModifier:(id)arg1 forIconWithName:(id)arg2 toSetOfIconNames:(id)arg3;
+ (_Bool)isIconImageFileNameExtensionPresentInName:(id)arg1;
+ (struct CGSize)sizeForImage:(id)arg1;
@property(readonly, retain, nonatomic) CLSIcon *applicationIcon;
- (id)fetchApplicationIcon;
- (id)iconByFallingBackOnDefaultIconNamingConvention;
- (id)iconFromCFBundleIconFile;
- (id)iconFromCFBundleIconFiles;
- (id)iconFromIOS7StyleCFBundleIconsInFieldWithKey:(id)arg1;
- (id)largestIconInIconNames:(id)arg1 prerendered:(_Bool)arg2;
- (id)iconRootPath;
@property(readonly, retain, nonatomic) NSDictionary *appInfoDictionary;
- (void)dealloc;

@end

@interface CLSAnalyticsMetadataController : NSObject
{
    NSDictionary *_appInfoDictionary;
    NSDictionary *_metadata;
    NSData *_metadataJSONData;
    NSString *_instanceIdentifier;
}

+ (id)metadataDictionaryFromContext:(CDStruct_a6175b54)arg1 appInfoDictionary:(id)arg2 instanceIdentifier:(id)arg3;
+ (void)setValueInDictionary:(id)arg1 withKey:(id)arg2 toLongLong:(unsigned long long)arg3;
+ (void)setValueInDictionary:(id)arg1 withKey:(id)arg2 toInteger:(int)arg3;
+ (void)setValueInDictionary:(id)arg1 withKey:(id)arg2 toLong:(unsigned int)arg3;
+ (void)setValueInDictionary:(id)arg1 withKey:(id)arg2 toBOOL:(_Bool)arg3;
+ (void)setValueInDictionary:(id)arg1 withKey:(id)arg2 toCString:(const char *)arg3;
+ (void)setValueInDictionary:(id)arg1 withKey:(id)arg2 toObject:(id)arg3;
@property(readonly, copy, nonatomic) NSString *instanceIdentifier; // @synthesize instanceIdentifier=_instanceIdentifier;
@property(readonly, copy, nonatomic) NSData *metadataJSONData; // @synthesize metadataJSONData=_metadataJSONData;
@property(readonly, copy, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(readonly, copy, nonatomic) NSDictionary *appInfoDictionary; // @synthesize appInfoDictionary=_appInfoDictionary;
- (id)init;
- (id)initWithAppInfoDictionary:(id)arg1 instanceIdentifier:(id)arg2;
- (void)dealloc;

@end

@interface Crashlytics : NSObject <CLSSDKControllerDelegate, CLSClientDelegate, CLSSettingsClientDelegate>
{
    NSObject<CrashlyticsPlatformDelegate> *_delegate;
    struct dispatch_queue_s *_queue;
    CLSSDKController *_controller;
    CLSAppIconController *_appIconController;
    CLSBetaController *_betaController;
    CLSBetaClient *_betaClient;
    CLSSettingsClient *_settingsClient;
    struct dispatch_source_s *_timer;
    NSTimer *_thirtySecondTimer;
    CLSAnalyticsController *_analyticsController;
    NSString *_apiKey;
    _Bool _lastSessionWasCrash;
    _Bool _collectProcesses;
    id _deviceOrientaionChangeObserver;
    id _batteryStateChangeObserver;
    id _batteryLevelChangeObserver;
    id _proximityStateChangeObserver;
    id _statusBarOrientationChangeObserver;
    id _didEnterBackgroundObserver;
    id _willEnterForegroundObserver;
    _Bool _isSettingsLoaded;
    _Bool _disableCrashReporting;
    _Bool _fabricPresent;
    unsigned long long _attributesCount;
    long long _logBufferSize;
    NSDictionary *_kitInfo;
    NSDictionary *_SDKKitVersions;
}

+ (void)recordExceptionName:(id)arg1 reason:(id)arg2 frameArray:(id)arg3;
+ (void)setDevelopmentPlatformVersion:(id)arg1;
+ (void)setDevelopmentPlatformName:(id)arg1;
+ (void)setFloatValue:(float)arg1 forKey:(id)arg2;
+ (void)setBoolValue:(_Bool)arg1 forKey:(id)arg2;
+ (void)setIntValue:(int)arg1 forKey:(id)arg2;
+ (void)setObjectValue:(id)arg1 forKey:(id)arg2;
+ (void)setUserEmail:(id)arg1;
+ (void)setUserName:(id)arg1;
+ (void)setUserIdentifier:(id)arg1;
+ (id)confirmCustomIdentifierValue:(id)arg1;
+ (id)startWithAPIKey:(id)arg1 delegate:(id)arg2 afterDelay:(double)arg3 environment:(CDStruct_9c005df8)arg4;
+ (id)startWithAPIKey:(id)arg1 delegate:(id)arg2 afterDelay:(double)arg3;
+ (id)startWithAPIKey:(id)arg1 delegate:(id)arg2;
+ (id)startWithAPIKey:(id)arg1 afterDelay:(double)arg2;
+ (id)startWithAPIKey:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedInstance;
@property(nonatomic) NSObject<CrashlyticsDelegate> *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) CLSBetaController *betaController; // @synthesize betaController=_betaController;
@property(retain, nonatomic) CLSAnalyticsController *analyticsController; // @synthesize analyticsController=_analyticsController;
@property(copy, nonatomic) NSDictionary *SDKKitVersions; // @synthesize SDKKitVersions=_SDKKitVersions;
@property(retain, nonatomic) NSDictionary *kitInfo; // @synthesize kitInfo=_kitInfo;
@property(nonatomic) _Bool fabricPresent; // @synthesize fabricPresent=_fabricPresent;
@property(nonatomic) _Bool disableCrashReporting; // @synthesize disableCrashReporting=_disableCrashReporting;
@property(nonatomic) _Bool isSettingsLoaded; // @synthesize isSettingsLoaded=_isSettingsLoaded;
@property(nonatomic) long long logBufferSize; // @synthesize logBufferSize=_logBufferSize;
@property(nonatomic) unsigned long long attributesCount; // @synthesize attributesCount=_attributesCount;
- (void)crashDidComplete;
- (void)migrateNSUserDefaultsToCLSUserDefaults;
- (void)updateThirtySecondIntervalData;
- (void)startThirtySecondIntervalIfNeeded;
- (void)removeInstallEventKey;
- (id)eventArray;
- (unsigned int)deliveryMechanism;
- (id)icon;
- (unsigned int)deviceState;
- (id)identificationDictionary;
- (id)builtSDKVersion;
- (id)minimumSDKVersion;
- (id)alternateExecutableSlices;
- (id)executableSlices;
- (id)shortBundleVersion;
- (id)bundleVersion;
- (id)applicationName;
- (id)bundleId;
- (id)APIKey;
- (void)controller:(id)arg1 collectProcesses:(_Bool)arg2;
- (void)controller:(id)arg1 willProcessFile:(id)arg2;
- (void)controllerCompletedSubmissions:(id)arg1;
- (void)controllerDidLoadSettings:(id)arg1;
@property(readonly, copy, nonatomic) NSString *crashMarkerFilePath;
@property(readonly, copy, nonatomic) NSString *version;
@property(readonly, copy, nonatomic) NSString *apiKey;
@property(nonatomic) _Bool debugMode;
- (void)setFloatValue:(float)arg1 forKey:(id)arg2;
- (void)setBoolValue:(_Bool)arg1 forKey:(id)arg2;
- (void)setIntValue:(int)arg1 forKey:(id)arg2;
- (void)setObjectValue:(id)arg1 forKey:(id)arg2;
- (void)setUserEmail:(id)arg1;
- (void)setUserName:(id)arg1;
- (void)setUserIdentifier:(id)arg1;
- (void)raiseObjCException;
- (void)crash;
- (void)gatherInitialNotificationData;
- (void)setupNotifications;
- (void)checkForCrashMarker;
- (unsigned int)machExceptionMask;
- (void)setupCrashHandling:(id)arg1 sessionIdentifier:(id)arg2 environment:(const CDStruct_9c005df8 *)arg3;
- (id)initializeWithAPIKey:(id)arg1 delay:(double)arg2 environment:(const CDStruct_9c005df8 *)arg3;
- (void)start;
- (void)dealloc;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface CLSThread : NSObject
{
    NSString *_pthreadName;
    NSString *_dispatchQueueName;
    NSArray *_frames;
    NSDictionary *_registers;
    unsigned int _importance;
}

@property(nonatomic) unsigned int importance; // @synthesize importance=_importance;
@property(retain, nonatomic) NSDictionary *registers; // @synthesize registers=_registers;
@property(retain, nonatomic) NSArray *frames; // @synthesize frames=_frames;
@property(copy, nonatomic) NSString *dispatchQueueName; // @synthesize dispatchQueueName=_dispatchQueueName;
@property(copy, nonatomic) NSString *pthreadName; // @synthesize pthreadName=_pthreadName;
@property(nonatomic) _Bool crashed;
- (void)dealloc;

@end

@interface CLSBetaController : NSObject
{
    CLSBetaClient *_client;
    CLSBetaUpdate *_update;
    CLSSettings *_settings;
    NSTimer *_checkSuspensionTimer;
    _Bool _checksSuspended;
    _Bool _retrying;
    struct dispatch_queue_s *_queue;
    UIAlertView *_updateAvailableAlert;
}

@property(retain, nonatomic) CLSSettings *settings; // @synthesize settings=_settings;
@property(nonatomic) CLSBetaClient *betaClient; // @synthesize betaClient=_client;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)didGetUpdate:(id)arg1;
- (_Bool)shouldGetUpdates;
- (id)appInfoDictionary;
- (void)applicationWillEnterForeground;
- (void)allowChecks;
- (void)temporarilySuspendChecks;
- (void)maybeGetUpdate:(CDUnknownBlockType)arg1;
- (void)checkForUpdate;
- (void)dealloc;
- (id)init;

@end

@interface CLSWebClientTransaction : NSObject <NSURLConnectionDelegate>
{
    CLSWebRequest *_request;
    CLSWebResponse *_response;
    NSString *_contentType;
    NSURLConnection *_connection;
    struct dispatch_queue_s *_queue;
    CDUnknownBlockType _completionHandler;
}

+ (id)transactionWithRequest:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (_Bool)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)complete;
- (id)objectFromReceivedData;
- (void)syncStartWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)syncStartConnection;
- (void)startConnection;
- (void)dealloc;
- (id)initWithRequest:(id)arg1;

@end

@interface CLSSettings : NSObject
{
    NSString *_cachePath;
    NSDictionary *_dictionary;
}

+ (void)setUserDesiresReportsAlwaysBeSent:(_Bool)arg1;
+ (_Bool)userDesiresReportsAlwaysBeSent;
+ (_Bool)writeSettings:(id)arg1 toPath:(id)arg2;
@property(readonly, nonatomic) unsigned int betaUpdateSuspendDurationSecs;
@property(readonly, copy, nonatomic) NSURL *betaUpdateEndpoint;
@property(readonly, nonatomic) unsigned int maxPendingSendFileCount;
@property(readonly, nonatomic) unsigned long long maxByteSizePerFile;
@property(readonly, nonatomic) unsigned int maxFileCountPerSend;
@property(readonly, nonatomic) unsigned int flushIntervalSecs;
@property(readonly, nonatomic) _Bool shouldFlushAnalyticsOnBackground;
@property(readonly, nonatomic) _Bool shouldTrackViewControllers;
@property(readonly, copy, nonatomic) NSURL *analyticsURL;
- (id)analyticsDictionary;
@property(readonly, nonatomic) _Bool shouldCollectAnalytics;
@property(readonly, nonatomic) _Bool iconPrerendered;
@property(readonly, nonatomic) struct CGSize iconSize;
@property(readonly, copy, nonatomic) NSString *iconHash;
@property(readonly, copy, nonatomic) NSString *interactivePromptCancelTitle;
@property(readonly, copy, nonatomic) NSString *interactivePromptAlwaysSendTitle;
@property(readonly, copy, nonatomic) NSString *interactivePromptSendTitle;
@property(readonly, copy, nonatomic) NSString *interactivePromptMessage;
@property(readonly, copy, nonatomic) NSString *interactivePromptTitle;
@property(readonly, nonatomic) _Bool shouldCollectProcesess;
- (id)safeURLWithString:(id)arg1;
@property(readonly, nonatomic) _Bool shouldIncludeInteractiveAlwaysSendOption;
@property(readonly, nonatomic) _Bool shouldIncludeInteractiveCancelOption;
@property(readonly, nonatomic) _Bool shouldRequestPermissionToSubmit;
@property(readonly, nonatomic) _Bool requiresUpdate;
@property(readonly, nonatomic) _Bool appNeedsOnboarding;
@property(readonly, copy, nonatomic) NSURL *settingsURL;
@property(readonly, copy, nonatomic) NSURL *appURL;
@property(readonly, copy, nonatomic) NSURL *reportsURL;
@property(readonly, nonatomic) _Bool shouldCollectOnPlatform;
@property(readonly, nonatomic) _Bool shouldCollectCrashReports;
@property(readonly, nonatomic) _Bool shouldSubmitSynchronously;
@property(readonly, nonatomic) unsigned int maxCustomKeyValuePairs;
@property(readonly, nonatomic) unsigned long long logBufferSize;
@property(readonly, nonatomic) _Bool isOutdated;
- (id)betaDictionary;
- (id)featuresDictionary;
- (id)sessionDictionary;
- (id)settingsDictionary;
- (id)iconDictionary;
- (id)promptDictionary;
- (id)appDictionary;
- (void)dealloc;
- (id)initWithCachePath:(id)arg1;
- (id)initWithCachePath:(id)arg1 settingsDictionary:(id)arg2;

@end

@interface CLSUUID : NSObject
{
    NSData *_data;
}

+ (id)generateWithSegmentData:(id)arg1;
@property(readonly) NSData *data; // @synthesize data=_data;
- (_Bool)_populateLastComponent:(char *)arg1 segmentBuffer:(const char *)arg2;
- (_Bool)_populatePID:(char *)arg1;
- (_Bool)_populateSequenceNumber:(char *)arg1;
- (_Bool)_populateTime:(char *)arg1;
- (id)description;
- (id)stringValue;
- (void)dealloc;
- (id)initWithSegmentData:(id)arg1;

@end

@interface CLSAnalyticsTimestampGenerator : NSObject
{
}

- (unsigned long long)generateAnalyticsTimestamp;

@end

@interface CLSSDKController : NSObject
{
    id <CLSSDKControllerDelegate> _delegate;
    CLSSettingsClient *_settingsClient;
    CLSSettings *_settings;
    NSString *_cachePath;
    unsigned long long _retryInterval;
    _Bool _retrying;
    long long _sendButtonIndex;
    long long _alwaysSendButtonIndex;
    UIAlertView *_crashReportSubmissionAlert;
    struct dispatch_queue_s *_queue;
    double _delay;
}

@property(nonatomic) id <CLSSDKControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) CLSSettingsClient *settingsClient; // @synthesize settingsClient=_settingsClient;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertViewCancel:(id)arg1;
- (void)submitInvalidFiles;
- (void)submitFiles;
- (void)ignoreReports;
- (void)movePreparedToSendableAndSubmitSettingAlwaysFlag:(_Bool)arg1;
- (void)displayPermissionAlert;
- (id)processRecordFile:(id)arg1;
- (void)processExistingRecords:(_Bool)arg1;
- (void)configure:(_Bool)arg1;
- (void)startReportCollection;
- (void)loadSettings:(CDUnknownBlockType)arg1;
- (void)startReportingAfterDelay:(double)arg1;
- (_Bool)beginStartupFlowAfterDelay:(double)arg1;
- (void)didLoadSettings:(id)arg1;
- (_Bool)shouldLoadSettings;
- (_Bool)isFirstLaunchForThisBuild;
- (void)onboardOrStartReportColletion;
- (_Bool)setup;
- (_Bool)ensureReasonableFileAtPath:(id)arg1;
- (void)enumerateFilesInDirectory:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (_Bool)moveItemsFromDirectory:(id)arg1 toDirectory:(id)arg2;
- (_Bool)removeItemAtPath:(id)arg1;
- (_Bool)moveItemAtPath:(id)arg1 toDirectory:(id)arg2;
- (_Bool)createDirectoryAtPath:(id)arg1;
- (id)settingsCachePath;
@property(readonly, copy, nonatomic) NSString *analyticsDirectory;
@property(readonly, copy, nonatomic) NSString *crashMarkerFilePath;
@property(readonly, copy, nonatomic) NSString *sendableDirectory;
@property(readonly, copy, nonatomic) NSString *preparedDirectory;
@property(readonly, copy, nonatomic) NSString *invalidDirectory;
@property(readonly, copy, nonatomic) NSString *processingDirectory;
@property(readonly, copy, nonatomic) NSString *crashFileDirectory;
- (id)cachePath;
- (id)rootPath;
- (_Bool)isARejectedError:(id)arg1;
@property(readonly, nonatomic) _Bool hostCanCacheSettings;
@property(readonly, retain, nonatomic) NSString *bundleIdentifier;
@property(readonly, copy, nonatomic) NSString *settingsEndpoint;
@property(readonly, retain, nonatomic) NSDictionary *appInfoDictionary;
- (void)dealloc;
- (id)init;

@end

@interface CLSAnalyticsEvent : CLSEventLogEvent
{
    NSString *_eventIdentifier;
    NSDictionary *_stringPayloadValueDict;
    UIViewController *_viewController;
}

@property(readonly, copy, nonatomic) NSDictionary *stringPayloadValueDict; // @synthesize stringPayloadValueDict=_stringPayloadValueDict;
@property(readonly, copy, nonatomic) NSString *eventIdentifier; // @synthesize eventIdentifier=_eventIdentifier;
- (id)initWithDisappearedEventForViewController:(id)arg1 timestamp:(unsigned long long)arg2 eventIdentifier:(id)arg3;
- (id)initWithAppearedEventForViewController:(id)arg1 timestamp:(unsigned long long)arg2 eventIdentifier:(id)arg3;
- (id)initWithEventForViewController:(id)arg1 eventKey:(id)arg2 timestamp:(unsigned long long)arg3 eventIdentifier:(id)arg4;
- (id)initWithApplicationNotificationName:(id)arg1 timestamp:(unsigned long long)arg2 eventIdentifier:(id)arg3 highPriorityEventOnBackground:(_Bool)arg4;
- (id)initApplicationCrashedEventWithTimestamp:(unsigned long long)arg1 eventIdentifier:(id)arg2;
- (id)initApplicationLaunchedEventWithTimestamp:(unsigned long long)arg1 eventIdentifier:(id)arg2;
- (id)initApplicationInstalledEventWithTimestamp:(unsigned long long)arg1 eventIdentifier:(id)arg2;
- (id)initWithPriority:(unsigned long long)arg1 timestamp:(unsigned long long)arg2 key:(id)arg3 eventIdentifier:(id)arg4;
- (id)initWithPriority:(unsigned long long)arg1 timestamp:(unsigned long long)arg2 key:(id)arg3 eventIdentifier:(id)arg4 stringPayloadValues:(id)arg5;
- (id)initWithPriority:(unsigned long long)arg1 timestamp:(unsigned long long)arg2 key:(id)arg3 payload:(id)arg4;
- (void)dealloc;

@end

@interface CLSWebClient : NSObject
{
    NSURL *_url;
    NSMutableSet *_connections;
    struct dispatch_queue_s *_queue;
    NSMutableDictionary *_customHeaders;
    id <CLSPersistenceCacheDelegate> _cacheDelegate;
}

+ (id)encodeJSON:(id)arg1;
+ (id)decodeJSON:(id)arg1;
+ (id)escapeURLString:(id)arg1;
@property(nonatomic) id <CLSPersistenceCacheDelegate> cacheDelegate; // @synthesize cacheDelegate=_cacheDelegate;
@property(readonly, retain, nonatomic) NSURL *URL; // @synthesize URL=_url;
- (void)postFormData:(id)arg1 toPath:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)getURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getPath:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)syncStartRequest:(id)arg1 expectingResponse:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)syncStartRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)startRequest:(id)arg1 expectingResponse:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)startRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)addValue:(id)arg1 forHeader:(id)arg2;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

@end

@interface CLSEventLogFile : NSObject
{
    NSURL *_fileURL;
    unsigned long long _fileSize;
    NSFileHandle *_fileHandle;
}

@property(readonly, nonatomic) unsigned long long fileSize; // @synthesize fileSize=_fileSize;
@property(readonly, copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (id)readFromFile:(id *)arg1;
- (_Bool)resetFile:(id *)arg1;
- (_Bool)appendData:(id)arg1 error:(id *)arg2;
- (void)closeFileHandle;
- (_Bool)openFileHandleForReading:(id *)arg1;
- (_Bool)openFileHandleForWriting:(id *)arg1;
- (id)init;
- (id)initWithName:(id)arg1 inDirectoryWithURL:(id)arg2;
- (id)initWithURL:(id)arg1;
- (void)dealloc;

@end

@interface CLSIcon : NSObject
{
    NSData *_data;
    NSString *_dataHash;
    struct CGSize _size;
    _Bool _prerendered;
}

+ (_Bool)isWithinMaxSurfaceAreaWithImage:(id)arg1;
@property(readonly, nonatomic) _Bool prerendered; // @synthesize prerendered=_prerendered;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
@property(readonly, copy, nonatomic) NSString *dataHash; // @synthesize dataHash=_dataHash;
@property(readonly, copy, nonatomic) NSData *data; // @synthesize data=_data;
- (_Bool)largerThanSize:(struct CGSize)arg1;
@property(readonly, nonatomic) _Bool isWithinMaxSurfaceArea;
@property(readonly, nonatomic) double surfaceArea;
- (id)initWithPNGImageAtPath:(id)arg1 size:(struct CGSize)arg2 prerendered:(_Bool)arg3;
- (id)initWithData:(id)arg1 size:(struct CGSize)arg2;
- (id)initWithData:(id)arg1 size:(struct CGSize)arg2 prerendered:(_Bool)arg3;
- (id)initWithData:(id)arg1 dataHash:(id)arg2 size:(struct CGSize)arg3 prerendered:(_Bool)arg4;
- (id)init;
- (void)dealloc;

@end

@interface FABObfuscator : NSObject
{
}

+ (id)dictionaryWithObfuscatedData:(id)arg1;
+ (id)obfuscatedDataFromDictionary:(id)arg1;

@end

@interface Fabric : NSObject
{
    _Bool _debug;
    NSDictionary *_kitMap;
    NSDictionary *_SDKConfig;
}

+ (void)startCrashlyticsWithoutCrashReportingIfNeeded;
+ (void)startInstance:(id)arg1;
+ (id)with:(id)arg1;
+ (id)sharedSDK;
@property(retain, nonatomic) NSDictionary *SDKConfig; // @synthesize SDKConfig=_SDKConfig;
@property(retain, nonatomic) NSDictionary *kitMap; // @synthesize kitMap=_kitMap;
@property(nonatomic) _Bool debug; // @synthesize debug=_debug;
- (void).cxx_destruct;
- (id)configurationDictionaryForKit:(id)arg1;
- (id)validSDKConfigFromInfoPlist:(id)arg1;
- (id)SDKAPIKey;
- (id)SDKKitVersions;
- (id)kitForClass:(Class)arg1;
- (id)init;

@end

@interface FABConstants : NSObject
{
}

@end

@interface PFHTTPMultipartRequestBodyStream : NSInputStream <NSStreamDelegate>
{
    unsigned long long _streamStatus;
    NSError *_streamError;
    NSMutableArray *_HTTPBodyParts;
    NSEnumerator *_HTTPBodyPartEnumerator;
    PFHTTPMultipartRequestBodyPart *_currentHTTPBodyPart;
    NSOutputStream *_outputStream;
    NSMutableData *_buffer;
}

@property(retain, nonatomic) NSMutableData *buffer; // @synthesize buffer=_buffer;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) PFHTTPMultipartRequestBodyPart *currentHTTPBodyPart; // @synthesize currentHTTPBodyPart=_currentHTTPBodyPart;
@property(retain, nonatomic) NSEnumerator *HTTPBodyPartEnumerator; // @synthesize HTTPBodyPartEnumerator=_HTTPBodyPartEnumerator;
@property(retain, nonatomic) NSMutableArray *HTTPBodyParts; // @synthesize HTTPBodyParts=_HTTPBodyParts;
@property(copy) NSError *streamError; // @synthesize streamError=_streamError;
@property unsigned long long streamStatus; // @synthesize streamStatus=_streamStatus;
- (void).cxx_destruct;
- (_Bool)_setCFClientFlags:(unsigned long long)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(CDStruct_e097db04 *)arg3;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
@property(readonly, nonatomic) unsigned long long contentLength;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)close;
- (void)open;
- (_Bool)hasBytesAvailable;
- (_Bool)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
- (void)appendHTTPBodyPart:(id)arg1;
- (void)setInitialAndFinalBoundaries;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <NSStreamDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PF_AFXMLRequestOperation : PF_AFHTTPRequestOperation
{
    NSXMLParser *_responseXMLParser;
    NSError *_XMLError;
}

+ (_Bool)canProcessRequest:(id)arg1;
+ (id)acceptableContentTypes;
+ (id)XMLParserRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) NSError *XMLError; // @synthesize XMLError=_XMLError;
@property(retain, nonatomic) NSXMLParser *responseXMLParser; // @synthesize responseXMLParser=_responseXMLParser;
- (void).cxx_destruct;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)cancel;
- (id)error;

@end

@interface PFMulticastDelegate : NSObject
{
    NSMutableArray *callbacks;
}

- (void).cxx_destruct;
- (void)clear;
- (void)invoke:(id)arg1 error:(id)arg2;
- (void)unsubscribe:(CDUnknownBlockType)arg1;
- (void)subscribe:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface PFTwitterAuthenticationProvider : NSObject <PFAuthenticationProvider>
{
    PF_Twitter *twitter;
}

@property(retain, nonatomic) PF_Twitter *twitter; // @synthesize twitter;
- (void).cxx_destruct;
- (id)authType;
- (void)cancel;
- (_Bool)restoreAuthentication:(id)arg1;
- (void)deauthenticate;
- (id)authenticateInBackground;
- (id)authDataWithTwitterId:(id)arg1 screenName:(id)arg2 authToken:(id)arg3 secret:(id)arg4;
- (id)initWithTwitter:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ParseModuleNode : NSObject <ParseModule>
{
    id <ParseModule> _module;
}

+ (id)nodeWithModule:(id)arg1;
@property(nonatomic) __weak id <ParseModule> module; // @synthesize module=_module;
- (void).cxx_destruct;
- (void)parseDidInitializeWithApplicationId:(id)arg1 clientKey:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ParseModuleCollection : NSObject <ParseModule>
{
    NSObject<OS_dispatch_queue> *collectionQueue;
    NSMutableArray *moduleNodesArray;
}

- (void).cxx_destruct;
- (void)cleanupModulesArray;
- (void)enumerateAllModulesUsingBlock:(CDUnknownBlockType)arg1;
- (void)performCollectionAccessBlock:(CDUnknownBlockType)arg1;
- (void)parseDidInitializeWithApplicationId:(id)arg1 clientKey:(id)arg2;
- (unsigned long long)modulesCount;
- (void)removeParseModule:(id)arg1;
- (void)addParseModule:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFACL : NSObject <NSCopying, NSCoding>
{
    NSMutableDictionary *permissionsById;
    _Bool shared;
    PFUser *unresolvedUser;
    CDUnknownBlockType userResolutionListener;
}

+ (void)setDefaultACL:(id)arg1 withAccessForCurrentUser:(_Bool)arg2;
+ (id)defaultACL;
+ (id)ACLWithDictionary:(id)arg1;
+ (id)ACLWithUser:(id)arg1;
+ (id)ACL;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)encodeIntoDictionary;
- (_Bool)getWriteAccessForUser:(id)arg1;
- (void)setWriteAccess:(_Bool)arg1 forUser:(id)arg2;
- (void)setUnresolvedWriteAccess:(_Bool)arg1 forUser:(id)arg2;
- (_Bool)getReadAccessForUser:(id)arg1;
- (void)setReadAccess:(_Bool)arg1 forUser:(id)arg2;
- (void)setUnresolvedReadAccess:(_Bool)arg1 forUser:(id)arg2;
- (void)prepareUnresolvedUser:(id)arg1;
- (void)setWriteAccess:(_Bool)arg1 forRole:(id)arg2;
- (_Bool)getWriteAccessForRole:(id)arg1;
- (void)setReadAccess:(_Bool)arg1 forRole:(id)arg2;
- (_Bool)getReadAccessForRole:(id)arg1;
- (void)validateRoleState:(id)arg1;
- (void)setWriteAccess:(_Bool)arg1 forRoleWithName:(id)arg2;
- (_Bool)getWriteAccessForRoleWithName:(id)arg1;
- (void)setReadAccess:(_Bool)arg1 forRoleWithName:(id)arg2;
- (_Bool)getReadAccessForRoleWithName:(id)arg1;
- (_Bool)getPublicWriteAccess;
- (void)setPublicWriteAccess:(_Bool)arg1;
- (_Bool)getPublicReadAccess;
- (void)setPublicReadAccess:(_Bool)arg1;
- (_Bool)getWriteAccessForUserId:(id)arg1;
- (void)setWriteAccess:(_Bool)arg1 forUserId:(id)arg2;
- (_Bool)getReadAccessForUserId:(id)arg1;
- (void)setReadAccess:(_Bool)arg1 forUserId:(id)arg2;
- (id)initWithDictionary:(id)arg1;
- (_Bool)getAccess:(id)arg1 forUserId:(id)arg2;
- (void)setAccess:(id)arg1 to:(_Bool)arg2 forUserId:(id)arg3;
- (_Bool)hasUnresolvedUser;
- (void)resolveUser:(id)arg1;
- (id)createUnsharedCopy;
- (_Bool)isShared;
- (void)setShared:(_Bool)arg1;
- (id)init;

@end

@interface PFNetworkCommandRunner : NSObject
{
}

+ (id)runCommandAsync:(id)arg1 inOperation:(id)arg2;
+ (id)runCommandAsync:(id)arg1;
+ (void)enqueue:(id)arg1;
+ (id)queue;
+ (id)defaultRequestParameters;
+ (id)createRequest:(id)arg1;
+ (void)signURLRequest:(id)arg1;

@end

@interface PF_AFImageRequestOperation : PF_AFHTTPRequestOperation
{
    _Bool _automaticallyInflatesResponseImage;
    UIImage *_responseImage;
    double _imageScale;
}

+ (_Bool)canProcessRequest:(id)arg1;
+ (id)acceptableContentTypes;
+ (id)imageRequestOperationWithRequest:(id)arg1 imageProcessingBlock:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (id)imageRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2;
@property(nonatomic) _Bool automaticallyInflatesResponseImage; // @synthesize automaticallyInflatesResponseImage=_automaticallyInflatesResponseImage;
@property(nonatomic) double imageScale; // @synthesize imageScale=_imageScale;
@property(retain, nonatomic) UIImage *responseImage; // @synthesize responseImage=_responseImage;
- (void).cxx_destruct;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (id)initWithRequest:(id)arg1;

@end

@interface PFNoObjectEncodingStrategy : NSObject <PFObjectEncodingStrategy>
{
}

+ (id)objectEncoder;
- (id)encodeRelatedObject:(id)arg1;

@end

@interface PFPointerOrLocalIdEncodingStrategy : NSObject <PFObjectEncodingStrategy>
{
}

+ (id)objectEncoder;
- (id)encodeRelatedObject:(id)arg1;

@end

@interface PFPointerEncodingStrategy : PFPointerOrLocalIdEncodingStrategy
{
}

+ (id)objectEncoder;
- (id)encodeRelatedObject:(id)arg1;

@end

@interface PFCommandCache : NSObject
{
    NSString *cachePath;
    int timeoutMaxRetries;
    float timeoutRetryWaitSeconds;
    int maxCacheSizeBytes;
    _Bool shouldStop;
    _Bool connected;
    struct __SCNetworkReachability *reachability;
    NSObject<OS_dispatch_queue> *reachabilityQueue;
    NSMutableDictionary *taskCompletionSources;
    NSCondition *lock;
    _Bool running;
    NSCondition *runningLock;
    PFCommandCacheTestHelper *testHelper;
    NSObject<OS_dispatch_queue> *blockQueue;
}

+ (id)defaultInstance;
@property(retain) NSString *cachePath; // @synthesize cachePath;
- (void).cxx_destruct;
- (id)testHelper;
- (void)notifyTestHelperObjectUpdated;
- (void)setConnected:(_Bool)arg1;
- (void)clear;
- (int)pendingCount;
- (id)runEventuallyAsync:(id)arg1 withObject:(id)arg2;
- (void)runLoop;
- (void)maybeRunAllCommandsNow:(int)arg1;
- (void)runEventuallyInternal:(id)arg1 taskCompletionSource:(id)arg2 preferOldest:(_Bool)arg3 withObject:(id)arg4;
- (int)commandsInMemory;
- (void)simulateReboot;
- (void)removeFile:(id)arg1 error:(id *)arg2;
- (void)pause;
- (void)resume;
- (void)setMaxCacheSizeBytes:(int)arg1;
- (void)setTimeoutRetryWaitSeconds:(float)arg1;
- (void)setTimeoutMaxRetries:(int)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PFCommandCacheTestHelper : NSObject
{
    NSObject<OS_dispatch_semaphore> *events[6];
}

- (void).cxx_destruct;
- (_Bool)waitFor:(int)arg1;
- (void)notify:(int)arg1;
- (void)clear;
- (void)dealloc;
- (id)init;

@end

@interface PFTwitterUtils : NSObject
{
}

+ (void)logInWithTwitterId:(id)arg1 screenName:(id)arg2 authToken:(id)arg3 authTokenSecret:(id)arg4 target:(id)arg5 selector:(SEL)arg6;
+ (void)logInWithTwitterId:(id)arg1 screenName:(id)arg2 authToken:(id)arg3 authTokenSecret:(id)arg4 block:(CDUnknownBlockType)arg5;
+ (id)logInWithTwitterIdInBackground:(id)arg1 screenName:(id)arg2 authToken:(id)arg3 authTokenSecret:(id)arg4;
+ (void)logInWithTarget:(id)arg1 selector:(SEL)arg2;
+ (void)logInWithBlock:(CDUnknownBlockType)arg1;
+ (id)logInInBackground;
+ (void)linkUser:(id)arg1 twitterId:(id)arg2 screenName:(id)arg3 authToken:(id)arg4 authTokenSecret:(id)arg5 target:(id)arg6 selector:(SEL)arg7;
+ (void)linkUser:(id)arg1 twitterId:(id)arg2 screenName:(id)arg3 authToken:(id)arg4 authTokenSecret:(id)arg5 block:(CDUnknownBlockType)arg6;
+ (id)linkUserInBackground:(id)arg1 twitterId:(id)arg2 screenName:(id)arg3 authToken:(id)arg4 authTokenSecret:(id)arg5;
+ (void)linkUser:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (void)linkUser:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)linkUserInBackground:(id)arg1;
+ (void)linkUser:(id)arg1;
+ (void)unlinkUserInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (void)unlinkUserInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)unlinkUserInBackground:(id)arg1;
+ (_Bool)unlinkUser:(id)arg1 error:(id *)arg2;
+ (_Bool)unlinkUser:(id)arg1;
+ (void)initializeWithConsumerKey:(id)arg1 consumerSecret:(id)arg2;
+ (void)checkInitialization;
+ (_Bool)isLinkedWithUser:(id)arg1;
+ (id)twitter;

@end

@interface PFCategoryLoader : NSObject
{
}

+ (void)loadPrivateCategories;

@end

@interface PFProductsRequestHandler : NSObject <SKProductsRequestDelegate>
{
    PFProductsRequestHandler *own;
    SKProductsRequest *productsRequest;
    CDUnknownBlockType completion;
}

@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion;
@property(retain, nonatomic) SKProductsRequest *productsRequest; // @synthesize productsRequest;
@property(retain, nonatomic) PFProductsRequestHandler *own; // @synthesize own;
- (void).cxx_destruct;
- (void)requestDidFinish:(id)arg1;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (id)initWithProductsRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFPaymentTransactionObserver : NSObject <SKPaymentTransactionObserver>
{
    NSMutableDictionary *blocks;
    NSMutableDictionary *runOnceBlocks;
    NSObject *lockObj;
    NSObject *runOnceLockObj;
}

@property(retain, nonatomic) NSObject *runOnceLockObj; // @synthesize runOnceLockObj;
@property(retain, nonatomic) NSObject *lockObj; // @synthesize lockObj;
@property(retain, nonatomic) NSMutableDictionary *runOnceBlocks; // @synthesize runOnceBlocks;
@property(retain, nonatomic) NSMutableDictionary *blocks; // @synthesize blocks;
- (void).cxx_destruct;
- (void)finish:(id)arg1;
- (void)handle:(id)arg1 runOnceBlock:(CDUnknownBlockType)arg2;
- (void)handle:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)paymentQueueRestoreCompletedTransactionsFinished:(id)arg1;
- (void)paymentQueue:(id)arg1 restoreCompletedTransactionsFailedWithError:(id)arg2;
- (void)completeTransaction:(id)arg1;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFGeoPoint : NSObject <NSCopying, NSCoding>
{
    double _latitude;
    double _longitude;
}

+ (id)geoPointWithDictionary:(id)arg1;
+ (id)sharedLocationManager;
+ (void)geoPointForCurrentLocationInBackground:(CDUnknownBlockType)arg1;
+ (id)geoPointWithLatitude:(double)arg1 longitude:(double)arg2;
+ (id)geoPointWithLocation:(id)arg1;
+ (id)geoPoint;
@property(nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(nonatomic) double latitude; // @synthesize latitude=_latitude;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)initWithEncodedDictionary:(id)arg1;
- (id)encodeIntoDictionary;
- (double)distanceInKilometersTo:(id)arg1;
- (double)distanceInMilesTo:(id)arg1;
- (double)distanceInRadiansTo:(id)arg1;

@end

@interface PFAlertView : UIAlertView <UIAlertViewDelegate>
{
    CDUnknownBlockType _completion;
}

+ (id)showAlertWithTitle:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3 otherButtonTitles:(id)arg4 completion:(CDUnknownBlockType)arg5;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFAnonymousAuthenticationProvider : NSObject <PFAuthenticationProvider>
{
}

- (id)authType;
- (void)cancel;
- (_Bool)restoreAuthentication:(id)arg1;
- (void)deauthenticate;
- (id)authData;
- (id)authenticateInBackground;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PF_Twitter : NSObject
{
    NSString *consumerKey;
    NSString *consumerSecret;
    NSString *authToken;
    NSString *authTokenSecret;
    NSString *userId;
    NSString *screenName;
    ACAccountStore *accountStore;
}

@property(copy, nonatomic) ACAccountStore *accountStore; // @synthesize accountStore;
@property(copy, nonatomic) NSString *screenName; // @synthesize screenName;
@property(copy, nonatomic) NSString *userId; // @synthesize userId;
@property(copy, nonatomic) NSString *authTokenSecret; // @synthesize authTokenSecret;
@property(copy, nonatomic) NSString *authToken; // @synthesize authToken;
@property(copy, nonatomic) NSString *consumerSecret; // @synthesize consumerSecret;
@property(copy, nonatomic) NSString *consumerKey; // @synthesize consumerKey;
- (void).cxx_destruct;
- (void)signRequest:(id)arg1;
- (id)getLocalTwitterAccountAsync;
- (void)authorizeWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2 cancel:(CDUnknownBlockType)arg3;
- (id)authorizeInBackground;
- (id)performWebViewAuthAsync;
- (id)performReverseAuthAsync;
- (void)setLoginResultValues:(id)arg1;
- (id)getAccessTokenForReverseAuthAsync:(id)arg1 localTwitterAccount:(id)arg2;
- (id)getAccessTokenForWebAuthAsync:(id)arg1 requestSecret:(id)arg2 token:(id)arg3;
- (id)getRequestTokenAsync:(_Bool)arg1;
- (id)showWebViewDialogAsync:(id)arg1 requestSecret:(id)arg2;
- (id)init;

@end

@interface PFHTTPURLConnectionOperation : PFHTTPRequestOperation
{
    NSURLConnection *_connection;
}

@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)_operationDidFinish;
- (void)_operationDidCancel;
- (_Bool)_operationDidStart;

@end

@interface PFNetworkActivityIndicatorManager : NSObject
{
    PF_AFNetworkActivityIndicatorManager *_indicatorManager;
}

+ (id)sharedManager;
- (void).cxx_destruct;
- (void)decrementActivityCount;
- (void)incrementActivityCount;
@property(readonly, nonatomic, getter=isNetworkActivityIndicatorVisible) _Bool networkActivityIndicatorVisible;
@property(nonatomic) unsigned long long networkActivityCount;
@property(nonatomic, getter=isEnabled) _Bool enabled;
- (id)init;

@end

@interface PFObject : NSObject
{
    _Bool dirty;
    NSMutableArray *operationSetQueue;
    NSMutableDictionary *estimatedData;
    NSObject *lock;
    _Bool hasBeenFetched;
    NSMutableDictionary *dataAvailability;
    NSMutableDictionary *serverData;
    NSMutableDictionary *hashedObjectsCache;
    NSDate *updatedAt;
    NSDate *createdAt;
    NSString *localId;
    NSString *objectId;
    NSString *parseClassName;
    _Bool createdAsPointer;
    PFMulticastDelegate *saveDelegate;
    PFTaskQueue *taskQueue;
}

+ (_Bool)resolveInstanceMethod:(SEL)arg1;
+ (void)deleteAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)deleteAllInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (id)deleteAllInBackground:(id)arg1;
+ (_Bool)deleteAll:(id)arg1 error:(id *)arg2;
+ (_Bool)deleteAll:(id)arg1;
+ (void)saveAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)saveAllInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (id)saveAllInBackground:(id)arg1;
+ (_Bool)saveAll:(id)arg1 error:(id *)arg2;
+ (_Bool)saveAll:(id)arg1;
+ (void)fetchAllIfNeededInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)fetchAllIfNeededInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (id)fetchAllIfNeededInBackground:(id)arg1;
+ (void)fetchAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)fetchAllInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (id)fetchAllInBackground:(id)arg1;
+ (void)fetchAllIfNeeded:(id)arg1 error:(id *)arg2;
+ (void)fetchAll:(id)arg1 error:(id *)arg2;
+ (void)fetchAllIfNeeded:(id)arg1;
+ (void)fetchAll:(id)arg1;
+ (void)updateArray:(id)arg1 withResultsOfFetchAll:(id)arg2 forceFetch:(_Bool)arg3;
+ (id)toObjectIdArray:(id)arg1 omitObjectsWithData:(_Bool)arg2;
+ (void)assertSubclassIsRegistered:(Class)arg1;
+ (id)query;
+ (void)registerSubclass;
+ (id)objectWithClassName:(id)arg1 dictionary:(id)arg2;
+ (id)objectWithoutDataWithClassName:(id)arg1 objectId:(id)arg2;
+ (id)objectWithClassName:(id)arg1;
+ (void)initialize;
@property(retain, nonatomic) PFTaskQueue *taskQueue; // @synthesize taskQueue;
- (void).cxx_destruct;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (id)description;
- (id)allKeys;
- (void)incrementKey:(id)arg1 byAmount:(id)arg2;
- (void)incrementKey:(id)arg1;
- (void)removeObjectsInArray:(id)arg1 forKey:(id)arg2;
- (void)removeObject:(id)arg1 forKey:(id)arg2;
- (void)addUniqueObjectsFromArray:(id)arg1 forKey:(id)arg2;
- (void)addUniqueObject:(id)arg1 forKey:(id)arg2;
- (void)addObjectsFromArray:(id)arg1 forKey:(id)arg2;
- (void)addObject:(id)arg1 forKey:(id)arg2;
- (void)removeObjectForKey:(id)arg1;
- (id)relationForKey:(id)arg1;
- (id)relationforKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)fetchIfNeededInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)fetchIfNeededInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (id)fetchIfNeededInBackground;
- (id)fetchIfNeeded:(id *)arg1;
- (id)fetchIfNeeded;
- (void)fetchInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)fetchInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (id)fetchInBackground;
- (_Bool)isDataAvailable;
- (void)fetch:(id *)arg1;
- (void)fetch;
- (void)refreshInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)refreshInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)refresh:(id *)arg1;
- (void)refresh;
- (_Bool)isDirtyForKey:(id)arg1;
- (_Bool)isDirty;
- (void)deleteEventually;
- (void)saveEventually:(CDUnknownBlockType)arg1;
- (void)saveEventually;
- (void)saveInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)saveInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (id)saveInBackground;
- (_Bool)save:(id *)arg1;
- (_Bool)save;
- (void)deleteInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)deleteInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (id)deleteInBackground;
- (_Bool)delete:(id *)arg1;
- (_Bool)delete;
- (id)initWithClassName:(id)arg1;
@property(retain, nonatomic) NSString *objectId; // @dynamic objectId;

// Remaining properties
@property(retain, nonatomic) PFACL *ACL; // @dynamic ACL;
@property(retain, nonatomic) NSDate *createdAt; // @dynamic createdAt;
@property(retain, nonatomic) NSString *localId; // @dynamic localId;
@property(readonly) NSString *parseClassName; // @dynamic parseClassName;
@property(retain, nonatomic) PFMulticastDelegate *saveDelegate; // @dynamic saveDelegate;
@property(retain, nonatomic) NSDate *updatedAt; // @dynamic updatedAt;

@end

@interface PFMultiCommand : PFCommand
{
    NSArray *_commands;
}

+ (id)multiCommandWithCommands:(id)arg1 sessionToken:(id)arg2;
@property(retain, nonatomic) NSArray *commands; // @synthesize commands=_commands;
- (void).cxx_destruct;

@end

@interface PFFileDownloadOperation : PFTaskHTTPRequestOperation
{
    NSString *_tempFilePath;
    NSString *_finalFilePath;
    NSOutputStream *_outputStream;
}

- (void).cxx_destruct;
- (void)_operationDidFinish;
- (void)_operationDidCancel;
- (id)outputStream;
- (id)initWithFileURL:(id)arg1 targetPath:(id)arg2 progressBlock:(CDUnknownBlockType)arg3;

@end

@interface PFPush : NSObject <NSCopying>
{
    _Bool pushToAndroid;
    _Bool pushToIOS;
    NSSet *channelSet;
    PFQuery *query;
    NSDate *expirationDate;
    NSNumber *expirationTimeInterval;
    NSDictionary *data;
}

+ (void)storeDeviceToken:(id)arg1;
+ (void)handlePush:(id)arg1;
+ (id)_performOperationForChannelInBackground:(id)arg1 ofType:(unsigned char)arg2;
+ (void)unsubscribeFromChannelInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (void)unsubscribeFromChannelInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)unsubscribeFromChannelInBackground:(id)arg1;
+ (_Bool)unsubscribeFromChannel:(id)arg1 error:(id *)arg2;
+ (void)subscribeToChannelInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (void)subscribeToChannelInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)subscribeToChannelInBackground:(id)arg1;
+ (_Bool)subscribeToChannel:(id)arg1 error:(id *)arg2;
+ (void)getSubscribedChannelsInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
+ (void)getSubscribedChannelsInBackgroundWithBlock:(CDUnknownBlockType)arg1;
+ (id)getSubscribedChannelsInBackground;
+ (id)getSubscribedChannels:(id *)arg1;
+ (void)sendPushDataToQueryInBackground:(id)arg1 withData:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (id)sendPushDataToQueryInBackground:(id)arg1 withData:(id)arg2;
+ (_Bool)sendPushDataToQuery:(id)arg1 withData:(id)arg2 error:(id *)arg3;
+ (void)sendPushMessageToQueryInBackground:(id)arg1 withMessage:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (id)sendPushMessageToQueryInBackground:(id)arg1 withMessage:(id)arg2;
+ (_Bool)sendPushMessageToQuery:(id)arg1 withMessage:(id)arg2 error:(id *)arg3;
+ (void)sendPushDataToChannelInBackground:(id)arg1 withData:(id)arg2 target:(id)arg3 selector:(SEL)arg4;
+ (void)sendPushDataToChannelInBackground:(id)arg1 withData:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (id)sendPushDataToChannelInBackground:(id)arg1 withData:(id)arg2;
+ (_Bool)sendPushDataToChannel:(id)arg1 withData:(id)arg2 error:(id *)arg3;
+ (void)sendPushMessageToChannelInBackground:(id)arg1 withMessage:(id)arg2 target:(id)arg3 selector:(SEL)arg4;
+ (void)sendPushMessageToChannelInBackground:(id)arg1 withMessage:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (id)sendPushMessageToChannelInBackground:(id)arg1 withMessage:(id)arg2;
+ (_Bool)sendPushMessageToChannel:(id)arg1 withMessage:(id)arg2 error:(id *)arg3;
+ (id)push;
@property _Bool pushToIOS; // @synthesize pushToIOS;
@property _Bool pushToAndroid; // @synthesize pushToAndroid;
@property(retain, nonatomic) NSDictionary *data; // @synthesize data;
@property(retain, nonatomic) NSNumber *expirationTimeInterval; // @synthesize expirationTimeInterval;
@property(retain, nonatomic) NSDate *expirationDate; // @synthesize expirationDate;
@property(retain, nonatomic) PFQuery *query; // @synthesize query;
@property(retain, nonatomic) NSSet *channelSet; // @synthesize channelSet;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)sendPushInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)sendPushInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (id)sendPushInBackground;
- (_Bool)sendPush:(id *)arg1;
- (void)clearExpiration;
- (void)expireAfterTimeInterval:(double)arg1;
- (void)expireAtDate:(id)arg1;
- (void)setMessage:(id)arg1;
- (void)setChannels:(id)arg1;
- (void)setChannel:(id)arg1;
- (id)createSendCommand;
- (id)init;

@end

@interface PFCachedCommandRunner : NSObject
{
}

+ (id)runCommandAsync:(id)arg1 inOperation:(id)arg2 cachePolicy:(int)arg3 maxCacheAge:(double)arg4;
+ (id)runCommandAsync:(id)arg1 cachePolicy:(int)arg2 maxCacheAge:(double)arg3;
+ (id)getCachedResultForCommandAsync:(id)arg1 inOperation:(id)arg2 maxCacheAge:(double)arg3;
+ (void)initialize;

@end

@interface PFViewUtils : NSObject <UIAlertViewDelegate>
{
    _Bool alertShowing;
    _Bool usesOfflineMessage;
    _Bool usesErrorMessage;
}

+ (id)utils;
+ (void)initialize;
@property(nonatomic) _Bool usesErrorMessage; // @synthesize usesErrorMessage;
@property(nonatomic) _Bool usesOfflineMessage; // @synthesize usesOfflineMessage;
- (void)alertViewCancel:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)showError;
- (void)showOfflineError;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFQuery : NSObject <NSCopying>
{
    NSOperation *cancellationToken;
    _Bool trace;
    int cachePolicy;
    NSString *parseClassName;
    NSMutableDictionary *where;
    NSMutableArray *include;
    NSMutableArray *selectedKeys;
    long long limit;
    long long skip;
    NSString *order;
    double maxCacheAge;
    NSMutableDictionary *_extraOptions;
}

+ (void)clearAllCachedResults;
+ (id)queryForUser;
+ (id)getUserObjectWithId:(id)arg1 error:(id *)arg2;
+ (id)getUserObjectWithId:(id)arg1;
+ (id)getObjectOfClass:(id)arg1 objectId:(id)arg2 error:(id *)arg3;
+ (id)getObjectOfClass:(id)arg1 objectId:(id)arg2;
+ (id)orQueryWithSubqueries:(id)arg1;
+ (id)queryWithClassName:(id)arg1 predicate:(id)arg2;
+ (id)queryWithClassName:(id)arg1;
+ (id)maybeEncodeSubQuery:(id)arg1;
+ (id)queryWithClassName:(id)arg1 normalizedPredicate:(id)arg2;
+ (void)assertKeyPathConstant:(id)arg1;
+ (id)normalizePredicate:(id)arg1;
+ (id)hoistCommonPredicates:(id)arg1;
+ (id)normalizeToDNF:(id)arg1;
+ (void)assertNoPredicateModifiers:(id)arg1;
+ (id)asOrOfAnds:(id)arg1;
+ (id)reverseYodaConditions:(id)arg1;
+ (id)removeBetween:(id)arg1;
+ (id)removeNegation:(id)arg1;
+ (id)negatePredicate:(id)arg1;
+ (id)mapPredicate:(id)arg1 compoundBlock:(CDUnknownBlockType)arg2 comparisonBlock:(CDUnknownBlockType)arg3;
+ (id)regexForString:(id)arg1;
@property(retain, nonatomic) NSMutableDictionary *extraOptions; // @synthesize extraOptions=_extraOptions;
@property(nonatomic) _Bool trace; // @synthesize trace;
@property double maxCacheAge; // @synthesize maxCacheAge;
@property int cachePolicy; // @synthesize cachePolicy;
@property(retain, nonatomic) NSString *order; // @synthesize order;
@property(nonatomic) long long skip; // @synthesize skip;
@property(nonatomic) long long limit; // @synthesize limit;
@property(retain, nonatomic) NSMutableArray *selectedKeys; // @synthesize selectedKeys;
@property(retain, nonatomic) NSMutableArray *include; // @synthesize include;
@property(retain, nonatomic) NSMutableDictionary *where; // @synthesize where;
@property(retain, nonatomic) NSString *parseClassName; // @synthesize parseClassName;
- (void).cxx_destruct;
- (void)clearCachedResult;
- (_Bool)hasCachedResult;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)cancel;
- (void)countObjectsInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)countObjectsInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (id)countObjectsInBackground;
- (long long)countObjects:(id *)arg1;
- (long long)countObjects;
- (void)getFirstObjectInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)getFirstObjectInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)getFirstObjectInBackground;
- (id)getFirstObject:(id *)arg1;
- (id)getFirstObject;
- (void)findObjectsInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)findObjectsInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)findObjectsInBackground;
- (id)findObjects:(id *)arg1;
- (id)findObjects;
- (void)getObjectInBackgroundWithId:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
- (void)getObjectInBackgroundWithId:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)getObjectInBackgroundWithId:(id)arg1;
- (id)getObjectWithId:(id)arg1 error:(id *)arg2;
- (id)getObjectWithId:(id)arg1;
- (id)countAsync:(int)arg1 after:(id)arg2;
- (id)findAsyncWithCachePolicy:(int)arg1 conditions:(id)arg2 limit:(long long)arg3 skip:(long long)arg4 after:(id)arg5;
- (id)findObjectsAsync:(int)arg1 after:(id)arg2;
- (id)getObjectWithIdAsync:(id)arg1 cachePolicy:(int)arg2 after:(id)arg3;
- (id)getFirstObjectAsync:(int)arg1 after:(id)arg2;
- (id)cacheKeyForFindCommand;
- (id)constructFindCommand:(id)arg1 withConditions:(id)arg2 limit:(long long)arg3 skip:(long long)arg4;
- (id)constructFindParamsWithConditions:(id)arg1 limit:(long long)arg2 skip:(long long)arg3;
- (id)constructFindParams;
- (void)markAsRunning:(id)arg1;
- (void)checkIfCommandIsRunning;
- (void)whereComparisonPredicate:(id)arg1;
- (void)selectKeys:(id)arg1;
- (void)includeKey:(id)arg1;
- (void)redirectClassNameForKey:(id)arg1;
- (void)whereRelatedToObject:(id)arg1 fromKey:(id)arg2;
- (void)whereKey:(id)arg1 doesNotMatchKey:(id)arg2 inQuery:(id)arg3;
- (void)whereKey:(id)arg1 matchesKey:(id)arg2 inQuery:(id)arg3;
- (void)whereKey:(id)arg1 doesNotMatchQuery:(id)arg2;
- (void)whereKey:(id)arg1 matchesQuery:(id)arg2;
- (void)whereKeyDoesNotExist:(id)arg1;
- (void)whereKeyExists:(id)arg1;
- (void)whereKey:(id)arg1 hasSuffix:(id)arg2;
- (void)whereKey:(id)arg1 hasPrefix:(id)arg2;
- (void)whereKey:(id)arg1 containsString:(id)arg2;
- (void)whereKey:(id)arg1 matchesRegex:(id)arg2 modifiers:(id)arg3;
- (void)whereKey:(id)arg1 matchesRegex:(id)arg2;
- (void)whereKey:(id)arg1 withinGeoBoxFromSouthwest:(id)arg2 toNortheast:(id)arg3;
- (void)whereKey:(id)arg1 nearGeoPoint:(id)arg2 withinKilometers:(double)arg3;
- (void)whereKey:(id)arg1 nearGeoPoint:(id)arg2 withinMiles:(double)arg3;
- (void)whereKey:(id)arg1 nearGeoPoint:(id)arg2 withinRadians:(double)arg3;
- (void)whereKey:(id)arg1 nearGeoPoint:(id)arg2;
- (void)whereKey:(id)arg1 containsAllObjectsInArray:(id)arg2;
- (void)whereKey:(id)arg1 notContainedIn:(id)arg2;
- (void)whereKey:(id)arg1 containedIn:(id)arg2;
- (void)whereKey:(id)arg1 notEqualTo:(id)arg2;
- (void)whereKey:(id)arg1 lessThanOrEqualTo:(id)arg2;
- (void)whereKey:(id)arg1 lessThan:(id)arg2;
- (void)whereKey:(id)arg1 greaterThanOrEqualTo:(id)arg2;
- (void)whereKey:(id)arg1 greaterThan:(id)arg2;
- (void)whereKey:(id)arg1 equalTo:(id)arg2;
- (void)whereKey:(id)arg1 multipleConditions:(id)arg2;
- (void)whereKey:(id)arg1 condition:(id)arg2 object:(id)arg3;
- (void)orderBySortDescriptors:(id)arg1;
- (void)orderBySortDescriptor:(id)arg1;
- (void)addDescendingOrder:(id)arg1;
- (void)orderByDescending:(id)arg1;
- (void)addAscendingOrder:(id)arg1;
- (void)orderByAscending:(id)arg1;
- (id)initWithClassName:(id)arg1;

@end

@interface PFOAuth1FlowDialog : UIView <UIWebViewDelegate>
{
    UIView *_modalBackgroundView;
    NSURL *_baseURL;
    NSURL *_loadingURL;
    UILabel *_titleLabel;
    UIButton *_closeButton;
    UIWebView *_webView;
    UIActivityIndicatorView *_activityIndicator;
    long long _orientation;
    _Bool _showingKeyboard;
    id <PFOAuth1FlowDialogDataSource> _dataSource;
    CDUnknownBlockType _completion;
    NSDictionary *_queryParameters;
    NSString *_redirectURLPrefix;
}

+ (id)_closeButtonImage;
+ (id)_urlFromBaseURL:(id)arg1 queryParameters:(id)arg2;
+ (void)_strokeRect:(struct CGRect)arg1 withColorComponents:(const double *)arg2;
+ (void)_fillRect:(struct CGRect)arg1 withColorComponents:(const double *)arg2 radius:(double)arg3;
@property(copy, nonatomic) NSString *redirectURLPrefix; // @synthesize redirectURLPrefix=_redirectURLPrefix;
@property(copy, nonatomic) NSDictionary *queryParameters; // @synthesize queryParameters=_queryParameters;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(nonatomic) __weak id <PFOAuth1FlowDialogDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)_sizeToFitOrientation;
- (struct CGAffineTransform)_transformForOrientation:(long long)arg1;
- (_Bool)_shouldRotateToOrientation:(long long)arg1;
- (void)_deviceOrientationDidChange:(id)arg1;
- (void)_removeObservers;
- (void)_addObservers;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)loadURL:(id)arg1 queryParameters:(id)arg2;
- (void)load;
- (void)_cancelButtonAction;
- (void)_dismissWithSuccess:(_Bool)arg1 url:(id)arg2 error:(id)arg3;
- (void)dismissAnimated:(_Bool)arg1;
- (void)showAnimated:(_Bool)arg1;
@property(copy, nonatomic) NSString *title;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithURL:(id)arg1 queryParameters:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFFile : NSObject
{
    NSObject<OS_dispatch_queue> *_synchronizationQueue;
    NSString *_name;
    NSString *_url;
    NSString *_customContentType;
    PFTaskQueue *_taskQueue;
    NSOperation *_cancellationToken;
    NSOperation *_currentNetworkOperation;
}

+ (id)fileWithName:(id)arg1 url:(id)arg2;
+ (void)_clearFileCache;
+ (id)_stageFilesDirectoryPath;
+ (id)_cacheFilesDirectoryPath;
+ (void)initialize;
+ (id)fileWithData:(id)arg1 contentType:(id)arg2;
+ (id)fileWithName:(id)arg1 data:(id)arg2 contentType:(id)arg3;
+ (id)fileWithName:(id)arg1 contentsAtPath:(id)arg2;
+ (id)fileWithName:(id)arg1 data:(id)arg2;
+ (id)fileWithData:(id)arg1;
@property(retain, nonatomic) NSOperation *currentNetworkOperation; // @synthesize currentNetworkOperation=_currentNetworkOperation;
@property(retain, nonatomic) NSOperation *cancellationToken; // @synthesize cancellationToken=_cancellationToken;
@property(retain, nonatomic) PFTaskQueue *taskQueue; // @synthesize taskQueue=_taskQueue;
@property(copy, nonatomic) NSString *customContentType; // @synthesize customContentType=_customContentType;
@property(copy, nonatomic) NSString *url; // @synthesize url=_url;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)_performProgressBlockAsync:(CDUnknownBlockType)arg1 withProgress:(int)arg2;
- (void)_performDataAccessBlock:(CDUnknownBlockType)arg1;
@property(readonly) _Bool isDataAvailable;
@property(readonly, nonatomic, getter=isDirty) _Bool dirty;
- (id)_mimeType;
- (id)_cachedDataStream;
- (id)_cachedData;
- (id)_cachedFilePath;
- (id)_stagingFilePath;
- (id)_downloadFileAsyncWithCancellationToken:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (id)_downloadAsyncWithCancellationToken:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (id)_downloadAsyncWithProgressBlock:(CDUnknownBlockType)arg1;
- (id)_getDataStreamAsyncWithProgressBlock:(CDUnknownBlockType)arg1;
- (id)_getDataAsyncWithProgressBlock:(CDUnknownBlockType)arg1;
- (id)_uploadFileAsyncWithSessionToken:(id)arg1 cancellationToken:(id)arg2 progressBlock:(CDUnknownBlockType)arg3;
- (id)_uploadAsyncWithProgressBlock:(CDUnknownBlockType)arg1;
- (id)initWithName:(id)arg1 url:(id)arg2;
- (id)init;
- (void)cancel;
- (void)getDataInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)getDataStreamInBackgroundWithBlock:(CDUnknownBlockType)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (void)getDataInBackgroundWithBlock:(CDUnknownBlockType)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (void)getDataStreamInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)getDataInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)getDataStreamInBackground;
- (id)getDataInBackground;
- (id)getDataStream:(id *)arg1;
- (id)getData:(id *)arg1;
- (id)getDataStream;
- (id)getData;
- (void)saveInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)saveInBackgroundWithBlock:(CDUnknownBlockType)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (void)saveInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)saveInBackground;
- (_Bool)save:(id *)arg1;
- (_Bool)save;
- (void)dealloc;

// Remaining properties
@property(readonly, nonatomic) _Bool isDirty;

@end

@interface PFLocalIdManagerMapEntry : NSObject
{
    int referenceCount;
    NSString *objectId;
}

@property int referenceCount; // @synthesize referenceCount;
@property(retain, nonatomic) NSString *objectId; // @synthesize objectId;
- (void).cxx_destruct;
- (void)writeToFile:(id)arg1;
- (id)initWithFile:(id)arg1;

@end

@interface PFLocalIdManager : NSObject
{
    NSString *diskPath;
    NSObject *lock;
    NSMutableDictionary *inMemoryCache;
}

+ (_Bool)isLocalId:(id)arg1;
+ (id)defaultInstance;
- (void).cxx_destruct;
- (void)clearInMemoryCache;
- (_Bool)clear;
- (id)objectIdForLocalId:(id)arg1;
- (void)setObjectId:(id)arg1 forLocalId:(id)arg2;
- (void)releaseLocalIdOnDisk:(id)arg1;
- (void)retainLocalIdOnDisk:(id)arg1;
- (id)createLocalId;
- (void)removeMapEntry:(id)arg1;
- (void)putMapEntry:(id)arg1 forLocalId:(id)arg2;
- (id)getMapEntry:(id)arg1;
- (id)init;

@end

@interface PFOAuth : NSObject
{
}

+ (id)createAuthorizationHeader:(id)arg1 method:(id)arg2 body:(id)arg3 additionalParameters:(id)arg4 oAuthConsumerKey:(id)arg5 oAuthConsumerSecret:(id)arg6 oAuthToken:(id)arg7 oAuthTokenSecret:(id)arg8;
+ (id)createAuthorizationHeader:(id)arg1 method:(id)arg2 body:(id)arg3 oAuthConsumerKey:(id)arg4 oAuthConsumerSecret:(id)arg5;

@end

@interface PFCommand : NSObject
{
    NSMutableDictionary *params;
    NSString *serverOperation;
    NSString *cacheKey;
    NSString *localId;
}

+ (_Bool)forEachLocalIdIn:(id)arg1 doBlock:(CDUnknownBlockType)arg2;
+ (id)commandFromJSON:(id)arg1;
+ (id)commandWithServerOperation:(id)arg1 params:(id)arg2 sessionToken:(id)arg3;
@property(retain, nonatomic) NSString *localId; // @synthesize localId;
@property(retain, nonatomic) NSString *serverOperation; // @synthesize serverOperation;
@property(readonly, nonatomic) NSMutableDictionary *params; // @synthesize params;
- (void).cxx_destruct;
- (void)resolveLocalIds;
- (void)releaseLocalIds;
- (void)retainLocalIds;
- (void)forEachLocalId:(CDUnknownBlockType)arg1;
- (void)maybeChangeServerOperation;
- (id)description;
@property(readonly, nonatomic) NSString *cacheKey; // @synthesize cacheKey;
- (id)json;
- (id)initWithServerOperation:(id)arg1 params:(id)arg2 sessionToken:(id)arg3;

@end

@interface PFKeychainStore : NSObject
{
    NSString *_service;
    NSDictionary *_keychainQueryTemplate;
}

+ (id)defaultStore;
+ (id)_keychainQueryTemplateForService:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *keychainQueryTemplate; // @synthesize keychainQueryTemplate=_keychainQueryTemplate;
@property(readonly, copy, nonatomic) NSString *service; // @synthesize service=_service;
- (void).cxx_destruct;
- (_Bool)removeAllObjects;
- (_Bool)removeObjectForKey:(id)arg1;
- (_Bool)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (_Bool)setObject:(id)arg1 forKey:(id)arg2;
- (id)_dataForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)objectForKey:(id)arg1;
- (id)initWithService:(id)arg1;

@end

@interface PF_AFURLConnectionOperation : NSOperation <NSURLConnectionDelegate, NSURLConnectionDataDelegate, NSCoding, NSCopying>
{
    _Bool _cancelled;
    _Bool _allowsInvalidSSLCertificate;
    _Bool _shouldUseCredentialStorage;
    short _state;
    int _SSLPinningMode;
    NSURLConnection *_connection;
    NSSet *_runLoopModes;
    NSURLRequest *_request;
    NSURLResponse *_response;
    NSError *_error;
    NSData *_responseData;
    NSString *_responseString;
    unsigned long long _responseStringEncoding;
    long long _totalBytesRead;
    NSOutputStream *_outputStream;
    NSURLCredential *_credential;
    NSDictionary *_userInfo;
    unsigned long long _backgroundTaskIdentifier;
    CDUnknownBlockType _uploadProgress;
    CDUnknownBlockType _downloadProgress;
    CDUnknownBlockType _authenticationChallenge;
    CDUnknownBlockType _cacheResponse;
    CDUnknownBlockType _redirectResponse;
    NSRecursiveLock *_lock;
}

+ (id)pinnedPublicKeys;
+ (id)pinnedCertificates;
+ (id)networkRequestThread;
+ (void)networkRequestThreadEntryPoint:(id)arg1;
@property(retain, nonatomic) NSRecursiveLock *lock; // @synthesize lock=_lock;
@property(copy, nonatomic) CDUnknownBlockType redirectResponse; // @synthesize redirectResponse=_redirectResponse;
@property(copy, nonatomic) CDUnknownBlockType cacheResponse; // @synthesize cacheResponse=_cacheResponse;
@property(copy, nonatomic) CDUnknownBlockType authenticationChallenge; // @synthesize authenticationChallenge=_authenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(copy, nonatomic) CDUnknownBlockType uploadProgress; // @synthesize uploadProgress=_uploadProgress;
@property(nonatomic) unsigned long long backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) _Bool shouldUseCredentialStorage; // @synthesize shouldUseCredentialStorage=_shouldUseCredentialStorage;
@property(nonatomic) int SSLPinningMode; // @synthesize SSLPinningMode=_SSLPinningMode;
@property(retain, nonatomic) NSURLCredential *credential; // @synthesize credential=_credential;
@property(nonatomic) long long totalBytesRead; // @synthesize totalBytesRead=_totalBytesRead;
@property(nonatomic) unsigned long long responseStringEncoding; // @synthesize responseStringEncoding=_responseStringEncoding;
@property(copy, nonatomic) NSString *responseString; // @synthesize responseString=_responseString;
@property(retain, nonatomic) NSData *responseData; // @synthesize responseData=_responseData;
@property(nonatomic) _Bool allowsInvalidSSLCertificate; // @synthesize allowsInvalidSSLCertificate=_allowsInvalidSSLCertificate;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSSet *runLoopModes; // @synthesize runLoopModes=_runLoopModes;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(nonatomic, getter=isCancelled) _Bool cancelled; // @synthesize cancelled=_cancelled;
@property(nonatomic) short state; // @synthesize state=_state;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (_Bool)connectionShouldUseCredentialStorage:(id)arg1;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)cancelConnection;
- (void)cancel;
- (void)finish;
- (void)operationDidStart;
- (void)start;
- (_Bool)isConcurrent;
- (_Bool)isFinished;
- (_Bool)isExecuting;
- (_Bool)isReady;
- (void)resume;
- (_Bool)isPaused;
- (void)pause;
- (void)setRedirectResponseBlock:(CDUnknownBlockType)arg1;
- (void)setCacheResponseBlock:(CDUnknownBlockType)arg1;
- (void)setWillSendRequestForAuthenticationChallengeBlock:(CDUnknownBlockType)arg1;
- (void)setDownloadProgressBlock:(CDUnknownBlockType)arg1;
- (void)setUploadProgressBlock:(CDUnknownBlockType)arg1;
- (void)setShouldExecuteAsBackgroundTaskWithExpirationHandler:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) NSInputStream *inputStream; // @dynamic inputStream;
- (void)setCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFBlockRetryer : NSObject
{
}

+ (void)setInitialDelay:(double)arg1;
+ (id)retryBlock:(CDUnknownBlockType)arg1 attempts:(int)arg2;
+ (id)retryBlock:(CDUnknownBlockType)arg1 attempts:(int)arg2 delay:(double)arg3;

@end

@interface PF_AFQueryStringPair : NSObject
{
    id _field;
    id _value;
}

@property(retain, nonatomic) id value; // @synthesize value=_value;
@property(retain, nonatomic) id field; // @synthesize field=_field;
- (void).cxx_destruct;
- (id)URLEncodedStringValueWithEncoding:(unsigned long long)arg1;
- (id)initWithField:(id)arg1 value:(id)arg2;

@end

@interface PF_AFHTTPClient : NSObject <NSCoding, NSCopying>
{
    _Bool _allowsInvalidSSLCertificate;
    int _parameterEncoding;
    int _defaultSSLPinningMode;
    NSURL *_baseURL;
    unsigned long long _stringEncoding;
    NSMutableArray *_registeredHTTPOperationClassNames;
    NSMutableDictionary *_defaultHeaders;
    NSURLCredential *_defaultCredential;
    NSOperationQueue *_operationQueue;
}

+ (id)clientWithBaseURL:(id)arg1;
@property(nonatomic) _Bool allowsInvalidSSLCertificate; // @synthesize allowsInvalidSSLCertificate=_allowsInvalidSSLCertificate;
@property(nonatomic) int defaultSSLPinningMode; // @synthesize defaultSSLPinningMode=_defaultSSLPinningMode;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSURLCredential *defaultCredential; // @synthesize defaultCredential=_defaultCredential;
@property(retain, nonatomic) NSMutableDictionary *defaultHeaders; // @synthesize defaultHeaders=_defaultHeaders;
@property(retain, nonatomic) NSMutableArray *registeredHTTPOperationClassNames; // @synthesize registeredHTTPOperationClassNames=_registeredHTTPOperationClassNames;
@property(nonatomic) int parameterEncoding; // @synthesize parameterEncoding=_parameterEncoding;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)patchPath:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)deletePath:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)putPath:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)postPath:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)getPath:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)enqueueBatchOfHTTPRequestOperations:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)enqueueBatchOfHTTPRequestOperationsWithRequests:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)cancelAllHTTPOperationsWithMethod:(id)arg1 path:(id)arg2;
- (void)enqueueHTTPRequestOperation:(id)arg1;
- (id)HTTPRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)multipartFormRequestWithMethod:(id)arg1 path:(id)arg2 parameters:(id)arg3 constructingBodyWithBlock:(CDUnknownBlockType)arg4;
- (id)requestWithMethod:(id)arg1 path:(id)arg2 parameters:(id)arg3;
- (void)clearAuthorizationHeader;
- (void)setAuthorizationHeaderWithToken:(id)arg1;
- (void)setAuthorizationHeaderWithUsername:(id)arg1 password:(id)arg2;
- (void)setDefaultHeader:(id)arg1 value:(id)arg2;
- (id)defaultValueForHeader:(id)arg1;
- (void)unregisterHTTPOperationClass:(Class)arg1;
- (_Bool)registerHTTPOperationClass:(Class)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithBaseURL:(id)arg1;
- (id)init;

@end

@interface PF_AFStreamingMultipartFormData : NSObject <PF_AFMultipartFormData>
{
    NSMutableURLRequest *_request;
    PF_AFMultipartBodyStream *_bodyStream;
    unsigned long long _stringEncoding;
}

@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(retain, nonatomic) PF_AFMultipartBodyStream *bodyStream; // @synthesize bodyStream=_bodyStream;
@property(copy, nonatomic) NSMutableURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (id)requestByFinalizingMultipartFormData;
- (void)throttleBandwidthWithPacketSize:(unsigned long long)arg1 delay:(double)arg2;
- (void)appendPartWithHeaders:(id)arg1 body:(id)arg2;
- (void)appendPartWithFormData:(id)arg1 name:(id)arg2;
- (void)appendPartWithFileData:(id)arg1 name:(id)arg2 fileName:(id)arg3 mimeType:(id)arg4;
- (void)appendPartWithInputStream:(id)arg1 name:(id)arg2 fileName:(id)arg3 length:(unsigned long long)arg4 mimeType:(id)arg5;
- (_Bool)appendPartWithFileURL:(id)arg1 name:(id)arg2 fileName:(id)arg3 mimeType:(id)arg4 error:(id *)arg5;
- (_Bool)appendPartWithFileURL:(id)arg1 name:(id)arg2 error:(id *)arg3;
- (id)initWithURLRequest:(id)arg1 stringEncoding:(unsigned long long)arg2;

@end

@interface PF_AFMultipartBodyStream : NSInputStream <NSCopying, NSStreamDelegate>
{
    unsigned long long _streamStatus;
    NSError *_streamError;
    unsigned long long _stringEncoding;
    NSMutableArray *_HTTPBodyParts;
    NSEnumerator *_HTTPBodyPartEnumerator;
    PF_AFHTTPBodyPart *_currentHTTPBodyPart;
    NSInputStream *_inputStream;
    NSOutputStream *_outputStream;
    NSMutableData *_buffer;
    unsigned long long _numberOfBytesInPacket;
    double _delay;
}

@property(nonatomic) double delay; // @synthesize delay=_delay;
@property(nonatomic) unsigned long long numberOfBytesInPacket; // @synthesize numberOfBytesInPacket=_numberOfBytesInPacket;
@property(retain, nonatomic) NSMutableData *buffer; // @synthesize buffer=_buffer;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(retain, nonatomic) PF_AFHTTPBodyPart *currentHTTPBodyPart; // @synthesize currentHTTPBodyPart=_currentHTTPBodyPart;
@property(retain, nonatomic) NSEnumerator *HTTPBodyPartEnumerator; // @synthesize HTTPBodyPartEnumerator=_HTTPBodyPartEnumerator;
@property(retain, nonatomic) NSMutableArray *HTTPBodyParts; // @synthesize HTTPBodyParts=_HTTPBodyParts;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(retain, nonatomic) NSError *streamError; // @synthesize streamError=_streamError;
@property(nonatomic) unsigned long long streamStatus; // @synthesize streamStatus=_streamStatus;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)_setCFClientFlags:(unsigned long long)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(CDStruct_e097db04 *)arg3;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
@property(readonly, nonatomic) unsigned long long contentLength;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)close;
- (void)open;
- (_Bool)hasBytesAvailable;
- (_Bool)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
- (void)appendHTTPBodyPart:(id)arg1;
- (void)setInitialAndFinalBoundaries;
- (id)initWithStringEncoding:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PF_AFHTTPBodyPart : NSObject <NSCopying>
{
    int _phase;
    NSInputStream *_inputStream;
    unsigned long long _phaseReadOffset;
    _Bool _hasInitialBoundary;
    _Bool _hasFinalBoundary;
    unsigned long long _stringEncoding;
    NSDictionary *_headers;
    id _body;
    unsigned long long _bodyContentLength;
}

@property(nonatomic) _Bool hasFinalBoundary; // @synthesize hasFinalBoundary=_hasFinalBoundary;
@property(nonatomic) _Bool hasInitialBoundary; // @synthesize hasInitialBoundary=_hasInitialBoundary;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) unsigned long long bodyContentLength; // @synthesize bodyContentLength=_bodyContentLength;
@property(retain, nonatomic) id body; // @synthesize body=_body;
@property(retain, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)transitionToNextPhase;
- (long long)readData:(id)arg1 intoBuffer:(char *)arg2 maxLength:(unsigned long long)arg3;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=hasBytesAvailable) _Bool bytesAvailable;
@property(readonly, nonatomic) unsigned long long contentLength;
- (id)stringForHeaders;
- (void)dealloc;
- (id)init;

@end

@interface PF_AFPropertyListRequestOperation : PF_AFHTTPRequestOperation
{
    id _responsePropertyList;
    unsigned long long _propertyListReadOptions;
    unsigned long long _propertyListFormat;
    NSError *_propertyListError;
}

+ (_Bool)canProcessRequest:(id)arg1;
+ (id)acceptableContentTypes;
+ (id)propertyListRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) NSError *propertyListError; // @synthesize propertyListError=_propertyListError;
@property(nonatomic) unsigned long long propertyListFormat; // @synthesize propertyListFormat=_propertyListFormat;
@property(nonatomic) unsigned long long propertyListReadOptions; // @synthesize propertyListReadOptions=_propertyListReadOptions;
@property(retain, nonatomic) id responsePropertyList; // @synthesize responsePropertyList=_responsePropertyList;
- (void).cxx_destruct;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (id)error;
- (id)initWithRequest:(id)arg1;

@end

@interface PFRole : PFObject <PFSubclassing>
{
}

+ (id)parseClassName;
+ (void)validateClassName:(id)arg1;
+ (id)query;
+ (id)roleWithName:(id)arg1 acl:(id)arg2;
+ (id)roleWithName:(id)arg1;
- (id)saveInBackground;
- (void)setObject:(id)arg1 forKey:(id)arg2;
@property(readonly, nonatomic) PFRelation *users;
@property(readonly, nonatomic) PFRelation *roles;
- (id)initWithName:(id)arg1 acl:(id)arg2;
- (id)initWithName:(id)arg1;

// Remaining properties
@property(copy, nonatomic) NSString *name; // @dynamic name;

@end

@interface PFRetryingCommandRunner : NSObject
{
}

+ (void)setInitialDelay:(double)arg1;
+ (id)runCommandAsync:(id)arg1 inOperation:(id)arg2 attemptsMade:(int)arg3 delay:(double)arg4;
+ (id)runCommandAsync:(id)arg1 inOperation:(id)arg2;
+ (id)runCommandAsync:(id)arg1;

@end

@interface PF_AFJSONRequestOperation : PF_AFHTTPRequestOperation
{
    id _responseJSON;
    unsigned long long _JSONReadingOptions;
    NSError *_JSONError;
}

+ (_Bool)canProcessRequest:(id)arg1;
+ (id)acceptableContentTypes;
+ (id)JSONRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) NSError *JSONError; // @synthesize JSONError=_JSONError;
@property(nonatomic) unsigned long long JSONReadingOptions; // @synthesize JSONReadingOptions=_JSONReadingOptions;
@property(retain, nonatomic) id responseJSON; // @synthesize responseJSON=_responseJSON;
- (void).cxx_destruct;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (id)error;

// Remaining properties
@property(retain, nonatomic) NSRecursiveLock *lock; // @dynamic lock;

@end

@interface PFMemoryMappedFile : NSObject
{
    int fileHandle;
    unsigned long long fileSize;
    void *mappedAddress;
}

- (id)data;
- (void)dealloc;
- (id)initWithContentsAtPath:(id)arg1;

@end

@interface PFMappedData : NSObject
{
}

+ (id)dataWithContentsOfFile:(id)arg1;

@end

@interface PFInternalUtils : NSObject
{
}

+ (id)traverseObject:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
+ (id)traverseObject:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 seenObjects:(id)arg3;
+ (void)appendNullToString:(id)arg1;
+ (void)appendNumber:(id)arg1 toString:(id)arg2;
+ (void)appendArray:(id)arg1 toString:(id)arg2;
+ (void)appendDictionary:(id)arg1 toString:(id)arg2;
+ (void)appendObject:(id)arg1 toString:(id)arg2;
+ (id)cacheKeyForObject:(id)arg1;
+ (id)createUUID;
+ (id)backgroundQueue;
+ (id)addNumber:(id)arg1 withNumber:(id)arg2;
+ (id)cacheDir:(id)arg1;
+ (void)deleteFromKeychain:(id)arg1;
+ (id)loadFromKeychain:(id)arg1;
+ (void)saveToKeychain:(id)arg1 data:(id)arg2;
+ (id)getKeychainQuery:(id)arg1;
+ (id)serializeToJSON:(id)arg1;
+ (id)encodeObject:(id)arg1 withObjectEncoder:(id)arg2;
+ (id)parseJSON:(id)arg1;
+ (_Bool)isContainerClass:(id)arg1;
+ (void)assertValidClassForOrdering:(id)arg1;
+ (void)assertValidClassForQuery:(id)arg1;
+ (void)assertValidClassForValue:(id)arg1;
+ (id)preciseDateFromString:(id)arg1;
+ (id)stringFromPreciseDate:(id)arg1;
+ (id)impreciseDateFromString:(id)arg1;
+ (id)stringFromImpreciseDate:(id)arg1;
+ (void)safePerformSelector:(SEL)arg1 withTarget:(id)arg2 object:(id)arg3 object:(id)arg4;
+ (id)currentSystemTimeZoneName;
+ (void)clearInstallationId;
+ (void)clearCachedInstallationId;
+ (id)installationId;
+ (_Bool)skipBackupOnPath:(id)arg1;
+ (void)checkCacheApplicationId;
+ (void)deleteDirectoryContents:(id)arg1;
+ (id)dataFilePath:(id)arg1;
+ (id)parsePrivateDir;
+ (id)parseDeprecatedDir;
+ (id)errorFromResult:(id)arg1 shouldLog:(_Bool)arg2;
+ (id)errorFromResult:(id)arg1;
+ (id)errorWithCode:(long long)arg1 message:(id)arg2 shouldLog:(_Bool)arg3;
+ (id)errorWithCode:(long long)arg1 message:(id)arg2;
+ (id)calculateMD5:(id)arg1;
+ (void)setParseServer:(id)arg1;
+ (id)httpClient;
+ (void)initialize;

@end

@interface PFJSONCacheItem : NSObject
{
    NSString *json;
    NSString *hashValue;
}

+ (id)cacheFromObject:(id)arg1;
@property(readonly, nonatomic) NSString *hashValue; // @synthesize hashValue;
@property(readonly, nonatomic) NSString *json; // @synthesize json;
- (void).cxx_destruct;
- (_Bool)isEqualTo:(id)arg1;
- (id)initWithObject:(id)arg1;

@end

@interface PF_AFImageCache : NSCache
{
}

- (void)cacheImage:(id)arg1 forRequest:(id)arg2;
- (id)cachedImageForRequest:(id)arg1;

@end

@interface PF_AFNetworkActivityIndicatorManager : NSObject
{
    _Bool _enabled;
    long long _activityCount;
    NSTimer *_activityIndicatorVisibilityTimer;
}

+ (id)keyPathsForValuesAffectingIsNetworkActivityIndicatorVisible;
+ (id)sharedManager;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(retain, nonatomic) NSTimer *activityIndicatorVisibilityTimer; // @synthesize activityIndicatorVisibilityTimer=_activityIndicatorVisibilityTimer;
- (void).cxx_destruct;
- (void)networkingOperationDidFinish:(id)arg1;
- (void)networkingOperationDidStart:(id)arg1;
- (void)decrementActivityCount;
- (void)incrementActivityCount;
@property(nonatomic) long long activityCount; // @synthesize activityCount=_activityCount;
- (void)updateNetworkActivityIndicatorVisibility;
@property(readonly, nonatomic, getter=isNetworkActivityIndicatorVisible) _Bool networkActivityIndicatorVisible; // @dynamic networkActivityIndicatorVisible;
- (void)updateNetworkActivityIndicatorVisibilityDelayed;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) _Bool isNetworkActivityIndicatorVisible;

@end

@interface PFCloud : NSObject
{
}

+ (void)callFunctionInBackground:(id)arg1 withParameters:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (void)callFunctionInBackground:(id)arg1 withParameters:(id)arg2 target:(id)arg3 selector:(SEL)arg4;
+ (id)callFunctionInBackground:(id)arg1 withParameters:(id)arg2;
+ (id)callFunction:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;
+ (id)callFunction:(id)arg1 withParameters:(id)arg2;

@end

@interface PFUser : PFObject <PFSubclassing>
{
    NSString *password;
    NSString *sessionToken;
    _Bool isNew;
    _Bool isCurrentUser;
    NSMutableDictionary *authData;
    NSMutableSet *linkedServiceNames;
    _Bool isLazy;
}

+ (id)query;
+ (void)enableAutomaticUser;
+ (void)becomeInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)logInWithUsernameInBackground:(id)arg1 password:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (id)user;
+ (void)logOut;
+ (void)requestPasswordResetForEmailInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)requestPasswordResetForEmailInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (id)requestPasswordResetForEmailInBackground:(id)arg1;
+ (_Bool)requestPasswordResetForEmail:(id)arg1 error:(id *)arg2;
+ (_Bool)requestPasswordResetForEmail:(id)arg1;
+ (void)becomeInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (id)becomeInBackground:(id)arg1;
+ (id)become:(id)arg1 error:(id *)arg2;
+ (id)become:(id)arg1;
+ (void)logInWithUsernameInBackground:(id)arg1 password:(id)arg2 target:(id)arg3 selector:(SEL)arg4;
+ (id)logInWithUsernameInBackground:(id)arg1 password:(id)arg2;
+ (id)logInWithUsername:(id)arg1 password:(id)arg2 error:(id *)arg3;
+ (id)logInWithUsername:(id)arg1 password:(id)arg2;
+ (id)currentUser;
+ (id)parseClassName;
+ (void)initialize;
- (void).cxx_destruct;
- (void)signUpInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (_Bool)isAuthenticated;
- (void)signUpInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (id)signUpInBackground;
- (_Bool)signUp:(id *)arg1;
- (_Bool)signUp;
- (void)fetchInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)fetch:(id *)arg1;
- (id)fetchAsync:(id)arg1;
- (id)saveAsync:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
@property(readonly) NSMutableSet *linkedServiceNames; // @dynamic linkedServiceNames;
@property(readonly) NSMutableDictionary *authData; // @dynamic authData;
- (void)setObject:(id)arg1 forKey:(id)arg2;
@property(nonatomic) _Bool isCurrentUser;
@property(retain, nonatomic) NSString *password; // @dynamic password;

// Remaining properties
@property(retain, nonatomic) NSString *email; // @dynamic email;
@property(nonatomic) _Bool isLazy; // @dynamic isLazy;
@property(readonly) _Bool isNew; // @dynamic isNew;
@property(retain, nonatomic) NSString *sessionToken; // @dynamic sessionToken;
@property(retain, nonatomic) NSString *username; // @dynamic username;

@end

@interface PFKeyValueCacheEntry : NSObject
{
    NSString *value;
    long long creationTime;
}

@property(nonatomic) long long creationTime; // @synthesize creationTime;
@property(retain, nonatomic) NSString *value; // @synthesize value;
- (void).cxx_destruct;

@end

@interface PFKeyValueDiskCacheDelegate : NSObject
{
}

- (void)createDiskCache:(id)arg1 value:(id)arg2;
- (id)creationTimeOfDiskCache:(id)arg1;
- (void)touchDiskCache:(id)arg1;
- (unsigned long long)accessTimeOfDiskCache:(id)arg1 withStat:(struct stat *)arg2;

@end

@interface PFKeyValueCache : NSObject
{
    NSCache *memCache;
    NSString *cacheDir;
    PFKeyValueDiskCacheDelegate *diskDelegate;
    int diskOps;
    NSCondition *flushDoneCondition;
    unsigned long long maxDiskCacheBytes;
    unsigned long long maxDiskCacheRecords;
    unsigned long long maxMemCacheBytesPerRecord;
}

+ (id)mainCache;
+ (void)initialize;
@property(nonatomic) unsigned long long maxMemCacheBytesPerRecord; // @synthesize maxMemCacheBytesPerRecord;
@property(nonatomic) unsigned long long maxDiskCacheRecords; // @synthesize maxDiskCacheRecords;
@property(nonatomic) unsigned long long maxDiskCacheBytes; // @synthesize maxDiskCacheBytes;
- (void).cxx_destruct;
- (void)waitForDiskFlush;
- (unsigned long long)diskCacheRecordCount;
- (void)enableMemCache:(_Bool)arg1;
- (void)clearMemCache;
- (void)clearDiskCache;
- (void)compactDiskCache;
- (void)setDiskCacheDelegate:(id)arg1;
- (id)cacheFileForKey:(id)arg1;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (id)objectForKey:(id)arg1 maxAge:(double)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
@property(readonly, nonatomic) NSString *cacheDir;
- (void)restoreDefaults;
- (void)dealloc;
- (id)initWithCacheDir:(id)arg1;

@end

@interface PFHTTPRequestOperation : NSOperation
{
    NSOutputStream *_outputStream;
    _Bool _cancelled;
    _Bool _executing;
    _Bool _finished;
    NSURLRequest *_request;
    NSError *_error;
    NSURLResponse *_response;
    CDUnknownBlockType _downloadProgressBlock;
    CDUnknownBlockType _uploadProgressBlock;
    NSThread *_operationThread;
    long long _downloadedBytes;
}

@property(nonatomic) long long downloadedBytes; // @synthesize downloadedBytes=_downloadedBytes;
@property(readonly, nonatomic) NSThread *operationThread; // @synthesize operationThread=_operationThread;
@property(copy, nonatomic) CDUnknownBlockType uploadProgressBlock; // @synthesize uploadProgressBlock=_uploadProgressBlock;
@property(copy, nonatomic) CDUnknownBlockType downloadProgressBlock; // @synthesize downloadProgressBlock=_downloadProgressBlock;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(copy, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(nonatomic, getter=isFinished) _Bool finished; // @synthesize finished=_finished;
@property(nonatomic, getter=isExecuting) _Bool executing; // @synthesize executing=_executing;
@property(nonatomic, getter=isCancelled) _Bool cancelled; // @synthesize cancelled=_cancelled;
- (void).cxx_destruct;
- (void)_operationDidFinish;
- (void)_operationDidCancel;
- (_Bool)_operationDidStart;
- (_Bool)isConcurrent;
- (void)cancel;
- (void)start;
@property(readonly, nonatomic) NSOutputStream *outputStream;
@property(readonly, nonatomic) NSInputStream *inputStream;
- (void)dealloc;
- (id)initWithURLRequest:(id)arg1 downloadProgressBlock:(CDUnknownBlockType)arg2 uploadProgressBlock:(CDUnknownBlockType)arg3;
- (id)initWithURLRequest:(id)arg1;

@end

@interface PFTaskHTTPRequestOperation : PFHTTPURLConnectionOperation
{
    BFTaskCompletionSource *_taskCompletionSource;
    id _result;
}

@property(retain, nonatomic) id result; // @synthesize result=_result;
@property(retain, nonatomic) BFTaskCompletionSource *taskCompletionSource; // @synthesize taskCompletionSource=_taskCompletionSource;
- (void).cxx_destruct;
- (void)_operationDidFinish;
- (void)_operationDidCancel;
@property(readonly, nonatomic) BFTask *task;
- (id)initWithURLRequest:(id)arg1;

@end

@interface PFConfig : NSObject
{
    NSDictionary *parametersDictionary;
}

+ (id)handleGetConfigResult:(id)arg1;
+ (id)fetchCommand;
+ (id)_getConfigInBackgroundAfterTask:(id)arg1;
+ (void)getConfigInBackgroundWithBlock:(CDUnknownBlockType)arg1;
+ (id)getConfigInBackground;
+ (id)getConfig:(id *)arg1;
+ (id)getConfig;
+ (void)clearCurrentConfigInMemory;
+ (void)clearCurrentConfig;
+ (void)setCurrentConfig:(id)arg1;
+ (id)defaultConfigFilePath;
+ (id)currentConfig;
+ (id)taskQueue;
+ (id)currentConfigLock;
- (void).cxx_destruct;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)objectForKey:(id)arg1;
- (id)initWithFetchedConfig:(id)arg1;

@end

@interface PFDecoder : NSObject
{
}

+ (id)decodeObject:(id)arg1;
- (id)decodeObject:(id)arg1;
- (id)decodeArray:(id)arg1;
- (id)decodeDictionary:(id)arg1;

@end

@interface PFInstallation : PFObject <PFSubclassing>
{
}

+ (id)currentInstallation;
+ (id)query;
+ (id)parseClassName;
- (void)_updateVersionInfoFromDevice;
- (void)_updateBadgeFromDevice;
- (void)_updateTimeZoneFromDevice;
- (void)_updateAutomaticInfo;
- (_Bool)needsDefaultACL;
- (id)fetchAsync:(id)arg1;
- (id)saveAsync:(id)arg1;
- (void)saveEventually:(CDUnknownBlockType)arg1;
- (id)saveInBackground;
@property(retain, nonatomic) NSString *timeZone; // @dynamic timeZone;
- (void)setDeviceTokenFromData:(id)arg1;
@property(retain, nonatomic) NSString *deviceToken; // @dynamic deviceToken;
@property(retain, nonatomic) NSString *installationId; // @dynamic installationId;
@property(retain, nonatomic) NSString *deviceType; // @dynamic deviceType;
- (void)removeObjectForKey:(id)arg1;
- (void)incrementKey:(id)arg1 byAmount:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;

// Remaining properties
@property(nonatomic) long long badge; // @dynamic badge;
@property(retain, nonatomic) NSArray *channels; // @dynamic channels;

@end

@interface PFCommandResult : NSObject
{
    id result;
    NSString *resultString;
}

@property(retain, nonatomic) NSString *resultString; // @synthesize resultString;
@property(retain, nonatomic) id result; // @synthesize result;
- (void).cxx_destruct;

@end

@interface PFAnalytics : NSObject
{
}

+ (id)generateDigestFromPayload:(id)arg1;
+ (id)trackEventually:(id)arg1 params:(id)arg2;
+ (void)_trackCrashReportWithParameters:(id)arg1;
+ (void)trackEventInBackground:(id)arg1 dimensions:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (id)trackEvent:(id)arg1 dimensions:(id)arg2;
+ (void)trackEventInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)trackEvent:(id)arg1;
+ (void)trackAppOpenedWithRemoteNotificationPayloadInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)trackAppOpenedWithRemoteNotificationPayload:(id)arg1;
+ (void)trackAppOpenedWithLaunchOptionsInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)trackAppOpenedWithLaunchOptions:(id)arg1;

@end

@interface PFHTTPMultipartRequestConstructor : NSObject
{
    NSURLRequest *_originalRequest;
    NSString *_boundary;
    PFHTTPMultipartRequestBodyStream *_bodyStream;
}

@property(retain, nonatomic) PFHTTPMultipartRequestBodyStream *bodyStream; // @synthesize bodyStream=_bodyStream;
@property(readonly, copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
@property(retain, nonatomic) NSURLRequest *originalRequest; // @synthesize originalRequest=_originalRequest;
- (void).cxx_destruct;
- (id)requestByFinalizingMultipartRequest;
- (void)appendPartWithHeaders:(id)arg1 body:(id)arg2;
- (_Bool)appendPartWithFileURL:(id)arg1 fileName:(id)arg2 mimeType:(id)arg3 error:(id *)arg4;
- (void)appendPartWithName:(id)arg1 string:(id)arg2;
- (void)appendPartWithName:(id)arg1 data:(id)arg2;
- (void)appendPartWithName:(id)arg1 value:(id)arg2;
- (id)initWithURLRequest:(id)arg1;

@end

@interface PFTaskQueue : NSObject
{
    NSObject *_mutex;
    BFTask *_tail;
}

@property(retain, nonatomic) BFTask *tail; // @synthesize tail=_tail;
@property(retain, nonatomic) NSObject *mutex; // @synthesize mutex=_mutex;
- (void).cxx_destruct;
- (id)enqueue:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface PFLocationManager : NSObject <CLLocationManagerDelegate>
{
    CLLocationManager *_locationManager;
    NSMutableSet *_blockSet;
}

@property(retain, nonatomic) NSMutableSet *blockSet; // @synthesize blockSet=_blockSet;
@property(retain, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;
- (void)createLocationManager;
- (void)dealloc;
- (void)addBlockForCurrentLocation:(CDUnknownBlockType)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFRelation : NSObject
{
    PFObject *parent;
    NSString *parentClassName;
    NSString *parentObjectId;
    NSString *key;
    NSString *_targetClass;
}

+ (id)relationWithTargetClass:(id)arg1;
+ (id)relationForObject:(id)arg1 forKey:(id)arg2;
@property(retain, nonatomic) NSString *targetClass; // @synthesize targetClass=_targetClass;
- (void).cxx_destruct;
- (id)encodeIntoDictionary;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (id)query;
- (id)description;
- (void)setParent:(id)arg1;
- (void)ensureParentIs:(id)arg1 andKeyIs:(id)arg2;
- (id)initWithTargetClass:(id)arg1;
- (id)initWithParent:(id)arg1 key:(id)arg2;

@end

@interface PFFieldOperation : NSObject
{
}

+ (id)decode:(id)arg1 withDecoder:(id)arg2;
+ (void)registerDefaultDecoders;
+ (void)registerDecoder:(id)arg1 block:(CDUnknownBlockType)arg2;

@end

@interface PFSetOperation : NSObject <PFFieldOperation>
{
    id value;
}

+ (id)setWithValue:(id)arg1;
@property(readonly, nonatomic) id value; // @synthesize value;
- (void).cxx_destruct;
- (id)applyToValue:(id)arg1 forKey:(id)arg2 ofObject:(id)arg3;
- (id)mergeWithPrevious:(id)arg1;
- (id)encodeWithObjectEncoder:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)initWithValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFDeleteOperation : NSObject <PFFieldOperation>
{
}

- (id)applyToValue:(id)arg1 forKey:(id)arg2 ofObject:(id)arg3;
- (id)mergeWithPrevious:(id)arg1;
- (id)encodeWithObjectEncoder:(id)arg1;
@property(readonly, copy) NSString *description;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFIncrementOperation : NSObject <PFFieldOperation>
{
    NSNumber *amount;
}

+ (id)incrementWithAmount:(id)arg1;
@property(readonly, nonatomic) NSNumber *amount; // @synthesize amount;
- (void).cxx_destruct;
- (id)applyToValue:(id)arg1 forKey:(id)arg2 ofObject:(id)arg3;
- (id)mergeWithPrevious:(id)arg1;
- (id)encodeWithObjectEncoder:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)initWithAmount:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFAddOperation : NSObject <PFFieldOperation>
{
    NSArray *objects;
}

+ (id)addWithObjects:(id)arg1;
@property(readonly, nonatomic) NSArray *objects; // @synthesize objects;
- (void).cxx_destruct;
- (id)applyToValue:(id)arg1 forKey:(id)arg2 ofObject:(id)arg3;
- (id)mergeWithPrevious:(id)arg1;
- (id)encodeWithObjectEncoder:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)initWithObjects:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFAddUniqueOperation : NSObject <PFFieldOperation>
{
    NSArray *objects;
}

+ (id)addUniqueWithObjects:(id)arg1;
@property(readonly, nonatomic) NSArray *objects; // @synthesize objects;
- (void).cxx_destruct;
- (id)applyToValue:(id)arg1 forKey:(id)arg2 ofObject:(id)arg3;
- (id)mergeWithPrevious:(id)arg1;
- (id)encodeWithObjectEncoder:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)initWithObjects:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFRemoveOperation : NSObject <PFFieldOperation>
{
    NSArray *objects;
}

+ (id)removeWithObjects:(id)arg1;
@property(readonly, nonatomic) NSArray *objects; // @synthesize objects;
- (void).cxx_destruct;
- (id)applyToValue:(id)arg1 forKey:(id)arg2 ofObject:(id)arg3;
- (id)mergeWithPrevious:(id)arg1;
- (id)encodeWithObjectEncoder:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)initWithObjects:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFRelationOperation : NSObject <PFFieldOperation>
{
    NSString *targetClass;
    NSMutableSet *relationsToAdd;
    NSMutableSet *relationsToRemove;
}

+ (id)removeRelationToObjects:(id)arg1;
+ (id)addRelationToObjects:(id)arg1;
@property(retain, nonatomic) NSMutableSet *relationsToRemove; // @synthesize relationsToRemove;
@property(retain, nonatomic) NSMutableSet *relationsToAdd; // @synthesize relationsToAdd;
@property(retain, nonatomic) NSString *targetClass; // @synthesize targetClass;
- (void).cxx_destruct;
- (id)applyToValue:(id)arg1 forKey:(id)arg2 ofObject:(id)arg3;
- (id)mergeWithPrevious:(id)arg1;
- (id)encodeWithObjectEncoder:(id)arg1;
- (id)convertObjectIdsToPointersInSet:(id)arg1 withObjectEncoder:(id)arg2;
@property(readonly, copy) NSString *description;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PF_AFHTTPRequestOperation : PF_AFURLConnectionOperation
{
    NSError *_HTTPError;
    NSObject<OS_dispatch_queue> *_successCallbackQueue;
    NSObject<OS_dispatch_queue> *_failureCallbackQueue;
}

+ (_Bool)canProcessRequest:(id)arg1;
+ (void)addAcceptableContentTypes:(id)arg1;
+ (id)acceptableContentTypes;
+ (void)addAcceptableStatusCodes:(id)arg1;
+ (id)acceptableStatusCodes;
@property(nonatomic) NSObject<OS_dispatch_queue> *failureCallbackQueue; // @synthesize failureCallbackQueue=_failureCallbackQueue;
@property(nonatomic) NSObject<OS_dispatch_queue> *successCallbackQueue; // @synthesize successCallbackQueue=_successCallbackQueue;
@property(retain, nonatomic) NSError *HTTPError; // @synthesize HTTPError=_HTTPError;
- (void).cxx_destruct;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool hasAcceptableContentType;
@property(readonly, nonatomic) _Bool hasAcceptableStatusCode;
- (void)pause;
- (unsigned long long)responseStringEncoding;
- (id)error;
- (void)dealloc;

// Remaining properties
@property(retain, nonatomic) NSRecursiveLock *lock; // @dynamic lock;
@property(retain, nonatomic) NSURLRequest *request; // @dynamic request;
@property(retain, nonatomic) NSHTTPURLResponse *response; // @dynamic response;

@end

@interface PFProduct : PFObject <PFSubclassing>
{
    NSDecimalNumber *price;
    NSLocale *priceLocale;
    long long progress;
    NSString *contentPath;
}

+ (id)parseClassName;
+ (void)validateClassName:(id)arg1;
+ (id)query;
+ (id)product;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *downloadName; // @dynamic downloadName;

// Remaining properties
@property(retain, nonatomic) NSString *contentPath; // @dynamic contentPath;
@property(retain, nonatomic) PFFile *icon; // @dynamic icon;
@property(retain, nonatomic) NSNumber *order; // @dynamic order;
@property(retain, nonatomic) NSDecimalNumber *price; // @dynamic price;
@property(retain, nonatomic) NSLocale *priceLocale; // @dynamic priceLocale;
@property(retain, nonatomic) NSString *productIdentifier; // @dynamic productIdentifier;
@property(nonatomic) long long progress; // @dynamic progress;
@property(retain, nonatomic) NSString *subtitle; // @dynamic subtitle;
@property(retain, nonatomic) NSString *title; // @dynamic title;

@end

@interface PFThreadFactoryBlockRunner : NSObject
{
    NSObject *result;
}

@property(readonly) NSObject *result; // @synthesize result;
- (void).cxx_destruct;
- (void)invokeFactory:(CDUnknownBlockType)arg1;

@end

@interface PFReceptionist : NSProxy
{
    NSObject *target;
    NSThread *affinitizedThread;
}

@property(readonly) NSThread *affinitizedThread; // @synthesize affinitizedThread;
@property(readonly) NSObject *target; // @synthesize target;
- (void).cxx_destruct;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)initWithFactory:(CDUnknownBlockType)arg1 thread:(id)arg2;
- (id)initWithTarget:(id)arg1 thread:(id)arg2;

@end

@interface Parse : NSObject
{
}

+ (id)parseModulesCollection;
+ (void)disableParseModule:(id)arg1;
+ (void)enableParseModule:(id)arg1;
+ (void)errorMessagesEnabled:(_Bool)arg1;
+ (void)offlineMessagesEnabled:(_Bool)arg1;
+ (id)getClientKey;
+ (id)getApplicationId;
+ (void)setApplicationId:(id)arg1 clientKey:(id)arg2;
+ (void)initialize;

@end

@interface PFAnonymousUtils : NSObject
{
}

+ (void)lazyLogIn;
+ (void)logInWithTarget:(id)arg1 selector:(SEL)arg2;
+ (void)logInWithBlock:(CDUnknownBlockType)arg1;
+ (id)logInInBackground;
+ (_Bool)isLinkedWithUser:(id)arg1;
+ (id)provider;

@end

@interface PFHTTPMultipartRequestBodyPart : NSObject
{
    unsigned char _phase;
    unsigned long long _phaseReadOffset;
    _Bool _hasInitialBoundary;
    _Bool _hasFinalBoundary;
    NSInputStream *_inputStream;
    NSString *_boundary;
    NSData *_headersData;
    id _body;
    unsigned long long _bodyContentLength;
}

+ (id)partWithBoundary:(id)arg1 headers:(id)arg2 body:(id)arg3 bodyContentLength:(unsigned long long)arg4;
@property(nonatomic) unsigned long long bodyContentLength; // @synthesize bodyContentLength=_bodyContentLength;
@property(retain, nonatomic) id body; // @synthesize body=_body;
@property(retain, nonatomic) NSData *headersData; // @synthesize headersData=_headersData;
@property(copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
@property(nonatomic) _Bool hasFinalBoundary; // @synthesize hasFinalBoundary=_hasFinalBoundary;
@property(nonatomic) _Bool hasInitialBoundary; // @synthesize hasInitialBoundary=_hasInitialBoundary;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
- (void).cxx_destruct;
- (id)_headersDataFromHeaders:(id)arg1;
- (_Bool)_transitionToNextPhase;
- (long long)readData:(id)arg1 intoBuffer:(char *)arg2 maxLength:(unsigned long long)arg3;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=hasBytesAvailable) _Bool bytesAvailable;
@property(readonly, nonatomic) unsigned long long contentLength;
- (void)dealloc;
- (id)initWithBoundary:(id)arg1 headers:(id)arg2;

@end

@interface PFPurchase : NSObject
{
}

+ (void)clear;
+ (id)_assetContentPathForProductWithIdentifier:(id)arg1 fileName:(id)arg2;
+ (void)complete:(id)arg1 error:(id)arg2 runOnceBlock:(CDUnknownBlockType)arg3;
+ (void)_findProductsInBackground:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)assetContentPathForProduct:(id)arg1;
+ (void)downloadAssetForTransaction:(id)arg1 completion:(CDUnknownBlockType)arg2 progress:(CDUnknownBlockType)arg3;
+ (void)downloadAssetForTransaction:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)restore;
+ (void)buyProduct:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)addObserverForProduct:(id)arg1 block:(CDUnknownBlockType)arg2;

@end

@interface AppsFlyerConnectionDelegate : NSObject
{
    _Bool _isDebug;
    _Bool _isRequestFromCache;
    NSString *_openURL;
    AppsFlyerRequestCacheData *_requestDataForCaching;
    id <AppsFlyerTrackerDelegate> _delegate;
}

@property(nonatomic) id <AppsFlyerTrackerDelegate> delegate; // @synthesize delegate=_delegate;
@property _Bool isRequestFromCache; // @synthesize isRequestFromCache=_isRequestFromCache;
@property(retain, nonatomic) AppsFlyerRequestCacheData *requestDataForCaching; // @synthesize requestDataForCaching=_requestDataForCaching;
@property(retain, nonatomic) NSString *openURL; // @synthesize openURL=_openURL;
@property _Bool isDebug; // @synthesize isDebug=_isDebug;
- (void).cxx_destruct;
- (void)startToSendCachedRequest;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;

@end

@interface AppsFlyerUtils : NSObject
{
}

+ (id)URLQueryParameters:(id)arg1;
+ (id)getJsonStringFromDictionary:(id)arg1;
+ (id)getStoreReceipt:(_Bool)arg1;
+ (id)base64forData:(id)arg1;
+ (void)recursivelyRemoveNulls:(id)arg1;
+ (void)recursivelyRemoveNullsFromArray:(id)arg1;

@end

@interface AppsFlyerDebugQueue : NSObject
{
    int counter;
    NSMutableArray *_actions;
}

+ (id)sharedManager;
@property(retain, nonatomic) NSMutableArray *actions; // @synthesize actions=_actions;
- (void).cxx_destruct;
- (void)updateActionSuccess:(int)arg1;
- (void)updateAction:(int)arg1 withError:(id)arg2;
- (id)getJSONAndClear;
- (int)logWithName:(id)arg1 data:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface AppsFlyerParameters : NSObject
{
    _Bool isDebug;
    _Bool isMinimized;
    NSString *_appID;
    NSString *_eventName;
    NSString *_eventValue;
    NSString *_superTrackURL;
}

@property(retain, nonatomic) NSString *superTrackURL; // @synthesize superTrackURL=_superTrackURL;
@property(retain, nonatomic) NSString *eventValue; // @synthesize eventValue=_eventValue;
@property(retain, nonatomic) NSString *eventName; // @synthesize eventName=_eventName;
@property(retain, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property _Bool isMinimized; // @synthesize isMinimized;
@property _Bool isDebug; // @synthesize isDebug;
- (void).cxx_destruct;

@end

@interface AppsFlyerTracker : NSObject <AppsFlyerTrackerDelegate>
{
    _Bool _isDebug;
    _Bool didCollectIAdData;
    _Bool _useReceiptValidationSandbox;
    double lastLaunchTime;
    NSURL *deeplink;
    NSURL *referralURL;
    id <AppsFlyerTrackerDelegate> _delegate;
    unsigned long long _backgroundTaskIdentifier;
    _Bool isAFNightVisionMode;
    struct dispatch_queue_s *dispatchQueue;
    _Bool _isHTTPS;
    _Bool _disableAppleAdSupportTracking;
    _Bool _deviceTrackingDisabled;
    _Bool _disableIAdTracking;
    NSString *_customerUserID;
    NSString *_appsFlyerDevKey;
    NSString *_appleAppID;
    NSString *_currencyCode;
    double _entryTime;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedTracker;
@property double entryTime; // @synthesize entryTime=_entryTime;
@property(nonatomic, setter=setUseReceiptValidationSandbox:) _Bool useReceiptValidationSandbox; // @synthesize useReceiptValidationSandbox=_useReceiptValidationSandbox;
@property(nonatomic) id <AppsFlyerTrackerDelegate> delegate; // @synthesize delegate=_delegate;
@property _Bool disableIAdTracking; // @synthesize disableIAdTracking=_disableIAdTracking;
@property _Bool deviceTrackingDisabled; // @synthesize deviceTrackingDisabled=_deviceTrackingDisabled;
@property(nonatomic, setter=setIsDebug:) _Bool isDebug; // @synthesize isDebug=_isDebug;
@property _Bool disableAppleAdSupportTracking; // @synthesize disableAppleAdSupportTracking=_disableAppleAdSupportTracking;
@property _Bool isHTTPS; // @synthesize isHTTPS=_isHTTPS;
@property(retain, nonatomic) NSString *currencyCode; // @synthesize currencyCode=_currencyCode;
@property(retain, nonatomic, setter=setAppleAppID:) NSString *appleAppID; // @synthesize appleAppID=_appleAppID;
@property(retain, nonatomic, setter=setAppsFlyerDevKey:) NSString *appsFlyerDevKey; // @synthesize appsFlyerDevKey=_appsFlyerDevKey;
@property(retain, nonatomic, setter=setCustomerUserID:) NSString *customerUserID; // @synthesize customerUserID=_customerUserID;
- (void).cxx_destruct;
- (void)onConversionDataRequestFailure:(id)arg1;
- (void)onConversionDataReceived:(id)arg1;
- (id)getInstallDate:(id)arg1;
- (id)getFirstLanuchDate:(id)arg1;
- (id)getVersionUpdateDate:(id)arg1 currentUpdateDate:(id)arg2;
- (int)getInAppCounter:(_Bool)arg1;
- (int)getCounter:(_Bool)arg1;
- (id)createURLFor:(id)arg1 withAppID:(id)arg2 newAPI:(_Bool)arg3;
- (id)getDataString:(id)arg1;
- (void)startConnection:(id)arg1;
- (void)checkCache;
- (void)callServerWithEventName:(id)arg1 value:(id)arg2 withDictionary:(id)arg3 newAPI:(_Bool)arg4;
- (double)getTimePassedSinceLastLaunch;
- (void)validateAppID;
- (void)callServerWithEventName:(id)arg1 value:(id)arg2;
- (void)callServerWithEventName:(id)arg1;
- (id)getDevicePaltform;
- (id)getAppsFlyerUID;
- (id)installDate;
- (void)validateAndTrackInAppPurchase:(id)arg1 eventNameIfFailed:(id)arg2 withValue:(id)arg3 withProduct:(id)arg4 currency:(id)arg5 price:(id)arg6 success:(CDUnknownBlockType)arg7 failure:(CDUnknownBlockType)arg8;
- (void)trackEvent:(id)arg1 withValues:(id)arg2;
- (void)trackEvent:(id)arg1 withValue:(id)arg2;
- (void)sendLaunchToServer;
- (void)trackAppLaunch;
- (void)handleConversionDataWithDelegate:(id)arg1;
- (void)logCoversionData:(id)arg1 afDelegate:(id)arg2 isFromCache:(_Bool)arg3;
- (void)loadConversionDataWithDelegate:(id)arg1;
- (void)handleOpenURL:(id)arg1 sourceApplication:(id)arg2;
- (void)handleOpenURL:(id)arg1 sourceApplication:(id)arg2 withAnnotaion:(id)arg3;
- (void)handleEnteredBackground;
- (void)backgroundstatCall;
- (void)startNightVisionDebugMode;
- (void)createNightVisionGesture;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AppsFlyerServerHandler : NSObject
{
}

+ (void)sendDeepLinkDataRequest:(id)arg1 complitionBlock:(CDUnknownBlockType)arg2;
+ (void)sendPOSTRequest:(id)arg1 complitionBlock:(CDUnknownBlockType)arg2;
+ (void)sendRequestEventToServer:(id)arg1 isRequestFromCache:(_Bool)arg2 appID:(id)arg3 isDebug:(_Bool)arg4 logId:(int)arg5 delegate:(id)arg6 onSuccess:(CDUnknownBlockType)arg7;
+ (id)getDataString:(id)arg1;

@end

@interface AppsFlyerRequestCache : NSObject
{
    NSMutableArray *cachedRequests;
    _Bool isSendingCachedData;
    NSString *cacheDirectoryPath;
    _Bool failedToInitialize;
}

+ (unsigned long long)getCacheSize:(id)arg1;
+ (id)instance;
- (void).cxx_destruct;
- (void)deleteRequest:(id)arg1;
- (void)sendNextCachedEvents;
- (void)processCache;
- (void)sendCachedRequest:(id)arg1;
- (id)getCachedRequests;
- (unsigned long long)getCacheSize;
- (void)cacheRequest:(id)arg1;
- (void)initialize;
- (id)getCacheDirectoryPath;

@end

@interface AppsFlyerRequestCacheData : NSObject
{
    NSString *_sdkVersion;
    NSString *_postData;
    NSString *_requestURL;
    NSString *_cacheKey;
}

@property(retain, nonatomic) NSString *cacheKey; // @synthesize cacheKey=_cacheKey;
@property(retain, nonatomic) NSString *requestURL; // @synthesize requestURL=_requestURL;
@property(retain, nonatomic) NSString *postData; // @synthesize postData=_postData;
@property(retain, nonatomic) NSString *sdkVersion; // @synthesize sdkVersion=_sdkVersion;
- (void).cxx_destruct;
- (id)initWithURL:(id)arg1 withPost:(id)arg2 withVerion:(id)arg3;

@end

@interface CRLegacyDeviceIdFinder : NSObject
{
    NSString *_appId;
    NSUserDefaults *_defaults;
}

+ (id)idFinderUsingAppId:(id)arg1 andUserDefaults:(id)arg2;
@property(retain) NSUserDefaults *defaults; // @synthesize defaults=_defaults;
@property(retain) NSString *appId; // @synthesize appId=_appId;
- (id)getDeviceUUIDFromPasteboards;
- (id)getDeviceUUIDFromAppSettings;
- (id)lookupId;
- (void)dealloc;
- (id)initWithAppId:(id)arg1 andUserDefaults:(id)arg2;

@end

@interface CRReachability : NSObject
{
    _Bool localWiFiRef;
    _Bool _scheduled;
    struct __SCNetworkReachability *_reachabilityRef;
    NSString *_notificationCenterKey;
}

+ (id)reachabilityForWiFi;
+ (id)reachabilityForWiFiWithNotificationKey:(id)arg1;
+ (id)reachabilityForInternetConnection;
+ (id)reachabilityForHostName:(id)arg1;
+ (id)reachabilityWithAddress:(const struct sockaddr_in *)arg1 withKey:(id)arg2;
+ (id)reachabilityForHostName:(id)arg1 withNotificationKey:(id)arg2;
@property(retain) NSString *notificationCenterKey; // @synthesize notificationCenterKey=_notificationCenterKey;
- (int)currentReachabilityStatus;
- (void)stopNotifier;
- (_Bool)startNotifier;
- (void)dealloc;
- (id)initWithNotificationKey:(id)arg1;

@end

@interface Crittercism : NSObject
{
    CritterImpl *critter_;
}

+ (void)resetSharedCritter;
+ (id)sharedCritter;
+ (_Bool)didCrashOnLastLoad;
+ (void)setDelegate:(id)arg1;
+ (id)delegate;
+ (void)updateLocation:(id)arg1;
+ (void)addFilter:(id)arg1;
+ (void)setValue:(id)arg1 forKey:(id)arg2;
+ (void)setUsername:(id)arg1;
+ (id)getUserUUID;
+ (void)leaveBreadcrumb:(id)arg1;
+ (_Bool)logHandledException:(id)arg1;
+ (unsigned long long)maxOfflineCrashReports;
+ (void)setMaxOfflineCrashReports:(unsigned long long)arg1;
+ (_Bool)getOptOutStatus;
+ (void)setOptOutStatus:(_Bool)arg1;
+ (void)setAsyncBreadcrumbMode:(_Bool)arg1;
+ (void)enableFromConfigFile;
+ (void)enableWithAppID:(id)arg1 andDelegate:(id)arg2 andURLFilters:(id)arg3 disableInstrumentation:(_Bool)arg4;
+ (void)enableWithAppID:(id)arg1 andURLFilters:(id)arg2;
+ (void)enableWithAppID:(id)arg1 andDelegate:(id)arg2 andURLFilters:(id)arg3;
+ (void)enableWithAppID:(id)arg1 andDelegate:(id)arg2;
+ (void)enableWithAppID:(id)arg1;
+ (void)load;
@property(nonatomic) CritterImpl *critter; // @synthesize critter=critter_;
- (void)logCritterError:(id)arg1;
- (_Bool)didCrashOnLastLoad;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)updateLocation:(id)arg1;
- (void)addFilter:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setUsername:(id)arg1;
- (void)leaveBreadcrumb:(id)arg1;
- (_Bool)logHandledException:(id)arg1;
- (id)getUserUUID;
- (unsigned long long)maxOfflineCrashReports;
- (void)setMaxOfflineCrashReports:(unsigned long long)arg1;
- (_Bool)getOptOutStatus;
- (void)setOptOutStatus:(_Bool)arg1;
- (void)setAsyncBreadcrumbMode:(_Bool)arg1;
- (void)enableWithAppID:(id)arg1 andDelegate:(id)arg2 andURLFilters:(id)arg3 disableInstrumentation:(_Bool)arg4;
- (void)enableFromConfigFile;
- (id)init;

@end

@interface CritterImpl : NSObject
{
    id <CrittercismDelegate> delegate;
    _Bool _loggingCritterError;
    _Bool _isOptedOut;
    unsigned long long _sessionNum;
    _Bool _didCrashOnLastLoad;
    _Bool _isReady;
    NSString *_deviceUUID;
    NSString *_appId;
    NSString *_critterURL;
    NSString *_netDataURL;
    CRPreferences *_preferences;
    CRDevice *_device;
    CRExceptionHandler *_exceptionHandler;
    CRCrashArchive *_crashArchive;
    CRNetworkMonitor *_netMon;
    CRNetCollector *_netCollector;
    CRAppRater *_appRater;
    CRNetCrumbs *_netCrumbs;
    CRBreadcrumbs *_breadcrumbs;
    CRReachability *_hostReach;
    CRReachability *_internetReach;
    CRReachability *_wifiReach;
    NSMutableArray *_detectedClasses;
}

@property(retain) NSMutableArray *detectedClasses; // @synthesize detectedClasses=_detectedClasses;
@property(retain) CRReachability *wifiReach; // @synthesize wifiReach=_wifiReach;
@property(retain) CRReachability *internetReach; // @synthesize internetReach=_internetReach;
@property(retain) CRReachability *hostReach; // @synthesize hostReach=_hostReach;
@property(retain) CRBreadcrumbs *breadcrumbs; // @synthesize breadcrumbs=_breadcrumbs;
@property(retain) CRNetCrumbs *netCrumbs; // @synthesize netCrumbs=_netCrumbs;
@property(retain) CRAppRater *appRater; // @synthesize appRater=_appRater;
@property(retain) CRNetCollector *netCollector; // @synthesize netCollector=_netCollector;
@property(retain) CRNetworkMonitor *netMon; // @synthesize netMon=_netMon;
@property(retain) CRCrashArchive *crashArchive; // @synthesize crashArchive=_crashArchive;
@property(retain) CRExceptionHandler *exceptionHandler; // @synthesize exceptionHandler=_exceptionHandler;
@property(retain) CRDevice *device; // @synthesize device=_device;
@property(retain) CRPreferences *preferences; // @synthesize preferences=_preferences;
@property(retain) NSString *netDataURL; // @synthesize netDataURL=_netDataURL;
@property(retain) NSString *critterURL; // @synthesize critterURL=_critterURL;
@property(copy) NSString *appId; // @synthesize appId=_appId;
@property _Bool isReady; // @synthesize isReady=_isReady;
@property(readonly, getter=getUserUUID) NSString *deviceUUID; // @synthesize deviceUUID=_deviceUUID;
@property _Bool didCrashOnLastLoad; // @synthesize didCrashOnLastLoad=_didCrashOnLastLoad;
- (void)setupUserVoice;
- (void)logRateMeClickWithButtonIndex:(long long)arg1;
- (void)logEndpoint:(id)arg1;
- (void)storeAPMSettings:(_Bool)arg1 withFrequency:(id)arg2;
- (void)configureSampling:(_Bool)arg1 withFrequency:(id)arg2;
- (void)useStoredAPMSettings;
- (void)receivedAPMSettings:(_Bool)arg1 withFrequency:(id)arg2 andKillState:(_Bool)arg3 persistState:(_Bool)arg4;
- (void)setupNetCollectionWithCurrentDevice:(id)arg1;
- (void)setupNetMonitoringWithFilters:(id)arg1;
- (id)setupBreadcrumbs;
- (id)setupNetCrumbs;
- (void)sendUserMetadata;
- (void)handleRateMeAlert:(id)arg1;
- (_Bool)userMetadataCacheIsDirty;
- (void)setUserMetadataCacheIsDirty:(_Bool)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)postJSONtoEndpoint:(id)arg1 withData:(id)arg2;
- (void)postURLEncodedToEndpoint:(id)arg1 withData:(id)arg2 andHandler:(id)arg3;
- (void)appLoadedWithLaunch:(_Bool)arg1;
- (id)buildRequestWithState:(int)arg1 appendUserMetadata:(_Bool)arg2;
- (void)addFullStateDataTo:(id)arg1;
- (id)getStateWithFullState:(_Bool)arg1;
- (id)makeBasicRequest;
@property(retain) id <CrittercismDelegate> delegate;
- (void)leaveBreadcrumb:(id)arg1;
- (void)updateReachability:(id)arg1;
- (void)wifiReachabilityChanged:(id)arg1;
- (void)internetReachabilityChanged:(id)arg1;
- (void)hostReachabilityChanged:(id)arg1;
- (void)setupReachabilityUpdates;
- (void)setupAppRater;
- (void)setupRotationNotifications;
- (void)setupMultiTaskNotifications;
- (void)setupHandledExceptions;
- (void)setupDetectedClasses;
- (void)setupURLs;
- (void)didRotateFromInterfaceOrientation:(long long *)arg1;
- (void)handleCrashReportWithStoredDevice:(id)arg1 andStoredPrefs:(id)arg2 andBreadcrumbs:(id)arg3 andEndpoints:(id)arg4;
- (_Bool)logHandledException:(id)arg1;
- (void)logCritterError:(id)arg1;
- (void)updateLocation:(id)arg1;
- (void)addFilter:(id)arg1;
- (unsigned long long)maxOfflineCrashReports;
- (void)setMaxOfflineCrashReports:(unsigned long long)arg1;
- (_Bool)getOptOutStatus;
- (void)setOptOutStatus:(_Bool)arg1;
- (void)setAsyncBreadcrumbMode:(_Bool)arg1;
- (void)enableWithAppID:(id)arg1 andDelegate:(id)arg2 andURLFilters:(id)arg3 disableInstrumentation:(_Bool)arg4;
- (void)enableFromConfigFile;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface CRDevice : NSObject
{
    NSMutableDictionary *_deviceInfo;
}

+ (id)deviceWithDummyInfo;
+ (id)deviceFromPersistentState:(id)arg1;
+ (id)deviceFromCurrentDevice;
@property(copy, nonatomic) NSMutableDictionary *deviceInfo; // @synthesize deviceInfo=_deviceInfo;
- (void)updateOrientation;
- (_Bool)isEqual:(id)arg1;
- (void)flushToPersistentState:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)asDictionary;
- (id)carrier;
- (id)systemVersion;
- (id)systemName;
- (id)platform;
- (id)initFromPersistentState:(id)arg1;
- (id)initFromCurrentDevice;
- (id)initFromDeviceInfoDictionary:(id)arg1;

@end

@interface CRPreferences : NSObject
{
    NSString *_critterKey;
}

@property(retain, nonatomic) NSString *critterKey; // @synthesize critterKey=_critterKey;
- (void)storeValue:(id)arg1 forKey:(id)arg2 forDictionary:(id)arg3;
- (void)storeValue:(id)arg1 forKey:(id)arg2 forDictionary:(id)arg3 wasWritten:(_Bool *)arg4;
- (id)getValueWithKey:(id)arg1 andDictionaryName:(id)arg2;
- (id)getDict:(id)arg1;
- (id)getRootDict;
- (id)describe;
- (id)initWithAppId:(id)arg1;

@end

@interface CRConnectionHandler : NSObject
{
    CritterImpl *_delegate;
    NSMutableData *_dataReceived;
    NSURLResponse *_response;
}

+ (id)handlerWithDelegate:(id)arg1;
@property(retain) NSURLResponse *response; // @synthesize response=_response;
@property(retain) NSMutableData *dataReceived; // @synthesize dataReceived=_dataReceived;
@property CritterImpl *delegate; // @synthesize delegate=_delegate;
- (id)dataReceivedAsString;
- (_Bool)receivedErrorResponse;
- (long long)statusCode;
- (void)sendRequest:(id)arg1;
- (void)doSendRequest:(id)arg1;
- (void)handleError:(id)arg1;
- (void)handleResponse:(long long)arg1 andData:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithCritterDelegate:(id)arg1;

@end

@interface CRCrashConnectionHandler : CRConnectionHandler
{
    NSString *_path;
    CRCrashArchive *_crashArchive;
}

- (void)setCrashArchive:(id)arg1;
- (id)crashArchive;
- (void)setPath:(id)arg1;
- (id)path;
- (void)handleError:(id)arg1;
- (void)handleResponse:(long long)arg1 andData:(id)arg2;
- (void)dealloc;
- (id)initWithCritterDelegate:(id)arg1 andCrashArchive:(id)arg2 andReportPath:(id)arg3;

@end

@interface CRCrashArchive : NSObject
{
    NSString *_crashDirectory;
    NSOperationQueue *_sendQueue;
    NSMutableSet *_reportsInSendQueue;
    CRReachability *_reachability;
    unsigned long long _maxSavedCrashReports;
    CRPreferences *_storedState;
    NSString *_baseCritterURL;
    CritterImpl *_critterImpl;
}

+ (id)crashReportDirectory;
@property CritterImpl *critterImpl; // @synthesize critterImpl=_critterImpl;
@property(retain) NSString *baseCritterURL; // @synthesize baseCritterURL=_baseCritterURL;
@property(retain) CRPreferences *storedState; // @synthesize storedState=_storedState;
@property(nonatomic) unsigned long long maxOfflineCrashReports; // @synthesize maxOfflineCrashReports=_maxSavedCrashReports;
@property(retain) CRReachability *reachability; // @synthesize reachability=_reachability;
@property(retain) NSMutableSet *reportsInSendQueue; // @synthesize reportsInSendQueue=_reportsInSendQueue;
@property(retain) NSOperationQueue *sendQueue; // @synthesize sendQueue=_sendQueue;
@property(retain) NSString *crashDirectory; // @synthesize crashDirectory=_crashDirectory;
- (void)deleteAllCrashReports;
- (void)deleteCrashReport:(id)arg1;
- (void)notifySendReportFailed:(id)arg1;
- (void)sendCrashReports;
- (_Bool)sendCrashReport:(id)arg1 withError:(id *)arg2;
- (_Bool)loadCrashInfoFromPath:(id)arg1 crashInfo:(id *)arg2 rawCrashData:(id *)arg3;
- (id)saveCrashInfo:(id)arg1 andRawCrashData:(id)arg2;
- (id)makeCrashReportName;
- (id)pendingCrashReports;
- (void)dealloc;
- (void)registerForOnlineCallbacks;
- (void)reachabilityChanged:(id)arg1;
- (id)init;
- (id)initWithCritterImpl:(id)arg1 andStoredState:(id)arg2 andBaseURL:(id)arg3;

@end

@interface CRRequest : NSObject
{
    int _requestType;
    NSString *_baseURL;
    NSString *_endpoint;
    NSDictionary *_payload;
    NSMutableArray *_parts;
}

@property(retain) NSMutableArray *parts; // @synthesize parts=_parts;
@property(retain) NSDictionary *payload; // @synthesize payload=_payload;
@property(copy) NSString *endpoint; // @synthesize endpoint=_endpoint;
@property(copy) NSString *baseURL; // @synthesize baseURL=_baseURL;
- (void)buildMultipartRequest:(id)arg1;
- (void)buildURIEncodedRequest:(id)arg1;
- (void)buildJSONRequest:(id)arg1;
- (id)getURLRequest;
- (void)addPart:(id)arg1;
- (void)dealloc;
- (id)initWithBaseURL:(id)arg1 andEndPoint:(id)arg2 andRequestType:(int)arg3;

@end

@interface CRAppLoadedHandler : CRConnectionHandler
{
}

- (void)processRateMeSettings:(id)arg1;
- (void)processAPMResponse:(id)arg1;
- (_Bool)checkSuccess:(id)arg1;
- (void)processResponse:(id)arg1;
- (void)useStoredAPMSettings;
- (void)handleError:(id)arg1;
- (void)handleResponse:(long long)arg1 andData:(id)arg2;

@end

@interface CRDetectedClass : NSObject
{
    _Bool _isNSObjectSubclass;
    _Bool _isWebViewSubclass;
    _Bool _isViewControllerSubclass;
    NSString *_name;
}

+ (id)detectedClassWithFoundClass:(const struct cr_found_class_t *)arg1;
@property(nonatomic) _Bool isViewControllerSubclass; // @synthesize isViewControllerSubclass=_isViewControllerSubclass;
@property(nonatomic) _Bool isWebViewSubclass; // @synthesize isWebViewSubclass=_isWebViewSubclass;
@property(nonatomic) _Bool isNSObjectSubclass; // @synthesize isNSObjectSubclass=_isNSObjectSubclass;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (Class)getClass;
- (void)dealloc;
- (id)initWithFoundClass:(const struct cr_found_class_t *)arg1;

@end

@interface CRAppInfo : NSObject
{
    _Bool _hasAlternateVersion;
    NSNumber *_isPirated;
    NSString *_bundleVersion;
    NSString *_marketingVersion;
    NSString *_alternateVersion;
    NSString *_bundleIdentifier;
}

+ (id)appInfo;
@property _Bool hasAlternateVersion; // @synthesize hasAlternateVersion=_hasAlternateVersion;
@property(retain) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain) NSString *alternateVersion; // @synthesize alternateVersion=_alternateVersion;
@property(retain) NSString *marketingVersion; // @synthesize marketingVersion=_marketingVersion;
@property(retain) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(retain) NSNumber *isPirated; // @synthesize isPirated=_isPirated;
- (void)dealloc;
- (id)init;

@end

@interface CRUserMetadataConnectionHandler : CRConnectionHandler
{
}

- (void)handleError:(id)arg1;
- (void)handleResponse:(long long)arg1 andData:(id)arg2;

@end

@interface CRPart : NSObject
{
    NSString *_name;
    NSString *_filename;
    NSString *_contentType;
}

@property(retain) NSString *contentType; // @synthesize contentType=_contentType;
@property(retain) NSString *filename; // @synthesize filename=_filename;
@property(retain) NSString *name; // @synthesize name=_name;
- (void)serializeTo:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 andFilename:(id)arg2 andContentType:(id)arg3;

@end

@interface CRJSONPart : CRPart
{
    NSDictionary *_dataDict;
}

@property(retain) NSDictionary *dataDict; // @synthesize dataDict=_dataDict;
- (void)serializeTo:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 andFilename:(id)arg2 andDict:(id)arg3;

@end

@interface CRDataPart : CRPart
{
    NSData *_partData;
}

@property(retain) NSData *partData; // @synthesize partData=_partData;
- (void)serializeTo:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 andFilename:(id)arg2 andData:(id)arg3;

@end

@interface CRNetworkMonitor : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _onWifi;
    double _currentLatitude;
    double _currentLongitude;
    _Bool _swizzlingComplete;
    CritterImpl *_critterDelegate;
    NSMutableArray *_blacklistFilters;
    NSMutableArray *_otherFilters;
    NSMutableDictionary *_connections;
    NSString *_baseURL;
    NSString *_endpoint;
    NSString *_ignoreEndpoint;
    CRReachability *_wifiReachability;
    NSString *_delegateFileName;
    NSString *_appUUID;
    NSArray *_detectedClasses;
}

@property(retain) NSArray *detectedClasses; // @synthesize detectedClasses=_detectedClasses;
@property(retain) NSString *appUUID; // @synthesize appUUID=_appUUID;
@property(retain) NSString *delegateFileName; // @synthesize delegateFileName=_delegateFileName;
@property(retain) CRReachability *wifiReachability; // @synthesize wifiReachability=_wifiReachability;
@property(retain) NSString *ignoreEndpoint; // @synthesize ignoreEndpoint=_ignoreEndpoint;
@property(copy) NSString *endpoint; // @synthesize endpoint=_endpoint;
@property(copy) NSString *baseURL; // @synthesize baseURL=_baseURL;
@property(retain) NSMutableDictionary *connections; // @synthesize connections=_connections;
@property(retain) NSMutableArray *otherFilters; // @synthesize otherFilters=_otherFilters;
@property(retain) NSMutableArray *blacklistFilters; // @synthesize blacklistFilters=_blacklistFilters;
@property(nonatomic) CritterImpl *critterDelegate; // @synthesize critterDelegate=_critterDelegate;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)startCalledForConnection:(id)arg1;
- (void)swizzleDidFailWithErrorForClass:(Class)arg1;
- (void)swizzleDidFinishLoadingForClass:(Class)arg1;
- (void)swizzleDidReceiveDataForClass:(Class)arg1;
- (void)swizzleDidReceiveResponseForClass:(Class)arg1;
- (void)swizzleDidSendBodyDataForClass:(Class)arg1;
- (void)swizzleDelegateClass:(Class)arg1;
- (void)swizzleNSURLConnectionStart;
- (void)storeDelegateCache:(id)arg1;
- (id)findDelegates;
- (id)loadDelegatesFromCache;
- (void)instrumentNSURLConnection;
- (void)logConnection:(id)arg1 finishedWithError:(id)arg2;
- (id)requestStateForConnection:(id)arg1 allowCreate:(_Bool)arg2;
- (id)requestStateForConnection:(id)arg1;
- (void)reachabilityChanged:(id)arg1;
- (_Bool)enableReachabilityUpdates;
- (void)updateLocation:(id)arg1;
- (void)addFilter:(id)arg1;
- (void)startMonitoring;
- (void)performBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 andBaseURL:(id)arg2 andEndpoint:(id)arg3 andFilters:(id)arg4 andDetectedClasses:(id)arg5;

@end

@interface CRRequestState : NSObject
{
    _Bool _onWifi;
    NSDate *_timestamp;
    NSString *_url;
    NSString *_method;
    NSString *_errorString;
    double _latency;
    long long _errorType;
    long long _responseCode;
    unsigned long long _bytesSent;
    unsigned long long _bytesRead;
    double _latitude;
    double _longitude;
}

@property(nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(nonatomic) double latitude; // @synthesize latitude=_latitude;
@property(nonatomic) unsigned long long bytesRead; // @synthesize bytesRead=_bytesRead;
@property(nonatomic) unsigned long long bytesSent; // @synthesize bytesSent=_bytesSent;
@property(nonatomic) long long responseCode; // @synthesize responseCode=_responseCode;
@property(nonatomic) long long errorType; // @synthesize errorType=_errorType;
@property(nonatomic) double latency; // @synthesize latency=_latency;
@property(nonatomic) _Bool onWifi; // @synthesize onWifi=_onWifi;
@property(retain, nonatomic) NSString *errorString; // @synthesize errorString=_errorString;
@property(retain, nonatomic) NSString *method; // @synthesize method=_method;
@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(retain, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
- (id)makeArrayUsingDefault:(id)arg1;
- (id)plistSafeArray;
- (id)jsonArray;
- (void)connectionFailedWithError:(id)arg1;
- (void)onReceivedData:(unsigned long long)arg1;
- (void)initialResponseReceivedAt:(id)arg1;
- (void)sentRequestAt:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface CRRateAppAlert : UIAlertView
{
}

@end

@interface CRNetCollector : NSObject
{
    unsigned long long _sampleState;
    unsigned long long _sessionNum;
    NSMutableArray *_apmEndpoints;
    NSTimer *_uploadTimer;
    CritterImpl *_critterDelegate;
    NSString *_netURL;
    NSString *_netEndpoint;
    NSString *_appID;
    NSString *_bundleVersion;
    NSString *_deviceID;
    NSString *_libVersion;
    NSString *_carrier;
    NSString *_platformName;
    NSString *_systemName;
    NSString *_systemVersion;
}

@property(copy) NSString *systemVersion; // @synthesize systemVersion=_systemVersion;
@property(copy) NSString *systemName; // @synthesize systemName=_systemName;
@property(copy) NSString *platformName; // @synthesize platformName=_platformName;
@property(copy) NSString *carrier; // @synthesize carrier=_carrier;
@property(copy) NSString *libVersion; // @synthesize libVersion=_libVersion;
@property(copy) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(copy) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(copy) NSString *appID; // @synthesize appID=_appID;
@property(copy) NSString *netEndpoint; // @synthesize netEndpoint=_netEndpoint;
@property(copy) NSString *netURL; // @synthesize netURL=_netURL;
@property CritterImpl *critterDelegate; // @synthesize critterDelegate=_critterDelegate;
@property NSTimer *uploadTimer; // @synthesize uploadTimer=_uploadTimer;
@property(retain) NSMutableArray *apmEndpoints; // @synthesize apmEndpoints=_apmEndpoints;
- (void)sendNetworkData;
- (void)clearCollectionTimer;
- (void)resetSampling:(id)arg1;
- (void)enableSamplingWithFrequencyInternal:(id)arg1;
- (void)collectOnlyMode;
- (void)disableSampling;
- (void)enableSamplingWithFrequency:(id)arg1;
- (void)logEndpoint:(id)arg1;
- (void)dealloc;
- (id)initWithCritterDelegate:(id)arg1 andNetDataURL:(id)arg2 andNetDataEndpoint:(id)arg3 andAppID:(id)arg4 andBundleVersion:(id)arg5 andDeviceId:(id)arg6 andLibraryVersion:(id)arg7 andSessionNum:(unsigned long long)arg8 andDevice:(id)arg9;

@end

@interface WebController : UIViewController <UIWebViewDelegate, UIToolbarDelegate>
{
    NSString *withURL;
    NSString *titleBarTitle;
    NSString *cancelBtnTitle;
    UILabel *myTitleLabel;
    UIBarButtonItem *cancelBtn;
    UIToolbar *toolBar;
    UIWebView *myWebView;
    NSURLRequest *urlRequest;
}

@property(retain, nonatomic) NSURLRequest *urlRequest; // @synthesize urlRequest;
@property(retain, nonatomic) UIWebView *myWebView; // @synthesize myWebView;
@property(retain, nonatomic) UIToolbar *toolBar; // @synthesize toolBar;
@property(retain, nonatomic) UIBarButtonItem *cancelBtn; // @synthesize cancelBtn;
@property(retain, nonatomic) UILabel *myTitleLabel; // @synthesize myTitleLabel;
@property(retain, nonatomic) NSString *cancelBtnTitle; // @synthesize cancelBtnTitle;
@property(retain, nonatomic) NSString *titleBarTitle; // @synthesize titleBarTitle;
@property(retain, nonatomic) NSString *withURL; // @synthesize withURL;
- (void)dealloc;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (void)timeout:(id)arg1;
- (void)cancelAction:(id)arg1;
- (long long)positionForBar:(id)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface CRNetCrumbs : NSObject
{
    unsigned long long _maxEndpoints;
    _Bool _isDirty;
    CritterImpl *_critterDelegate;
    NSMutableArray *_endpoints;
    NSString *_backingFile;
}

@property(retain) NSString *backingFile; // @synthesize backingFile=_backingFile;
@property(retain) NSMutableArray *endpoints; // @synthesize endpoints=_endpoints;
@property CritterImpl *critterDelegate; // @synthesize critterDelegate=_critterDelegate;
- (void)flush;
- (id)loadEndpoints;
- (void)logEndpoint:(id)arg1;
- (id)enable;
- (void)dealloc;
- (id)initWithCritterDelegate:(id)arg1 andBackingFile:(id)arg2 andMaxEndpoints:(unsigned long long)arg3;

@end

@interface CRBreadcrumbs : NSObject
{
    _Bool _isDirty;
    _Bool _inAsyncBreadcrumbMode;
    NSMutableDictionary *_breadcrumbs;
    NSString *_backingFile;
    CritterImpl *_critterDelegate;
}

@property CritterImpl *critterDelegate; // @synthesize critterDelegate=_critterDelegate;
@property(retain) NSString *backingFile; // @synthesize backingFile=_backingFile;
@property(retain) NSMutableDictionary *breadcrumbs; // @synthesize breadcrumbs=_breadcrumbs;
- (void)flush;
- (id)getCrumbs;
- (void)leaveBreadcrumb:(id)arg1;
- (void)setAsyncMode:(_Bool)arg1;
- (void)shuffleBreadcrumbs;
- (void)dealloc;
- (id)initWithCritterDelegate:(id)arg1 andBackingFile:(id)arg2;

@end

@interface CRCrashHandler : NSObject
{
}

+ (id)loadCrash;
+ (void)enableCrashDetection;
+ (_Bool)crashAvailable;

@end

@interface CRCrash : NSObject
{
    CRRawCrash *_rawCrash;
    NSDictionary *_breadcrumbs;
    NSArray *_endpoints;
    NSString *_appID;
    NSString *_libVersion;
    NSString *_deviceID;
    NSDictionary *_storedPrefs;
    NSDictionary *_storedDeviceDict;
}

+ (id)crashWithRawCrash:(id)arg1 andStoredDevice:(id)arg2 andStoredPrefs:(id)arg3 andBreadcrumbs:(id)arg4 andEndpoints:(id)arg5 appID:(id)arg6 libVersion:(id)arg7 deviceID:(id)arg8;
@property(retain) NSDictionary *storedDeviceDict; // @synthesize storedDeviceDict=_storedDeviceDict;
@property(retain) NSDictionary *storedPrefs; // @synthesize storedPrefs=_storedPrefs;
@property(retain) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(retain) NSString *libVersion; // @synthesize libVersion=_libVersion;
@property(retain) NSString *appID; // @synthesize appID=_appID;
@property(retain) NSArray *endpoints; // @synthesize endpoints=_endpoints;
@property(retain) NSDictionary *breadcrumbs; // @synthesize breadcrumbs=_breadcrumbs;
@property(retain) CRRawCrash *rawCrash; // @synthesize rawCrash=_rawCrash;
- (void)addDataFromRawCrashTo:(id)arg1;
- (void)addAppStateFromRawCrashTo:(id)arg1;
- (id)makeAppStateDict;
- (id)getRawCrashData;
- (id)getMetadata;
- (void)dealloc;
- (id)initWithRawCrash:(id)arg1 andStoredDevice:(id)arg2 andStoredPrefs:(id)arg3 andBreadcrumbs:(id)arg4 andEndpoints:(id)arg5 appID:(id)arg6 libVersion:(id)arg7 deviceID:(id)arg8;

@end

@interface CRRawCrash : NSObject
{
    NSData *_plcData;
    NSString *_imageUUID;
    NSString *_binaryImageName;
    NSString *_binaryImageArchitecture;
    NSString *_exceptionName;
    NSString *_exceptionReason;
    NSString *_reportedAt;
    NSString *_appVersion;
    NSNumber *_memUsage;
    NSNumber *_diskSpaceFree;
}

+ (id)crashWithPLCData:(id)arg1;
@property(retain) NSNumber *diskSpaceFree; // @synthesize diskSpaceFree=_diskSpaceFree;
@property(retain) NSNumber *memUsage; // @synthesize memUsage=_memUsage;
@property(retain) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(retain) NSString *reportedAt; // @synthesize reportedAt=_reportedAt;
@property(retain) NSString *exceptionReason; // @synthesize exceptionReason=_exceptionReason;
@property(retain) NSString *exceptionName; // @synthesize exceptionName=_exceptionName;
@property(retain) NSString *binaryImageArchitecture; // @synthesize binaryImageArchitecture=_binaryImageArchitecture;
@property(retain) NSString *binaryImageName; // @synthesize binaryImageName=_binaryImageName;
@property(retain) NSString *imageUUID; // @synthesize imageUUID=_imageUUID;
@property(retain) NSData *plcData; // @synthesize plcData=_plcData;
- (_Bool)populateAppStateDataFromPLCrashReport:(id)arg1;
- (_Bool)populate;
- (void)dealloc;
- (id)initWithPLCrashData:(id)arg1;

@end

@interface CRAppRater : NSObject
{
    unsigned long long _appLoadCount;
    CRRateAppAlert *_rateMeAlert;
    CritterImpl *_critterDelegate;
    CRPreferences *_storedState;
}

@property(retain) CRPreferences *storedState; // @synthesize storedState=_storedState;
@property CritterImpl *critterDelegate; // @synthesize critterDelegate=_critterDelegate;
@property(retain, nonatomic) CRRateAppAlert *rateMeAlert; // @synthesize rateMeAlert=_rateMeAlert;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)openAppStore;
- (void)incrementAppLoadCount;
- (void)resetRateMeSettings;
- (_Bool)shouldResetRateMeSettings;
- (_Bool)shouldDisplayRateMeAlertWithDict:(id)arg1;
- (void)persistItunesIdIfPresent:(id)arg1;
- (void)handleRateMeSettings:(id)arg1;
- (void)appLoadedWithLaunch:(_Bool)arg1;
- (void)dealloc;
- (id)initWithStoredState:(id)arg1 andCritterDelegate:(id)arg2;

@end

@interface CRExceptionHandler : NSObject
{
    CritterImpl *_critterDelegate;
    NSString *_appID;
    NSString *_libVersion;
    NSString *_deviceID;
    NSString *_binaryImageUUID;
    NSString *_binaryImageName;
    NSString *_binaryImageArch;
    NSDate *_lastSendTime;
    NSMutableArray *_batchedExceptions;
}

@property(retain) NSMutableArray *batchedExceptions; // @synthesize batchedExceptions=_batchedExceptions;
@property(retain) NSDate *lastSendTime; // @synthesize lastSendTime=_lastSendTime;
@property(retain) NSString *binaryImageArch; // @synthesize binaryImageArch=_binaryImageArch;
@property(retain) NSString *binaryImageName; // @synthesize binaryImageName=_binaryImageName;
@property(retain) NSString *binaryImageUUID; // @synthesize binaryImageUUID=_binaryImageUUID;
@property(retain) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(retain) NSString *libVersion; // @synthesize libVersion=_libVersion;
@property(retain) NSString *appID; // @synthesize appID=_appID;
@property CritterImpl *critterDelegate; // @synthesize critterDelegate=_critterDelegate;
- (void)sendBatch;
- (id)makeExceptionDictFromException:(id)arg1 andBreadcrumbs:(id)arg2 andAppState:(id)arg3;
- (_Bool)logHandledException:(id)arg1 withBreadcrumbs:(id)arg2 andAppState:(id)arg3;
- (void)dealloc;
- (id)initWithAppID:(id)arg1 andLibVersion:(id)arg2 andDeviceID:(id)arg3 andCritterDelegate:(id)arg4;

@end

@interface CRFilter : NSObject
{
    unsigned long long _filterType;
    NSString *_token;
}

+ (id)applyFilter:(unsigned long long)arg1 ToURL:(id)arg2;
+ (id)queryPreservingFilterWithString:(id)arg1;
+ (id)queryOnlyFilterWithString:(id)arg1;
+ (id)filterWithString:(id)arg1;
@property(copy) NSString *token; // @synthesize token=_token;
@property unsigned long long filterType; // @synthesize filterType=_filterType;
- (_Bool)doesMatch:(id)arg1;
- (id)initWithString:(id)arg1 andFilterType:(unsigned long long)arg2;
- (id)initWithString:(id)arg1;
- (void)dealloc;

@end

@interface PLCrashSignalHandler : NSObject
{
    struct __darwin_sigaltstack _sigstk;
}

+ (void)resetHandlers;
+ (id)sharedHandler;
+ (void)initialize;
- (id).cxx_construct;
- (_Bool)registerHandlerForSignal:(int)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3 error:(id *)arg4;
- (_Bool)registerHandlerWithSignal:(int)arg1 error:(id *)arg2;
- (id)init;

@end

@interface PLCrashReporter : NSObject
{
    PLCrashReporterConfig *_config;
    _Bool _enabled;
    PLCrashMachExceptionServer *_machServer;
    PLCrashMachExceptionPortSet *_previousMachPorts;
    NSString *_applicationIdentifier;
    NSString *_applicationVersion;
    NSString *_crashReportDirectory;
}

+ (id)sharedReporter;
+ (void)initialize;
- (void)setCrashCallbacks:(struct PLCrashReporterCallbacks *)arg1;
- (id)generateLiveReportAndReturnError:(id *)arg1;
- (id)generateLiveReport;
- (id)generateLiveReportWithThread:(unsigned int)arg1 error:(id *)arg2;
- (id)generateLiveReportWithThread:(unsigned int)arg1;
- (_Bool)enableCrashReporterAndReturnError:(id *)arg1;
- (_Bool)enableCrashReporter;
- (_Bool)purgePendingCrashReportAndReturnError:(id *)arg1;
- (_Bool)purgePendingCrashReport;
- (id)loadPendingCrashReportDataAndReturnError:(id *)arg1;
- (id)loadPendingCrashReportData;
- (_Bool)hasPendingCrashReport;
- (id)initWithConfiguration:(id)arg1;
- (id)init;

@end

@interface PLCrashReport : NSObject
{
    struct _PLCrashReportDecoder *_decoder;
    PLCrashReportSystemInfo *_systemInfo;
    PLCrashReportMachineInfo *_machineInfo;
    PLCrashReportApplicationInfo *_applicationInfo;
    PLCrashReportProcessInfo *_processInfo;
    PLCrashReportSignalInfo *_signalInfo;
    PLCrashReportMachExceptionInfo *_machExceptionInfo;
    NSArray *_threads;
    NSArray *_images;
    PLCrashReportExceptionInfo *_exceptionInfo;
    struct __CFUUID *_uuid;
}

@property(readonly, nonatomic) struct __CFUUID *uuidRef; // @synthesize uuidRef=_uuid;
@property(readonly, nonatomic) PLCrashReportExceptionInfo *exceptionInfo; // @synthesize exceptionInfo=_exceptionInfo;
@property(readonly, nonatomic) NSArray *images; // @synthesize images=_images;
@property(readonly, nonatomic) NSArray *threads; // @synthesize threads=_threads;
@property(readonly, nonatomic) PLCrashReportMachExceptionInfo *machExceptionInfo; // @synthesize machExceptionInfo=_machExceptionInfo;
@property(readonly, nonatomic) PLCrashReportSignalInfo *signalInfo; // @synthesize signalInfo=_signalInfo;
@property(readonly, nonatomic) PLCrashReportProcessInfo *processInfo; // @synthesize processInfo=_processInfo;
@property(readonly, nonatomic) PLCrashReportApplicationInfo *applicationInfo; // @synthesize applicationInfo=_applicationInfo;
@property(readonly, nonatomic) PLCrashReportMachineInfo *machineInfo; // @synthesize machineInfo=_machineInfo;
@property(readonly, nonatomic) PLCrashReportSystemInfo *systemInfo; // @synthesize systemInfo=_systemInfo;
@property(readonly, nonatomic) _Bool hasExceptionInfo;
@property(readonly, nonatomic) _Bool hasProcessInfo;
@property(readonly, nonatomic) _Bool hasMachineInfo;
- (id)imageForAddress:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithData:(id)arg1 error:(id *)arg2;

@end

@interface PLCrashReportSystemInfo : NSObject
{
    int _operatingSystem;
    NSString *_osVersion;
    NSString *_osBuild;
    int _architecture;
    NSDate *_timestamp;
    unsigned long long _memoryUsage;
    unsigned long long _freeDiskSpace;
}

@property(readonly, nonatomic) unsigned long long freeDiskSpace; // @synthesize freeDiskSpace=_freeDiskSpace;
@property(readonly, nonatomic) unsigned long long memoryUsage; // @synthesize memoryUsage=_memoryUsage;
@property(readonly, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) int architecture; // @synthesize architecture=_architecture;
@property(readonly, nonatomic) NSString *operatingSystemBuild; // @synthesize operatingSystemBuild=_osBuild;
@property(readonly, nonatomic) NSString *operatingSystemVersion; // @synthesize operatingSystemVersion=_osVersion;
@property(readonly, nonatomic) int operatingSystem; // @synthesize operatingSystem=_operatingSystem;
- (void)dealloc;
- (id)initWithOperatingSystem:(int)arg1 operatingSystemVersion:(id)arg2 operatingSystemBuild:(id)arg3 architecture:(int)arg4 timestamp:(id)arg5 memoryUsage:(unsigned long long)arg6 freeDiskSpace:(unsigned long long)arg7;
- (id)initWithOperatingSystem:(int)arg1 operatingSystemVersion:(id)arg2 architecture:(int)arg3 timestamp:(id)arg4 memoryUsage:(unsigned long long)arg5 freeDiskSpace:(unsigned long long)arg6;

@end

@interface PLCrashReportApplicationInfo : NSObject
{
    NSString *_applicationIdentifier;
    NSString *_applicationVersion;
}

@property(readonly, nonatomic) NSString *applicationVersion; // @synthesize applicationVersion=_applicationVersion;
@property(readonly, nonatomic) NSString *applicationIdentifier; // @synthesize applicationIdentifier=_applicationIdentifier;
- (void)dealloc;
- (id)initWithApplicationIdentifier:(id)arg1 applicationVersion:(id)arg2;

@end

@interface PLCrashReportThreadInfo : NSObject
{
    long long _threadNumber;
    NSArray *_stackFrames;
    _Bool _crashed;
    NSArray *_registers;
}

@property(readonly, nonatomic) NSArray *registers; // @synthesize registers=_registers;
@property(readonly, nonatomic) _Bool crashed; // @synthesize crashed=_crashed;
@property(readonly, nonatomic) NSArray *stackFrames; // @synthesize stackFrames=_stackFrames;
@property(readonly, nonatomic) long long threadNumber; // @synthesize threadNumber=_threadNumber;
- (void)dealloc;
- (id)initWithThreadNumber:(long long)arg1 stackFrames:(id)arg2 crashed:(_Bool)arg3 registers:(id)arg4;

@end

@interface PLCrashReportBinaryImageInfo : NSObject
{
    PLCrashReportProcessorInfo *_processorInfo;
    unsigned long long _baseAddress;
    unsigned long long _imageSize;
    NSString *_imageName;
    _Bool _hasImageUUID;
    NSString *_imageUUID;
}

@property(readonly, nonatomic) NSString *imageUUID; // @synthesize imageUUID=_imageUUID;
@property(readonly, nonatomic) _Bool hasImageUUID; // @synthesize hasImageUUID=_hasImageUUID;
@property(readonly, nonatomic) NSString *imageName; // @synthesize imageName=_imageName;
@property(readonly, nonatomic) unsigned long long imageSize; // @synthesize imageSize=_imageSize;
@property(readonly, nonatomic) unsigned long long imageBaseAddress; // @synthesize imageBaseAddress=_baseAddress;
@property(readonly, nonatomic) PLCrashReportProcessorInfo *codeType; // @synthesize codeType=_processorInfo;
- (void)dealloc;
- (id)initWithCodeType:(id)arg1 baseAddress:(unsigned long long)arg2 size:(unsigned long long)arg3 name:(id)arg4 uuid:(id)arg5;

@end

@interface PLCrashReportExceptionInfo : NSObject
{
    NSString *_name;
    NSString *_reason;
    NSArray *_stackFrames;
}

@property(readonly, nonatomic) NSArray *stackFrames; // @synthesize stackFrames=_stackFrames;
@property(readonly, nonatomic) NSString *exceptionReason; // @synthesize exceptionReason=_reason;
@property(readonly, nonatomic) NSString *exceptionName; // @synthesize exceptionName=_name;
- (void)dealloc;
- (id)initWithExceptionName:(id)arg1 reason:(id)arg2 stackFrames:(id)arg3;
- (id)initWithExceptionName:(id)arg1 reason:(id)arg2;

@end

@interface PLCrashReportSignalInfo : NSObject
{
    NSString *_name;
    NSString *_code;
    unsigned long long _address;
}

@property(readonly, nonatomic) unsigned long long address; // @synthesize address=_address;
@property(readonly, nonatomic) NSString *code; // @synthesize code=_code;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void)dealloc;
- (id)initWithSignalName:(id)arg1 code:(id)arg2 address:(unsigned long long)arg3;

@end

@interface PLCrashReportProcessInfo : NSObject
{
    NSString *_processName;
    unsigned long long _processID;
    NSString *_processPath;
    NSDate *_processStartTime;
    NSString *_parentProcessName;
    unsigned long long _parentProcessID;
    _Bool _native;
}

@property(readonly, nonatomic) _Bool native; // @synthesize native=_native;
@property(readonly, nonatomic) unsigned long long parentProcessID; // @synthesize parentProcessID=_parentProcessID;
@property(readonly, nonatomic) NSString *parentProcessName; // @synthesize parentProcessName=_parentProcessName;
@property(readonly, nonatomic) NSDate *processStartTime; // @synthesize processStartTime=_processStartTime;
@property(readonly, nonatomic) NSString *processPath; // @synthesize processPath=_processPath;
@property(readonly, nonatomic) unsigned long long processID; // @synthesize processID=_processID;
@property(readonly, nonatomic) NSString *processName; // @synthesize processName=_processName;
- (void)dealloc;
- (id)initWithProcessName:(id)arg1 processID:(unsigned long long)arg2 processPath:(id)arg3 processStartTime:(id)arg4 parentProcessName:(id)arg5 parentProcessID:(unsigned long long)arg6 native:(_Bool)arg7;

@end

@interface PLCrashReportTextFormatter : NSObject <PLCrashReportFormatter>
{
    int _textFormat;
    unsigned long long _stringEncoding;
}

+ (id)stringValueForCrashReport:(id)arg1 withTextFormat:(int)arg2;
- (id)formatReport:(id)arg1 error:(id *)arg2;
- (id)initWithTextFormat:(int)arg1 stringEncoding:(unsigned long long)arg2;

@end

@interface PLCrashReportProcessorInfo : NSObject
{
    int _typeEncoding;
    unsigned long long _type;
    unsigned long long _subtype;
}

@property(readonly, nonatomic) unsigned long long subtype; // @synthesize subtype=_subtype;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
@property(readonly, nonatomic) int typeEncoding; // @synthesize typeEncoding=_typeEncoding;
- (id)initWithTypeEncoding:(int)arg1 type:(unsigned long long)arg2 subtype:(unsigned long long)arg3;

@end

@interface PLCrashReportMachineInfo : NSObject
{
    NSString *_modelName;
    PLCrashReportProcessorInfo *_processorInfo;
    unsigned long long _processorCount;
    unsigned long long _logicalProcessorCount;
}

@property(readonly, nonatomic) unsigned long long logicalProcessorCount; // @synthesize logicalProcessorCount=_logicalProcessorCount;
@property(readonly, nonatomic) unsigned long long processorCount; // @synthesize processorCount=_processorCount;
@property(readonly, nonatomic) PLCrashReportProcessorInfo *processorInfo; // @synthesize processorInfo=_processorInfo;
@property(readonly, nonatomic) NSString *modelName; // @synthesize modelName=_modelName;
- (void)dealloc;
- (id)initWithModelName:(id)arg1 processorInfo:(id)arg2 processorCount:(unsigned long long)arg3 logicalProcessorCount:(unsigned long long)arg4;

@end

@interface PLCrashReportStackFrameInfo : NSObject
{
    unsigned long long _instructionPointer;
    PLCrashReportSymbolInfo *_symbolInfo;
}

@property(readonly, nonatomic) PLCrashReportSymbolInfo *symbolInfo; // @synthesize symbolInfo=_symbolInfo;
@property(readonly, nonatomic) unsigned long long instructionPointer; // @synthesize instructionPointer=_instructionPointer;
- (void)dealloc;
- (id)initWithInstructionPointer:(unsigned long long)arg1 symbolInfo:(id)arg2;

@end

@interface PLCrashReportRegisterInfo : NSObject
{
    NSString *_registerName;
    unsigned long long _registerValue;
}

@property(readonly, nonatomic) unsigned long long registerValue; // @synthesize registerValue=_registerValue;
@property(readonly, nonatomic) NSString *registerName; // @synthesize registerName=_registerName;
- (void)dealloc;
- (id)initWithRegisterName:(id)arg1 registerValue:(unsigned long long)arg2;

@end

@interface PLCrashReportSymbolInfo : NSObject
{
    NSString *_symbolName;
    unsigned long long _startAddress;
    unsigned long long _endAddress;
}

@property(readonly, nonatomic) unsigned long long endAddress; // @synthesize endAddress=_endAddress;
@property(readonly, nonatomic) unsigned long long startAddress; // @synthesize startAddress=_startAddress;
@property(readonly, nonatomic) NSString *symbolName; // @synthesize symbolName=_symbolName;
- (void)dealloc;
- (id)initWithSymbolName:(id)arg1 startAddress:(unsigned long long)arg2 endAddress:(unsigned long long)arg3;

@end

@interface PLCrashMachExceptionServer : NSObject
{
    struct plcrash_exception_server_context *_serverContext;
}

- (void)dealloc;
- (id)exceptionPortWithMask:(unsigned int)arg1 error:(id *)arg2;
- (unsigned int)copySendRightForServerAndReturningError:(id *)arg1;
@property(readonly, nonatomic) unsigned int serverThread;
- (id)initWithCallBack:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2 error:(id *)arg3;

@end

@interface PLCrashProcessInfo : NSObject
{
    int _processID;
    NSString *_processName;
    int _parentProcessID;
    struct timeval _startTime;
    _Bool _traced;
}

+ (id)currentProcessInfo;
@property(readonly, nonatomic) struct timeval startTime; // @synthesize startTime=_startTime;
@property(readonly, nonatomic, getter=isTraced) _Bool traced; // @synthesize traced=_traced;
@property(readonly, nonatomic) int parentProcessID; // @synthesize parentProcessID=_parentProcessID;
@property(readonly, nonatomic) NSString *processName; // @synthesize processName=_processName;
@property(readonly, nonatomic) int processID; // @synthesize processID=_processID;
- (void)dealloc;
- (id)initWithProcessID:(int)arg1;

@end

@interface PLCrashHostInfo : NSObject
{
    struct PLCrashHostInfoVersion _darwinVersion;
}

+ (id)currentHostInfo;
@property(readonly, nonatomic) struct PLCrashHostInfoVersion darwinVersion; // @synthesize darwinVersion=_darwinVersion;
- (id)init;

@end

@interface PLCrashMachExceptionPort : NSObject
{
    unsigned int _mask;
    unsigned int _port;
    int _behavior;
    int _flavor;
}

+ (id)exceptionPortsForThread:(unsigned int)arg1 mask:(unsigned int)arg2 error:(id *)arg3;
+ (id)exceptionPortsForTask:(unsigned int)arg1 mask:(unsigned int)arg2 error:(id *)arg3;
@property(readonly, nonatomic) int flavor; // @synthesize flavor=_flavor;
@property(readonly, nonatomic) int behavior; // @synthesize behavior=_behavior;
@property(readonly, nonatomic) unsigned int mask; // @synthesize mask=_mask;
@property(readonly, nonatomic) unsigned int server_port; // @synthesize server_port=_port;
- (_Bool)registerForThread:(unsigned int)arg1 previousPortSet:(id *)arg2 error:(id *)arg3;
- (_Bool)registerForTask:(unsigned int)arg1 previousPortSet:(id *)arg2 error:(id *)arg3;
- (void)dealloc;
- (id)initWithServerPort:(unsigned int)arg1 mask:(unsigned int)arg2 behavior:(int)arg3 flavor:(int)arg4;

@end

@interface PLCrashMachExceptionPortSet : NSObject <NSFastEnumeration>
{
    NSSet *_state_set;
    struct plcrash_mach_exception_port_set _asyncSafeRepresentation;
}

@property(readonly, nonatomic) NSSet *set; // @synthesize set=_state_set;
@property(readonly, nonatomic) struct plcrash_mach_exception_port_set asyncSafeRepresentation; // @synthesize asyncSafeRepresentation=_asyncSafeRepresentation;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithAsyncSafeRepresentation:(struct plcrash_mach_exception_port_set)arg1;
- (id)initWithSet:(id)arg1;

@end

@interface PLCrashReporterConfig : NSObject
{
    unsigned long long _signalHandlerType;
    unsigned long long _symbolicationStrategy;
}

+ (id)defaultConfiguration;
@property(readonly, nonatomic) unsigned long long symbolicationStrategy; // @synthesize symbolicationStrategy=_symbolicationStrategy;
@property(readonly, nonatomic) unsigned long long signalHandlerType; // @synthesize signalHandlerType=_signalHandlerType;
- (id)initWithSignalHandlerType:(unsigned long long)arg1 symbolicationStrategy:(unsigned long long)arg2;
- (id)init;

@end

@interface PLCrashUncaughtExceptionHandler : NSObject
{
}

@end

@interface PLCrashReportMachExceptionInfo : NSObject
{
    unsigned long long _type;
    NSArray *_codes;
}

@property(readonly, nonatomic) NSArray *codes; // @synthesize codes=_codes;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (void)dealloc;
- (id)initWithType:(unsigned long long)arg1 codes:(id)arg2;

@end

@interface GSLoginRequest : NSObject <GSLoggerContext>
{
    _Bool _returnUserInfoResponse;
    NSMutableDictionary *_parameters;
    NSString *_method;
    NSString *_provider;
    NSString *_source;
    CDUnknownBlockType _handler;
}

+ (id)loginRequestForMethod:(id)arg1 provider:(id)arg2 parameters:(id)arg3;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(nonatomic) _Bool returnUserInfoResponse; // @synthesize returnUserInfoResponse=_returnUserInfoResponse;
@property(copy, nonatomic) NSString *source; // @synthesize source=_source;
@property(copy, nonatomic) NSString *provider; // @synthesize provider=_provider;
@property(copy, nonatomic) NSString *method; // @synthesize method=_method;
@property(copy, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
- (void)dealloc;
- (id)contextID;
@property(readonly, copy) NSString *description;
- (void)reportError:(id)arg1;
- (void)reportErrorIfNeeded:(id)arg1;
- (void)finishWithError:(id)arg1;
- (void)finishWithSessionData:(id)arg1;
- (void)startLoginOverViewController:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)startLoginWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithMethod:(id)arg1 provider:(id)arg2 parameters:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GSLoginManager : NSObject <GSLoginViewControllerDelegate>
{
    id <GSLoginProvider> _currentProvider;
    NSMutableDictionary *_loginProviders;
    GSLoginRequest *_pendingRequest;
    UIPopoverController *_popover;
    CDUnknownBlockType _loginHandler;
}

+ (id)sharedInstance;
@property(copy, nonatomic) CDUnknownBlockType loginHandler; // @synthesize loginHandler=_loginHandler;
@property(retain, nonatomic) UIPopoverController *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) GSLoginRequest *pendingRequest; // @synthesize pendingRequest=_pendingRequest;
@property(retain, nonatomic) NSMutableDictionary *loginProviders; // @synthesize loginProviders=_loginProviders;
@property(nonatomic) id <GSLoginProvider> currentProvider; // @synthesize currentProvider=_currentProvider;
- (void)dealloc;
- (void)handleDidBecomeActive;
- (_Bool)handleOpenURL:(id)arg1 sourceApplication:(id)arg2 annotation:(id)arg3;
- (void)requestNewFacebookReadPermissions:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;
- (void)requestNewFacebookPublishPermissions:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;
- (id)getFacebookProvider;
- (id)webLoginProvider;
- (id)loginProvider:(id)arg1;
- (void)removeConnectionToProvider:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)clearSessionAfterLogout;
- (void)logoutWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loginViewController:(id)arg1 selectedProvider:(id)arg2 displayName:(id)arg3;
- (void)loginViewController:(id)arg1 didFailWithError:(id)arg2;
- (void)loginViewControllerDidCancel:(id)arg1;
- (void)cancelPendingWithError:(id)arg1;
- (void)checkProvidersCompatibility:(id)arg1 params:(id)arg2;
- (void)showLoginViewController:(id)arg1 popoverFrom:(id)arg2;
- (void)showLoginViewController:(id)arg1 modallyOver:(id)arg2;
- (void)startLoginForMethod:(id)arg1 providers:(id)arg2 parameters:(id)arg3 viewController:(id)arg4 popoverView:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)refreshLoginProviders;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GSProviderSelectionViewController : UINavigationController <GSWebViewControllerDelegate>
{
    _Bool _wasPresented;
    id <GSLoginViewControllerDelegate> _loginDelegate;
    NSString *_navigationTitle;
    NSString *_method;
    NSMutableDictionary *_parameters;
    GSMBProgressHUD *_progress;
}

@property(retain, nonatomic) GSMBProgressHUD *progress; // @synthesize progress=_progress;
@property(retain, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
@property(copy, nonatomic) NSString *method; // @synthesize method=_method;
@property(copy, nonatomic) NSString *navigationTitle; // @synthesize navigationTitle=_navigationTitle;
@property(nonatomic) id <GSLoginViewControllerDelegate> loginDelegate; // @synthesize loginDelegate=_loginDelegate;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (void)webViewControllerDidFinishLoad:(id)arg1;
- (void)webViewController:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewControllerDidCancel:(id)arg1;
- (_Bool)webViewController:(id)arg1 shouldStartLoadWithRequest:(id)arg2;
- (void)debugLongPressRecognized:(id)arg1;
- (void)startWebView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWitMethod:(id)arg1 parameters:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GSWebViewController : UIViewController <UIWebViewDelegate>
{
    NSURL *_url;
    _Bool _didAlreadyAppear;
    UIWebView *_webView;
    id <GSWebViewControllerDelegate> _delegate;
}

@property(nonatomic) id <GSWebViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
- (void)dealloc;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (void)cancelPressed:(id)arg1;
- (void)viewWillUnload:(_Bool)arg1;
- (void)startWebView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy, nonatomic) NSString *title;

@end

@interface GSGigyaSafariProvider : NSObject <GSLoginProvider>
{
    CDUnknownBlockType _handler;
    NSString *_currentProvider;
    GSMBProgressHUD *_progress;
}

+ (_Bool)isAppConfiguredForProvider;
+ (id)instance;
@property(nonatomic) GSMBProgressHUD *progress; // @synthesize progress=_progress;
@property(copy, nonatomic) NSString *currentProvider; // @synthesize currentProvider=_currentProvider;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
- (id)URLScheme;
- (void)testURLScheme;
- (void)handleDidBecomeActive;
- (_Bool)handleOpenURL:(id)arg1 sourceApplication:(id)arg2 annotation:(id)arg3;
- (_Bool)isLoggedIn;
- (void)startLoginForMethod:(id)arg1 parameters:(id)arg2 viewController:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GSGigyaWebViewProvider : NSObject <GSWebViewControllerDelegate, GSLoginProvider>
{
    CDUnknownBlockType _handler;
    UINavigationController *_dialogNavigationController;
}

+ (_Bool)isAppConfiguredForProvider;
+ (id)instance;
@property(retain, nonatomic) UINavigationController *dialogNavigationController; // @synthesize dialogNavigationController=_dialogNavigationController;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
- (void)invokeHandlerWithSessionData:(id)arg1 error:(id)arg2;
- (void)finishWithSessionData:(id)arg1 error:(id)arg2;
- (void)webViewController:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewControllerDidCancel:(id)arg1;
- (void)webViewControllerDidFinishLoad:(id)arg1;
- (void)webViewControllerDidStartLoad:(id)arg1;
- (_Bool)webViewController:(id)arg1 shouldStartLoadWithRequest:(id)arg2;
- (_Bool)isLoggedIn;
- (void)startLoginForMethod:(id)arg1 parameters:(id)arg2 viewController:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GSMBProgressHUD : UIView
{
    _Bool useAnimation;
    SEL methodForExecution;
    id targetForExecution;
    id objectForExecution;
    UILabel *label;
    UILabel *detailsLabel;
    _Bool isFinished;
    struct CGAffineTransform rotationTransform;
    _Bool square;
    _Bool dimBackground;
    _Bool taskInProgress;
    _Bool removeFromSuperViewOnHide;
    int animationType;
    float opacity;
    float xOffset;
    float yOffset;
    float margin;
    float graceTime;
    float minShowTime;
    int mode;
    float progress;
    float _cornerRadius;
    id <GSMBProgressHUDDelegate> delegate;
    UIColor *color;
    UIFont *labelFont;
    UIColor *labelColor;
    UIFont *detailsLabelFont;
    UIColor *detailsLabelColor;
    UIView *indicator;
    NSTimer *graceTimer;
    NSTimer *minShowTimer;
    UIView *customView;
    NSDate *showStarted;
    NSString *labelText;
    NSString *detailsLabelText;
    CDUnknownBlockType completionBlock;
    struct CGSize minSize;
    struct CGSize size;
}

+ (id)allHUDsForView:(id)arg1;
+ (id)HUDForView:(id)arg1;
+ (unsigned long long)hideAllHUDsForView:(id)arg1 animated:(_Bool)arg2;
+ (_Bool)hideHUDForView:(id)arg1 animated:(_Bool)arg2;
+ (id)showHUDAddedTo:(id)arg1 animated:(_Bool)arg2;
@property float cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(copy) CDUnknownBlockType completionBlock; // @synthesize completionBlock;
@property struct CGSize size; // @synthesize size;
@property float progress; // @synthesize progress;
@property(copy) NSString *detailsLabelText; // @synthesize detailsLabelText;
@property(copy) NSString *labelText; // @synthesize labelText;
@property int mode; // @synthesize mode;
@property(retain) NSDate *showStarted; // @synthesize showStarted;
@property(retain) UIView *customView; // @synthesize customView;
@property _Bool removeFromSuperViewOnHide; // @synthesize removeFromSuperViewOnHide;
@property _Bool taskInProgress; // @synthesize taskInProgress;
@property(retain) NSTimer *minShowTimer; // @synthesize minShowTimer;
@property(retain) NSTimer *graceTimer; // @synthesize graceTimer;
@property float minShowTime; // @synthesize minShowTime;
@property float graceTime; // @synthesize graceTime;
@property _Bool dimBackground; // @synthesize dimBackground;
@property float margin; // @synthesize margin;
@property(getter=isSquare) _Bool square; // @synthesize square;
@property struct CGSize minSize; // @synthesize minSize;
@property float yOffset; // @synthesize yOffset;
@property float xOffset; // @synthesize xOffset;
@property(retain) UIView *indicator; // @synthesize indicator;
@property(retain) UIColor *detailsLabelColor; // @synthesize detailsLabelColor;
@property(retain) UIFont *detailsLabelFont; // @synthesize detailsLabelFont;
@property(retain) UIColor *labelColor; // @synthesize labelColor;
@property(retain) UIFont *labelFont; // @synthesize labelFont;
@property(retain) UIColor *color; // @synthesize color;
@property float opacity; // @synthesize opacity;
@property id <GSMBProgressHUDDelegate> delegate; // @synthesize delegate;
@property int animationType; // @synthesize animationType;
- (void)setTransformForCurrentOrientation:(_Bool)arg1;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)unregisterFromNotifications;
- (void)registerForNotifications;
- (void)updateUIForKeypath:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)observableKeypaths;
- (void)unregisterFromKVO;
- (void)registerForKVO;
- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)updateIndicators;
- (void)setupLabels;
- (void)cleanUp;
- (void)launchExecution;
- (void)showAnimated:(_Bool)arg1 whileExecutingBlock:(CDUnknownBlockType)arg2 onQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)showAnimated:(_Bool)arg1 whileExecutingBlock:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (void)showAnimated:(_Bool)arg1 whileExecutingBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)showAnimated:(_Bool)arg1 whileExecutingBlock:(CDUnknownBlockType)arg2;
- (void)showWhileExecuting:(SEL)arg1 onTarget:(id)arg2 withObject:(id)arg3 animated:(_Bool)arg4;
- (void)done;
- (void)animationFinished:(id)arg1 finished:(_Bool)arg2 context:(void *)arg3;
- (void)hideUsingAnimation:(_Bool)arg1;
- (void)showUsingAnimation:(_Bool)arg1;
- (void)didMoveToSuperview;
- (void)handleMinShowTimer:(id)arg1;
- (void)handleGraceTimer:(id)arg1;
- (void)hideDelayed:(id)arg1;
- (void)hide:(_Bool)arg1 afterDelay:(double)arg2;
- (void)hide:(_Bool)arg1;
- (void)show:(_Bool)arg1;
- (void)dealloc;
- (id)initWithWindow:(id)arg1;
- (id)initWithView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GSMBRoundProgressView : UIView
{
    _Bool _annular;
    float _progress;
    UIColor *_progressTintColor;
    UIColor *_backgroundTintColor;
}

@property(nonatomic, getter=isAnnular) _Bool annular; // @synthesize annular=_annular;
@property(retain, nonatomic) UIColor *backgroundTintColor; // @synthesize backgroundTintColor=_backgroundTintColor;
@property(retain, nonatomic) UIColor *progressTintColor; // @synthesize progressTintColor=_progressTintColor;
@property(nonatomic) float progress; // @synthesize progress=_progress;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)observableKeypaths;
- (void)unregisterFromKVO;
- (void)registerForKVO;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface GSMBBarProgressView : UIView
{
    float _progress;
    UIColor *_lineColor;
    UIColor *_progressRemainingColor;
    UIColor *_progressColor;
}

@property(retain, nonatomic) UIColor *progressColor; // @synthesize progressColor=_progressColor;
@property(retain, nonatomic) UIColor *progressRemainingColor; // @synthesize progressRemainingColor=_progressRemainingColor;
@property(retain, nonatomic) UIColor *lineColor; // @synthesize lineColor=_lineColor;
@property(nonatomic) float progress; // @synthesize progress=_progress;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)observableKeypaths;
- (void)unregisterFromKVO;
- (void)registerForKVO;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface GSNativeLoginProvider : NSObject <GSWebViewControllerDelegate, GSLoginProvider>
{
    CDUnknownBlockType _loginHandler;
    CDUnknownBlockType _innerHandler;
    GSWebViewController *_backgroundWebView;
}

+ (_Bool)isAppConfiguredForProvider;
+ (id)instance;
@property(retain, nonatomic) GSWebViewController *backgroundWebView; // @synthesize backgroundWebView=_backgroundWebView;
@property(copy, nonatomic) CDUnknownBlockType innerHandler; // @synthesize innerHandler=_innerHandler;
@property(copy, nonatomic) CDUnknownBlockType loginHandler; // @synthesize loginHandler=_loginHandler;
- (id)mergePermissions:(id)arg1 extraPermissions:(id)arg2;
- (_Bool)webViewController:(id)arg1 shouldStartLoadWithRequest:(id)arg2;
- (void)completeLoginMethod:(id)arg1 parameters:(id)arg2 responseHandler:(CDUnknownBlockType)arg3;
- (void)startNativeLoginForMethod:(id)arg1 parameters:(id)arg2 viewController:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)tryRevokeInvalidToken:(CDUnknownBlockType)arg1;
- (_Bool)isLoggedIn;
- (void)startLoginForMethod:(id)arg1 parameters:(id)arg2 viewController:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 shouldRetryOnError:(_Bool)arg5;
- (void)startLoginForMethod:(id)arg1 parameters:(id)arg2 viewController:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (_Bool)shouldFallbackToWebLoginOnProviderError;
- (_Bool)canRevokeToken;
@property(readonly, nonatomic) NSString *name;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GSFacebookProvider : GSNativeLoginProvider
{
    _Bool _isLoggedIn;
    CDUnknownBlockType _handler;
    NSString *_method;
    NSDictionary *_parameters;
    CDUnknownBlockType _permissionsHandler;
    NSArray *_declinedPermissions;
}

+ (_Bool)isAppConfiguredForProvider;
+ (id)instance;
@property(retain, nonatomic) NSArray *declinedPermissions; // @synthesize declinedPermissions=_declinedPermissions;
@property(copy, nonatomic) CDUnknownBlockType permissionsHandler; // @synthesize permissionsHandler=_permissionsHandler;
@property(retain, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(copy, nonatomic) NSString *method; // @synthesize method=_method;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
- (void)dealloc;
- (id)getDeclinedPermissionsFromArray:(id)arg1;
- (void)doesSessionHavePermissions:(id)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (id)mergeReadPermissions:(id)arg1 extraPermissions:(id)arg2;
- (double)expirationTimestampForRequest:(id)arg1;
- (id)errorFromFacebookError:(id)arg1;
- (id)authDataFromSession:(id)arg1 forRefresh:(_Bool)arg2;
- (void)requestNewPermissions:(id)arg1 permissions:(id)arg2 responseHandler:(CDUnknownBlockType)arg3;
- (void)requestNewReadPermissions:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;
- (void)requestNewPublishPermissions:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;
- (void)preProcessPermissionsRequest:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;
- (void)finishWithError:(id)arg1;
- (void)finishWithSession:(id)arg1;
- (void)reportExtendedToken:(id)arg1;
- (void)tryRevokeInvalidToken:(CDUnknownBlockType)arg1;
- (void)startNativeLoginForMethod:(id)arg1 parameters:(id)arg2 viewController:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)handleDidBecomeActive;
- (_Bool)handleOpenURL:(id)arg1 sourceApplication:(id)arg2 annotation:(id)arg3;
- (void)logout;
- (_Bool)canRevokeToken;
- (_Bool)isLoggedIn;
- (id)name;
- (id)init;

@end

@interface GSTwitterProvider : GSNativeLoginProvider
{
    CDUnknownBlockType _handler;
    UIViewController *_viewController;
    ACAccountStore *_accountStore;
    NSString *_reverseAuthParam;
    NSString *_consumerKey;
    ACAccountType *_accountType;
    NSArray *_accounts;
}

+ (_Bool)isAppConfiguredForProvider;
+ (id)instance;
@property(retain, nonatomic) NSArray *accounts; // @synthesize accounts=_accounts;
@property(retain, nonatomic) ACAccountType *accountType; // @synthesize accountType=_accountType;
@property(retain, nonatomic) NSString *consumerKey; // @synthesize consumerKey=_consumerKey;
@property(retain, nonatomic) NSString *reverseAuthParam; // @synthesize reverseAuthParam=_reverseAuthParam;
@property(retain, nonatomic) ACAccountStore *accountStore; // @synthesize accountStore=_accountStore;
@property(retain, nonatomic) UIViewController *viewController; // @synthesize viewController=_viewController;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
- (void)dealloc;
- (id)parseReverseAuthParams:(id)arg1;
- (void)finishWithAuthData:(id)arg1 error:(id)arg2;
- (id)authDataFromResponseData:(id)arg1;
- (void)obtainAccessTokenForAccount:(id)arg1;
- (void)showAccountChooser;
- (void)chooseAccount;
- (void)getAccounts:(CDUnknownBlockType)arg1;
- (void)startNativeLoginForMethod:(id)arg1 parameters:(id)arg2 viewController:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)name;
- (_Bool)shouldFallbackToWebLoginOnProviderError;
- (_Bool)isLoggedIn;

@end

@interface GSGooglePlusProvider : GSNativeLoginProvider
{
    _Bool _pendingLogin;
    _Bool _isLoggedIn;
    _Bool _wasAccessDenied;
    CDUnknownBlockType _gppLoginHandler;
}

+ (_Bool)isAppConfiguredForProvider;
+ (id)clientID;
+ (id)instance;
@property(copy, nonatomic) CDUnknownBlockType gppLoginHandler; // @synthesize gppLoginHandler=_gppLoginHandler;
- (id)fetchStoredPermissions;
- (void)clearStoredPermissions;
- (void)storePermissions:(id)arg1;
- (void)finishedWithAuth:(id)arg1 error:(id)arg2;
- (id)authDataFromGTMAuth:(id)arg1 forRefresh:(_Bool)arg2;
- (void)reportExtendedToken:(id)arg1;
- (void)handleDidBecomeActive;
- (_Bool)handleOpenURL:(id)arg1 sourceApplication:(id)arg2 annotation:(id)arg3;
- (void)startNativeLoginForMethod:(id)arg1 parameters:(id)arg2 viewController:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)logout;
- (_Bool)isLoggedIn;
- (id)name;
- (void)autoLogin;
- (id)init;

@end

@interface GSWebBridge : NSObject
{
    UIWebView *_webView;
    id <GSWebBridgeDelegate> _delegate;
    NSString *_bridgeID;
    NSDictionary *_settings;
}

+ (void)unregisterWebView:(id)arg1;
+ (void)registerWebView:(id)arg1 delegate:(id)arg2 settings:(id)arg3;
+ (void)registerWebView:(id)arg1 delegate:(id)arg2;
+ (_Bool)handleRequest:(id)arg1 webView:(id)arg2;
+ (void)webViewDidStartLoad:(id)arg1;
@property(copy, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(copy, nonatomic) NSString *bridgeID; // @synthesize bridgeID=_bridgeID;
@property(nonatomic) id <GSWebBridgeDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) UIWebView *webView; // @synthesize webView=_webView;
- (void)accountDidLogout;
- (void)accountDidLogin:(id)arg1;
- (void)userInfoDidChange:(id)arg1;
- (void)userDidLogout;
- (void)userDidLogin:(id)arg1;
- (void)invokeJavaScript:(id)arg1 withTimeout:(double)arg2;
- (void)invokeGlobalEvent:(id)arg1 parameters:(id)arg2;
- (void)invokeCallback:(id)arg1 result:(id)arg2;
- (void)invokeCallback:(id)arg1 error:(id)arg2;
- (void)handleJsLog:(id)arg1;
- (void)registerForNamespaceEvents:(id)arg1;
- (void)handlePluginEvent:(id)arg1;
- (void)getIDs:(id)arg1;
- (void)sendOAuthRequest:(id)arg1 params:(id)arg2 settings:(id)arg3 callbackID:(id)arg4;
- (void)sendRequest:(id)arg1 params:(id)arg2 settings:(id)arg3 callbackID:(id)arg4;
- (_Bool)handleURL:(id)arg1;
- (void)dealloc;
- (id)initWithWebView:(id)arg1 delegate:(id)arg2 settings:(id)arg3;

@end

@interface GSWebBridgeManager : NSObject
{
    NSMutableArray *_bridges;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableArray *bridges; // @synthesize bridges=_bridges;
- (void)showPluginViewDialogOver:(id)arg1 plugin:(id)arg2 parameters:(id)arg3 delegate:(id)arg4 dismissHandler:(CDUnknownBlockType)arg5;
- (void)invokeGlobalEvent:(id)arg1 parameters:(id)arg2;
- (id)bridgeForWebView:(id)arg1;
- (void)removeBridge:(id)arg1;
- (void)addBridge:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GSRequest : NSObject <GSLoggerContext, NSURLConnectionDelegate>
{
    _Bool _useHTTPS;
    _Bool _includeAuthInfo;
    _Bool _retryOnTimeSkew;
    NSString *_method;
    NSMutableDictionary *_parameters;
    double _requestTimeout;
    GSSession *_session;
    NSString *_requestID;
    NSString *_source;
    CDUnknownBlockType _handler;
    NSMutableData *_responseData;
    NSURLConnection *_connection;
    double _serverTime;
}

+ (id)requestForMethod:(id)arg1 parameters:(id)arg2;
+ (id)requestForMethod:(id)arg1;
@property(nonatomic) _Bool retryOnTimeSkew; // @synthesize retryOnTimeSkew=_retryOnTimeSkew;
@property(nonatomic) double serverTime; // @synthesize serverTime=_serverTime;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) NSMutableData *responseData; // @synthesize responseData=_responseData;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(copy, nonatomic) NSString *source; // @synthesize source=_source;
@property(nonatomic) _Bool includeAuthInfo; // @synthesize includeAuthInfo=_includeAuthInfo;
@property(readonly, nonatomic) NSString *requestID; // @synthesize requestID=_requestID;
@property(retain, nonatomic) GSSession *session; // @synthesize session=_session;
@property(nonatomic) double requestTimeout; // @synthesize requestTimeout=_requestTimeout;
@property(nonatomic) _Bool useHTTPS; // @synthesize useHTTPS=_useHTTPS;
@property(retain, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
@property(copy, nonatomic) NSString *method; // @synthesize method=_method;
- (void)dealloc;
- (id)contextID;
@property(readonly, copy) NSString *description;
- (double)timeIntervalFromServerDate:(id)arg1;
- (id)oauth1SignatureBaseString:(id)arg1;
- (id)oauth1Signature:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)retryAfterTimeSync:(id)arg1;
- (void)reportError:(id)arg1;
- (void)reportErrorIfNeeded:(id)arg1;
- (void)checkRevokedProviders:(id)arg1;
- (void)checkForSessionChanges:(id)arg1 error:(id)arg2;
- (void)finishWithResponse:(id)arg1 error:(id)arg2;
- (void)requestPermissionsIfNeeded:(CDUnknownBlockType)arg1;
- (id)buildRequestURLWithScheme:(id)arg1;
- (void)cancel;
- (id)sendSynchronouslyWithError:(id *)arg1;
- (void)sendValidatedRequest;
- (void)sendWithResponseHandler:(CDUnknownBlockType)arg1;
- (id)prepareRequest;
- (id)initWithSession:(id)arg1 method:(id)arg2;
- (id)initWithSession:(id)arg1 method:(id)arg2 parameters:(id)arg3 useHTTPS:(_Bool)arg4 requestTimeout:(double)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GSResponse : GSObject
{
    NSString *_method;
}

+ (id)responseWithError:(id)arg1;
+ (id)responseForMethod:(id)arg1 data:(id)arg2;
@property(copy) NSString *method; // @synthesize method=_method;
- (void)dealloc;
- (id)JSONString;
- (id)allKeys;
- (id)objectForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)description;
@property(readonly) int errorCode;
@property(readonly) NSString *callId;

@end

@interface GSUser : GSResponse
{
}

- (id)JSONString;
- (id)allKeys;
- (id)objectForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)description;
@property(readonly, nonatomic) NSURL *thumbnailURL;
@property(readonly, nonatomic) NSURL *photoURL;
@property(readonly, nonatomic) NSArray *identities;
@property(readonly, nonatomic) NSString *email;
@property(readonly, nonatomic) NSString *lastName;
@property(readonly, nonatomic) NSString *firstName;
@property(readonly, nonatomic) NSString *loginProvider;
@property(readonly, nonatomic) NSString *nickname;
@property(readonly, nonatomic) NSString *UID;

@end

@interface GSAccount : GSResponse
{
}

- (id)JSONString;
- (id)allKeys;
- (id)objectForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)description;
@property(readonly, nonatomic) NSURL *thumbnailURL;
@property(readonly, nonatomic) NSURL *photoURL;
@property(readonly, nonatomic) NSString *email;
@property(readonly, nonatomic) NSString *lastName;
@property(readonly, nonatomic) NSString *firstName;
@property(readonly, nonatomic) NSString *nickname;
@property(readonly, nonatomic) NSDictionary *data;
@property(readonly, nonatomic) NSDictionary *profile;
@property(readonly, nonatomic) NSString *UID;

@end

@interface GSObject : NSObject
{
    NSString *_source;
    NSMutableDictionary *_dictionary;
}

@property(retain, nonatomic) NSMutableDictionary *dictionary; // @synthesize dictionary=_dictionary;
@property(copy, nonatomic) NSString *source; // @synthesize source=_source;
- (void)dealloc;
- (id)description;
- (id)JSONString;
- (void)addJSONData:(id)arg1;
- (id)allKeys;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)init;

@end

@interface GSPluginView : UIView <GSWebBridgeDelegate, UIWebViewDelegate>
{
    _Bool _showLoginProgress;
    _Bool _showLoadingProgress;
    id <GSPluginViewDelegate> _delegate;
    NSString *_plugin;
    NSString *_loginProgressText;
    NSString *_loadingProgressText;
    long long _javascriptLoadingTimeout;
    UIWebView *_webView;
    NSString *_containerID;
    NSMutableDictionary *_parameters;
}

@property(retain, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
@property(copy, nonatomic) NSString *containerID; // @synthesize containerID=_containerID;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
@property(nonatomic) long long javascriptLoadingTimeout; // @synthesize javascriptLoadingTimeout=_javascriptLoadingTimeout;
@property(copy, nonatomic) NSString *loadingProgressText; // @synthesize loadingProgressText=_loadingProgressText;
@property(nonatomic) _Bool showLoadingProgress; // @synthesize showLoadingProgress=_showLoadingProgress;
@property(copy, nonatomic) NSString *loginProgressText; // @synthesize loginProgressText=_loginProgressText;
@property(nonatomic) _Bool showLoginProgress; // @synthesize showLoginProgress=_showLoginProgress;
@property(readonly, nonatomic) NSString *plugin; // @synthesize plugin=_plugin;
@property(nonatomic) id <GSPluginViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webView:(id)arg1 receivedJsLog:(id)arg2 logInfo:(id)arg3;
- (void)webView:(id)arg1 finishedLoginWithResponse:(id)arg2;
- (void)webView:(id)arg1 startedLoginForMethod:(id)arg2 parameters:(id)arg3;
- (void)webView:(id)arg1 receivedPluginEvent:(id)arg2 fromPluginInContainer:(id)arg3;
- (id)buildPluginHTML;
- (void)failWithError:(id)arg1;
- (void)loadPlugin:(id)arg1 parameters:(id)arg2;
- (void)loadPlugin:(id)arg1;
- (void)dealloc;
- (void)releaseWebView;
- (void)initWebView;
- (void)initProperties;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDTwitterAccountChooserContentViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
{
    UITableView *tableView;
    NSArray *twitterAccounts;
    id <IDTwitterAccountChooserViewControllerDelegate> accountChooserDelegate;
    NSMutableDictionary *imagesDictionary;
    NSMutableDictionary *realNamesDictionary;
    CDUnknownBlockType completionHandler;
}

@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler;
@property(nonatomic) __weak id <IDTwitterAccountChooserViewControllerDelegate> accountChooserDelegate; // @synthesize accountChooserDelegate;
@property(retain, nonatomic) NSArray *twitterAccounts; // @synthesize twitterAccounts;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView;
- (void).cxx_destruct;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)cancel:(id)arg1;
- (void)loadMetadataForCellsWithIndexPaths:(id)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidUnload;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDTwitterAccountChooserViewController : UINavigationController
{
    IDTwitterAccountChooserContentViewController *contentViewController;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) IDTwitterAccountChooserContentViewController *contentViewController; // @synthesize contentViewController;
- (void)setCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setAccountChooserDelegate:(id)arg1;
- (void)setTwitterAccounts:(id)arg1;
- (id)init;

@end

@interface GSPluginViewController : UIViewController <GSPluginViewDelegate>
{
    _Bool _wasLoaded;
    NSString *_plugin;
    NSMutableDictionary *_parameters;
    GSPluginView *_pluginView;
    CDUnknownBlockType _handler;
    id <GSPluginViewDelegate> _delegate;
}

@property(nonatomic) id <GSPluginViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(retain, nonatomic) GSPluginView *pluginView; // @synthesize pluginView=_pluginView;
@property(retain, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
@property(copy, nonatomic) NSString *plugin; // @synthesize plugin=_plugin;
- (void)cancelPressed:(id)arg1;
- (void)pluginView:(id)arg1 didFailWithError:(id)arg2;
- (void)pluginView:(id)arg1 firedEvent:(id)arg2;
- (void)pluginView:(id)arg1 finishedLoadingPluginWithEvent:(id)arg2;
- (void)dealloc;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithPlugin:(id)arg1 parameters:(id)arg2 delegate:(id)arg3 dismissHandler:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Gigya : NSObject
{
    GSSession *_session;
    _Bool _useHTTPS;
    _Bool _dontLeaveApp;
    _Bool _networkActivityIndicatorEnabled;
    NSString *_APIKey;
    NSString *_APIDomain;
    double _requestTimeout;
    double _serverTimeSkew;
    NSArray *_errorsToReport;
    id <GSSessionDelegate> _sessionDelegate;
    id <GSSocializeDelegate> _socializeDelegate;
    id <GSAccountsDelegate> _accountsDelegate;
    NSMutableArray *_socializeDelegatesArray;
    NSMutableArray *_accountsDelegatesArray;
    NSDictionary *_providerPermissions;
    NSString *_ucid;
    NSString *_gmid;
}

+ (void)requestNewFacebookReadPermissions:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;
+ (void)requestNewFacebookPublishPermissions:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;
+ (void)handleDidBecomeActive;
+ (_Bool)handleOpenURL:(id)arg1 sourceApplication:(id)arg2 annotation:(id)arg3;
+ (void)showAddConnectionDialogOver:(id)arg1 provider:(id)arg2 parameters:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)showAddConnectionDialogOver:(id)arg1 provider:(id)arg2;
+ (void)showLoginDialogOver:(id)arg1 provider:(id)arg2 parameters:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)showLoginDialogOver:(id)arg1 provider:(id)arg2;
+ (void)showPluginDialogOver:(id)arg1 plugin:(id)arg2 parameters:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 delegate:(id)arg5;
+ (void)showPluginDialogOver:(id)arg1 plugin:(id)arg2 parameters:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)showPluginDialogOver:(id)arg1 plugin:(id)arg2 parameters:(id)arg3;
+ (void)removeConnectionToProvider:(id)arg1;
+ (void)removeConnectionToProvider:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)logout;
+ (void)logoutWithCompletionHandler:(CDUnknownBlockType)arg1;
+ (void)showDialogForMethod:(id)arg1 viewController:(id)arg2 popoverView:(id)arg3 providers:(id)arg4 parameters:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
+ (void)showProvidersPopoverFrom:(id)arg1 providers:(id)arg2 providerAction:(int)arg3 parameters:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
+ (void)showProvidersDialogOver:(id)arg1 providers:(id)arg2 providerAction:(int)arg3 parameters:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
+ (void)showAddConnectionProvidersPopoverFrom:(id)arg1 providers:(id)arg2 parameters:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)showAddConnectionProvidersPopoverFrom:(id)arg1;
+ (void)showAddConnectionProvidersDialogOver:(id)arg1 providers:(id)arg2 parameters:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)showAddConnectionProvidersDialogOver:(id)arg1;
+ (void)showLoginProvidersPopoverFrom:(id)arg1 providers:(id)arg2 parameters:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)showLoginProvidersPopoverFrom:(id)arg1;
+ (void)showLoginProvidersDialogOver:(id)arg1 providers:(id)arg2 parameters:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)showLoginProvidersDialogOver:(id)arg1;
+ (void)addConnectionToProvider:(id)arg1 parameters:(id)arg2 over:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)addConnectionToProvider:(id)arg1 parameters:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)addConnectionToProvider:(id)arg1;
+ (void)loginToProvider:(id)arg1 parameters:(id)arg2 over:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)loginToProvider:(id)arg1 parameters:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)loginToProvider:(id)arg1;
+ (void)setSession:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (_Bool)isLoggedIn;
+ (void)setAccountsDelegate:(id)arg1;
+ (id)accountsDelegate;
+ (void)setSocializeDelegate:(id)arg1;
+ (id)socializeDelegate;
+ (void)setSessionDelegate:(id)arg1;
+ (id)sessionDelegate;
+ (void)setRequestTimeout:(double)arg1;
+ (double)requestTimeout;
+ (void)setNetworkActivityIndicatorEnabled:(_Bool)arg1;
+ (_Bool)networkActivityIndicatorEnabled;
+ (void)setUseHTTPS:(_Bool)arg1;
+ (_Bool)useHTTPS;
+ (id)APIDomain;
+ (id)APIKey;
+ (void)setSession:(id)arg1;
+ (id)session;
+ (id)sharedInstance;
+ (void)initWithAPIKey:(id)arg1 APIDomain:(id)arg2;
+ (void)initWithAPIKey:(id)arg1;
@property(copy, nonatomic) NSString *gmid; // @synthesize gmid=_gmid;
@property(copy, nonatomic) NSString *ucid; // @synthesize ucid=_ucid;
@property(retain, nonatomic) NSDictionary *providerPermissions; // @synthesize providerPermissions=_providerPermissions;
@property(retain, nonatomic) NSMutableArray *accountsDelegatesArray; // @synthesize accountsDelegatesArray=_accountsDelegatesArray;
@property(retain, nonatomic) NSMutableArray *socializeDelegatesArray; // @synthesize socializeDelegatesArray=_socializeDelegatesArray;
@property(nonatomic) id <GSAccountsDelegate> accountsDelegate; // @synthesize accountsDelegate=_accountsDelegate;
@property(nonatomic) id <GSSocializeDelegate> socializeDelegate; // @synthesize socializeDelegate=_socializeDelegate;
@property(nonatomic) id <GSSessionDelegate> sessionDelegate; // @synthesize sessionDelegate=_sessionDelegate;
@property(retain, nonatomic) NSArray *errorsToReport; // @synthesize errorsToReport=_errorsToReport;
@property(nonatomic) double serverTimeSkew; // @synthesize serverTimeSkew=_serverTimeSkew;
@property(nonatomic) double requestTimeout; // @synthesize requestTimeout=_requestTimeout;
@property(nonatomic) _Bool networkActivityIndicatorEnabled; // @synthesize networkActivityIndicatorEnabled=_networkActivityIndicatorEnabled;
@property(nonatomic) _Bool dontLeaveApp; // @synthesize dontLeaveApp=_dontLeaveApp;
@property(nonatomic) _Bool useHTTPS; // @synthesize useHTTPS=_useHTTPS;
@property(copy, nonatomic) NSString *APIDomain; // @synthesize APIDomain=_APIDomain;
@property(copy, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
- (void)dealloc;
- (void)showNetworkActivityIndicator;
- (void)reportURLReferral:(id)arg1 provider:(id)arg2;
- (void)loadSession;
- (void)saveSession;
- (void)invokeSelectorOnAccountsDelegates:(SEL)arg1 withObject:(id)arg2;
- (void)invokeSelectorOnSocializeDelegates:(SEL)arg1 withObject:(id)arg2;
@property(retain, nonatomic) GSSession *session;
- (void)checkSDKInit;
- (void)migrateUCID;
- (void)saveIDs:(id)arg1;
- (void)loadIDs;
- (void)getSDKConfig;
- (void)removeDelegate:(id)arg1;
- (void)addAccountsDelegate:(id)arg1;
- (void)addSocializeDelegate:(id)arg1;
- (id)init;

@end

@interface GSSession : NSObject <NSCoding>
{
    NSString *_token;
    NSString *_secret;
    NSDate *_expiration;
    NSString *_lastLoginProvider;
}

@property(copy, nonatomic) NSString *lastLoginProvider; // @synthesize lastLoginProvider=_lastLoginProvider;
@property(copy, nonatomic) NSDate *expiration; // @synthesize expiration=_expiration;
@property(copy, nonatomic) NSString *secret; // @synthesize secret=_secret;
@property(copy, nonatomic) NSString *token; // @synthesize token=_token;
- (void)dealloc;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (_Bool)isValid;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithSessionToken:(id)arg1 secret:(id)arg2 expiration:(id)arg3;
- (id)initWithSessionToken:(id)arg1 secret:(id)arg2;

@end

@interface GSLogger : NSObject
{
    _Bool _enabled;
    NSMutableDictionary *_contextLogs;
}

+ (id)logForContext:(id)arg1;
+ (void)clear:(id)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableDictionary *contextLogs; // @synthesize contextLogs=_contextLogs;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
- (id)fullLogMessageFor:(id)arg1 arguments:(char *)arg2;
- (void)logInContext:(id)arg1 format:(id)arg2;
- (void)log:(id)arg1;
- (id)init;

@end

@interface PFLogInViewController : UIViewController <UITextFieldDelegate>
{
    struct {
        unsigned int shouldBeginLogIn:1;
        unsigned int didLogInUser:1;
        unsigned int didFailToLogIn:1;
        unsigned int didCancelLogIn:1;
    } _delegateExistingMethods;
    _Bool _loading;
    long long _fields;
    PFLogInView *_logInView;
    id <PFLogInViewControllerDelegate> _delegate;
    NSArray *_facebookPermissions;
    PFSignUpViewController *_signUpController;
    double _visibleKeyboardHeight;
}

@property(nonatomic) double visibleKeyboardHeight; // @synthesize visibleKeyboardHeight=_visibleKeyboardHeight;
@property(nonatomic) _Bool loading; // @synthesize loading=_loading;
@property(retain, nonatomic) PFSignUpViewController *signUpController; // @synthesize signUpController=_signUpController;
@property(copy, nonatomic) NSArray *facebookPermissions; // @synthesize facebookPermissions=_facebookPermissions;
@property(nonatomic) __weak id <PFLogInViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) PFLogInView *logInView; // @synthesize logInView=_logInView;
@property(nonatomic) long long fields; // @synthesize fields=_fields;
- (void).cxx_destruct;
- (void)_updateViewContentOffsetAnimated:(_Bool)arg1;
- (void)setVisibleKeyboardHeight:(double)arg1 animationDuration:(double)arg2 animationOptions:(unsigned long long)arg3;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)_registerForKeyboardNotifications;
- (void)_dismissKeyboard;
- (id)currentFirstResponder;
- (void)cancelLogIn;
- (void)_loginDidFailWithError:(id)arg1;
- (void)_loginDidSuceedWithUser:(id)arg1;
- (void)_signupAction;
- (void)_loginAction;
- (void)_loginWithTwitter;
- (void)_loginWithFacebook;
- (void)_requestPasswordResetWithEmail:(id)arg1;
- (void)_forgotPasswordAction;
- (void)_dismissAction;
- (void)setupHandlers;
- (void)alertView:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (_Bool)textFieldShouldReturn:(id)arg1;
@property(nonatomic) _Bool emailAsUsername;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (void)_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFImage : UIImage
{
}

+ (id)imageNamed:(id)arg1;
+ (id)imageWithColor:(id)arg1;
+ (id)imageWithColor:(id)arg1 cornerRadius:(double)arg2;
+ (id)imageWithColor:(id)arg1 size:(struct CGSize)arg2;

@end

@interface PFUIAlertView : UIAlertView
{
}

+ (void)showAlertViewWithTitle:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3;
+ (void)showAlertViewWithTitle:(id)arg1 message:(id)arg2;
+ (void)showAlertViewWithTitle:(id)arg1 error:(id)arg2;

@end

@interface PFSignUpViewController : UIViewController <UITextFieldDelegate, UIScrollViewDelegate>
{
    struct {
        unsigned int shouldSignUp:1;
        unsigned int didSignUp:1;
        unsigned int didFailToSignUp:1;
        unsigned int didCancelSignUp:1;
    } _delegateExistingMethods;
    _Bool _loading;
    long long _fields;
    PFSignUpView *_signUpView;
    id <PFSignUpViewControllerDelegate> _delegate;
    unsigned long long _minPasswordLength;
    double _visibleKeyboardHeight;
}

@property(nonatomic) double visibleKeyboardHeight; // @synthesize visibleKeyboardHeight=_visibleKeyboardHeight;
@property(nonatomic) _Bool loading; // @synthesize loading=_loading;
@property(nonatomic) unsigned long long minPasswordLength; // @synthesize minPasswordLength=_minPasswordLength;
@property(nonatomic) __weak id <PFSignUpViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) PFSignUpView *signUpView; // @synthesize signUpView=_signUpView;
@property(nonatomic) long long fields; // @synthesize fields=_fields;
- (void).cxx_destruct;
- (void)_updateSignUpViewContentOffsetAnimated:(_Bool)arg1;
- (void)setVisibleKeyboardHeight:(double)arg1 animationDuration:(double)arg2 animationOptions:(unsigned long long)arg3;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)_registerForKeyboardNotifications;
- (void)_dismissKeyboard;
- (id)_currentFirstResponder;
- (void)_cancelSignUp;
- (void)_signUpDidFailWithError:(id)arg1;
- (void)_signUpDidSuceedWithUser:(id)arg1;
- (void)_signUpAction;
- (void)_dismissAction;
- (void)_setupHandlers;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
@property(nonatomic) _Bool emailAsUsername;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (void)_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFLogInView : UIScrollView
{
    _Bool _emailAsUsername;
    UIViewController *_presentingViewController;
    UIView *_logo;
    long long _fields;
    UITextField *_usernameField;
    UITextField *_passwordField;
    UIButton *_passwordForgottenButton;
    UIButton *_logInButton;
    UIButton *_facebookButton;
    UIButton *_twitterButton;
    UIButton *_signUpButton;
    UIButton *_dismissButton;
    UILabel *_externalLogInLabel;
    UILabel *_signUpLabel;
}

+ (void)_validateFields:(long long)arg1;
+ (id)_defaultTwitterButtonConfiguration;
+ (id)_defaultFacebookButtonConfiguration;
+ (id)_defaultSignUpButtonConfiguration;
@property(readonly, nonatomic) UILabel *signUpLabel; // @synthesize signUpLabel=_signUpLabel;
@property(readonly, nonatomic) UILabel *externalLogInLabel; // @synthesize externalLogInLabel=_externalLogInLabel;
@property(readonly, nonatomic) UIButton *dismissButton; // @synthesize dismissButton=_dismissButton;
@property(readonly, nonatomic) UIButton *signUpButton; // @synthesize signUpButton=_signUpButton;
@property(retain, nonatomic) UIButton *twitterButton; // @synthesize twitterButton=_twitterButton;
@property(retain, nonatomic) UIButton *facebookButton; // @synthesize facebookButton=_facebookButton;
@property(readonly, nonatomic) UIButton *logInButton; // @synthesize logInButton=_logInButton;
@property(readonly, nonatomic) UIButton *passwordForgottenButton; // @synthesize passwordForgottenButton=_passwordForgottenButton;
@property(retain, nonatomic) UITextField *passwordField; // @synthesize passwordField=_passwordField;
@property(retain, nonatomic) UITextField *usernameField; // @synthesize usernameField=_usernameField;
@property(readonly, nonatomic) long long fields; // @synthesize fields=_fields;
@property(nonatomic) _Bool emailAsUsername; // @synthesize emailAsUsername=_emailAsUsername;
@property(retain, nonatomic) UIView *logo; // @synthesize logo=_logo;
@property(nonatomic) __weak UIViewController *presentingViewController; // @synthesize presentingViewController=_presentingViewController;
- (void).cxx_destruct;
- (void)_updateUsernameFieldPlaceholder;
- (struct CGSize)_contentSizeScaleForContentSize:(struct CGSize)arg1;
- (struct CGSize)_maxContentSize;
- (struct CGSize)_loginContentSizeThatFits:(struct CGSize)arg1 withContentSizeScale:(struct CGSize)arg2;
- (void)layoutSubviews;
- (id)initWithFields:(long long)arg1;

@end

@interface PFPrimaryButton : UIButton
{
    UIActivityIndicatorView *_activityIndicatorView;
}

- (void).cxx_destruct;
@property(nonatomic, getter=isLoading) _Bool loading;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)initWithBackgroundImageColor:(id)arg1;

@end

@interface PFPurchaseTableViewCell : PFTableViewCell
{
    unsigned char _state;
    UILabel *_priceLabel;
    UIProgressView *_progressView;
}

@property(retain, nonatomic) UIProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) UILabel *priceLabel; // @synthesize priceLabel=_priceLabel;
@property(nonatomic) unsigned char state; // @synthesize state=_state;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PFQueryTableViewController : UITableViewController <UITableViewDataSource, UITableViewDelegate>
{
    NSMutableArray *_mutableObjects;
    _Bool _firstLoad;
    long long _currentPage;
    long long _lastLoadCount;
    long long _savedSeparatorStyle;
    _Bool _loadingViewEnabled;
    _Bool _pullToRefreshEnabled;
    _Bool _paginationEnabled;
    _Bool _loading;
    NSString *_parseClassName;
    NSString *_textKey;
    NSString *_imageKey;
    UIImage *_placeholderImage;
    unsigned long long _objectsPerPage;
    PFLoadingView *_loadingView;
}

@property(retain, nonatomic) PFLoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(nonatomic, getter=isLoading) _Bool loading; // @synthesize loading=_loading;
@property(nonatomic) unsigned long long objectsPerPage; // @synthesize objectsPerPage=_objectsPerPage;
@property(nonatomic) _Bool paginationEnabled; // @synthesize paginationEnabled=_paginationEnabled;
@property(nonatomic) _Bool pullToRefreshEnabled; // @synthesize pullToRefreshEnabled=_pullToRefreshEnabled;
@property(nonatomic) _Bool loadingViewEnabled; // @synthesize loadingViewEnabled=_loadingViewEnabled;
@property(retain, nonatomic) UIImage *placeholderImage; // @synthesize placeholderImage=_placeholderImage;
@property(copy, nonatomic) NSString *imageKey; // @synthesize imageKey=_imageKey;
@property(copy, nonatomic) NSString *textKey; // @synthesize textKey=_textKey;
@property(copy, nonatomic) NSString *parseClassName; // @synthesize parseClassName=_parseClassName;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSArray *objects;
- (void)_refreshControlValueChanged:(id)arg1;
- (void)_loadImageForCellAtIndexPath:(id)arg1;
- (void)_loadImagesForOnscreenRows;
- (id)_indexPathForPaginationCell;
- (void)_refreshPaginationCell;
- (_Bool)_shouldShowPaginationCell;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForNextPageAtIndexPath:(id)arg2;
- (id)objectAtIndexPath:(id)arg1;
- (void)tableView:(id)arg1 configureCell:(id)arg2 atIndexPath:(id)arg3 object:(id)arg4;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2 object:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)loadNextPage;
- (void)loadObjects:(long long)arg1 clear:(_Bool)arg2;
- (void)loadObjects;
- (void)clear;
- (void)_alterQuery:(id)arg1 forLoadingPage:(long long)arg2;
- (id)queryForTable;
- (void)objectsDidLoad:(id)arg1;
- (void)objectsWillLoad;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)loadView;
- (void)_setupWithClassName:(id)arg1;
- (id)initWithStyle:(long long)arg1 className:(id)arg2;
- (id)initWithClassName:(id)arg1;
- (id)initWithStyle:(long long)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFResources : NSObject
{
}

+ (id)twitter_icon3x_png;
+ (id)twitter_icon2x_png;
+ (id)twitter_icon_png;
+ (id)parse_logo3x_png;
+ (id)parse_logo2x_png;
+ (id)parse_logo_png;
+ (id)facebook_icon3x_png;
+ (id)facebook_icon2x_png;
+ (id)facebook_icon_png;

@end

@interface PFTableViewCell : UITableViewCell
{
    long long _style;
    PFImageView *_customImageView;
}

@property(retain, nonatomic) PFImageView *customImageView; // @synthesize customImageView=_customImageView;
@property(nonatomic) long long style; // @synthesize style=_style;
- (void).cxx_destruct;
@property(readonly, nonatomic) PFImageView *imageView;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PFActionButton : UIButton
{
    UIActivityIndicatorView *_activityIndicatorView;
    unsigned char _buttonStyle;
    PFActionButtonConfiguration *_configuration;
}

+ (id)titleForButtonStyle:(unsigned char)arg1;
+ (id)backgroundImageColor;
@property(retain, nonatomic) PFActionButtonConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) unsigned char buttonStyle; // @synthesize buttonStyle=_buttonStyle;
- (void).cxx_destruct;
@property(nonatomic, getter=isLoading) _Bool loading;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)initWithConfiguration:(id)arg1 buttonStyle:(unsigned char)arg2;

@end

@interface PFActionButtonConfiguration : NSObject
{
    NSMutableDictionary *_titlesDictionary;
    UIColor *_backgroundImageColor;
    UIImage *_image;
}

@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) UIColor *backgroundImageColor; // @synthesize backgroundImageColor=_backgroundImageColor;
- (void).cxx_destruct;
- (id)titleForButtonStyle:(unsigned char)arg1;
- (void)setTitle:(id)arg1 forButtonStyle:(unsigned char)arg2;
- (id)initWithBackgroundImageColor:(id)arg1 image:(id)arg2;

@end

@interface PFTextButton : UIButton
{
}

- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PFTextField : UITextField
{
    unsigned char _separatorStyle;
}

@property(nonatomic) unsigned char separatorStyle; // @synthesize separatorStyle=_separatorStyle;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGRect)editingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)placeholderRectForBounds:(struct CGRect)arg1;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setPlaceholder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 separatorStyle:(unsigned char)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PFActivityIndicatorTableViewCell : PFTableViewCell
{
    UIActivityIndicatorView *_activityIndicator;
}

@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator=_activityIndicator;
- (void).cxx_destruct;
@property(nonatomic, getter=isAnimating) _Bool animating;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PFDismissButton : UIButton
{
}

- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)_defaultImage;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PFSignUpView : UIScrollView
{
    _Bool _emailAsUsername;
    UIViewController *_presentingViewController;
    UIView *_logo;
    long long _fields;
    UITextField *_usernameField;
    UITextField *_passwordField;
    UITextField *_emailField;
    UITextField *_additionalField;
    UIButton *_signUpButton;
    UIButton *_dismissButton;
}

@property(readonly, nonatomic) UIButton *dismissButton; // @synthesize dismissButton=_dismissButton;
@property(readonly, nonatomic) UIButton *signUpButton; // @synthesize signUpButton=_signUpButton;
@property(readonly, nonatomic) UITextField *additionalField; // @synthesize additionalField=_additionalField;
@property(readonly, nonatomic) UITextField *emailField; // @synthesize emailField=_emailField;
@property(readonly, nonatomic) UITextField *passwordField; // @synthesize passwordField=_passwordField;
@property(readonly, nonatomic) UITextField *usernameField; // @synthesize usernameField=_usernameField;
@property(readonly, nonatomic) long long fields; // @synthesize fields=_fields;
@property(nonatomic) _Bool emailAsUsername; // @synthesize emailAsUsername=_emailAsUsername;
@property(retain, nonatomic) UIView *logo; // @synthesize logo=_logo;
@property(nonatomic) __weak UIViewController *presentingViewController; // @synthesize presentingViewController=_presentingViewController;
- (void).cxx_destruct;
- (void)_updateUsernameFieldPlaceholder;
- (struct CGSize)_contentSizeScaleForContentSize:(struct CGSize)arg1;
- (struct CGSize)_maxContentSize;
- (struct CGSize)_contentSizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)initWithFields:(long long)arg1;

@end

@interface PFColor : UIColor
{
}

+ (id)twitterButtonBackgroundColor;
+ (id)facebookButtonBackgroundColor;
+ (id)signupButtonBackgroundColor;
+ (id)loginButtonBackgroundColor;
+ (id)textFieldSeparatorColor;
+ (id)textFieldPlaceholderColor;
+ (id)textFieldTextColor;
+ (id)textFieldBackgroundColor;
+ (id)commonBackgroundColor;

@end

@interface PFProductTableViewController : PFQueryTableViewController <SKProductsRequestDelegate>
{
    NSMutableDictionary *_productMetadataDictionary;
    NSMutableDictionary *_productProgressDictionary;
    SKProductsRequest *_storeProductsRequest;
}

- (void).cxx_destruct;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)requestDidFinish:(id)arg1;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)_queryStoreForProductsWithIdentifiers:(id)arg1;
- (id)queryForTable;
- (int)_downloadProgressForProduct:(id)arg1;
- (id)_priceForProduct:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2 object:(id)arg3;
- (void)objectsDidLoad:(id)arg1;
- (void)viewDidLoad;
- (id)initWithStyle:(long long)arg1 className:(id)arg2;
- (id)initWithStyle:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFImageCache : NSCache
{
}

+ (id)sharedCache;
- (id)imageForURL:(id)arg1;
- (void)setImage:(id)arg1 forURL:(id)arg2;

@end

@interface PFImageView : UIImageView
{
    PFFile *_file;
}

@property(retain, nonatomic) PFFile *file; // @synthesize file=_file;
- (void).cxx_destruct;
- (void)loadInBackground:(CDUnknownBlockType)arg1;
- (id)loadInBackground;

@end

@interface PFLoadingView : UIView
{
    UILabel *_loadingLabel;
    UIActivityIndicatorView *_activityIndicator;
}

@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator=_activityIndicator;
@property(retain, nonatomic) UILabel *loadingLabel; // @synthesize loadingLabel=_loadingLabel;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FBLikeButtonPopWAV : FBAudioResourceLoader
{
}

+ (id)data;
+ (id)name;

@end

@interface FBLikeButtonBackgroundPNG : NSObject
{
}

+ (id)image;

@end

@interface FBLikeButtonBackgroundSelectedPNG : NSObject
{
}

+ (id)image;

@end

@interface FBPeoplePickerViewController : FBGraphObjectPickerViewController <FBGraphObjectViewControllerDelegate>
{
    NSString *_userID;
    unsigned long long _sortOrdering;
    unsigned long long _displayOrdering;
}

+ (id)cacheIdentity;
+ (id)requestWithUserID:(id)arg1 fields:(id)arg2 dataSource:(id)arg3 session:(id)arg4;
+ (id)graphAPIName;
@property(nonatomic) unsigned long long displayOrdering; // @synthesize displayOrdering=_displayOrdering;
@property(nonatomic) unsigned long long sortOrdering; // @synthesize sortOrdering=_sortOrdering;
@property(copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
- (void)graphObjectTableDataSource:(id)arg1 customizeTableCell:(id)arg2;
- (id)graphObjectTableDataSource:(id)arg1 pictureUrlOfItem:(id)arg2;
- (id)graphObjectTableDataSource:(id)arg1 titleSuffixOfItem:(id)arg2;
- (id)graphObjectTableDataSource:(id)arg1 titleOfItem:(id)arg2;
- (_Bool)graphObjectTableDataSource:(id)arg1 filterIncludesItem:(id)arg2;
- (void)loadDataSkippingRoundTripIfCached:(id)arg1;
- (id)requestForLoadData;
- (void)configureDataSource:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *selection;
- (void)dealloc;
- (void)initializePeoplePicker;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(nonatomic) _Bool allowsMultipleSelection;

@end

@interface FBLikeButtonIconPNG : NSObject
{
}

+ (id)image;

@end

@interface FBLikeButtonIconSelectedPNG : NSObject
{
}

+ (id)image;

@end

@interface FBLoginViewButtonPNG : NSObject
{
}

+ (id)image;

@end

@interface FBLoginViewButtonPressedPNG : NSObject
{
}

+ (id)image;

@end

@interface FBPlacePickerViewGenericPlacePNG : NSObject
{
}

+ (id)image;

@end

@interface FBProfilePictureViewBlankProfilePortraitPNG : NSObject
{
}

+ (id)image;

@end

@interface FBProfilePictureViewBlankProfileSquarePNG : NSObject
{
}

+ (id)image;

@end

@interface FBDialogClosePNG : NSObject
{
}

+ (id)image;

@end

@interface FBFriendPickerViewDefaultPNG : NSObject
{
}

+ (id)image;

@end

@interface FBGraphObjectPickerViewController : FBViewController <FBGraphObjectSelectionChangedDelegate, FBGraphObjectPagingLoaderDelegate>
{
    FBSession *_session;
    _Bool _allowsMultipleSelection;
    _Bool _implicitSession;
    UIActivityIndicatorView *_spinner;
    UITableView *_tableView;
    NSSet *_fieldsForRequest;
    FBGraphObjectTableDataSource *_dataSource;
    FBGraphObjectTableSelection *_selectionManager;
    FBGraphObjectPagingLoader *_loader;
}

+ (id)firstRenderLogString;
+ (double)cacheRefreshDelay;
+ (unsigned long long)graphObjectPagingMode;
@property(retain, nonatomic) FBGraphObjectPagingLoader *loader; // @synthesize loader=_loader;
@property(retain, nonatomic) FBGraphObjectTableSelection *selectionManager; // @synthesize selectionManager=_selectionManager;
@property(retain, nonatomic) FBGraphObjectTableDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(copy, nonatomic) NSSet *fieldsForRequest; // @synthesize fieldsForRequest=_fieldsForRequest;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
- (void)pagingLoaderWasCancelled:(id)arg1;
- (void)pagingLoader:(id)arg1 handleError:(id)arg2;
- (void)pagingLoaderDidFinishLoading:(id)arg1;
- (void)pagingLoader:(id)arg1 didLoadData:(id)arg2;
- (void)pagingLoader:(id)arg1 willLoadURL:(id)arg2;
- (void)graphObjectTableSelectionDidChange:(id)arg1;
- (void)_clearData;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_removeSessionObserver:(id)arg1;
- (void)_addSessionObserver:(id)arg1;
- (void)_centerAndStartSpinner;
- (_Bool)delegateIncludesGraphObject:(id)arg1;
- (void)notifyDelegateOfError:(id)arg1;
- (void)notifyDelegateSelectionDidChange;
- (void)notifyDelegateDataDidChange;
- (void)loadDataSkippingRoundTripIfCached:(id)arg1;
- (void)loadDataThrottledSkippingRoundTripIfCached:(id)arg1;
- (void)configureDataSource:(id)arg1;
- (void)clearSelection;
- (void)updateView;
- (void)loadData;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)setSession:(id)arg1 implicit:(_Bool)arg2;
@property(retain, nonatomic) FBSession *session;
@property(nonatomic) _Bool itemPicturesEnabled;
@property(nonatomic) _Bool allowsMultipleSelection;
- (void)dealloc;
- (void)initializeGraphObjectPicker;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;

@end

@interface FBViewImpressionTracker : NSObject
{
    NSHashTable *_trackedImpressions;
    NSString *_eventName;
    FBSession *_session;
}

+ (id)impressionTrackerWithEventName:(id)arg1;
@property(retain, nonatomic) FBSession *session; // @synthesize session=_session;
@property(readonly, copy, nonatomic) NSString *eventName; // @synthesize eventName=_eventName;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)logImpressionWithView:(id)arg1 identifier:(id)arg2 parameters:(id)arg3;
- (void)dealloc;
- (id)initWithEventName:(id)arg1;

@end

@interface FBPlacePickerCacheDescriptor : FBCacheDescriptor <FBGraphObjectPagingLoaderDelegate>
{
    _Bool _hasCompletedFetch;
    long long _radiusInMeters;
    long long _resultsLimit;
    NSString *_searchText;
    NSSet *_fieldsForRequest;
    FBGraphObjectPagingLoader *_loader;
    CDStruct_2c43369c _locationCoordinate;
}

@property(nonatomic) _Bool hasCompletedFetch; // @synthesize hasCompletedFetch=_hasCompletedFetch;
@property(retain, nonatomic) FBGraphObjectPagingLoader *loader; // @synthesize loader=_loader;
@property(copy, nonatomic) NSSet *fieldsForRequest; // @synthesize fieldsForRequest=_fieldsForRequest;
@property(copy, nonatomic) NSString *searchText; // @synthesize searchText=_searchText;
@property(nonatomic) long long resultsLimit; // @synthesize resultsLimit=_resultsLimit;
@property(nonatomic) long long radiusInMeters; // @synthesize radiusInMeters=_radiusInMeters;
@property(nonatomic) CDStruct_2c43369c locationCoordinate; // @synthesize locationCoordinate=_locationCoordinate;
- (void)pagingLoaderDidFinishLoading:(id)arg1;
- (void)prefetchAndCacheForSession:(id)arg1;
- (void)dealloc;
- (id)initWithLocationCoordinate:(CDStruct_2c43369c)arg1 radiusInMeters:(long long)arg2 searchText:(id)arg3 resultsLimit:(long long)arg4 fieldsForRequest:(id)arg5;

@end

@interface FBRequestHandlerFactory : NSObject
{
}

+ (CDUnknownBlockType)handlerThatReconnects:(CDUnknownBlockType)arg1 forRequest:(id)arg2;
+ (CDUnknownBlockType)handlerThatAlertsUser:(CDUnknownBlockType)arg1 forRequest:(id)arg2;
+ (CDUnknownBlockType)handlerThatRetries:(CDUnknownBlockType)arg1 forRequest:(id)arg2;

@end

@interface FBProfilePictureView : UIView
{
    NSString *_profileID;
    unsigned long long _pictureCropping;
    NSDictionary *_currentImageQueryParams;
    FBURLConnection *_connection;
    UIImageView *_imageView;
}

@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) FBURLConnection *connection; // @synthesize connection=_connection;
@property(copy, nonatomic) NSDictionary *currentImageQueryParams; // @synthesize currentImageQueryParams=_currentImageQueryParams;
@property(nonatomic) unsigned long long pictureCropping; // @synthesize pictureCropping=_pictureCropping;
@property(copy, nonatomic) NSString *profileID; // @synthesize profileID=_profileID;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (void)ensureImageViewContentMode;
- (void)refreshImage:(_Bool)arg1;
- (void)initialize;
- (id)_placeholderImage;
- (id)_generateQueryParams;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithProfileID:(id)arg1 pictureCropping:(unsigned long long)arg2;
- (id)init;
- (void)dealloc;

@end

@interface FBRequestConnection : NSObject <FBURLConnectionDelegate, FBRequestConnectionRetryManagerDelegate>
{
    _Bool _errorBehavior;
    NSString *_overrideVersionPart;
    _Bool _isResultFromCache;
    NSHTTPURLResponse *_urlResponse;
    id <FBRequestConnectionDelegate> _delegate;
    FBURLConnection *_connection;
    NSMutableArray *_requests;
    unsigned long long _state;
    double _timeout;
    NSMutableURLRequest *_internalUrlRequest;
    FBRequest *_deprecatedRequest;
    FBLogger *_logger;
    unsigned long long _requestStartTime;
    FBRequestConnectionRetryManager *_retryManager;
    NSError *_connectionError;
}

+ (void)addRequestToRefreshPermissionsSession:(id)arg1 connection:(id)arg2;
+ (void)addRequestToExtendTokenForSession:(id)arg1 connection:(id)arg2;
+ (_Bool)isPermissionsRequest:(id)arg1;
+ (id)userAgent;
+ (void)processGraphObject:(id)arg1 forPath:(id)arg2 withAction:(CDUnknownBlockType)arg3;
+ (void)processGraphObjectPropertyKey:(id)arg1 value:(id)arg2 action:(CDUnknownBlockType)arg3 passByValue:(_Bool)arg4;
+ (id)startForUploadStagingResourceWithImage:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)startForUpdateOpenGraphObjectWithId:(id)arg1 title:(id)arg2 image:(id)arg3 url:(id)arg4 description:(id)arg5 objectProperties:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
+ (id)startForUpdateOpenGraphObject:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)startForPostOpenGraphObjectWithType:(id)arg1 title:(id)arg2 image:(id)arg3 url:(id)arg4 description:(id)arg5 objectProperties:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
+ (id)startForPostOpenGraphObject:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)startWithGraphPath:(id)arg1 parameters:(id)arg2 HTTPMethod:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (id)startForPostWithGraphPath:(id)arg1 graphObject:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)startForDeleteObject:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)startWithGraphPath:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)startForCustomAudienceThirdPartyID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)startForPlacesSearchAtCoordinate:(CDStruct_2c43369c)arg1 radiusInMeters:(long long)arg2 resultsLimit:(long long)arg3 searchText:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
+ (id)startForPostStatusUpdate:(id)arg1 place:(id)arg2 tags:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (id)startForPostStatusUpdate:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)startForUploadPhoto:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)startForMyFriendsWithCompletionHandler:(CDUnknownBlockType)arg1;
+ (id)startForMeWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSError *connectionError; // @synthesize connectionError=_connectionError;
@property(retain, nonatomic) FBRequestConnectionRetryManager *retryManager; // @synthesize retryManager=_retryManager;
@property(readonly, nonatomic) _Bool isResultFromCache; // @synthesize isResultFromCache=_isResultFromCache;
@property(nonatomic) unsigned long long requestStartTime; // @synthesize requestStartTime=_requestStartTime;
@property(retain, nonatomic) FBLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) FBRequest *deprecatedRequest; // @synthesize deprecatedRequest=_deprecatedRequest;
@property(retain, nonatomic) NSMutableURLRequest *internalUrlRequest; // @synthesize internalUrlRequest=_internalUrlRequest;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSMutableArray *requests; // @synthesize requests=_requests;
@property(retain, nonatomic) FBURLConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) id <FBRequestConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSHTTPURLResponse *urlResponse; // @synthesize urlResponse=_urlResponse;
- (id)description;
- (void)retryManager:(id)arg1 willRetryWithRequestConnection:(id)arg2;
- (void)retryManagerDidFinishAbortingRetries:(id)arg1;
- (void)retryManagerDidFinishWithNoRetries:(id)arg1;
- (void)facebookURLConnection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (id)getRequestMetadata:(id)arg1;
- (void)addPiggybackRequests;
- (void)registerTokenToOmitFromLog:(id)arg1;
- (_Bool)isExpiredTokenError:(id)arg1 resultIndex:(unsigned long long)arg2;
- (_Bool)isPasswordChangeError:(id)arg1 resultIndex:(unsigned long long)arg2;
- (_Bool)isInvalidSessionError:(id)arg1 resultIndex:(unsigned long long)arg2;
- (_Bool)isInsufficientPermissionError:(id)arg1 resultIndex:(unsigned long long)arg2;
- (id)checkConnectionError:(id)arg1 statusCode:(long long)arg2 parsedJSONResponse:(id)arg3;
- (id)errorWithCode:(long long)arg1 statusCode:(long long)arg2 parsedJSONResponse:(id)arg3 innerError:(id)arg4 message:(id)arg5;
- (id)errorFromResult:(id)arg1;
- (void)completeWithResults:(id)arg1 orError:(id)arg2;
- (void)logDeveloperError:(id)arg1 forRequest:(id)arg2;
- (_Bool)shouldCloseRequestSession:(id)arg1;
- (id)unpackIndividualJSONResponseError:(id)arg1;
- (void)completeDeprecatedWithData:(id)arg1 results:(id)arg2 orError:(id)arg3;
- (id)parseJSONOrOtherwise:(id)arg1 error:(id *)arg2;
- (id)parseJSONResponse:(id)arg1 error:(id *)arg2 statusCode:(long long)arg3;
- (void)completeWithResponse:(id)arg1 data:(id)arg2 orError:(id)arg3;
- (void)appendAttachments:(id)arg1 toBody:(id)arg2 addFormData:(_Bool)arg3 logger:(id)arg4;
- (_Bool)isAttachment:(id)arg1;
- (void)addRequest:(id)arg1 toBatch:(id)arg2 attachments:(id)arg3;
- (void)appendJSONRequests:(id)arg1 toBody:(id)arg2 andNameAttachments:(id)arg3 logger:(id)arg4;
- (id)accessTokenWithRequest:(id)arg1;
- (id)getBatchAppID:(id)arg1;
- (id)urlStringForSingleRequest:(id)arg1 forBatch:(_Bool)arg2;
- (void)logRequest:(id)arg1 bodyLength:(unsigned long long)arg2 bodyLogger:(id)arg3 attachmentLogger:(id)arg4;
- (id)requestWithBatch:(id)arg1 timeout:(double)arg2;
- (id)newFBURLConnection;
- (void)startURLConnectionWithRequest:(id)arg1 skipRoundTripIfCached:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)startWithCacheIdentity:(id)arg1 skipRoundtripIfCached:(_Bool)arg2;
- (void)overrideVersionPartWith:(id)arg1;
- (void)cancel;
- (void)start;
- (void)addRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 batchParameters:(id)arg3 behavior:(unsigned long long)arg4;
- (void)addRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 batchParameters:(id)arg3;
- (void)addRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 batchEntryName:(id)arg3;
- (void)addRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithMetadata:(id)arg1;
- (id)initWithTimeout:(double)arg1;
- (id)init;
@property(nonatomic) unsigned long long errorBehavior;
@property(retain, nonatomic) NSMutableURLRequest *urlRequest;

@end

@interface FBLikeDialogParams : FBDialogsParams
{
    NSString *_objectID;
}

+ (id)methodName;
@property(copy, nonatomic) NSString *objectID; // @synthesize objectID=_objectID;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)validate;
- (id)dictionaryMethodArgs;
- (void)dealloc;

@end

@interface FBFrictionlessRequestSettings : NSObject <FBRequestDelegate>
{
    NSArray *_allowedRecipients;
    FBRequest *_activeRequest;
    _Bool _enabled;
}

@property(retain, nonatomic) FBRequest *activeRequest; // @synthesize activeRequest=_activeRequest;
@property(retain) NSArray *allowedRecipients; // @synthesize allowedRecipients=_allowedRecipients;
@property(readonly, nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
- (void)dealloc;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)request:(id)arg1 didLoad:(id)arg2;
- (void)updateRecipientCacheWithRequestResult:(id)arg1;
- (_Bool)isFrictionlessEnabledForRecipients:(id)arg1;
- (_Bool)isFrictionlessEnabledForRecipient:(id)arg1;
- (void)updateRecipientCacheWithRecipients:(id)arg1;
@property(readonly, nonatomic) NSArray *recipientIDs;
- (void)reloadRecipientCacheWithFacebook:(id)arg1;
- (void)enableWithFacebook:(id)arg1;
- (id)init;

@end

@interface FBAudioResourceLoader : NSObject
{
    NSFileManager *_fileManager;
    NSURL *_fileURL;
    unsigned int _systemSoundID;
}

+ (id)sharedLoader;
- (id)_fileURL:(id *)arg1;
- (id)_fileResourceURL;
- (void)playSound;
- (_Bool)loadSound:(id *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FBDynamicFrameworkLoader : NSObject
{
}

+ (void)setSqlitePath:(id)arg1;
+ (id)sqlitePath;
+ (void)setFrameworkPathTemplate:(id)arg1;
+ (id)frameworkPathTemplate;
+ (void *)loadSymbol:(id)arg1 withFramework:(id)arg2;
+ (void *)loadkSecClass;
+ (void *)loadkSecReturnData;
+ (void *)loadkSecMatchLimit;
+ (void *)loadkSecMatchLimitOne;
+ (void *)loadkSecAttrAccessGroup;
+ (void *)loadkSecClassGenericPassword;
+ (void *)loadkSecValueData;
+ (void *)loadkSecAttrGeneric;
+ (void *)loadkSecAttrService;
+ (void *)loadkSecAttrAccount;
+ (void *)loadkSecAttrAccessibleAfterFirstUnlockThisDeviceOnly;
+ (void *)loadkSecAttrAccessible;
+ (struct __SecRandom *)loadkSecRandomDefault;
+ (void *)loadTypeRefConstantFromSecurityFramework:(id)arg1;
+ (id)loadStringConstant:(id)arg1 withFramework:(id)arg2;
+ (Class)loadClass:(id)arg1 withFramework:(id)arg2;

@end

@interface FBCacheIndex : NSObject <NSCacheDelegate>
{
    id <FBCacheIndexFileDelegate> _delegate;
    NSCache *_cachedEntries;
    unsigned long long _currentDiskUsage;
    unsigned long long _diskCapacity;
    struct sqlite3 *_database;
    struct sqlite3_stmt *_insertStatement;
    struct sqlite3_stmt *_removeByKeyStatement;
    struct sqlite3_stmt *_selectByKeyStatement;
    struct sqlite3_stmt *_selectByKeyFragmentStatement;
    struct sqlite3_stmt *_selectExcludingKeyFragmentStatement;
    struct sqlite3_stmt *_trimStatement;
    struct sqlite3_stmt *_updateStatement;
    NSObject<OS_dispatch_queue> *_databaseQueue;
}

@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *databaseQueue; // @synthesize databaseQueue=_databaseQueue;
@property(nonatomic) unsigned long long diskCapacity; // @synthesize diskCapacity=_diskCapacity;
@property(readonly, nonatomic) unsigned long long currentDiskUsage; // @synthesize currentDiskUsage=_currentDiskUsage;
@property id delegate; // @synthesize delegate=_delegate;
- (void)_trimDatabase;
- (void)_flushOrphanedFiles;
- (void)_dropTrimmingTable;
- (void)_removeEntryFromDatabaseForKey:(id)arg1;
- (id)_entryForKey:(id)arg1;
- (void)_fetchCurrentDiskUsage;
- (id)_createCacheEntityInfo:(struct sqlite3_stmt *)arg1;
- (id)_readEntriesFromDatabase:(id)arg1 excludingFragment:(_Bool)arg2;
- (id)_readEntryFromDatabase:(id)arg1;
- (void)_writeEntryInDatabase:(id)arg1;
- (void)_updateEntryInDatabaseForKey:(id)arg1 entry:(id)arg2;
- (void)cache:(id)arg1 willEvictObject:(id)arg2;
- (void)removeEntries:(id)arg1 excludingFragment:(_Bool)arg2;
- (void)removeEntryForKey:(id)arg1;
- (id)storeFileForKey:(id)arg1 withData:(id)arg2;
- (id)fileNameForKey:(id)arg1;
@property(nonatomic) unsigned long long entryCacheCountLimit;
- (void)dealloc;
- (id)initWithCacheFolder:(id)arg1;

@end

@interface FBCacheEntityInfo : NSObject
{
    NSString *_uuid;
    NSString *_key;
    double _accessTime;
    unsigned long long _fileSize;
    _Bool _dirty;
}

@property(getter=isDirty) _Bool dirty; // @synthesize dirty=_dirty;
@property(readonly) unsigned long long fileSize; // @synthesize fileSize=_fileSize;
@property(readonly) double accessTime; // @synthesize accessTime=_accessTime;
@property(readonly, copy) NSString *uuid; // @synthesize uuid=_uuid;
@property(readonly, copy) NSString *key; // @synthesize key=_key;
- (void)registerAccess;
- (void)dealloc;
- (id)initWithKey:(id)arg1 uuid:(id)arg2 accessTime:(double)arg3 fileSize:(unsigned long long)arg4;

@end

@interface FBSessionManualTokenCachingStrategy : FBSessionTokenCachingStrategy
{
    NSString *_accessToken;
    NSDate *_expirationDate;
}

@property(copy) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
@property(copy) NSString *accessToken; // @synthesize accessToken=_accessToken;
- (void)clearToken;
- (id)fetchTokenInformation;
- (void)cacheTokenInformation:(id)arg1;
- (void)dealloc;

@end

@interface FBRequestMetadata : NSObject
{
    int _retryCount;
    FBRequest *_request;
    CDUnknownBlockType _completionHandler;
    NSDictionary *_batchParameters;
    unsigned long long _behavior;
    CDUnknownBlockType _originalCompletionHandler;
    id _originalResult;
    NSError *_originalError;
}

@property(retain, nonatomic) NSError *originalError; // @synthesize originalError=_originalError;
@property(retain, nonatomic) id originalResult; // @synthesize originalResult=_originalResult;
@property(nonatomic) int retryCount; // @synthesize retryCount=_retryCount;
@property(copy, nonatomic) CDUnknownBlockType originalCompletionHandler; // @synthesize originalCompletionHandler=_originalCompletionHandler;
@property(nonatomic) unsigned long long behavior; // @synthesize behavior=_behavior;
@property(copy, nonatomic) NSDictionary *batchParameters; // @synthesize batchParameters=_batchParameters;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) FBRequest *request; // @synthesize request=_request;
- (id)description;
- (void)invokeCompletionHandlerForConnection:(id)arg1 withResults:(id)arg2 error:(id)arg3;
- (void)dealloc;
- (id)initWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 batchParameters:(id)arg3 behavior:(unsigned long long)arg4;

@end

@interface FBDialog : UIView <UIWebViewDelegate>
{
    id <FBDialogDelegate> _delegate;
    NSMutableDictionary *_params;
    NSString *_serverURL;
    NSURL *_loadingURL;
    UIWebView *_webView;
    UIActivityIndicatorView *_spinner;
    UIButton *_closeButton;
    long long _orientation;
    _Bool _showingKeyboard;
    _Bool _isViewInvisible;
    FBFrictionlessRequestSettings *_frictionlessSettings;
    UIView *_modalBackgroundView;
    _Bool _everShown;
}

@property(retain, nonatomic) NSMutableDictionary *params; // @synthesize params=_params;
@property(nonatomic) id <FBDialogDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dialogDidCancel:(id)arg1;
- (void)dialogDidSucceed:(id)arg1;
- (void)dialogWillDisappear;
- (void)dialogWillAppear;
- (void)dismissWithError:(id)arg1 animated:(_Bool)arg2;
- (void)dismissWithSuccess:(_Bool)arg1 animated:(_Bool)arg2;
- (void)show;
- (void)loadURL:(id)arg1 get:(id)arg2;
- (void)load;
- (id)initWithURL:(id)arg1 params:(id)arg2 isViewInvisible:(_Bool)arg3 frictionlessSettings:(id)arg4 delegate:(id)arg5;
- (id)getStringFromUrl:(id)arg1 needle:(id)arg2;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)deviceOrientationDidChange:(void *)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)hideSpinner;
- (void)showSpinner;
- (void)showWebView;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)init;
- (void)dialogSuccessHandleFrictionlessResponses:(id)arg1;
- (_Bool)testBoolUrlParam:(id)arg1 param:(id)arg2;
- (void)cancel;
- (void)dismiss:(_Bool)arg1;
- (void)postDismissCleanup;
- (void)removeObservers;
- (void)addObservers;
- (id)generateURL:(id)arg1 params:(id)arg2;
- (void)bounce2AnimationStopped;
- (void)bounce1AnimationStopped;
- (void)updateWebOrientation;
- (void)sizeToFitOrientation:(_Bool)arg1;
- (struct CGAffineTransform)transformForOrientation;
- (_Bool)shouldRotateToOrientation:(long long)arg1;
- (void)strokeLines:(struct CGRect)arg1 stroke:(const double *)arg2;
- (void)drawRect:(struct CGRect)arg1 fill:(const double *)arg2 radius:(double)arg3;
- (void)addRoundedRectToPath:(struct CGContext *)arg1 rect:(struct CGRect)arg2 radius:(float)arg3;

@end

@interface FBSessionAppEventsState : NSObject
{
    _Bool _requestInFlight;
    NSMutableArray *_accumulatedEvents;
    NSMutableArray *_inFlightEvents;
    unsigned long long _numSkippedEventsDueToFullBuffer;
}

@property _Bool requestInFlight; // @synthesize requestInFlight=_requestInFlight;
@property unsigned long long numSkippedEventsDueToFullBuffer; // @synthesize numSkippedEventsDueToFullBuffer=_numSkippedEventsDueToFullBuffer;
@property(retain) NSMutableArray *inFlightEvents; // @synthesize inFlightEvents=_inFlightEvents;
@property(retain) NSMutableArray *accumulatedEvents; // @synthesize accumulatedEvents=_accumulatedEvents;
- (id)jsonEncodeInFlightEvents:(_Bool)arg1;
- (_Bool)areAllEventsImplicit;
- (void)clearInFlightAndStats;
- (unsigned long long)getAccumulatedEventCount;
- (void)addEvent:(id)arg1 isImplicit:(_Bool)arg2;
- (void)dealloc;
- (id)init;

@end

@interface FBGraphObjectPagingLoader : NSObject <FBGraphObjectDataSourceDataNeededDelegate>
{
    _Bool _isResultFromCache;
    _Bool _skipRoundtripIfCached;
    UITableView *_tableView;
    FBGraphObjectTableDataSource *_dataSource;
    FBSession *_session;
    id <FBGraphObjectPagingLoaderDelegate> _delegate;
    unsigned long long _pagingMode;
    NSString *_nextLink;
    FBRequestConnection *_connection;
    NSString *_cacheIdentity;
}

@property(nonatomic) _Bool skipRoundtripIfCached; // @synthesize skipRoundtripIfCached=_skipRoundtripIfCached;
@property(copy, nonatomic) NSString *cacheIdentity; // @synthesize cacheIdentity=_cacheIdentity;
@property(retain, nonatomic) FBRequestConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) NSString *nextLink; // @synthesize nextLink=_nextLink;
@property(readonly, nonatomic) _Bool isResultFromCache; // @synthesize isResultFromCache=_isResultFromCache;
@property(nonatomic) unsigned long long pagingMode; // @synthesize pagingMode=_pagingMode;
@property(nonatomic) id <FBGraphObjectPagingLoaderDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) FBSession *session; // @synthesize session=_session;
@property(retain, nonatomic) FBGraphObjectTableDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)graphObjectTableDataSourceNeedsData:(id)arg1 triggeredByIndexPath:(id)arg2;
- (void)requestCompleted:(id)arg1 result:(id)arg2 error:(id)arg3;
- (void)reset;
- (void)cancel;
- (void)startLoadingWithRequest:(id)arg1 cacheIdentity:(id)arg2 skipRoundtripIfCached:(_Bool)arg3;
- (void)followNextLink;
- (void)addResultsAndUpdateView:(id)arg1;
- (void)updateView;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1 pagingMode:(unsigned long long)arg2;

@end

@interface FBKeychainStore : NSObject
{
    NSString *_service;
    NSString *_accessGroup;
}

- (id)_queryForKey:(id)arg1;
- (id)dataForKey:(id)arg1;
- (_Bool)setData:(id)arg1 forKey:(id)arg2 accessibility:(void *)arg3;
- (_Bool)setData:(id)arg1 forKey:(id)arg2;
- (id)stringForKey:(id)arg1;
- (_Bool)setString:(id)arg1 forKey:(id)arg2 accessibility:(void *)arg3;
- (_Bool)setString:(id)arg1 forKey:(id)arg2;
- (id)dictionaryForKey:(id)arg1;
- (_Bool)setDictionary:(id)arg1 forKey:(id)arg2 accessibility:(void *)arg3;
- (_Bool)setDictionary:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)initWithService:(id)arg1 accessGroup:(id)arg2;
- (id)initWithService:(id)arg1;

@end

@interface FBTooltipView : UIView
{
    struct CGPoint _positionInView;
    double _displayTime;
    double _minimumDisplayDuration;
    UILabel *_textLabel;
    UITapGestureRecognizer *_insideTapGestureRecognizer;
    double _leftWidth;
    double _rightWidth;
    double _arrowMidpoint;
    _Bool _pointingUp;
    _Bool _isFadingOut;
    UIColor *_innerStrokeColor;
    double _arrowHeight;
    double _textPadding;
    double _maximumTextWidth;
    double _verticalTextOffset;
    double _verticalCrossOffset;
    unsigned long long _colorStyle;
    NSArray *_gradientColors;
    UIColor *_crossCloseGlyphColor;
    double _displayDuration;
    NSString *_message;
    NSString *_tagline;
}

@property(copy, nonatomic) NSString *tagline; // @synthesize tagline=_tagline;
@property(copy, nonatomic) NSString *message; // @synthesize message=_message;
@property(nonatomic) double displayDuration; // @synthesize displayDuration=_displayDuration;
- (void)cancelAllScheduledFadeOutMethods;
- (void)scheduleFadeoutRespectingMinimumDisplayDuration;
- (void)scheduleAutomaticFadeout;
- (void)setMessage:(id)arg1 tagline:(id)arg2;
- (struct CGRect)layoutSubviewsAndDetermineFrame;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (void)onTapInTooltip:(id)arg1;
- (void)animateFadeOutWithCompletion:(CDUnknownBlockType)arg1;
- (void)animateFadeIn;
@property(nonatomic) unsigned long long colorStyle;
- (void)dismiss;
- (void)presentInView:(id)arg1 withArrowPosition:(struct CGPoint)arg2 direction:(unsigned long long)arg3;
- (void)presentFromView:(id)arg1;
- (void)dealloc;
- (id)initWithTagline:(id)arg1 message:(id)arg2 colorStyle:(unsigned long long)arg3;

@end

@interface FBLikeActionControllerCache : NSObject
{
    NSCache *_cache;
}

- (void)_activeSessionDidChangeWithNotification:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FBLikeActionController : NSObject <FBRequestConnectionDelegate, NSCoding, NSDiscardableContent>
{
    unsigned long long _contentAccessCount;
    FBSession *_session;
    unsigned long long _refreshState;
    _Bool _objectIsLiked;
    _Bool _contentDiscarded;
    _Bool _objectIsLikedIsPending;
    _Bool _objectIsLikedOnServer;
    _Bool _objectIsPage;
    NSString *_objectID;
    NSString *_likeCountStringWithLike;
    NSString *_likeCountStringWithoutLike;
    NSString *_socialSentenceWithLike;
    NSString *_socialSentenceWithoutLike;
    NSString *_unlikeToken;
    NSString *_verifiedObjectID;
}

+ (id)likeActionControllerForObjectID:(id)arg1;
+ (_Bool)isDisabled;
@property(copy, nonatomic) NSString *verifiedObjectID; // @synthesize verifiedObjectID=_verifiedObjectID;
@property(copy, nonatomic) NSString *unlikeToken; // @synthesize unlikeToken=_unlikeToken;
@property(copy, nonatomic) NSString *socialSentenceWithoutLike; // @synthesize socialSentenceWithoutLike=_socialSentenceWithoutLike;
@property(copy, nonatomic) NSString *socialSentenceWithLike; // @synthesize socialSentenceWithLike=_socialSentenceWithLike;
@property(nonatomic) _Bool objectIsPage; // @synthesize objectIsPage=_objectIsPage;
@property(nonatomic) _Bool objectIsLikedOnServer; // @synthesize objectIsLikedOnServer=_objectIsLikedOnServer;
@property(nonatomic) _Bool objectIsLikedIsPending; // @synthesize objectIsLikedIsPending=_objectIsLikedIsPending;
@property(copy, nonatomic) NSString *likeCountStringWithoutLike; // @synthesize likeCountStringWithoutLike=_likeCountStringWithoutLike;
@property(copy, nonatomic) NSString *likeCountStringWithLike; // @synthesize likeCountStringWithLike=_likeCountStringWithLike;
@property(nonatomic, getter=isContentDiscarded) _Bool contentDiscarded; // @synthesize contentDiscarded=_contentDiscarded;
@property(nonatomic) _Bool objectIsLiked; // @synthesize objectIsLiked=_objectIsLiked;
@property(readonly, copy, nonatomic) NSString *objectID; // @synthesize objectID=_objectID;
- (_Bool)_useOGLike;
- (void)_updateWithObjectIsLiked:(_Bool)arg1 likeCountStringWithLike:(id)arg2 likeCountStringWithoutLike:(id)arg3 socialSentenceWithLike:(id)arg4 socialSentenceWithoutLike:(id)arg5 unlikeToken:(id)arg6 soundEnabled:(_Bool)arg7 animated:(_Bool)arg8 deferred:(_Bool)arg9;
- (void)_setExecuting:(_Bool)arg1 forKey:(id)arg2;
- (void)_serialize;
- (void)_refreshWithMode:(unsigned long long)arg1;
- (void)_publishUnlikeWithUpdateBlock:(CDUnknownBlockType)arg1 analyticsParameters:(id)arg2;
- (void)_publishLikeWithUpdateBlock:(CDUnknownBlockType)arg1 analyticsParameters:(id)arg2;
- (void)_publishIfNeededWithUpdateBlock:(CDUnknownBlockType)arg1 analyticsParameters:(id)arg2;
- (void)_presentLikeDialogWithUpdateBlock:(CDUnknownBlockType)arg1 analyticsParameters:(id)arg2;
- (void)_ensureVerifiedObjectID:(CDUnknownBlockType)arg1;
- (void)discardContentIfPossible;
- (void)endContentAccess;
- (_Bool)beginContentAccess;
- (void)toggleLikeWithSoundEnabled:(_Bool)arg1 analyticsParameters:(id)arg2;
- (void)refresh;
@property(readonly, copy, nonatomic) NSString *socialSentence;
@property(readonly, copy, nonatomic) NSString *likeCountString;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithObjectID:(id)arg1 session:(id)arg2;

@end

@interface FBCacheDescriptor : NSObject
{
}

- (void)prefetchAndCacheForSession:(id)arg1;

@end

@interface Facebook : NSObject <FBRequestDelegate, FBLoginDialogDelegate>
{
    id <FBSessionDelegate> _sessionDelegate;
    NSMutableSet *_requests;
    FBSession *_session;
    FBSessionManualTokenCachingStrategy *_tokenCaching;
    FBDialog *_fbDialog;
    NSString *_appId;
    NSString *_urlSchemeSuffix;
    _Bool _isExtendingAccessToken;
    FBRequest *_requestExtendingAccessToken;
    NSDate *_lastAccessTokenUpdate;
    FBFrictionlessRequestSettings *_frictionlessRequestSettings;
    _Bool _hasUpdatedAccessToken;
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
@property(retain, nonatomic) FBSessionManualTokenCachingStrategy *tokenCaching; // @synthesize tokenCaching=_tokenCaching;
@property(nonatomic) _Bool hasUpdatedAccessToken; // @synthesize hasUpdatedAccessToken=_hasUpdatedAccessToken;
@property(copy, nonatomic) NSString *appId; // @synthesize appId=_appId;
@property(retain, nonatomic) FBSession *session; // @synthesize session=_session;
@property(copy, nonatomic) NSString *urlSchemeSuffix; // @synthesize urlSchemeSuffix=_urlSchemeSuffix;
@property(nonatomic) id <FBSessionDelegate> sessionDelegate; // @synthesize sessionDelegate=_sessionDelegate;
- (void)requestLoading:(id)arg1;
- (void)request:(id)arg1 didReceiveResponse:(id)arg2;
- (void)request:(id)arg1 didLoadRawResponse:(id)arg2;
- (void)request:(id)arg1 didLoad:(id)arg2;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)fbDialogNotLogin:(_Bool)arg1;
- (void)fbDialogLogin:(id)arg1 expirationDate:(id)arg2 params:(id)arg3;
- (_Bool)isSessionValid;
- (_Bool)isFrictionlessEnabledForRecipients:(id)arg1;
- (_Bool)isFrictionlessEnabledForRecipient:(id)arg1;
- (void)reloadFrictionlessRecipientCache;
- (void)enableFrictionlessRequests;
@property(readonly, nonatomic) _Bool isFrictionlessRequestsEnabled;
- (void)dialog:(id)arg1 andParams:(id)arg2 andDelegate:(id)arg3;
- (void)dialog:(id)arg1 andDelegate:(id)arg2;
- (id)requestWithGraphPath:(id)arg1 andParams:(id)arg2 andHttpMethod:(id)arg3 andDelegate:(id)arg4;
- (id)requestWithGraphPath:(id)arg1 andParams:(id)arg2 andDelegate:(id)arg3;
- (id)requestWithGraphPath:(id)arg1 andDelegate:(id)arg2;
- (id)requestWithMethodName:(id)arg1 andParams:(id)arg2 andHttpMethod:(id)arg3 andDelegate:(id)arg4;
- (id)requestWithParams:(id)arg1 andDelegate:(id)arg2;
- (void)logout:(id)arg1;
- (void)logout;
- (_Bool)handleOpenURL:(id)arg1;
- (_Bool)shouldExtendAccessToken;
- (void)extendAccessTokenIfNeeded;
- (void)extendAccessToken;
@property(copy, nonatomic) NSDate *expirationDate;
@property(copy, nonatomic) NSString *accessToken;
- (void)authorize:(id)arg1;
- (void)updateSessionIfTokenUpdated;
- (id)parseURLParams:(id)arg1;
- (id)getOwnBaseUrl;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)observeTokenContextValueForKeyPath:(id)arg1 change:(id)arg2;
- (void)observeFinishedContextValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3;
- (void)invalidateSession;
- (void)dealloc;
- (id)initWithAppId:(id)arg1 urlSchemeSuffix:(id)arg2 andDelegate:(id)arg3;
- (id)initWithAppId:(id)arg1 andDelegate:(id)arg2;

@end

@interface FBTimeSpentData : NSObject
{
}

+ (id)singleton;
+ (void)restore:(_Bool)arg1;
+ (void)suspend;
- (void)instanceRestore:(_Bool)arg1;
- (void)instanceSuspend;

@end

@interface FBGraphObjectTableDataSource : NSObject <UITableViewDataSource>
{
    _Bool _useCollation;
    _Bool _itemTitleSuffixEnabled;
    _Bool _itemPicturesEnabled;
    _Bool _itemSubtitleEnabled;
    _Bool _expectingMoreGraphObjects;
    _Bool _showSections;
    UIImage *_defaultPicture;
    id <FBGraphObjectViewControllerDelegate> _controllerDelegate;
    NSString *_groupByField;
    id <FBGraphObjectSelectionQueryDelegate> _selectionDelegate;
    id <FBGraphObjectDataSourceDataNeededDelegate> _dataNeededDelegate;
    NSArray *_sortDescriptors;
    NSArray *_data;
    NSArray *_indexKeys;
    NSDictionary *_indexMap;
    NSMutableSet *_pendingURLConnections;
    UILocalizedIndexedCollation *_collation;
}

@property(nonatomic) _Bool showSections; // @synthesize showSections=_showSections;
@property(retain, nonatomic) UILocalizedIndexedCollation *collation; // @synthesize collation=_collation;
@property(nonatomic) _Bool expectingMoreGraphObjects; // @synthesize expectingMoreGraphObjects=_expectingMoreGraphObjects;
@property(retain, nonatomic) NSMutableSet *pendingURLConnections; // @synthesize pendingURLConnections=_pendingURLConnections;
@property(retain, nonatomic) NSDictionary *indexMap; // @synthesize indexMap=_indexMap;
@property(retain, nonatomic) NSArray *indexKeys; // @synthesize indexKeys=_indexKeys;
@property(retain, nonatomic) NSArray *data; // @synthesize data=_data;
@property(copy, nonatomic) NSArray *sortDescriptors; // @synthesize sortDescriptors=_sortDescriptors;
@property(nonatomic) id <FBGraphObjectDataSourceDataNeededDelegate> dataNeededDelegate; // @synthesize dataNeededDelegate=_dataNeededDelegate;
@property(nonatomic) id <FBGraphObjectSelectionQueryDelegate> selectionDelegate; // @synthesize selectionDelegate=_selectionDelegate;
@property(nonatomic) _Bool itemSubtitleEnabled; // @synthesize itemSubtitleEnabled=_itemSubtitleEnabled;
@property(nonatomic) _Bool itemPicturesEnabled; // @synthesize itemPicturesEnabled=_itemPicturesEnabled;
@property(nonatomic) _Bool itemTitleSuffixEnabled; // @synthesize itemTitleSuffixEnabled=_itemTitleSuffixEnabled;
@property(nonatomic) _Bool useCollation; // @synthesize useCollation=_useCollation;
@property(copy, nonatomic) NSString *groupByField; // @synthesize groupByField=_groupByField;
@property(nonatomic) id <FBGraphObjectViewControllerDelegate> controllerDelegate; // @synthesize controllerDelegate=_controllerDelegate;
@property(retain, nonatomic) UIImage *defaultPicture; // @synthesize defaultPicture=_defaultPicture;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)sectionIndexTitlesForTableView:(id)arg1;
- (long long)tableView:(id)arg1 sectionForSectionIndexTitle:(id)arg2 atIndex:(long long)arg3;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)addOrRemovePendingConnection:(id)arg1;
- (id)tableView:(id)arg1 imageForItem:(id)arg2;
- (id)sectionItemsForSection:(long long)arg1;
- (id)titleForSection:(long long)arg1;
- (_Bool)isActivityIndicatorIndexPath:(id)arg1;
- (_Bool)isLastSection:(long long)arg1;
- (id)indexPathForItem:(id)arg1;
- (id)itemAtIndexPath:(id)arg1;
- (id)indexKeyOfItem:(id)arg1;
- (id)cellWithTableView:(id)arg1;
- (void)setSortingBySingleField:(id)arg1 ascending:(_Bool)arg2;
- (void)setSortingByFields:(id)arg1 ascending:(_Bool)arg2;
- (_Bool)filterIncludesItem:(id)arg1;
- (void)update;
- (void)cancelPendingRequests;
- (void)bindTableView:(id)arg1;
- (_Bool)hasGraphObjects;
- (void)appendGraphObjects:(id)arg1;
- (void)clearGraphObjects;
- (void)prepareForNewRequest;
- (id)fieldsForRequestIncluding:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FBRequestBody : NSObject
{
    NSMutableData *_mutableData;
}

+ (id)mimeContentType;
@property(readonly, retain, nonatomic) NSMutableData *mutableData; // @synthesize mutableData=_mutableData;
@property(readonly, retain, nonatomic) NSData *data;
- (void)appendWithKey:(id)arg1 dataValue:(id)arg2 logger:(id)arg3;
- (void)appendWithKey:(id)arg1 imageValue:(id)arg2 logger:(id)arg3;
- (void)appendWithKey:(id)arg1 formValue:(id)arg2 logger:(id)arg3;
- (void)appendRecordBoundary;
- (void)appendUTF8:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FBSystemAccountStoreAdapter : NSObject
{
    _Bool _forceBlockingRenew;
    ACAccountStore *_accountStore;
    ACAccountType *_accountTypeFB;
}

+ (void)setSharedInstance:(id)arg1;
+ (id)sharedInstance;
@property(readonly, retain, nonatomic) ACAccountType *accountTypeFB; // @synthesize accountTypeFB=_accountTypeFB;
@property(readonly, retain, nonatomic) ACAccountStore *accountStore; // @synthesize accountStore=_accountStore;
- (id)renewSystemAuthorizationAsTask;
- (void)renewSystemAuthorization:(CDUnknownBlockType)arg1;
- (void)requestAccessToFacebookAccountStore:(id)arg1 defaultAudience:(unsigned long long)arg2 isReauthorize:(_Bool)arg3 appID:(id)arg4 session:(id)arg5 handler:(CDUnknownBlockType)arg6;
- (id)requestAccessToFacebookAccountStoreAsTask:(id)arg1;
@property(readonly) _Bool canRequestAccessWithoutUI;
@property _Bool forceBlockingRenew;
- (void)dealloc;
- (id)init;

@end

@interface FBFriendPickerViewController : FBPeoplePickerViewController
{
}

+ (id)cacheIdentity;
+ (id)graphAPIName;
+ (double)cacheRefreshDelay;
+ (id)firstRenderLogString;
+ (unsigned long long)graphObjectPagingMode;
+ (id)cacheDescriptorWithUserID:(id)arg1 fieldsForRequest:(id)arg2;
+ (id)cacheDescriptor;
- (void)logAppEvents:(_Bool)arg1;
- (_Bool)delegateIncludesGraphObject:(id)arg1;
- (void)notifyDelegateOfError:(id)arg1;
- (void)notifyDelegateSelectionDidChange;
- (void)notifyDelegateDataDidChange;
- (void)configureUsingCachedDescriptor:(id)arg1;
@property(copy, nonatomic) NSArray *selection;

@end

@interface FBFetchedAppSettings : NSObject
{
    _Bool _supportsAttribution;
    _Bool _supportsImplicitSdkLogging;
    _Bool _enableLoginTooltip;
    NSString *_serverAppName;
    NSString *_appID;
    NSString *_loginTooltipContent;
}

@property(copy, nonatomic) NSString *loginTooltipContent; // @synthesize loginTooltipContent=_loginTooltipContent;
@property(retain, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property _Bool enableLoginTooltip; // @synthesize enableLoginTooltip=_enableLoginTooltip;
@property _Bool supportsImplicitSdkLogging; // @synthesize supportsImplicitSdkLogging=_supportsImplicitSdkLogging;
@property _Bool supportsAttribution; // @synthesize supportsAttribution=_supportsAttribution;
@property(copy, nonatomic) NSString *serverAppName; // @synthesize serverAppName=_serverAppName;
- (void)dealloc;
- (id)initWithAppID:(id)arg1;
- (id)init;

@end

@interface FBSafeCollections : NSObject
{
}

+ (id)objectOfKind:(Class)arg1 forKey:(id)arg2 fromDictionary:(id)arg3;
+ (id)numberForKey:(id)arg1 fromDictionary:(id)arg2;
+ (id)stringForKey:(id)arg1 fromDictionary:(id)arg2;
+ (id)arrayForKey:(id)arg1 fromDictionary:(id)arg2;
+ (id)dictionaryForKey:(id)arg1 fromDictionary:(id)arg2;
+ (id)objectOfKind:(Class)arg1 atIndex:(unsigned long long)arg2 fromArray:(id)arg3;
+ (id)numberAtIndex:(unsigned long long)arg1 fromArray:(id)arg2;
+ (id)stringAtIndex:(unsigned long long)arg1 fromArray:(id)arg2;
+ (id)arrayAtIndex:(unsigned long long)arg1 fromArray:(id)arg2;
+ (id)dictionaryAtIndex:(unsigned long long)arg1 fromArray:(id)arg2;

@end

@interface FBUtility : NSObject
{
}

+ (void)deleteFacebookCookies;
+ (_Bool)isSystemAccountStoreAvailable;
+ (_Bool)isRunningOnOrAfter:(long long)arg1;
+ (_Bool)isUIKitLinkedOnOrAfter:(long long)arg1;
+ (_Bool)isMultitaskingSupported;
+ (_Bool)isRetinaDisplay;
+ (_Bool)isRegisteredURLScheme:(id)arg1;
+ (id)dialogBaseURL;
+ (id)buildFacebookUrlWithPre:(id)arg1 post:(id)arg2 version:(id)arg3;
+ (id)buildFacebookUrlWithPre:(id)arg1 withPost:(id)arg2;
+ (id)buildFacebookUrlWithPre:(id)arg1;
+ (id)stringAppBaseUrlFromAppId:(id)arg1 urlSchemeSuffix:(id)arg2;
+ (id)stringByURLEncodingString:(id)arg1;
+ (id)stringByURLDecodingString:(id)arg1;
+ (id)stringBySerializingQueryParameters:(id)arg1;
+ (id)dictionaryByParsingURLQueryPart:(id)arg1;
+ (id)queryParamsDictionaryFromFBURL:(id)arg1;
+ (id)simpleJSONDecode:(id)arg1 error:(id *)arg2;
+ (id)simpleJSONDecode:(id)arg1;
+ (id)simpleJSONEncode:(id)arg1 error:(id *)arg2 writingOptions:(unsigned long long)arg3;
+ (id)simpleJSONEncode:(id)arg1;
+ (void)updateParametersWithEventUsageLimitsAndBundleInfo:(id)arg1 accessAdvertisingTrackingStatus:(_Bool)arg2;
+ (unsigned long long)advertisingTrackingStatus;
+ (id)advertiserID;
+ (id)attributionID;
+ (id)newUUIDString;
+ (void)callTheFetchAppSettingsCallback:(CDUnknownBlockType)arg1;
+ (_Bool)isFetchedFBAppSettingsStale;
+ (id)fetchedAppSettings;
+ (void)fetchAppSettings:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)addBasicInfoPermission:(id)arg1;
+ (_Bool)areAllPermissionsReadPermissions:(id)arg1;
+ (_Bool)isPublishPermission:(id)arg1;
+ (_Bool)isFacebookBundleIdentifier:(id)arg1;
+ (id)facebookSDKBundle;
+ (id)localizedStringForKey:(id)arg1 withDefault:(id)arg2 inBundle:(id)arg3;
+ (id)localizedStringForKey:(id)arg1 withDefault:(id)arg2;
+ (id)expirationDateFromExpirationTimeIntervalString:(id)arg1;
+ (id)expirationDateFromExpirationUnixTimeString:(id)arg1;
+ (double)randomTimeInterval:(double)arg1 withMaxValue:(double)arg2;
+ (unsigned long long)currentTimeInMilliseconds;
+ (void)centerView:(id)arg1 tableView:(id)arg2;
+ (id)stringFBIDFromObject:(id)arg1;
+ (id)graphObjectInArray:(id)arg1 withSameIDAs:(id)arg2;

@end

@interface FBInsights : NSObject
{
}

+ (void)flush;
+ (void)setFlushBehavior:(unsigned long long)arg1;
+ (unsigned long long)flushBehavior;
+ (void)logConversionPixel:(id)arg1 valueOfPixel:(double)arg2 session:(id)arg3;
+ (void)logConversionPixel:(id)arg1 valueOfPixel:(double)arg2;
+ (void)logPurchase:(double)arg1 currency:(id)arg2 parameters:(id)arg3 session:(id)arg4;
+ (void)logPurchase:(double)arg1 currency:(id)arg2 parameters:(id)arg3;
+ (void)logPurchase:(double)arg1 currency:(id)arg2;
+ (void)setAppVersion:(id)arg1;
+ (id)appVersion;

@end

@interface FBFriendPickerCacheDescriptor : FBCacheDescriptor <FBGraphObjectPagingLoaderDelegate>
{
    _Bool _hasCompletedFetch;
    _Bool _usePageLimitOfOne;
    NSSet *_fieldsForRequest;
    NSString *_userID;
    FBGraphObjectPagingLoader *_loader;
}

@property(nonatomic) _Bool usePageLimitOfOne; // @synthesize usePageLimitOfOne=_usePageLimitOfOne;
@property(nonatomic) _Bool hasCompletedFetch; // @synthesize hasCompletedFetch=_hasCompletedFetch;
@property(retain, nonatomic) FBGraphObjectPagingLoader *loader; // @synthesize loader=_loader;
@property(copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(copy, nonatomic) NSSet *fieldsForRequest; // @synthesize fieldsForRequest=_fieldsForRequest;
- (void)pagingLoaderDidFinishLoading:(id)arg1;
- (void)setUsePageLimitOfOne;
- (void)prefetchAndCacheForSession:(id)arg1;
- (void)dealloc;
- (id)initWithUserID:(id)arg1 fieldsForRequest:(id)arg2;
- (id)initWithFieldsForRequest:(id)arg1;
- (id)initWithUserID:(id)arg1;
- (id)init;

@end

@interface FBAppLinkData : NSObject
{
    NSURL *_targetURL;
    NSArray *_actionTypes;
    NSArray *_actionIDs;
    NSString *_ref;
    NSString *_userAgent;
    NSDictionary *_refererData;
    NSDictionary *_originalQueryParameters;
    NSURL *_originalURL;
    NSDictionary *_arguments;
}

+ (id)createFromURL:(id)arg1;
@property(copy) NSDictionary *arguments; // @synthesize arguments=_arguments;
@property(retain) NSURL *originalURL; // @synthesize originalURL=_originalURL;
@property(copy) NSDictionary *originalQueryParameters; // @synthesize originalQueryParameters=_originalQueryParameters;
@property(copy) NSDictionary *refererData; // @synthesize refererData=_refererData;
@property(copy) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property(copy) NSString *ref; // @synthesize ref=_ref;
@property(copy) NSArray *actionIDs; // @synthesize actionIDs=_actionIDs;
@property(copy) NSArray *actionTypes; // @synthesize actionTypes=_actionTypes;
@property(retain) NSURL *targetURL; // @synthesize targetURL=_targetURL;
- (id)description;
- (_Bool)isValid;
- (void)dealloc;
- (id)initWithURL:(id)arg1 targetURL:(id)arg2 ref:(id)arg3 userAgent:(id)arg4 refererData:(id)arg5 originalParams:(id)arg6;
- (id)initWithURL:(id)arg1 targetURL:(id)arg2 originalParams:(id)arg3 arguments:(id)arg4;
- (id)initWithURL:(id)arg1;

@end

@interface FBGraphObject : NSMutableDictionary <FBGraphObject>
{
    NSMutableDictionary *_jsonObject;
}

+ (_Bool)isProtocolImplementationInferable:(id)arg1 checkFBGraphObjectAdoption:(_Bool)arg2;
+ (unsigned long long)inferredImplTypeForSelector:(SEL)arg1;
+ (id)graphObjectWrappingObject:(id)arg1;
+ (_Bool)isGraphObjectID:(id)arg1 sameAs:(id)arg2;
+ (id)openGraphObjectForPostWithType:(id)arg1 title:(id)arg2 image:(id)arg3 url:(id)arg4 description:(id)arg5;
+ (id)openGraphObjectForPost;
+ (id)openGraphActionForPost;
+ (id)graphObjectWrappingDictionary:(id)arg1;
+ (id)graphObject;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (void)graphObjectifyAll;
- (id)graphObjectifyAtKey:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)dealloc;
- (void)setObjectDescription:(id)arg1;
- (id)objectDescription;
- (void)setObjectID:(id)arg1;
- (id)objectID;
@property(nonatomic) _Bool provisionedForPost;
- (id)initWrappingDictionary:(id)arg1;

@end

@interface FBGraphObjectArray : NSMutableArray
{
    NSMutableArray *_jsonArray;
}

- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeLastObject;
- (void)addObject:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)reverseObjectEnumerator;
- (id)objectEnumerator;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)graphObjectifyAll;
- (id)graphObjectifyAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWrappingArray:(id)arg1;

@end

@interface FBLikeControl : UIControl
{
    FBLikeActionController *_likeActionController;
    FBLikeBoxView *_likeBoxView;
    FBLikeButton *_likeButton;
    UIView *_likeButtonContainer;
    UILabel *_socialSentenceLabel;
    _Bool _soundEnabled;
    UIColor *_foregroundColor;
    unsigned long long _likeControlAuxiliaryPosition;
    unsigned long long _likeControlHorizontalAlignment;
    unsigned long long _likeControlStyle;
    NSString *_objectID;
    double _preferredMaxLayoutWidth;
}

+ (_Bool)dialogIsAvailable;
@property(nonatomic, getter=isSoundEnabled) _Bool soundEnabled; // @synthesize soundEnabled=_soundEnabled;
@property(nonatomic) double preferredMaxLayoutWidth; // @synthesize preferredMaxLayoutWidth=_preferredMaxLayoutWidth;
@property(copy, nonatomic) NSString *objectID; // @synthesize objectID=_objectID;
@property(nonatomic) unsigned long long likeControlStyle; // @synthesize likeControlStyle=_likeControlStyle;
@property(nonatomic) unsigned long long likeControlHorizontalAlignment; // @synthesize likeControlHorizontalAlignment=_likeControlHorizontalAlignment;
@property(nonatomic) unsigned long long likeControlAuxiliaryPosition; // @synthesize likeControlAuxiliaryPosition=_likeControlAuxiliaryPosition;
@property(retain, nonatomic) UIColor *foregroundColor; // @synthesize foregroundColor=_foregroundColor;
- (void)_updateLikeBoxCaretPosition;
- (void)_resetLikeActionController;
- (void)_likeActionControllerDidResetNotification:(id)arg1;
- (struct FBLikeControlLayout)_layoutWithBounds:(struct CGRect)arg1 subviewSizingBlock:(CDUnknownBlockType)arg2;
- (void)_initializeContent;
- (void)_handleLikeButtonTouchUp:(id)arg1;
- (void)_handleLikeButtonTouchDown:(id)arg1;
- (void)_handleLikeButtonTap:(id)arg1;
- (void)_handleLikeActionControllerDidUpdateNotification:(id)arg1;
- (void)_handleLikeActionControllerDidDisableNotification:(id)arg1;
- (double)_auxiliaryViewPadding;
- (id)_auxiliaryView;
- (id)_analyticsParameters;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (struct CGSize)intrinsicContentSize;
- (void)drawRect:(struct CGRect)arg1;
- (void)setOpaque:(_Bool)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FBSessionUtility : NSObject
{
}

+ (id)audienceNameWithAudience:(unsigned long long)arg1;
+ (id)userIDFromSignedRequest:(id)arg1;
+ (unsigned long long)loginBehaviorForLoginType:(unsigned long long)arg1;
+ (_Bool)logIfFoundUnexpectedPermissions:(id)arg1 isRead:(_Bool)arg2;
+ (void)extractPermissionsFromResponse:(id)arg1 allPermissions:(id)arg2 grantedPermissions:(id)arg3 declinedPermissions:(id)arg4;
+ (void)validateRequestForPermissions:(id)arg1 defaultAudience:(unsigned long long)arg2 allowSystemAccount:(_Bool)arg3 isRead:(_Bool)arg4;
+ (_Bool)areRequiredPermissions:(id)arg1 aSubsetOfPermissions:(id)arg2;
+ (id)expirationDateFromResponseParams:(id)arg1;
+ (void)addWebLoginStartTimeToParams:(id)arg1;
+ (id)sessionStateDescription:(unsigned long long)arg1;
+ (id)clientStateFromQueryParams:(id)arg1;
+ (id)queryParamsFromLoginURL:(id)arg1 appID:(id)arg2 urlSchemeSuffix:(id)arg3;
+ (_Bool)isOpenSessionResponseURL:(id)arg1;

@end

@interface FBLikeBoxView : UIView
{
    FBLikeBoxBorderView *_borderView;
    UILabel *_likeCountLabel;
    unsigned long long _caretPosition;
}

@property(nonatomic) unsigned long long caretPosition; // @synthesize caretPosition=_caretPosition;
- (void)_initializeContent;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (struct CGSize)intrinsicContentSize;
@property(copy, nonatomic) NSString *text;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FBTaggableFriendPickerViewController : FBPeoplePickerViewController
{
}

+ (id)graphAPIName;
+ (id)firstRenderLogString;
+ (unsigned long long)graphObjectPagingMode;
- (void)setFieldsForRequest:(id)arg1;
- (id)fieldsForRequest;

@end

@interface FBDialogsParams : NSObject <NSCopying>
{
}

+ (id)methodName;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)validate;
- (id)dictionaryMethodArgs;

@end

@interface FBNativeDialogs : NSObject
{
}

+ (_Bool)canPresentShareDialogWithSession:(id)arg1;
+ (_Bool)presentShareDialogModallyFrom:(id)arg1 session:(id)arg2 initialText:(id)arg3 images:(id)arg4 urls:(id)arg5 handler:(CDUnknownBlockType)arg6;
+ (_Bool)presentShareDialogModallyFrom:(id)arg1 initialText:(id)arg2 images:(id)arg3 urls:(id)arg4 handler:(CDUnknownBlockType)arg5;
+ (_Bool)presentShareDialogModallyFrom:(id)arg1 initialText:(id)arg2 image:(id)arg3 url:(id)arg4 handler:(CDUnknownBlockType)arg5;
+ (CDUnknownBlockType)handlerFromHandler:(CDUnknownBlockType)arg1;

@end

@interface FBImageResourceLoader : NSObject
{
}

+ (id)imageNamed:(id)arg1 fromBytes:(const char *)arg2 length:(unsigned long long)arg3 fromRetinaBytes:(const char *)arg4 retinaLength:(unsigned long long)arg5;
+ (id)imageFromBytes:(const char *)arg1 length:(unsigned long long)arg2 fromRetinaBytes:(const char *)arg3 retinaLength:(unsigned long long)arg4;
+ (id)loadImageFromBytes:(const char *)arg1 length:(unsigned long long)arg2 scale:(double)arg3;

@end

@interface FBRequestConnectionRetryManagerAlertViewHelper : NSObject <UIAlertViewDelegate>
{
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
- (void)dealloc;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)show:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3 handler:(CDUnknownBlockType)arg4;

@end

@interface FBRequestConnectionRetryManager : NSObject
{
    FBRequestConnection<FBRequestConnectionRetryManagerDelegate> *_requestConnection;
    unsigned long long _state;
    FBSession *_sessionToReconnect;
    NSString *_alertMessage;
    NSMutableArray *_requestMetadatas;
    FBRequestConnectionRetryManagerAlertViewHelper *_alertViewHelper;
}

@property(retain, nonatomic) FBRequestConnectionRetryManagerAlertViewHelper *alertViewHelper; // @synthesize alertViewHelper=_alertViewHelper;
@property(retain, nonatomic) NSMutableArray *requestMetadatas; // @synthesize requestMetadatas=_requestMetadatas;
@property(copy, nonatomic) NSString *alertMessage; // @synthesize alertMessage=_alertMessage;
@property(retain, nonatomic) FBSession *sessionToReconnect; // @synthesize sessionToReconnect=_sessionToReconnect;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) FBRequestConnection<FBRequestConnectionRetryManagerDelegate> *requestConnection; // @synthesize requestConnection=_requestConnection;
- (void)notifyConnectionWillRetryWithConnection:(id)arg1;
- (void)notifyConnectionDidFinishAbortingRetries;
- (void)notifyConnectionDidFinishWithNoRetries;
- (void)dealloc;
- (void)repairFailed;
- (void)repairSuccess;
- (void)performRetries;
- (void)addRequestMetadata:(id)arg1;
- (id)initWithFBRequestConnection:(id)arg1;

@end

@interface _FBMAppBridgeScheme : FBAppBridgeScheme
{
}

+ (id)bridgeVersions;
+ (id)schemePrefix;

@end

@interface FBDialogs : NSObject
{
}

+ (id)createError:(id)arg1 session:(id)arg2;
+ (id)composeViewControllerWithSession:(id)arg1 handler:(CDUnknownBlockType)arg2;
+ (id)presentLikeDialogWithParams:(id)arg1 clientState:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (_Bool)canPresentLikeDialog;
+ (id)presentMessageDialogWithLink:(id)arg1 handler:(CDUnknownBlockType)arg2;
+ (id)presentMessageDialogWithLink:(id)arg1 name:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (id)presentMessageDialogWithLink:(id)arg1 name:(id)arg2 caption:(id)arg3 description:(id)arg4 picture:(id)arg5 clientState:(id)arg6 handler:(CDUnknownBlockType)arg7;
+ (id)presentMessageDialogWithParams:(id)arg1 clientState:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (id)presentMessageDialogWithPhotos:(id)arg1 handler:(CDUnknownBlockType)arg2;
+ (id)presentMessageDialogWithPhotos:(id)arg1 clientState:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (id)presentMessageDialogWithPhotoParams:(id)arg1 clientState:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (id)presentMessageDialogWithOpenGraphAction:(id)arg1 actionType:(id)arg2 previewPropertyName:(id)arg3 handler:(CDUnknownBlockType)arg4;
+ (id)presentMessageDialogWithOpenGraphAction:(id)arg1 actionType:(id)arg2 previewPropertyName:(id)arg3 clientState:(id)arg4 handler:(CDUnknownBlockType)arg5;
+ (id)presentMessageDialogWithOpenGraphActionParams:(id)arg1 clientState:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (_Bool)canPresentMessageDialogWithPhotos;
+ (_Bool)canPresentMessageDialogWithParams:(id)arg1;
+ (_Bool)canPresentMessageDialogWithOpenGraphActionParams:(id)arg1;
+ (_Bool)canPresentMessageDialog;
+ (id)presentShareDialogWithOpenGraphActionParams:(id)arg1 bridgeScheme:(id)arg2 clientState:(id)arg3 handler:(CDUnknownBlockType)arg4;
+ (id)eventNameForParams:(id)arg1 bridgeScheme:(id)arg2;
+ (id)presentShareDialogWithParams:(id)arg1 bridgeScheme:(id)arg2 clientState:(id)arg3 handler:(CDUnknownBlockType)arg4;
+ (id)presentShareDialogWithOpenGraphAction:(id)arg1 actionType:(id)arg2 previewPropertyName:(id)arg3 clientState:(id)arg4 handler:(CDUnknownBlockType)arg5;
+ (id)presentShareDialogWithOpenGraphAction:(id)arg1 actionType:(id)arg2 previewPropertyName:(id)arg3 handler:(CDUnknownBlockType)arg4;
+ (id)presentShareDialogWithOpenGraphActionParams:(id)arg1 clientState:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (_Bool)canPresentShareDialogWithOpenGraphActionParams:(id)arg1;
+ (id)presentShareDialogWithPhotos:(id)arg1 clientState:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (id)presentShareDialogWithPhotos:(id)arg1 handler:(CDUnknownBlockType)arg2;
+ (id)presentShareDialogWithLink:(id)arg1 name:(id)arg2 caption:(id)arg3 description:(id)arg4 picture:(id)arg5 clientState:(id)arg6 handler:(CDUnknownBlockType)arg7;
+ (id)presentShareDialogWithLink:(id)arg1 name:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (id)presentShareDialogWithLink:(id)arg1 handler:(CDUnknownBlockType)arg2;
+ (id)presentShareDialogWithPhotoParams:(id)arg1 clientState:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (id)presentShareDialogWithParams:(id)arg1 clientState:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (_Bool)canPresentShareDialogWithPhotos;
+ (_Bool)canPresentShareDialogWithParams:(id)arg1;
+ (_Bool)canPresentShareDialog;
+ (_Bool)cancelAppCallBecauseOfRestrictedTreatment:(CDUnknownBlockType)arg1;
+ (_Bool)canPresentOSIntegratedShareDialogWithSession:(id)arg1;
+ (_Bool)canPresentOSIntegratedShareDialog;
+ (_Bool)presentOSIntegratedShareDialogModallyFrom:(id)arg1 session:(id)arg2 initialText:(id)arg3 images:(id)arg4 urls:(id)arg5 handler:(CDUnknownBlockType)arg6;
+ (_Bool)presentOSIntegratedShareDialogModallyFrom:(id)arg1 initialText:(id)arg2 images:(id)arg3 urls:(id)arg4 handler:(CDUnknownBlockType)arg5;
+ (_Bool)presentOSIntegratedShareDialogModallyFrom:(id)arg1 initialText:(id)arg2 image:(id)arg3 url:(id)arg4 handler:(CDUnknownBlockType)arg5;

@end

@interface FBAppBridgeTypeToJSONConverter : NSObject
{
    NSMutableArray *_createdPasteboardNames;
}

+ (id)appBridgeTypeFromJSON:(id)arg1;
@property(retain, nonatomic) NSMutableArray *createdPasteboardNames; // @synthesize createdPasteboardNames=_createdPasteboardNames;
- (id)jsonFromData:(id)arg1 tag:(id)arg2;
- (id)convertedArrayFromArray:(id)arg1 convertingToJSON:(_Bool)arg2;
- (id)convertedDictionaryFromDictionary:(id)arg1 convertingToJSON:(_Bool)arg2;
- (id)convertedObjectFromObject:(id)arg1 convertingToJSON:(_Bool)arg2;
- (id)dictionaryWithAppBridgeTypesFromJSONDictionary:(id)arg1;
- (id)jsonDictionaryFromDictionaryWithAppBridgeTypes:(id)arg1;
- (void)dealloc;

@end

@interface FBGraphObjectTableSelection : NSObject <FBGraphObjectSelectionQueryDelegate, UITableViewDelegate>
{
    _Bool _allowsMultipleSelection;
    NSObject<FBGraphObjectSelectionChangedDelegate> *_delegate;
    NSArray *_selection;
    FBGraphObjectTableDataSource *_dataSource;
}

@property(retain, nonatomic) FBGraphObjectTableDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) _Bool allowsMultipleSelection; // @synthesize allowsMultipleSelection=_allowsMultipleSelection;
@property(retain, nonatomic) NSArray *selection; // @synthesize selection=_selection;
@property(nonatomic) NSObject<FBGraphObjectSelectionChangedDelegate> *delegate; // @synthesize delegate=_delegate;
- (id)description;
- (void)tableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)graphObjectTableDataSource:(id)arg1 selectionIncludesItem:(id)arg2;
- (_Bool)selectionIncludesItem:(id)arg1;
- (void)selectionChanged;
- (void)deselectItems:(id)arg1 tableView:(id)arg2;
- (void)deselectItem:(id)arg1 cell:(id)arg2 raiseSelectionChanged:(_Bool)arg3;
- (void)selectItem:(id)arg1 tableView:(id)arg2;
- (void)selectItem:(id)arg1 cell:(id)arg2 raiseSelectionChanged:(_Bool)arg3;
- (void)clearSelectionInTableView:(id)arg1;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1;

@end

@interface FBWebDialogInternalDelegate : NSObject <FBDialogDelegate>
{
    _Bool _isSelfRetained;
    CDUnknownBlockType _handler;
    FBDialog *_dialog;
    NSString *_dialogMethod;
    NSDictionary *_parameters;
    FBSession *_session;
    id <FBWebDialogsDelegate> _delegate;
}

@property(nonatomic) id <FBWebDialogsDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) FBSession *session; // @synthesize session=_session;
@property(copy, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(copy, nonatomic) NSString *dialogMethod; // @synthesize dialogMethod=_dialogMethod;
@property(retain, nonatomic) FBDialog *dialog; // @synthesize dialog=_dialog;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
- (void)dialog:(id)arg1 didFailWithError:(id)arg2;
- (void)dialogDidNotComplete:(id)arg1;
- (void)dialogDidComplete:(id)arg1;
- (void)dialogDidNotCompleteWithUrl:(id)arg1;
- (void)dialogCompleteWithUrl:(id)arg1;
- (_Bool)dialog:(id)arg1 shouldOpenURLInExternalBrowser:(id)arg2;
- (void)completeWithResult:(unsigned long long)arg1 url:(id)arg2 error:(id)arg3;
- (void)releaseSelfIfNeeded;
- (void)goRetainYourself;
- (void)dealloc;
- (id)init;

@end

@interface FBWebDialogs : NSObject
{
}

+ (void)presentFeedDialogModallyWithSession:(id)arg1 parameters:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (void)presentRequestsDialogModallyWithSession:(id)arg1 message:(id)arg2 title:(id)arg3 parameters:(id)arg4 handler:(CDUnknownBlockType)arg5 friendCache:(id)arg6;
+ (void)presentRequestsDialogModallyWithSession:(id)arg1 message:(id)arg2 title:(id)arg3 parameters:(id)arg4 handler:(CDUnknownBlockType)arg5;
+ (void)presentDialogModallyWithSession:(id)arg1 dialog:(id)arg2 parameters:(id)arg3 handler:(CDUnknownBlockType)arg4 delegate:(id)arg5;
+ (void)presentDialogModallyWithSession:(id)arg1 dialog:(id)arg2 parameters:(id)arg3 handler:(CDUnknownBlockType)arg4;

@end

@interface FBDialogsData : NSObject
{
    NSString *_method;
    NSDictionary *_arguments;
    NSDictionary *_clientState;
    NSDictionary *_results;
}

@property(copy, nonatomic) NSDictionary *results; // @synthesize results=_results;
@property(copy, nonatomic) NSDictionary *clientState; // @synthesize clientState=_clientState;
@property(copy, nonatomic) NSDictionary *arguments; // @synthesize arguments=_arguments;
@property(copy, nonatomic) NSString *method; // @synthesize method=_method;
- (_Bool)isValid;
- (void)dealloc;
- (id)description;
- (id)initWithMethod:(id)arg1 arguments:(id)arg2;

@end

@interface FBOpenGraphActionShareDialogParams : FBOpenGraphActionParams
{
}

@end

@interface FBOpenGraphActionParams : FBDialogsParams
{
    id <FBOpenGraphAction> _action;
    NSString *_previewPropertyName;
    NSString *_actionType;
    FBAppBridgeScheme *_bridgeScheme;
}

+ (id)getIdOrUrlFromObject:(id)arg1;
+ (id)getPostedObjectTypeFromObject:(id)arg1;
+ (id)methodName;
@property(retain, nonatomic) FBAppBridgeScheme *bridgeScheme; // @synthesize bridgeScheme=_bridgeScheme;
@property(copy, nonatomic) NSString *actionType; // @synthesize actionType=_actionType;
@property(copy, nonatomic) NSString *previewPropertyName; // @synthesize previewPropertyName=_previewPropertyName;
@property(retain, nonatomic) id <FBOpenGraphAction> action; // @synthesize action=_action;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)containsUIImages:(id)arg1;
- (id)dictionaryMethodArgs;
- (id)flattenGraphObjects:(id)arg1;
- (id)flattenObject:(id)arg1;
- (id)validate;
- (void)dealloc;
- (id)initWithAction:(id)arg1 actionType:(id)arg2 previewPropertyName:(id)arg3;

@end

@interface FBDataDiskCache : NSObject <FBCacheIndexFileDelegate>
{
    NSCache *_inMemoryCache;
    FBCacheIndex *_cacheIndex;
    NSString *_dataCachePath;
    NSObject<OS_dispatch_queue> *_fileQueue;
}

+ (id)sharedCache;
@property(copy, nonatomic) NSString *dataCachePath; // @synthesize dataCachePath=_dataCachePath;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *fileQueue; // @synthesize fileQueue=_fileQueue;
- (void)setData:(id)arg1 forURL:(id)arg2;
- (void)removeDataForSession:(id)arg1;
- (void)removeDataForUrl:(id)arg1;
- (id)dataForURL:(id)arg1;
- (_Bool)_doesFileExist:(id)arg1;
- (void)cacheIndex:(id)arg1 deleteFileWithName:(id)arg2;
- (void)cacheIndex:(id)arg1 writeFileWithName:(id)arg2 data:(id)arg3;
@property(nonatomic) unsigned long long cacheSizeMemory;
- (void)dealloc;
- (id)init;

@end

@interface FBTask : NSObject
{
    id <NSObject> _result;
    NSError *_error;
    NSException *_exception;
    _Bool _cancelled;
    _Bool _completed;
    NSObject *_lock;
    NSCondition *_condition;
    NSMutableArray *_callbacks;
}

+ (id)taskWithDelay:(unsigned long long)arg1;
+ (id)taskDependentOnTasks:(id)arg1;
+ (id)cancelledTask;
+ (id)taskWithException:(id)arg1;
+ (id)taskWithError:(id)arg1;
+ (id)taskWithResult:(id)arg1;
@property(retain, nonatomic) NSMutableArray *callbacks; // @synthesize callbacks=_callbacks;
@property(nonatomic) _Bool completed; // @synthesize completed=_completed;
@property(retain, nonatomic) NSCondition *condition; // @synthesize condition=_condition;
@property(retain, nonatomic) NSObject *lock; // @synthesize lock=_lock;
- (id)waitForResult:(id *)arg1;
- (void)waitUntilFinished;
- (void)warnOperationOnMainThreadNoOp;
- (void)warnOperationOnMainThread;
- (id)completionTaskWithQueue:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)completionTaskWithBlock:(CDUnknownBlockType)arg1;
- (id)dependentTaskWithBlock:(CDUnknownBlockType)arg1 queue:(id)arg2;
- (id)dependentTaskWithBlock:(CDUnknownBlockType)arg1;
- (void)runContinuations;
- (void)setCompleted;
- (_Bool)isCompleted;
- (_Bool)trySetCancelled;
- (void)cancel;
- (_Bool)isCancelled;
- (_Bool)trySetException:(id)arg1;
- (void)setException:(id)arg1;
- (id)exception;
- (_Bool)trySetError:(id)arg1;
- (void)setError:(id)arg1;
- (id)error;
- (_Bool)trySetResult:(id)arg1;
- (void)setResult:(id)arg1;
- (id)result;
- (void)dealloc;
- (id)init;

@end

@interface FBLikeButton : UIButton
{
    UIImage *_iconImageNormal;
    UIImage *_iconImageSelected;
    UIImageView *_iconImageView;
}

- (void)_updateIconForState;
- (struct CGSize)_sizeWithTitleSize:(struct CGSize)arg1;
- (void)_initializeContent;
- (struct UIEdgeInsets)_contentEdgeInsetsForHeight:(double)arg1;
- (struct UIEdgeInsets)_contentEdgeInsetsForContentHeight:(double)arg1;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (struct CGSize)intrinsicContentSize;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setSelected:(_Bool)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FBGraphObjectTableCell : UITableViewCell
{
    _Bool _boldTitle;
    _Bool _boldTitleSuffix;
    UIImageView *_pictureView;
    UILabel *_titleSuffixLabel;
    UIActivityIndicatorView *_activityIndicator;
}

+ (double)rowHeight;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator=_activityIndicator;
@property(retain, nonatomic) UILabel *titleSuffixLabel; // @synthesize titleSuffixLabel=_titleSuffixLabel;
@property(retain, nonatomic) UIImageView *pictureView; // @synthesize pictureView=_pictureView;
@property(nonatomic) _Bool boldTitleSuffix; // @synthesize boldTitleSuffix=_boldTitleSuffix;
@property(nonatomic) _Bool boldTitle; // @synthesize boldTitle=_boldTitle;
@property(copy, nonatomic) NSString *titleSuffix;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *subtitle;
@property(retain, nonatomic) UIImage *picture;
- (void)createTitleSuffixLabel;
- (void)updateFonts;
- (void)stopAnimatingActivityIndicator;
- (void)startAnimatingActivityIndicator;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface FBFrictionlessRecipientCache : FBCacheDescriptor <FBFrictionlessDialogSupportDelegate, FBWebDialogsDelegate>
{
    _Bool _frictionlessShouldMakeViewInvisible;
    FBFrictionlessRequestSettings *_frictionlessSettings;
}

@property(retain, nonatomic) FBFrictionlessRequestSettings *frictionlessSettings; // @synthesize frictionlessSettings=_frictionlessSettings;
@property(nonatomic) _Bool frictionlessShouldMakeViewInvisible; // @synthesize frictionlessShouldMakeViewInvisible=_frictionlessShouldMakeViewInvisible;
- (void)webDialogsWillPresentDialog:(id)arg1 parameters:(id)arg2 session:(id)arg3;
- (void)prefetchAndCacheForSession:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)prefetchAndCacheForSession:(id)arg1;
- (_Bool)areFrictionlessRecipients:(id)arg1;
- (_Bool)isFrictionlessRecipient:(id)arg1;
@property(copy, nonatomic) NSArray *recipientIDs;
- (void)dealloc;
- (id)init;

@end

@interface FBAppBridgeScheme : NSObject
{
    NSString *_version;
}

+ (id)installedFBNativeAppVersionForMethod:(id)arg1 minVersion:(id)arg2;
+ (id)urlForMethod:(id)arg1 queryParams:(id)arg2 schemeVersion:(id)arg3 version:(id)arg4;
+ (_Bool)isSupportedScheme:(id)arg1;
+ (id)bridgeSchemeForFBMessengerForOpenGraphActionShareDialogParams:(id)arg1;
+ (id)bridgeSchemeForFBMessengerForShareDialogPhotos;
+ (id)bridgeSchemeForFBMessengerForShareDialogParams:(id)arg1;
+ (id)bridgeSchemeForFBAppForLike;
+ (id)bridgeSchemeForFBAppForOpenGraphActionShareDialogParams:(id)arg1;
+ (id)bridgeSchemeForFBAppForShareDialogPhotos;
+ (id)bridgeSchemeForFBAppForShareDialogParams:(id)arg1;
+ (id)bridgeVersions;
+ (id)schemePrefix;
@property(copy, nonatomic) NSString *version; // @synthesize version=_version;
- (id)urlForMethod:(id)arg1 queryParams:(id)arg2;
- (void)dealloc;
- (id)initWithVersion:(id)arg1;

@end

@interface FBCrypto : NSObject
{
    NSData *_encryptionKeyData;
    NSData *_macKeyData;
}

+ (id)randomBytes:(unsigned long long)arg1;
+ (id)makeMasterKey;
- (id)decrypt:(id)arg1 additionalSignedData:(id)arg2;
- (id)encrypt:(id)arg1 additionalDataToSign:(id)arg2;
- (id)_macForIV:(id)arg1 cipherData:(id)arg2 additionalDataToSign:(id)arg3;
- (void)dealloc;
- (id)initWithEncryptionKey:(id)arg1 macKey:(id)arg2;
- (id)initWithMasterKey:(id)arg1;

@end

@interface FBSessionTokenCachingStrategyNoOpInstance : FBSessionTokenCachingStrategy
{
}

- (void)clearToken;
- (id)fetchTokenInformation;
- (void)cacheTokenInformation:(id)arg1;

@end

@interface FBSessionTokenCachingStrategy : NSObject
{
    NSString *_accessTokenInformationKeyName;
    FBKeychainStore *_keychainStore;
}

+ (id)nullCacheInstance;
+ (id)defaultInstance;
+ (_Bool)isValidTokenInformation:(id)arg1;
- (id)fetchFBAccessTokenData;
- (void)cacheFBAccessTokenData:(id)arg1;
- (void)clearToken;
- (id)fetchTokenInformation;
- (void)cacheTokenInformation:(id)arg1;
- (id)userDefaultsKeyForKeychainValidation;
- (id)keychainStore;
- (void)dealloc;
- (id)initWithUserDefaultTokenInformationKeyName:(id)arg1;
- (id)init;

@end

@interface FBLoginDialog : FBDialog
{
    id <FBLoginDialogDelegate> _loginDelegate;
}

@property(nonatomic) id <FBLoginDialogDelegate> loginDelegate; // @synthesize loginDelegate=_loginDelegate;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)dialogDidCancel:(id)arg1;
- (void)dialogDidSucceed:(id)arg1;
- (id)initWithURL:(id)arg1 loginParams:(id)arg2 delegate:(id)arg3;

@end

@interface FBPlacePickerViewController : FBGraphObjectPickerViewController <FBGraphObjectViewControllerDelegate>
{
    _Bool _hasSearchTextChangedSinceLastQuery;
    long long _radiusInMeters;
    long long _resultsLimit;
    NSString *_searchText;
    NSTimer *_searchTextChangedTimer;
    CDStruct_2c43369c _locationCoordinate;
}

+ (id)requestForPlacesSearchAtCoordinate:(CDStruct_2c43369c)arg1 radiusInMeters:(long long)arg2 resultsLimit:(long long)arg3 searchText:(id)arg4 fields:(id)arg5 datasource:(id)arg6 session:(id)arg7;
+ (id)firstRenderLogString;
+ (unsigned long long)graphObjectPagingMode;
+ (id)cacheDescriptorWithLocationCoordinate:(CDStruct_2c43369c)arg1 radiusInMeters:(long long)arg2 searchText:(id)arg3 resultsLimit:(long long)arg4 fieldsForRequest:(id)arg5;
@property(retain, nonatomic) NSTimer *searchTextChangedTimer; // @synthesize searchTextChangedTimer=_searchTextChangedTimer;
@property(copy, nonatomic) NSString *searchText; // @synthesize searchText=_searchText;
@property(nonatomic) long long resultsLimit; // @synthesize resultsLimit=_resultsLimit;
@property(nonatomic) long long radiusInMeters; // @synthesize radiusInMeters=_radiusInMeters;
@property(nonatomic) CDStruct_2c43369c locationCoordinate; // @synthesize locationCoordinate=_locationCoordinate;
- (id)graphObjectTableDataSource:(id)arg1 pictureUrlOfItem:(id)arg2;
- (id)graphObjectTableDataSource:(id)arg1 subtitleOfItem:(id)arg2;
- (id)graphObjectTableDataSource:(id)arg1 titleOfItem:(id)arg2;
- (_Bool)graphObjectTableDataSource:(id)arg1 filterIncludesItem:(id)arg2;
- (void)logAppEvents:(_Bool)arg1;
- (void)searchTextChangedTimerFired:(id)arg1;
- (id)createSearchTextChangedTimer;
- (void)loadDataSkippingRoundTripIfCached:(id)arg1;
- (_Bool)delegateIncludesGraphObject:(id)arg1;
- (void)notifyDelegateOfError:(id)arg1;
- (void)notifyDelegateSelectionDidChange;
- (void)notifyDelegateDataDidChange;
- (void)loadDataThrottledSkippingRoundTripIfCached:(id)arg1;
- (void)configureDataSource:(id)arg1;
- (void)configureUsingCachedDescriptor:(id)arg1;
@property(readonly, retain, nonatomic) id <FBGraphPlace> selection;
- (void)dealloc;
- (void)initializePlacePicker;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;

@end

@interface FBLogger : NSObject
{
    _Bool _isActive;
    unsigned long long _loggerSerialNumber;
    NSString *_loggingBehavior;
    NSMutableString *_internalContents;
}

+ (void)registerStringToReplace:(id)arg1 replaceWith:(id)arg2;
+ (void)registerCurrentTime:(id)arg1 withTag:(id)arg2;
+ (void)singleShotLogEntry:(id)arg1 timestampTag:(id)arg2 formatString:(id)arg3;
+ (void)singleShotLogEntry:(id)arg1 formatString:(id)arg2;
+ (void)singleShotLogEntry:(id)arg1 logEntry:(id)arg2;
+ (unsigned long long)newSerialNumber;
@property(readonly, retain, nonatomic) NSMutableString *internalContents; // @synthesize internalContents=_internalContents;
@property(readonly, nonatomic) _Bool isActive; // @synthesize isActive=_isActive;
@property(readonly, copy, nonatomic) NSString *loggingBehavior; // @synthesize loggingBehavior=_loggingBehavior;
@property(readonly, nonatomic) unsigned long long loggerSerialNumber; // @synthesize loggerSerialNumber=_loggerSerialNumber;
- (void)emitToNSLog;
- (void)appendKey:(id)arg1 value:(id)arg2;
- (void)appendFormat:(id)arg1;
- (void)appendString:(id)arg1;
@property(copy, nonatomic) NSString *contents;
- (void)dealloc;
- (id)initWithLoggingBehavior:(id)arg1;

@end

@interface FBAppCall : NSObject
{
    NSString *_ID;
    NSError *_error;
    FBDialogsData *_dialogData;
    FBAppLinkData *_appLinkData;
    FBAccessTokenData *_accessTokenData;
}

+ (void)openDeferredAppLink:(CDUnknownBlockType)arg1;
+ (void)invokeHandler:(CDUnknownBlockType)arg1 withError:(id)arg2;
+ (_Bool)invokeHandler:(CDUnknownBlockType)arg1 withAccessToken:(id)arg2 appLinkData:(id)arg3;
+ (_Bool)tryOpenSession:(id)arg1 withAccessToken:(id)arg2;
+ (void)handleDidBecomeActiveWithSession:(id)arg1;
+ (void)handleDidBecomeActive;
+ (_Bool)handleOpenURL:(id)arg1 sourceApplication:(id)arg2 withSession:(id)arg3 fallbackHandler:(CDUnknownBlockType)arg4;
+ (_Bool)handleOpenURL:(id)arg1 sourceApplication:(id)arg2 withSession:(id)arg3;
+ (_Bool)handleOpenURL:(id)arg1 sourceApplication:(id)arg2 fallbackHandler:(CDUnknownBlockType)arg3;
+ (_Bool)handleOpenURL:(id)arg1 sourceApplication:(id)arg2;
+ (id)appCallFromURL:(id)arg1;
+ (id)appCallFromApplinkData:(id)arg1 applinkData:(id)arg2 originalQueryParameters:(id)arg3;
+ (id)appCallFromApplinkArgs_v2:(id)arg1 applinkArgs:(id)arg2 createTimeUTC:(id)arg3 originalQueryParameters:(id)arg4;
@property(retain, nonatomic) FBAccessTokenData *accessTokenData; // @synthesize accessTokenData=_accessTokenData;
@property(retain, nonatomic) FBAppLinkData *appLinkData; // @synthesize appLinkData=_appLinkData;
@property(retain, nonatomic) FBDialogsData *dialogData; // @synthesize dialogData=_dialogData;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(copy, nonatomic) NSString *ID; // @synthesize ID=_ID;
- (_Bool)isValid;
- (unsigned long long)hash;
- (_Bool)isEqualToAppCall:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (void)logInboundAppLinkEvent;
- (id)initWithID:(id)arg1 enforceScheme:(_Bool)arg2 appID:(id)arg3 urlSchemeSuffix:(id)arg4;
- (id)init:(_Bool)arg1;
- (id)init;

@end

@interface FBBoltsMeasurementEventListener : NSObject
{
}

+ (id)defaultListener;
- (void)dealloc;
- (void)logFBAppEventForNotification:(id)arg1;

@end

@interface FBAccessTokenData : NSObject <NSCopying>
{
    NSString *_accessToken;
    NSString *_appID;
    NSString *_userID;
    NSArray *_permissions;
    NSArray *_declinedPermissions;
    NSDate *_expirationDate;
    unsigned long long _loginType;
    NSDate *_refreshDate;
    NSDate *_permissionsRefreshDate;
}

+ (id)createTokenFromString:(id)arg1 permissions:(id)arg2 declinedPermissions:(id)arg3 expirationDate:(id)arg4 loginType:(unsigned long long)arg5 refreshDate:(id)arg6 permissionsRefreshDate:(id)arg7 appID:(id)arg8 userID:(id)arg9;
+ (id)createTokenFromString:(id)arg1 permissions:(id)arg2 expirationDate:(id)arg3 loginType:(unsigned long long)arg4 refreshDate:(id)arg5 permissionsRefreshDate:(id)arg6 appID:(id)arg7;
+ (id)createTokenFromString:(id)arg1 permissions:(id)arg2 expirationDate:(id)arg3 loginType:(unsigned long long)arg4 refreshDate:(id)arg5 permissionsRefreshDate:(id)arg6;
+ (id)createTokenFromString:(id)arg1 permissions:(id)arg2 expirationDate:(id)arg3 loginType:(unsigned long long)arg4 refreshDate:(id)arg5;
+ (id)createTokenFromDictionary:(id)arg1;
+ (id)createTokenFromFacebookURL:(id)arg1 appID:(id)arg2 urlSchemeSuffix:(id)arg3;
@property(copy, nonatomic) NSDate *permissionsRefreshDate; // @synthesize permissionsRefreshDate=_permissionsRefreshDate;
@property(copy, nonatomic) NSDate *refreshDate; // @synthesize refreshDate=_refreshDate;
@property(readonly, nonatomic) unsigned long long loginType; // @synthesize loginType=_loginType;
@property(readonly, copy, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
@property(copy, nonatomic) NSArray *declinedPermissions; // @synthesize declinedPermissions=_declinedPermissions;
@property(copy, nonatomic) NSArray *permissions; // @synthesize permissions=_permissions;
@property(copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(copy, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property(readonly, copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
- (id)description;
- (id)dictionary;
- (_Bool)isEqualToAccessTokenData:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithToken:(id)arg1 permissions:(id)arg2 declinedPermissions:(id)arg3 expirationDate:(id)arg4 loginType:(unsigned long long)arg5 refreshDate:(id)arg6 permissionsRefreshDate:(id)arg7 appID:(id)arg8 userID:(id)arg9;

@end

@interface FBShareDialogParams : FBLinkShareParams
{
}

@end

@interface FBLinkShareParams : FBDialogsParams
{
    _Bool _dataFailuresFatal;
    NSURL *_link;
    NSString *_name;
    NSString *_caption;
    NSString *_linkDescription;
    NSURL *_picture;
    NSArray *_friends;
    id _place;
    NSString *_ref;
}

+ (id)methodName;
@property(nonatomic) _Bool dataFailuresFatal; // @synthesize dataFailuresFatal=_dataFailuresFatal;
@property(copy, nonatomic) NSString *ref; // @synthesize ref=_ref;
@property(copy, nonatomic) id place; // @synthesize place=_place;
@property(copy, nonatomic) NSArray *friends; // @synthesize friends=_friends;
@property(copy, nonatomic) NSURL *picture; // @synthesize picture=_picture;
@property(copy, nonatomic) NSString *linkDescription; // @synthesize linkDescription=_linkDescription;
@property(copy, nonatomic) NSString *caption; // @synthesize caption=_caption;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSURL *link; // @synthesize link=_link;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)validate;
- (id)dictionaryMethodArgs;
- (void)dealloc;
- (id)initWithLink:(id)arg1 name:(id)arg2 caption:(id)arg3 description:(id)arg4 picture:(id)arg5;

@end

@interface FBUserSettingsViewController : FBViewController
{
    _Bool _attemptingLogin;
    NSArray *_permissions;
    NSArray *_readPermissions;
    NSArray *_publishPermissions;
    unsigned long long _defaultAudience;
    FBProfilePictureView *_profilePicture;
    UIImageView *_backgroundImageView;
    UILabel *_connectedStateLabel;
    id <FBGraphUser> _me;
    UIButton *_loginLogoutButton;
    NSBundle *_bundle;
    CDUnknownBlockType _sessionStateHandler;
    CDUnknownBlockType _requestHandler;
}

@property(copy, nonatomic) CDUnknownBlockType requestHandler; // @synthesize requestHandler=_requestHandler;
@property(copy, nonatomic) CDUnknownBlockType sessionStateHandler; // @synthesize sessionStateHandler=_sessionStateHandler;
@property(retain, nonatomic) NSBundle *bundle; // @synthesize bundle=_bundle;
@property(nonatomic) _Bool attemptingLogin; // @synthesize attemptingLogin=_attemptingLogin;
@property(retain, nonatomic) UIButton *loginLogoutButton; // @synthesize loginLogoutButton=_loginLogoutButton;
@property(retain, nonatomic) id <FBGraphUser> me; // @synthesize me=_me;
@property(retain, nonatomic) UILabel *connectedStateLabel; // @synthesize connectedStateLabel=_connectedStateLabel;
@property(retain, nonatomic) UIImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
@property(retain, nonatomic) FBProfilePictureView *profilePicture; // @synthesize profilePicture=_profilePicture;
@property(nonatomic) unsigned long long defaultAudience; // @synthesize defaultAudience=_defaultAudience;
@property(copy, nonatomic) NSArray *publishPermissions; // @synthesize publishPermissions=_publishPermissions;
@property(copy, nonatomic) NSArray *readPermissions; // @synthesize readPermissions=_readPermissions;
@property(copy, nonatomic) NSArray *permissions; // @synthesize permissions=_permissions;
- (void)handleActiveSessionStateChanged:(id)arg1;
- (void)loginLogoutButtonPressed:(id)arg1;
- (void)openSession:(_Bool)arg1;
- (void)sessionStateChanged:(id)arg1 state:(unsigned long long)arg2 error:(id)arg3;
- (void)updateControls;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidUnload;
- (void)updateBackgroundImage;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)initializeBlocks;

@end

@interface FBViewController : UIViewController
{
    _Bool _autoDismiss;
    _Bool _dismissAnimated;
    UIBarButtonItem *_cancelButton;
    UIBarButtonItem *_doneButton;
    id <FBViewControllerDelegate> _delegate;
    UIView *_canvasView;
    UINavigationBar *_navigationBar;
    CDUnknownBlockType _handler;
}

@property(nonatomic) _Bool dismissAnimated; // @synthesize dismissAnimated=_dismissAnimated;
@property(nonatomic) _Bool autoDismiss; // @synthesize autoDismiss=_autoDismiss;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(retain, nonatomic) UINavigationBar *navigationBar; // @synthesize navigationBar=_navigationBar;
@property(retain, nonatomic) UIView *canvasView; // @synthesize canvasView=_canvasView;
@property(nonatomic) id <FBViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIBarButtonItem *doneButton; // @synthesize doneButton=_doneButton;
@property(retain, nonatomic) UIBarButtonItem *cancelButton; // @synthesize cancelButton=_cancelButton;
- (void)logAppEvents:(_Bool)arg1;
- (void)doneButtonPressed:(id)arg1;
- (void)cancelButtonPressed:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)updateBarForNavigationMode;
- (void)updateBarForPresentedMode;
- (void)updateBar;
- (struct CGRect)contentBounds;
- (void)presentModallyFromViewController:(id)arg1 animated:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)commonInit;

@end

@interface FBSessionAuthLogger : NSObject
{
    NSString *_ID;
    NSMutableDictionary *_extras;
    FBSession *_session;
    NSString *_authMethod;
}

@property(copy, nonatomic) NSString *authMethod; // @synthesize authMethod=_authMethod;
@property(nonatomic) FBSession *session; // @synthesize session=_session;
@property(retain, nonatomic) NSMutableDictionary *extras; // @synthesize extras=_extras;
@property(copy, nonatomic) NSString *ID; // @synthesize ID=_ID;
- (id)newEventParameters;
- (void)logEndAuthWithResult:(id)arg1 error:(id)arg2;
- (void)logEndAuthMethodWithResult:(id)arg1 error:(id)arg2;
- (void)logStartAuthMethod:(id)arg1;
- (void)logStartAuth;
- (void)logEvent:(id)arg1 result:(id)arg2 error:(id)arg3;
- (void)logEvent:(id)arg1 params:(id)arg2;
- (void)addExtrasForNextEvent:(id)arg1;
- (void)dealloc;
- (id)initWithSession:(id)arg1 ID:(id)arg2 authMethod:(id)arg3;
- (id)initWithSession:(id)arg1;

@end

@interface FBLoginTooltipView : FBTooltipView
{
    _Bool _forceDisplay;
    id <FBLoginTooltipViewDelegate> _delegate;
}

@property(nonatomic) _Bool forceDisplay; // @synthesize forceDisplay=_forceDisplay;
@property(nonatomic) id <FBLoginTooltipViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)presentInView:(id)arg1 withArrowPosition:(struct CGPoint)arg2 direction:(unsigned long long)arg3;
- (id)init;

@end

@interface FBSettings : NSObject
{
}

+ (void)publishInstall:(id)arg1 isAutoPublish:(_Bool)arg2;
+ (void)publishInstall:(id)arg1;
+ (void)setLimitEventAndDataUsage:(_Bool)arg1;
+ (_Bool)limitEventAndDataUsage;
+ (_Bool)isBetaFeatureEnabled:(unsigned long long)arg1;
+ (void)disableBetaFeature:(unsigned long long)arg1;
+ (void)enableBetaFeature:(unsigned long long)arg1;
+ (void)enableBetaFeatures:(unsigned long long)arg1;
+ (void)autoPublishInstallImpl:(id)arg1;
+ (void)autoPublishInstall:(id)arg1;
+ (id)defaultURLSchemeWithAppID:(id)arg1 urlSchemeSuffix:(id)arg2;
+ (void)setShouldAutoPublishInstall:(_Bool)arg1;
+ (_Bool)shouldAutoPublishInstall;
+ (void)setRestrictedTreatment:(unsigned long long)arg1;
+ (unsigned long long)restrictedTreatment;
+ (void)setResourceBundleName:(id)arg1;
+ (id)resourceBundleName;
+ (void)setLoggingBehavior:(id)arg1;
+ (id)loggingBehavior;
+ (void)setFacebookDomainPart:(id)arg1;
+ (id)facebookDomainPart;
+ (void)setDefaultUrlSchemeSuffix:(id)arg1;
+ (id)defaultUrlSchemeSuffix;
+ (void)setdefaultJPEGCompressionQuality:(double)arg1;
+ (double)defaultJPEGCompressionQuality;
+ (void)setDefaultDisplayName:(id)arg1;
+ (id)defaultDisplayName;
+ (void)setDefaultAppID:(id)arg1;
+ (id)defaultAppID;
+ (void)setClientToken:(id)arg1;
+ (id)clientToken;
+ (void)setAppVersion:(id)arg1;
+ (id)appVersion;
+ (id)platformVersion;
+ (void)enablePlatformCompatibility:(_Bool)arg1;
+ (_Bool)isPlatformCompatibilityEnabled;
+ (id)sdkVersion;
+ (void)FBSDKInitializeWithLaunchData:(id)arg1;
+ (void)load;

@end

@interface FBShareDialogPhotoParams : FBPhotoParams
{
}

@end

@interface FBPhotoParams : FBDialogsParams
{
    _Bool _dataFailuresFatal;
    NSArray *_friends;
    id _place;
    NSArray *_photos;
}

+ (id)methodName;
@property(copy, nonatomic) NSArray *photos; // @synthesize photos=_photos;
@property(nonatomic) _Bool dataFailuresFatal; // @synthesize dataFailuresFatal=_dataFailuresFatal;
@property(copy, nonatomic) id place; // @synthesize place=_place;
@property(copy, nonatomic) NSArray *friends; // @synthesize friends=_friends;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)validate;
- (id)dictionaryMethodArgs;
- (void)dealloc;
- (id)initWithPhotos:(id)arg1;

@end

@interface FBSession : NSObject <FBLoginDialogDelegate>
{
    NSString *_urlSchemeSuffix;
    _Bool _isInStateTransition;
    unsigned long long _loginTypeOfPendingOpenUrlCallback;
    unsigned long long _defaultDefaultAudience;
    unsigned long long _loginBehavior;
    NSMutableArray *_declinedPermissions;
    NSArray *_requestedReauthPermissions;
    _Bool _isRepairing;
    unsigned long long _state;
    NSString *_appID;
    FBAccessTokenData *_accessTokenData;
    NSArray *_initializedPermissions;
    unsigned long long _lastRequestedSystemAudience;
    FBSessionTokenCachingStrategy *_tokenCachingStrategy;
    NSDate *_attemptedRefreshDate;
    NSDate *_attemptedPermissionsRefreshDate;
    CDUnknownBlockType _loginHandler;
    CDUnknownBlockType _reauthorizeHandler;
    FBLoginDialog *_loginDialog;
    NSThread *_affinitizedThread;
    FBSessionAppEventsState *_appEventsState;
    FBSessionAuthLogger *_authLogger;
}

+ (id)sdkSurfacedErrorForNativeLoginError:(id)arg1;
+ (id)activeSessionIfOpen;
+ (id)activeSessionIfExists;
+ (_Bool)openActiveSessionWithPermissions:(id)arg1 allowLoginUI:(_Bool)arg2 loginBehavior:(unsigned long long)arg3 isRead:(_Bool)arg4 defaultAudience:(unsigned long long)arg5 completionHandler:(CDUnknownBlockType)arg6;
+ (_Bool)openActiveSessionWithPermissions:(id)arg1 allowLoginUI:(_Bool)arg2 allowSystemAccount:(_Bool)arg3 isRead:(_Bool)arg4 defaultAudience:(unsigned long long)arg5 completionHandler:(CDUnknownBlockType)arg6;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (void)renewSystemCredentials:(CDUnknownBlockType)arg1;
+ (id)defaultUrlSchemeSuffix;
+ (void)setDefaultUrlSchemeSuffix:(id)arg1;
+ (id)defaultAppID;
+ (void)setDefaultAppID:(id)arg1;
+ (id)setActiveSession:(id)arg1 userInfo:(id)arg2;
+ (id)setActiveSession:(id)arg1;
+ (id)activeSession;
+ (_Bool)openActiveSessionWithPublishPermissions:(id)arg1 defaultAudience:(unsigned long long)arg2 allowLoginUI:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (_Bool)openActiveSessionWithReadPermissions:(id)arg1 allowLoginUI:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (_Bool)openActiveSessionWithPermissions:(id)arg1 loginBehavior:(unsigned long long)arg2 isRead:(_Bool)arg3 defaultAudience:(unsigned long long)arg4 completionHandler:(CDUnknownBlockType)arg5;
+ (_Bool)openActiveSessionWithPermissions:(id)arg1 allowLoginUI:(_Bool)arg2 defaultAudience:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (_Bool)openActiveSessionWithPermissions:(id)arg1 allowLoginUI:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (_Bool)openActiveSessionWithAllowLoginUI:(_Bool)arg1;
@property(retain) FBSessionAuthLogger *authLogger; // @synthesize authLogger=_authLogger;
@property(retain) FBSessionAppEventsState *appEventsState; // @synthesize appEventsState=_appEventsState;
@property(retain) NSThread *affinitizedThread; // @synthesize affinitizedThread=_affinitizedThread;
@property(retain) FBLoginDialog *loginDialog; // @synthesize loginDialog=_loginDialog;
@property(copy) CDUnknownBlockType reauthorizeHandler; // @synthesize reauthorizeHandler=_reauthorizeHandler;
@property(copy) CDUnknownBlockType loginHandler; // @synthesize loginHandler=_loginHandler;
@property(copy) NSDate *attemptedPermissionsRefreshDate; // @synthesize attemptedPermissionsRefreshDate=_attemptedPermissionsRefreshDate;
@property(copy) NSDate *attemptedRefreshDate; // @synthesize attemptedRefreshDate=_attemptedRefreshDate;
@property(retain) FBSessionTokenCachingStrategy *tokenCachingStrategy; // @synthesize tokenCachingStrategy=_tokenCachingStrategy;
@property _Bool isRepairing; // @synthesize isRepairing=_isRepairing;
@property unsigned long long lastRequestedSystemAudience; // @synthesize lastRequestedSystemAudience=_lastRequestedSystemAudience;
@property(copy) NSArray *initializedPermissions; // @synthesize initializedPermissions=_initializedPermissions;
@property(copy) FBAccessTokenData *accessTokenData; // @synthesize accessTokenData=_accessTokenData;
@property(copy) NSString *appID; // @synthesize appID=_appID;
@property unsigned long long state; // @synthesize state=_state;
- (id)description;
- (void)closeAndClearTokenInformation:(id)arg1;
- (_Bool)openFromAccessTokenData:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 raiseExceptionIfInvalidState:(_Bool)arg3;
- (id)declinedPermissionsForRequestedPermissions:(id)arg1 grantedPermissions:(id)arg2 declinedPermissions:(id)arg3;
- (id)jsonClientStateWithDictionary:(id)arg1;
- (id)errorLoginFailedWithReason:(id)arg1 errorCode:(id)arg2 innerError:(id)arg3 localizedDescription:(id)arg4;
- (id)errorLoginFailedWithReason:(id)arg1 errorCode:(id)arg2 innerError:(id)arg3;
@property(readonly) NSString *appBaseUrl;
- (void)callReauthorizeHandlerAndClearState:(id)arg1 updateDeclinedPermissions:(_Bool)arg2;
- (void)transitionAndCallHandlerWithState:(unsigned long long)arg1 error:(id)arg2 tokenData:(id)arg3 shouldCache:(_Bool)arg4;
- (void)fbDialogNotLogin:(_Bool)arg1;
- (void)fbDialogLogin:(id)arg1 expirationDate:(id)arg2 params:(id)arg3;
- (void)checkThreadAffinity;
- (void)clearAffinitizedThread;
- (void)handleRefreshPermissions:(id)arg1;
- (_Bool)shouldRefreshPermissions;
- (_Bool)shouldExtendAccessToken;
- (void)refreshAccessToken:(id)arg1 expirationDate:(id)arg2;
- (void)authorizeRequestWasImplicitlyCancelled;
- (void)completeReauthorizeWithAccessToken:(id)arg1 expirationDate:(id)arg2 permissions:(id)arg3 declinedPermissions:(id)arg4;
- (void)repairWithHandler:(CDUnknownBlockType)arg1;
- (void)reauthorizeWithPermissions:(id)arg1 isRead:(_Bool)arg2 behavior:(unsigned long long)arg3 defaultAudience:(unsigned long long)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)validateReauthorizedAccessToken:(id)arg1 expirationDate:(id)arg2;
- (_Bool)handleReauthorize:(id)arg1 accessToken:(id)arg2;
- (_Bool)handleAuthorizationOpen:(id)arg1 accessToken:(id)arg2 loginType:(unsigned long long)arg3;
- (void)authorizeUsingLoginDialog:(id)arg1;
- (_Bool)tryOpenURL:(id)arg1;
- (_Bool)authorizeUsingSafari:(id)arg1;
- (_Bool)authorizeUsingFacebookApplication:(id)arg1;
- (_Bool)isURLSchemeRegistered;
- (void)handleDidCompleteNativeLoginForAppCall:(id)arg1;
- (id)getSystemAccountStoreAdapter;
- (void)authorizeUsingSystemAccountStore:(id)arg1 defaultAudience:(unsigned long long)arg2 isReauthorize:(_Bool)arg3;
- (void)logIntegratedAuthAppEvent:(id)arg1 permissions:(id)arg2;
- (void)setLoginTypeOfPendingOpenUrlCallback:(unsigned long long)arg1;
- (void)retryableAuthorizeWithPermissions:(id)arg1 defaultAudience:(unsigned long long)arg2 integratedAuth:(_Bool)arg3 FBAppAuth:(_Bool)arg4 safariAuth:(_Bool)arg5 fallback:(_Bool)arg6 isReauthorize:(_Bool)arg7 canFetchAppSettings:(_Bool)arg8;
- (void)authorizeWithPermissions:(id)arg1 defaultAudience:(unsigned long long)arg2 integratedAuth:(_Bool)arg3 FBAppAuth:(_Bool)arg4 safariAuth:(_Bool)arg5 fallback:(_Bool)arg6 isReauthorize:(_Bool)arg7 canFetchAppSettings:(_Bool)arg8;
- (void)authorizeWithPermissions:(id)arg1 behavior:(unsigned long long)arg2 defaultAudience:(unsigned long long)arg3 isReauthorize:(_Bool)arg4;
- (_Bool)transitionToState:(unsigned long long)arg1 withAccessTokenData:(id)arg2 shouldCache:(_Bool)arg3;
- (_Bool)hasGranted:(id)arg1;
- (void)setStateChangeHandler:(CDUnknownBlockType)arg1;
@property(copy) NSString *urlSchemeSuffix;
@property(readonly) _Bool isOpen;
- (void)handleDidBecomeActive;
- (_Bool)openFromAccessTokenData:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)handleOpenURL:(id)arg1;
- (_Bool)handleAuthorizationCallbacks:(id)arg1 params:(id)arg2 loginType:(unsigned long long)arg3;
- (void)closeAndClearTokenInformation;
- (void)close;
- (void)refreshPermissionsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)requestNewPublishPermissions:(id)arg1 defaultAudience:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)requestNewReadPermissions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)reauthorizeWithPublishPermissions:(id)arg1 defaultAudience:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)reauthorizeWithReadPermissions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)reauthorizeWithPermissions:(id)arg1 behavior:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)openWithBehavior:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly) unsigned long long loginType;
@property(readonly, copy) NSDate *expirationDate;
@property(readonly, copy) NSString *accessToken;
- (id)refreshDate;
@property(readonly, copy) NSArray *declinedPermissions;
@property(readonly, copy) NSArray *permissions;
- (void)dealloc;
- (_Bool)initializeFromCachedToken:(id)arg1 withPermissions:(id)arg2;
- (id)initWithAppID:(id)arg1 permissions:(id)arg2 defaultAudience:(unsigned long long)arg3 urlSchemeSuffix:(id)arg4 tokenCacheStrategy:(id)arg5;
- (id)initWithAppID:(id)arg1 permissions:(id)arg2 urlSchemeSuffix:(id)arg3 tokenCacheStrategy:(id)arg4;
- (id)initWithPermissions:(id)arg1;
- (id)init;

@end

@interface FBURLConnection : NSObject <NSURLConnectionDataDelegate>
{
    _Bool _skipRoundtripIfCached;
    id <FBURLConnectionDelegate> _delegate;
    NSURLConnection *_connection;
    NSMutableData *_data;
    CDUnknownBlockType _handler;
    NSURLResponse *_response;
    unsigned long long _requestStartTime;
    unsigned long long _loggerSerialNumber;
}

+ (void)initialize;
@property(nonatomic) _Bool skipRoundtripIfCached; // @synthesize skipRoundtripIfCached=_skipRoundtripIfCached;
@property(readonly, nonatomic) unsigned long long loggerSerialNumber; // @synthesize loggerSerialNumber=_loggerSerialNumber;
@property(nonatomic) unsigned long long requestStartTime; // @synthesize requestStartTime=_requestStartTime;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(retain, nonatomic) NSMutableData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) id <FBURLConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (id)getCache;
- (_Bool)isCDNURL:(id)arg1;
- (_Bool)shouldShortCircuitRedirectResponse:(id)arg1;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)cancel;
- (void)dealloc;
- (void)logMessage:(id)arg1;
- (void)invokeHandler:(CDUnknownBlockType)arg1 error:(id)arg2 response:(id)arg3 responseData:(id)arg4;
- (void)logAndInvokeHandler:(CDUnknownBlockType)arg1 cachedData:(id)arg2 forURL:(id)arg3;
- (void)logAndInvokeHandler:(CDUnknownBlockType)arg1 response:(id)arg2 responseData:(id)arg3;
- (void)logAndInvokeHandler:(CDUnknownBlockType)arg1 error:(id)arg2;
- (id)initWithRequest:(id)arg1 skipRoundTripIfCached:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)initWithURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

@interface FBTestSession : FBSession
{
    _Bool _forceAccessTokenRefresh;
    _Bool _disableReauthorize;
    NSString *_appAccessToken;
    NSString *_testUserID;
    NSString *_testUserName;
    NSString *_testAppID;
    NSString *_testAppSecret;
    NSString *_machineUniqueUserTag;
    NSString *_sessionUniqueUserTag;
    unsigned long long _mode;
    NSString *_testAppClientToken;
}

+ (void)deleteUnitTestUser:(id)arg1 accessToken:(id)arg2;
+ (id)sessionForUnitTestingWithPermissions:(id)arg1 mode:(unsigned long long)arg2 sessionUniqueUserTag:(id)arg3;
+ (id)sessionWithPrivateUserWithPermissions:(id)arg1;
+ (id)sessionWithSharedUserWithPermissions:(id)arg1;
+ (id)sessionWithSharedUserWithPermissions:(id)arg1 uniqueUserTag:(id)arg2;
@property(copy) NSString *testAppClientToken; // @synthesize testAppClientToken=_testAppClientToken;
@property unsigned long long mode; // @synthesize mode=_mode;
@property(copy) NSString *sessionUniqueUserTag; // @synthesize sessionUniqueUserTag=_sessionUniqueUserTag;
@property(copy) NSString *machineUniqueUserTag; // @synthesize machineUniqueUserTag=_machineUniqueUserTag;
@property _Bool disableReauthorize; // @synthesize disableReauthorize=_disableReauthorize;
@property(copy) NSString *testAppSecret; // @synthesize testAppSecret=_testAppSecret;
@property(copy) NSString *testAppID; // @synthesize testAppID=_testAppID;
@property(copy) NSString *testUserName; // @synthesize testUserName=_testUserName;
@property(copy) NSString *testUserID; // @synthesize testUserID=_testUserID;
@property(copy) NSString *appAccessToken; // @synthesize appAccessToken=_appAccessToken;
- (_Bool)shouldExtendAccessToken;
- (void)authorizeWithPermissions:(id)arg1 behavior:(unsigned long long)arg2 defaultAudience:(unsigned long long)arg3 isReauthorize:(_Bool)arg4;
- (_Bool)transitionToState:(unsigned long long)arg1 withAccessTokenData:(id)arg2 shouldCache:(_Bool)arg3;
@property _Bool forceAccessTokenRefresh;
- (void)findOrCreateSharedUser;
@property(readonly, copy) NSString *sharedTestUserIdentifier;
- (id)validNameStringFromInteger:(unsigned long long)arg1;
- (void)retrieveTestUsersForApp;
- (void)populateTestUsers:(id)arg1 testAccounts:(id)arg2;
- (void)raiseException:(id)arg1;
- (void)transitionToOpenWithToken:(id)arg1;
- (void)createNewTestUser;
@property(readonly, copy) NSString *permissionsString;
- (void)dealloc;
- (id)initWithAppID:(id)arg1 appSecret:(id)arg2 clientToken:(id)arg3 machineUniqueUserTag:(id)arg4 sessionUniqueUserTag:(id)arg5 mode:(unsigned long long)arg6 permissions:(id)arg7 tokenCachingStrategy:(id)arg8;

@end

@interface FBSessionLoginStrategyParams : NSObject
{
    _Bool _tryIntegratedAuth;
    _Bool _tryFBAppAuth;
    _Bool _trySafariAuth;
    _Bool _tryFallback;
    _Bool _isReauthorize;
    _Bool _canFetchAppSettings;
    unsigned long long _defaultAudience;
    NSArray *_permissions;
    NSMutableDictionary *_webParams;
}

@property(retain, nonatomic) NSMutableDictionary *webParams; // @synthesize webParams=_webParams;
@property _Bool canFetchAppSettings; // @synthesize canFetchAppSettings=_canFetchAppSettings;
@property(retain, nonatomic) NSArray *permissions; // @synthesize permissions=_permissions;
@property unsigned long long defaultAudience; // @synthesize defaultAudience=_defaultAudience;
@property _Bool isReauthorize; // @synthesize isReauthorize=_isReauthorize;
@property _Bool tryFallback; // @synthesize tryFallback=_tryFallback;
@property _Bool trySafariAuth; // @synthesize trySafariAuth=_trySafariAuth;
@property _Bool tryFBAppAuth; // @synthesize tryFBAppAuth=_tryFBAppAuth;
@property _Bool tryIntegratedAuth; // @synthesize tryIntegratedAuth=_tryIntegratedAuth;
- (void)dealloc;

@end

@interface FBSessionSystemLoginStategy : NSObject <FBSessionLoginStrategy>
{
}

@property(readonly, copy) NSString *methodName;
- (_Bool)tryPerformAuthorizeWithParams:(id)arg1 session:(id)arg2 logger:(id)arg3;

@end

@interface FBLikeBoxBorderView : UIView
{
    double _borderCornerRadius;
    double _borderWidth;
    unsigned long long _caretPosition;
    UIView *_contentView;
    UIColor *_fillColor;
    UIColor *_foregroundColor;
}

@property(retain, nonatomic) UIColor *foregroundColor; // @synthesize foregroundColor=_foregroundColor;
@property(retain, nonatomic) UIColor *fillColor; // @synthesize fillColor=_fillColor;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(nonatomic) unsigned long long caretPosition; // @synthesize caretPosition=_caretPosition;
@property(nonatomic) double borderWidth; // @synthesize borderWidth=_borderWidth;
@property(nonatomic) double borderCornerRadius; // @synthesize borderCornerRadius=_borderCornerRadius;
- (void)_initializeContent;
- (struct UIEdgeInsets)_borderInsets;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (struct CGSize)intrinsicContentSize;
@property(readonly, nonatomic) struct UIEdgeInsets contentInsets;
- (void)setBackgroundColor:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FBRequest : NSObject
{
    id <FBRequestDelegate> _delegate;
    NSString *_url;
    NSString *_versionPart;
    NSURLConnection *_connection;
    NSMutableData *_responseText;
    unsigned long long _state;
    NSError *_error;
    _Bool _sessionDidExpire;
    id <FBGraphObject> _graphObject;
    _Bool _canCloseSessionOnError;
    _Bool _skipClientToken;
    NSMutableDictionary *_parameters;
    FBSession *_session;
    NSString *_graphPath;
    NSString *_HTTPMethod;
    NSString *_restMethod;
}

+ (id)requestForUpdateOpenGraphObjectWithId:(id)arg1 graphObject:(id)arg2;
+ (id)requestForUploadStagingResourceWithImage:(id)arg1;
+ (id)requestForUpdateOpenGraphObjectWithId:(id)arg1 title:(id)arg2 image:(id)arg3 url:(id)arg4 description:(id)arg5 objectProperties:(id)arg6;
+ (id)requestForUpdateOpenGraphObject:(id)arg1;
+ (id)requestForPostOpenGraphObjectWithType:(id)arg1 title:(id)arg2 image:(id)arg3 url:(id)arg4 description:(id)arg5 objectProperties:(id)arg6;
+ (id)requestForPostOpenGraphObject:(id)arg1;
+ (id)requestForCustomAudienceThirdPartyID:(id)arg1;
+ (id)requestForPlacesSearchAtCoordinate:(CDStruct_2c43369c)arg1 radiusInMeters:(long long)arg2 resultsLimit:(long long)arg3 searchText:(id)arg4;
+ (id)requestWithGraphPath:(id)arg1 parameters:(id)arg2 HTTPMethod:(id)arg3;
+ (id)requestForPostStatusUpdate:(id)arg1 place:(id)arg2 tags:(id)arg3;
+ (id)requestForPostStatusUpdate:(id)arg1;
+ (id)requestForPostWithGraphPath:(id)arg1 graphObject:(id)arg2;
+ (id)requestForDeleteObject:(id)arg1;
+ (id)requestForGraphPath:(id)arg1;
+ (id)requestForUploadPhoto:(id)arg1;
+ (id)requestForMyFriends;
+ (id)requestForMe;
@property(copy, nonatomic) NSString *restMethod; // @synthesize restMethod=_restMethod;
@property(nonatomic) _Bool skipClientToken; // @synthesize skipClientToken=_skipClientToken;
@property(nonatomic) _Bool canCloseSessionOnError; // @synthesize canCloseSessionOnError=_canCloseSessionOnError;
@property(copy, nonatomic) NSString *HTTPMethod; // @synthesize HTTPMethod=_HTTPMethod;
@property(copy, nonatomic) NSString *graphPath; // @synthesize graphPath=_graphPath;
@property(retain, nonatomic) FBSession *session; // @synthesize session=_session;
@property(readonly, retain, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
- (id)createRequestConnection;
- (void)overrideVersionPartWith:(id)arg1;
@property(readonly) NSString *versionPart;
- (id)startWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) id <FBGraphObject> graphObject;
- (void)dealloc;
- (id)initWithSession:(id)arg1 graphPath:(id)arg2 parameters:(id)arg3 HTTPMethod:(id)arg4;
- (id)initWithSession:(id)arg1 restMethod:(id)arg2 parameters:(id)arg3 HTTPMethod:(id)arg4;
- (id)initForPostWithSession:(id)arg1 graphPath:(id)arg2 graphObject:(id)arg3;
- (id)initWithSession:(id)arg1 graphPath:(id)arg2;
- (id)init;

@end

@interface FBSessionAppSwitchingLoginStategy : NSObject <FBSessionLoginStrategy>
{
    NSString *_methodName;
}

@property(copy) NSString *methodName; // @synthesize methodName=_methodName;
- (_Bool)tryPerformAuthorizeWithParams:(id)arg1 session:(id)arg2 logger:(id)arg3;
- (void)dealloc;
- (id)init;

@end

@interface FBErrorUtility : NSObject
{
}

+ (_Bool)isTransientError:(id)arg1;
+ (id)apiUserMessageForError:(id)arg1;
+ (id)userTitleForError:(id)arg1;
+ (id)innerErrorInfoFromError:(id)arg1;
+ (_Bool)errorIsNetworkError:(id)arg1;
+ (id)jsonDictionaryForError:(id)arg1;
+ (id)fberrorForSystemPasswordChange:(id)arg1;
+ (id)fberrorForRetry:(id)arg1;
+ (void)fberrorGetCodeValueForError:(id)arg1 index:(unsigned long long)arg2 code:(int *)arg3 subcode:(int *)arg4;
+ (_Bool)fberrorIsErrorFromSystemSession:(id)arg1;
+ (long long)fberrorCategoryFromError:(id)arg1 code:(int)arg2 subcode:(int)arg3 returningUserMessage:(id *)arg4 andShouldNotifyUser:(_Bool *)arg5;
+ (id)userMessageForError:(id)arg1;
+ (_Bool)shouldNotifyUserForError:(id)arg1;
+ (long long)errorCategoryForError:(id)arg1;

@end

@interface FBTaskCompletionSource : NSObject
{
    FBTask *_task;
}

+ (id)taskCompletionSource;
@property(retain, nonatomic) FBTask *task; // @synthesize task=_task;
- (_Bool)trySetCancelled;
- (_Bool)trySetException:(id)arg1;
- (_Bool)trySetError:(id)arg1;
- (_Bool)trySetResult:(id)arg1;
- (void)cancel;
- (void)setException:(id)arg1;
- (void)setError:(id)arg1;
- (void)setResult:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FBAppLinkResolver : NSObject <BFAppLinkResolving>
{
    NSMutableDictionary *_cachedLinks;
    long long _userInterfaceIdiom;
}

+ (id)resolver;
@property(nonatomic) long long userInterfaceIdiom; // @synthesize userInterfaceIdiom=_userInterfaceIdiom;
@property(retain, nonatomic) NSMutableDictionary *cachedLinks; // @synthesize cachedLinks=_cachedLinks;
- (id)appLinkFromURLInBackground:(id)arg1;
- (id)appLinksFromURLsInBackground:(id)arg1;
- (void)dealloc;
- (id)initWithUserInterfaceIdiom:(long long)arg1;

@end

@interface FBLoginView : UIView <UIActionSheetDelegate>
{
    _Bool _hasShownTooltipBubble;
    NSArray *_permissions;
    NSArray *_readPermissions;
    NSArray *_publishPermissions;
    unsigned long long _defaultAudience;
    unsigned long long _loginBehavior;
    unsigned long long _tooltipBehavior;
    unsigned long long _tooltipColorStyle;
    id <FBLoginViewDelegate> _delegate;
    UILabel *_label;
    UIButton *_button;
    FBSession *_session;
    FBRequestConnection *_requestConnection;
    id <FBGraphUser> _user;
    CDUnknownBlockType _sessionStateHandler;
    CDUnknownBlockType _requestHandler;
    NSNumber *_lastObservedStateWasOpen;
}

@property(nonatomic) _Bool hasShownTooltipBubble; // @synthesize hasShownTooltipBubble=_hasShownTooltipBubble;
@property(copy) NSNumber *lastObservedStateWasOpen; // @synthesize lastObservedStateWasOpen=_lastObservedStateWasOpen;
@property(copy, nonatomic) CDUnknownBlockType requestHandler; // @synthesize requestHandler=_requestHandler;
@property(copy, nonatomic) CDUnknownBlockType sessionStateHandler; // @synthesize sessionStateHandler=_sessionStateHandler;
@property(retain, nonatomic) id <FBGraphUser> user; // @synthesize user=_user;
@property(retain, nonatomic) FBRequestConnection *requestConnection; // @synthesize requestConnection=_requestConnection;
@property(retain, nonatomic) FBSession *session; // @synthesize session=_session;
@property(retain, nonatomic) UIButton *button; // @synthesize button=_button;
@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
@property(nonatomic) id <FBLoginViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long tooltipColorStyle; // @synthesize tooltipColorStyle=_tooltipColorStyle;
@property(nonatomic) unsigned long long tooltipBehavior; // @synthesize tooltipBehavior=_tooltipBehavior;
@property(nonatomic) unsigned long long loginBehavior; // @synthesize loginBehavior=_loginBehavior;
@property(nonatomic) unsigned long long defaultAudience; // @synthesize defaultAudience=_defaultAudience;
@property(copy, nonatomic) NSArray *publishPermissions; // @synthesize publishPermissions=_publishPermissions;
@property(copy, nonatomic) NSArray *readPermissions; // @synthesize readPermissions=_readPermissions;
@property(copy) NSArray *permissions; // @synthesize permissions=_permissions;
- (void)buttonPressed:(id)arg1;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)handleActiveSessionUnsetNotifications:(id)arg1;
- (void)handleActiveSessionSetNotifications:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unwireViewForSession;
- (void)wireViewForSession:(id)arg1 userInfo:(id)arg2;
- (void)wireViewForSessionWithoutOpening:(id)arg1;
- (void)informDelegateOfError:(id)arg1;
- (void)informDelegate:(_Bool)arg1;
- (void)didMoveToWindow;
- (void)showTooltipIfNeeded;
- (void)fetchMeInfo;
- (void)configureViewForStateLoggedIn:(_Bool)arg1;
- (id)logOutText;
- (id)logInText;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)initialize;
- (void)initializeBlocks;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithPublishPermissions:(id)arg1 defaultAudience:(unsigned long long)arg2;
- (id)initWithReadPermissions:(id)arg1;
- (id)initWithPermissions:(id)arg1;
- (id)init;

@end

@interface FBShadowLabel : UILabel
{
}

- (void)drawTextInRect:(struct CGRect)arg1;

@end

@interface FBSessionFacebookAppWebLoginStategy : NSObject <FBSessionLoginStrategy>
{
}

@property(readonly, copy) NSString *methodName;
- (_Bool)tryPerformAuthorizeWithParams:(id)arg1 session:(id)arg2 logger:(id)arg3;

@end

@interface FBSessionSafariLoginStategy : NSObject <FBSessionLoginStrategy>
{
}

@property(readonly, copy) NSString *methodName;
- (_Bool)tryPerformAuthorizeWithParams:(id)arg1 session:(id)arg2 logger:(id)arg3;

@end

@interface FBAppEvents : NSObject
{
    _Bool _haveOutstandingPersistedData;
    _Bool _explicitEventsLoggedYet;
    _Bool _appSupportsImplicitLogging;
    _Bool _haveFetchedAppSettings;
    unsigned long long _flushBehavior;
    NSString *_loggingOverrideAppID;
    FBSession *_lastSessionLoggedTo;
    NSTimer *_flushTimer;
    NSTimer *_attributionIDRecheckTimer;
    unsigned long long _appSupportsAttributionStatus;
    NSRegularExpression *_eventNameRegex;
    NSMutableSet *_validatedIdentifiers;
    NSMutableDictionary *_appAuthSessions;
    NSMutableDictionary *_anonymousSessions;
}

+ (void)registerAutoResetSourceApplication;
+ (id)getSourceApplication;
+ (void)setSourceApplication:(id)arg1 openURL:(id)arg2;
+ (void)setSourceApplication:(id)arg1 isAppLink:(_Bool)arg2;
+ (id)flushReasonToString:(unsigned long long)arg1;
+ (id)customAudienceThirdPartyIDRequest:(id)arg1;
+ (void)ensureOnMainThread;
+ (id)persistenceFilePath:(id)arg1 directory:(unsigned long long)arg2;
+ (id)persistenceLibraryFilePath:(id)arg1;
+ (id)persistenceDocumentFilePath:(id)arg1;
+ (void)clearPersistedAppEventData;
+ (id)retrievePersistedAppEventData;
+ (void)persistAppEventsData:(id)arg1;
+ (void)logAndNotify:(id)arg1;
+ (void)logAndNotify:(id)arg1 allowLogAsDeveloperError:(_Bool)arg2;
+ (long long)unixTimeNow;
+ (id)unaffinitizedSessionFromToken:(id)arg1 appID:(id)arg2;
+ (id)singleton;
+ (void)flush;
+ (void)setLoggingOverrideAppID:(id)arg1;
+ (id)loggingOverrideAppID;
+ (void)setFlushBehavior:(unsigned long long)arg1;
+ (unsigned long long)flushBehavior;
+ (void)activateApp;
+ (void)setLimitEventUsage:(_Bool)arg1;
+ (_Bool)limitEventUsage;
+ (void)logConversionPixel:(id)arg1 valueOfPixel:(double)arg2 session:(id)arg3;
+ (void)logPurchase:(double)arg1 currency:(id)arg2 parameters:(id)arg3 session:(id)arg4;
+ (void)logPurchase:(double)arg1 currency:(id)arg2 parameters:(id)arg3;
+ (void)logPurchase:(double)arg1 currency:(id)arg2;
+ (void)logImplicitEvent:(id)arg1 valueToSum:(id)arg2 parameters:(id)arg3 session:(id)arg4;
+ (void)logEvent:(id)arg1 valueToSum:(id)arg2 parameters:(id)arg3 session:(id)arg4;
+ (void)logEvent:(id)arg1 valueToSum:(double)arg2 parameters:(id)arg3;
+ (void)logEvent:(id)arg1 parameters:(id)arg2;
+ (void)logEvent:(id)arg1 valueToSum:(double)arg2;
+ (void)logEvent:(id)arg1;
@property(readonly, retain) NSMutableDictionary *anonymousSessions; // @synthesize anonymousSessions=_anonymousSessions;
@property(readonly, retain) NSMutableDictionary *appAuthSessions; // @synthesize appAuthSessions=_appAuthSessions;
@property(retain) NSMutableSet *validatedIdentifiers; // @synthesize validatedIdentifiers=_validatedIdentifiers;
@property(copy) NSRegularExpression *eventNameRegex; // @synthesize eventNameRegex=_eventNameRegex;
@property _Bool haveFetchedAppSettings; // @synthesize haveFetchedAppSettings=_haveFetchedAppSettings;
@property _Bool appSupportsImplicitLogging; // @synthesize appSupportsImplicitLogging=_appSupportsImplicitLogging;
@property unsigned long long appSupportsAttributionStatus; // @synthesize appSupportsAttributionStatus=_appSupportsAttributionStatus;
@property(retain) NSTimer *attributionIDRecheckTimer; // @synthesize attributionIDRecheckTimer=_attributionIDRecheckTimer;
@property(retain) NSTimer *flushTimer; // @synthesize flushTimer=_flushTimer;
@property(retain) FBSession *lastSessionLoggedTo; // @synthesize lastSessionLoggedTo=_lastSessionLoggedTo;
@property _Bool explicitEventsLoggedYet; // @synthesize explicitEventsLoggedYet=_explicitEventsLoggedYet;
@property _Bool haveOutstandingPersistedData; // @synthesize haveOutstandingPersistedData=_haveOutstandingPersistedData;
@property(copy) NSString *loggingOverrideAppID; // @synthesize loggingOverrideAppID=_loggingOverrideAppID;
@property unsigned long long flushBehavior; // @synthesize flushBehavior=_flushBehavior;
- (id)instanceCustomAudienceThirdPartyIDRequest:(id)arg1;
- (void)persistEventDataIfNotInFlight;
- (void)applicationMovingFromActiveStateOrTerminating;
- (_Bool)updateAppEventsStateWithPersistedData:(id)arg1;
- (void)applicationDidBecomeActive;
- (void)attributionIDRecheckTimerFired:(id)arg1;
- (void)flushTimerFired:(id)arg1;
- (void)handleActivitiesPostCompletion:(id)arg1 loggingEntry:(id)arg2 session:(id)arg3;
- (id)sessionToSendRequestTo:(id)arg1;
- (id)appIDToLogEventsWith:(id)arg1;
- (_Bool)doesSessionHaveUserToken:(id)arg1;
- (void)appendAttributionAndAdvertiserIDs:(id)arg1 session:(id)arg2 accessAdvertisingID:(_Bool)arg3;
- (void)flushOnMainQueue:(unsigned long long)arg1 session:(id)arg2;
- (void)flush:(unsigned long long)arg1 session:(id)arg2;
- (void)instanceFlush:(unsigned long long)arg1;
- (void)instanceLogEvent:(id)arg1 valueToSum:(id)arg2 parameters:(id)arg3 isImplicitlyLogged:(_Bool)arg4 session:(id)arg5;
- (_Bool)regexValidateIdentifier:(id)arg1;
- (_Bool)validateIdentifier:(id)arg1;
- (id)init;

@end

@interface FBAppBridge : NSObject
{
    NSMutableDictionary *_pendingAppCalls;
    NSMutableDictionary *_callbacks;
    FBAppBridgeTypeToJSONConverter *_jsonConverter;
    NSString *_appID;
    NSString *_bundleID;
    NSString *_appName;
}

+ (id)errorFromDictionary:(id)arg1;
+ (void)_copyValueForKey:(id)arg1 fromDictionary:(id)arg2 toDictionary:(id)arg3;
+ (id)_coerceValue:(id)arg1;
+ (id)appIconFromBundleInfo:(id)arg1;
+ (id)symmetricKeyAndForceRefresh:(_Bool)arg1;
+ (id)sharedInstance;
@property(copy, nonatomic) NSString *appName; // @synthesize appName=_appName;
@property(copy, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(copy, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property(retain, nonatomic) FBAppBridgeTypeToJSONConverter *jsonConverter; // @synthesize jsonConverter=_jsonConverter;
@property(retain, nonatomic) NSMutableDictionary *callbacks; // @synthesize callbacks=_callbacks;
@property(retain, nonatomic) NSMutableDictionary *pendingAppCalls; // @synthesize pendingAppCalls=_pendingAppCalls;
- (void)deletePasteboardsForAppCallID:(id)arg1;
- (void)savePasteboardNames:(id)arg1 forAppCallID:(id)arg2;
- (id)dictionaryFromJSONString:(id)arg1;
- (id)jsonStringFromDictionary:(id)arg1;
- (void)stopTrackingCallWithID:(id)arg1;
- (void)trackAppCall:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)addAppMetadataToDictionary:(id)arg1;
- (id)decryptUrlQueryParams:(id)arg1 method:(id)arg2 fallbackHandler:(CDUnknownBlockType)arg3;
- (_Bool)processResponse:(id)arg1 method:(id)arg2 session:(id)arg3 fallbackHandler:(CDUnknownBlockType)arg4;
- (void)handleDidBecomeActive;
- (_Bool)handleOpenURL:(id)arg1 sourceApplication:(id)arg2 session:(id)arg3 fallbackHandler:(CDUnknownBlockType)arg4;
- (void)invoke:(CDUnknownBlockType)arg1 forFailedAppCall:(id)arg2 withMessage:(id)arg3;
- (void)performDialogAppCall:(id)arg1 bridgeScheme:(id)arg2 session:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)dispatchDialogAppCall:(id)arg1 bridgeScheme:(id)arg2 session:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;

@end

@interface FBSessionInlineWebViewLoginStategy : NSObject <FBSessionLoginStrategy>
{
}

@property(readonly, copy) NSString *methodName;
- (_Bool)tryPerformAuthorizeWithParams:(id)arg1 session:(id)arg2 logger:(id)arg3;

@end

@interface BFAppLinkTarget : NSObject
{
    NSURL *_URL;
    NSString *_appStoreId;
    NSString *_appName;
}

+ (id)appLinkTargetWithURL:(id)arg1 appStoreId:(id)arg2 appName:(id)arg3;
@property(copy, nonatomic) NSString *appName; // @synthesize appName=_appName;
@property(copy, nonatomic) NSString *appStoreId; // @synthesize appStoreId=_appStoreId;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;

@end

@interface BFTaskCompletionSource : NSObject
{
    BFTask *_task;
}

+ (id)taskCompletionSource;
@property(retain, nonatomic) BFTask *task; // @synthesize task=_task;
- (void).cxx_destruct;
- (_Bool)trySetCancelled;
- (_Bool)trySetException:(id)arg1;
- (_Bool)trySetError:(id)arg1;
- (_Bool)trySetResult:(id)arg1;
- (void)cancel;
- (void)setException:(id)arg1;
- (void)setError:(id)arg1;
- (void)setResult:(id)arg1;
- (id)init;

@end

@interface BFAppLinkReturnToRefererView : UIView
{
    _Bool _closed;
    int _includeStatusBarInSize;
    id <BFAppLinkReturnToRefererViewDelegate> _delegate;
    UIColor *_textColor;
    BFAppLink *_refererAppLink;
    UILabel *_labelView;
    UIButton *_closeButton;
    UITapGestureRecognizer *_insideTapGestureRecognizer;
    UIView *_viewToMoveWithNavController;
}

@property(retain, nonatomic) UIView *viewToMoveWithNavController; // @synthesize viewToMoveWithNavController=_viewToMoveWithNavController;
@property(retain, nonatomic) UITapGestureRecognizer *insideTapGestureRecognizer; // @synthesize insideTapGestureRecognizer=_insideTapGestureRecognizer;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) UILabel *labelView; // @synthesize labelView=_labelView;
@property(nonatomic) _Bool closed; // @synthesize closed=_closed;
@property(nonatomic) int includeStatusBarInSize; // @synthesize includeStatusBarInSize=_includeStatusBarInSize;
@property(retain, nonatomic) BFAppLink *refererAppLink; // @synthesize refererAppLink=_refererAppLink;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(nonatomic) __weak id <BFAppLinkReturnToRefererViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)onTapInside:(id)arg1;
- (void)closeButtonTapped:(id)arg1;
- (_Bool)hasRefererData;
- (id)localizedLabelForReferer:(id)arg1;
- (id)drawCloseButtonImageWithColor:(id)arg1;
- (void)updateColors;
- (void)updateLabelText;
- (double)statusBarHeight;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)initViews;
- (void)commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BFAppLinkReturnToRefererController : NSObject <BFAppLinkReturnToRefererViewDelegate>
{
    BFURL *_lastShownBFUrl;
    NSURL *_lastShownUrl;
    BFAppLinkReturnToRefererView *_view;
    id <BFAppLinkReturnToRefererControllerDelegate> _delegate;
    UINavigationController *_attachedToNavController;
}

@property(retain, nonatomic) UINavigationController *attachedToNavController; // @synthesize attachedToNavController=_attachedToNavController;
@property(nonatomic) __weak id <BFAppLinkReturnToRefererControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)openRefererAppLink:(id)arg1;
- (void)closeViewAnimated:(_Bool)arg1;
- (void)moveNavigationBar;
- (void)orientationDidChange:(id)arg1;
- (void)statusBarFrameDidChange:(id)arg1;
- (void)statusBarFrameWillChange:(id)arg1;
- (void)returnToRefererViewDidTapInsideLink:(id)arg1 link:(id)arg2;
- (void)returnToRefererViewDidTapInsideCloseButton:(id)arg1;
- (void)removeFromNavController;
- (void)showViewForRefererURL:(id)arg1;
- (void)showViewForRefererAppLink:(id)arg1;
@property(retain, nonatomic) BFAppLinkReturnToRefererView *view; // @synthesize view=_view;
- (void)dealloc;
- (id)initForDisplayAboveNavController:(id)arg1;
- (id)init;

@end

@interface BFWebViewAppLinkResolverWebViewDelegate : NSObject <UIWebViewDelegate>
{
    _Bool _hasLoaded;
    CDUnknownBlockType _didFinishLoad;
    CDUnknownBlockType _didFailLoadWithError;
}

@property(nonatomic) _Bool hasLoaded; // @synthesize hasLoaded=_hasLoaded;
@property(copy, nonatomic) CDUnknownBlockType didFailLoadWithError; // @synthesize didFailLoadWithError=_didFailLoadWithError;
@property(copy, nonatomic) CDUnknownBlockType didFinishLoad; // @synthesize didFinishLoad=_didFinishLoad;
- (void).cxx_destruct;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidStartLoad:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg1;

@end

@interface BFWebViewAppLinkResolver : NSObject <BFAppLinkResolving>
{
}

+ (id)sharedInstance;
- (id)appLinkFromALData:(id)arg1 destination:(id)arg2;
- (id)getALDataFromLoadedPage:(id)arg1;
- (id)parseALData:(id)arg1;
- (id)appLinkFromURLInBackground:(id)arg1;
- (id)followRedirects:(id)arg1;

@end

@interface BFTask : NSObject
{
    id _result;
    NSError *_error;
    NSException *_exception;
    _Bool _cancelled;
    _Bool _completed;
    NSObject *_lock;
    NSCondition *_condition;
    NSMutableArray *_callbacks;
}

+ (id)taskFromExecutor:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (id)taskWithDelay:(int)arg1;
+ (id)taskForCompletionOfAllTasks:(id)arg1;
+ (id)cancelledTask;
+ (id)taskWithException:(id)arg1;
+ (id)taskWithError:(id)arg1;
+ (id)taskWithResult:(id)arg1;
@property(retain, nonatomic) NSMutableArray *callbacks; // @synthesize callbacks=_callbacks;
@property(retain, nonatomic) NSCondition *condition; // @synthesize condition=_condition;
@property(retain, nonatomic) NSObject *lock; // @synthesize lock=_lock;
@property(nonatomic, getter=isCompleted) _Bool completed; // @synthesize completed=_completed;
@property(nonatomic, getter=isCancelled) _Bool cancelled; // @synthesize cancelled=_cancelled;
- (void).cxx_destruct;
- (void)waitUntilFinished;
- (void)warnOperationOnMainThread;
- (id)continueWithSuccessBlock:(CDUnknownBlockType)arg1;
- (id)continueWithExecutor:(id)arg1 withSuccessBlock:(CDUnknownBlockType)arg2;
- (id)continueWithBlock:(CDUnknownBlockType)arg1;
- (id)continueWithExecutor:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)runContinuations;
- (void)setCompleted;
- (_Bool)trySetCancelled;
- (void)cancel;
- (_Bool)trySetException:(id)arg1;
- (void)setException:(id)arg1;
@property(readonly, nonatomic) NSException *exception;
- (_Bool)trySetError:(id)arg1;
- (void)setError:(id)arg1;
@property(readonly, nonatomic) NSError *error;
- (_Bool)trySetResult:(id)arg1;
- (void)setResult:(id)arg1;
@property(readonly, nonatomic) id result;
- (id)init;

@end

@interface Bolts : NSObject
{
}

+ (id)version;

@end

@interface BFAppLink : NSObject
{
    _Bool _isBackToReferrer;
    NSURL *_sourceURL;
    NSArray *_targets;
    NSURL *_webURL;
}

+ (id)appLinkWithSourceURL:(id)arg1 targets:(id)arg2 webURL:(id)arg3;
+ (id)appLinkWithSourceURL:(id)arg1 targets:(id)arg2 webURL:(id)arg3 isBackToReferrer:(_Bool)arg4;
@property(nonatomic) _Bool isBackToReferrer; // @synthesize isBackToReferrer=_isBackToReferrer;
@property(retain, nonatomic) NSURL *webURL; // @synthesize webURL=_webURL;
@property(copy, nonatomic) NSArray *targets; // @synthesize targets=_targets;
@property(retain, nonatomic) NSURL *sourceURL; // @synthesize sourceURL=_sourceURL;
- (void).cxx_destruct;
- (id)initWithIsBackToReferrer:(_Bool)arg1;

@end

@interface BFExecutor : NSObject
{
    CDUnknownBlockType _block;
}

+ (id)executorWithOperationQueue:(id)arg1;
+ (id)executorWithDispatchQueue:(id)arg1;
+ (id)executorWithBlock:(CDUnknownBlockType)arg1;
+ (id)mainThreadExecutor;
+ (id)immediateExecutor;
+ (id)defaultExecutor;
@property(copy) CDUnknownBlockType block; // @synthesize block=_block;
- (void).cxx_destruct;
- (void)execute:(CDUnknownBlockType)arg1;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface BFURL : NSObject
{
    NSURL *_targetURL;
    NSDictionary *_targetQueryParameters;
    NSDictionary *_appLinkData;
    NSDictionary *_appLinkExtras;
    BFAppLink *_appLinkReferer;
    NSURL *_inputURL;
    NSDictionary *_inputQueryParameters;
}

+ (id)queryParametersForURL:(id)arg1;
+ (id)decodeURLString:(id)arg1;
+ (id)URLForRenderBackToReferrerBarURL:(id)arg1;
+ (id)URLWithInboundURL:(id)arg1 sourceApplication:(id)arg2;
+ (id)URLWithURL:(id)arg1;
@property(readonly, nonatomic) NSDictionary *inputQueryParameters; // @synthesize inputQueryParameters=_inputQueryParameters;
@property(readonly, nonatomic) NSURL *inputURL; // @synthesize inputURL=_inputURL;
@property(readonly, nonatomic) BFAppLink *appLinkReferer; // @synthesize appLinkReferer=_appLinkReferer;
@property(readonly, nonatomic) NSDictionary *appLinkExtras; // @synthesize appLinkExtras=_appLinkExtras;
@property(readonly, nonatomic) NSDictionary *appLinkData; // @synthesize appLinkData=_appLinkData;
@property(readonly, nonatomic) NSDictionary *targetQueryParameters; // @synthesize targetQueryParameters=_targetQueryParameters;
@property(readonly, nonatomic) NSURL *targetURL; // @synthesize targetURL=_targetURL;
- (void).cxx_destruct;
- (id)initWithURL:(id)arg1 forOpenInboundURL:(_Bool)arg2 sourceApplication:(id)arg3 forRenderBackToReferrerBar:(_Bool)arg4;

@end

@interface BFAppLinkNavigation : NSObject
{
    NSDictionary *_extras;
    NSDictionary *_appLinkData;
    BFAppLink *_appLink;
}

+ (void)setDefaultResolver:(id)arg1;
+ (id)defaultResolver;
+ (long long)navigateToAppLink:(id)arg1 error:(id *)arg2;
+ (id)navigateToURLInBackground:(id)arg1 resolver:(id)arg2;
+ (id)navigateToURLInBackground:(id)arg1;
+ (id)resolveAppLinkInBackground:(id)arg1;
+ (id)resolveAppLinkInBackground:(id)arg1 resolver:(id)arg2;
+ (id)navigationWithAppLink:(id)arg1 extras:(id)arg2 appLinkData:(id)arg3;
@property(retain, nonatomic) BFAppLink *appLink; // @synthesize appLink=_appLink;
@property(copy, nonatomic) NSDictionary *appLinkData; // @synthesize appLinkData=_appLinkData;
@property(copy, nonatomic) NSDictionary *extras; // @synthesize extras=_extras;
- (void).cxx_destruct;
- (void)postAppLinkNavigateEventNotificationWithTargetURL:(id)arg1 error:(id)arg2 type:(long long)arg3;
- (long long)navigate:(id *)arg1;
- (id)appLinkURLWithTargetURL:(id)arg1 error:(id *)arg2;
- (id)stringByEscapingQueryString:(id)arg1;

@end

@interface BFMeasurementEvent : NSObject
{
    NSString *_name;
    NSDictionary *_args;
}

+ (void)postNotificationForEventName:(id)arg1 args:(id)arg2;
- (void).cxx_destruct;
- (id)initEventWithName:(id)arg1 args:(id)arg2;
- (void)postNotification;

@end

@interface ZDKHelpCenterCategory : NSObject
{
    _Bool _outdated;
    NSString *_sid;
    NSString *_name;
    NSString *_categoryDescription;
    long long _position;
}

+ (id)parseCategories:(id)arg1;
+ (id)parseCategory:(id)arg1;
@property(nonatomic) _Bool outdated; // @synthesize outdated=_outdated;
@property(nonatomic) long long position; // @synthesize position=_position;
@property(retain, nonatomic) NSString *categoryDescription; // @synthesize categoryDescription=_categoryDescription;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *sid; // @synthesize sid=_sid;
- (void).cxx_destruct;

@end

@interface ZDKBundleUtils : NSObject
{
}

+ (id)stringsTableName;
+ (id)userDefinedHelpCenterCss;
+ (id)helpCenterCss;
+ (id)pathForFrameworkResource:(id)arg1 ofType:(id)arg2;
+ (id)frameworkStringsBundle;
+ (id)frameworkResourceBundle;

@end

@interface ZDKRequestCommentTableCell : UITableViewCell
{
    ZDKRequestComment *_comment;
    UILabel *_body;
    UILabel *_timestamp;
}

+ (double)cellHeightForComment:(id)arg1 inWidth:(double)arg2;
@property(retain, nonatomic) UILabel *timestamp; // @synthesize timestamp=_timestamp;
@property(retain, nonatomic) UILabel *body; // @synthesize body=_body;
@property(retain, nonatomic) ZDKRequestComment *comment; // @synthesize comment=_comment;
- (void).cxx_destruct;
- (id)dateStringFrom:(id)arg1 andCurrentDate:(id)arg2;
- (void)prepareWithComment:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ZDKAgentCommentTableCell : ZDKRequestCommentTableCell
{
    NSMutableDictionary *_avatarCache;
    UIImageView *_avatar;
    UILabel *_author;
    double _avatarSize;
    UIFont *_agentNameFont;
    UIColor *_agentNameColor;
    UIFont *_bodyFont;
    UIColor *_bodyColor;
    UIFont *_timestampFont;
    UIColor *_timestampColor;
    UIColor *_cellBackground;
}

+ (double)cellHeightForComment:(id)arg1 inWidth:(double)arg2;
@property(retain, nonatomic) UIColor *cellBackground; // @synthesize cellBackground=_cellBackground;
@property(retain, nonatomic) UIColor *timestampColor; // @synthesize timestampColor=_timestampColor;
@property(retain, nonatomic) UIFont *timestampFont; // @synthesize timestampFont=_timestampFont;
@property(retain, nonatomic) UIColor *bodyColor; // @synthesize bodyColor=_bodyColor;
@property(retain, nonatomic) UIFont *bodyFont; // @synthesize bodyFont=_bodyFont;
@property(retain, nonatomic) UIColor *agentNameColor; // @synthesize agentNameColor=_agentNameColor;
@property(retain, nonatomic) UIFont *agentNameFont; // @synthesize agentNameFont=_agentNameFont;
@property(nonatomic) double avatarSize; // @synthesize avatarSize=_avatarSize;
@property(retain, nonatomic) UILabel *author; // @synthesize author=_author;
@property(retain, nonatomic) UIImageView *avatar; // @synthesize avatar=_avatar;
@property(retain, nonatomic) NSMutableDictionary *avatarCache; // @synthesize avatarCache=_avatarCache;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)prepareWithComment:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ZDKEndUserCommentTableCell : ZDKRequestCommentTableCell
{
    UIFont *_bodyFont;
    UIColor *_bodyColor;
    UIFont *_timestampFont;
    UIColor *_timestampColor;
    UIColor *_cellBackground;
}

+ (double)cellHeightForComment:(id)arg1 inWidth:(double)arg2;
@property(retain, nonatomic) UIColor *cellBackground; // @synthesize cellBackground=_cellBackground;
@property(retain, nonatomic) UIColor *timestampColor; // @synthesize timestampColor=_timestampColor;
@property(retain, nonatomic) UIFont *timestampFont; // @synthesize timestampFont=_timestampFont;
@property(retain, nonatomic) UIColor *bodyColor; // @synthesize bodyColor=_bodyColor;
@property(retain, nonatomic) UIFont *bodyFont; // @synthesize bodyFont=_bodyFont;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)prepareWithComment:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ZDKCommentsListLoadingTableCell : UITableViewCell
{
    double _leftInset;
    id <ZDKSpinnerDelegate> _spinner;
    UIColor *_cellBackground;
}

@property(retain, nonatomic) UIColor *cellBackground; // @synthesize cellBackground=_cellBackground;
@property(retain, nonatomic) id <ZDKSpinnerDelegate> spinner; // @synthesize spinner=_spinner;
@property(nonatomic) double leftInset; // @synthesize leftInset=_leftInset;
- (void).cxx_destruct;
- (void)dealloc;
- (void)layoutSubviews;
- (double)insetInContentView;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ZDKRequestComment : ZDKModelObject
{
    NSNumber *_commentId;
    NSString *_body;
    NSNumber *_authorId;
    NSArray *_attachments;
    NSDate *_createdAt;
}

@property(retain, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(retain, nonatomic) NSArray *attachments; // @synthesize attachments=_attachments;
@property(retain, nonatomic) NSNumber *authorId; // @synthesize authorId=_authorId;
@property(retain, nonatomic) NSString *body; // @synthesize body=_body;
@property(retain, nonatomic) NSNumber *commentId; // @synthesize commentId=_commentId;
- (void).cxx_destruct;
- (id)description;
- (id)initWithAccount:(id)arg1 dispatcher:(id)arg2 andDict:(id)arg3;

@end

@interface ZDKRMADataObject : NSObject
{
    long long chosenZDKRMAAction;
    NSString *requestText;
    NSNumber *visitCount;
    NSString *appVersion;
    NSDate *dateOfActionChosen;
    NSDate *initialCheckDate;
}

+ (id)currentAppBuild;
+ (id)currentAppVersion;
@property(retain, nonatomic) NSDate *initialCheckDate; // @synthesize initialCheckDate;
@property(retain, nonatomic) NSDate *dateOfActionChosen; // @synthesize dateOfActionChosen;
@property(retain, nonatomic) NSString *appVersion; // @synthesize appVersion;
@property(retain, nonatomic) NSNumber *visitCount; // @synthesize visitCount;
@property(retain, nonatomic) NSString *requestText; // @synthesize requestText;
@property(nonatomic) long long chosenZDKRMAAction; // @synthesize chosenZDKRMAAction;
- (void).cxx_destruct;
- (void)storeChosenAction:(long long)arg1;
- (id)init;

@end

@interface ZDKHelpCenterSettings : NSObject
{
    _Bool _enabled;
    NSString *_locale;
}

@property(readonly, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(readonly, nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (void)parseDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface ZDKHelpCenterAttachment : NSObject
{
    _Bool _isInline;
    NSString *_sid;
    NSString *_url;
    NSString *_article_id;
    NSString *_file_name;
    NSString *_content_url;
    NSString *_content_type;
    unsigned long long _size;
}

+ (id)parseAttachments:(id)arg1;
+ (id)parseAttachment:(id)arg1;
@property(nonatomic) _Bool isInline; // @synthesize isInline=_isInline;
@property(nonatomic) unsigned long long size; // @synthesize size=_size;
@property(retain, nonatomic) NSString *content_type; // @synthesize content_type=_content_type;
@property(retain, nonatomic) NSString *content_url; // @synthesize content_url=_content_url;
@property(retain, nonatomic) NSString *file_name; // @synthesize file_name=_file_name;
@property(retain, nonatomic) NSString *article_id; // @synthesize article_id=_article_id;
@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(retain, nonatomic) NSString *sid; // @synthesize sid=_sid;
- (void).cxx_destruct;

@end

@interface ZDKRMADialogViewController : ZDKUIViewController <ZDKRMADialogViewDelegate, ZDKRMAFeedbackViewDelegate>
{
    unsigned long long animationCurve;
    double animationDuration;
    struct CGRect keyboardBounds;
    ZDKRMADialogView *dialog;
    ZDKRMAFeedbackView *feedbackView;
    UIView *background;
}

@property(retain, nonatomic) UIView *background; // @synthesize background;
@property(retain, nonatomic) ZDKRMAFeedbackView *feedbackView; // @synthesize feedbackView;
@property(retain, nonatomic) ZDKRMADialogView *dialog; // @synthesize dialog;
- (void).cxx_destruct;
- (void)dealloc;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)postChosenAction:(long long)arg1;
- (void)closeDialog;
- (void)sendFeedback:(id)arg1;
- (void)back;
- (void)neverShowDialogAgain;
- (void)showFeedbackView;
- (void)rateApp;
- (void)applyKeyboardTranslation:(double)arg1;
- (void)moveFeedbackViewUpWithKeyboard;
- (void)moveFeedbackViewDownWithKeyboard;
- (void)updateAnimationValuesFromUserInfo:(id)arg1;
- (void)keyboardDidHide:(id)arg1;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)registerForNotifications;
- (void)dismissFeedbackTransition;
- (void)displayFeedbackTransition;
- (void)dismissDialogTransition;
- (void)displayDialogTransition;
- (void)dismissRMATransition;
- (void)displayRMATransition;
- (void)performAnimationWithDuration:(double)arg1 options:(unsigned long long)arg2 animations:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)dismissFeedback;
- (void)displayFeedback;
- (void)dismissDialog;
- (void)displayDialog;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithConfig:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKSupportViewController : ZDKUIViewController <UIScrollViewDelegate, UISearchBarDelegate>
{
    ZDKSupportView *_supportView;
    ZDKHelpCenterDataSource *_dataSource;
    ZDKHelpCenterDataSource *_searchDataSource;
    ZDKHelpCenterTableDelegate *_hcDelegate;
    ZDKHelpCenterSearchResultTableDelegate *_searchDelegate;
    UISearchBar *_searchField;
}

@property(retain, nonatomic) UISearchBar *searchField; // @synthesize searchField=_searchField;
@property(retain, nonatomic) ZDKHelpCenterSearchResultTableDelegate *searchDelegate; // @synthesize searchDelegate=_searchDelegate;
@property(retain, nonatomic) ZDKHelpCenterTableDelegate *hcDelegate; // @synthesize hcDelegate=_hcDelegate;
@property(retain, nonatomic) ZDKHelpCenterDataSource *searchDataSource; // @synthesize searchDataSource=_searchDataSource;
@property(retain, nonatomic) ZDKHelpCenterDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) ZDKSupportView *supportView; // @synthesize supportView=_supportView;
- (void).cxx_destruct;
- (void)showContact;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)setupAndStartSearch:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)layoutContent;
- (void)viewWillLayoutSubviews;
- (void)showRetryToast:(id)arg1;
- (id)buttonTextForNotificationObject:(id)arg1;
- (id)messageForNotificationObject:(id)arg1;
- (void)pushArticle:(id)arg1;
- (void)pushSection:(id)arg1;
- (void)pushCategory:(id)arg1;
- (_Bool)isReachable;
- (void)reloadIfPossible:(id)arg1;
- (void)registerForNotifications;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithSection:(id)arg1;
- (id)initWithCategory:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKRMAConfigObject : NSObject <NSCopying>
{
    _Bool _enabled;
    NSNumber *minimumDays;
    NSNumber *minimumVisits;
    NSString *itunesAppId;
    NSArray *dialogActions;
    NSNumber *displayDelay;
    CDUnknownBlockType shouldShowBlock;
    NSArray *additionalTags;
    NSString *additionalRequestInfo;
    CDUnknownBlockType sendFeedbackBlock;
    NSString *successImageName;
    NSString *errorImageName;
    NSArray *_serverConfigTags;
}

+ (long long)daysBetweenDate:(id)arg1 andDate:(id)arg2;
+ (id)arrayWithZDKRMAActions:(long long)arg1;
@property(retain, nonatomic) NSArray *serverConfigTags; // @synthesize serverConfigTags=_serverConfigTags;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(retain, nonatomic) NSString *errorImageName; // @synthesize errorImageName;
@property(retain, nonatomic) NSString *successImageName; // @synthesize successImageName;
@property(copy, nonatomic) CDUnknownBlockType sendFeedbackBlock; // @synthesize sendFeedbackBlock;
@property(retain, nonatomic) NSString *additionalRequestInfo; // @synthesize additionalRequestInfo;
@property(retain, nonatomic) NSArray *additionalTags; // @synthesize additionalTags;
@property(copy, nonatomic) CDUnknownBlockType shouldShowBlock; // @synthesize shouldShowBlock;
@property(retain, nonatomic) NSNumber *displayDelay; // @synthesize displayDelay;
@property(retain, nonatomic) NSArray *dialogActions; // @synthesize dialogActions;
@property(retain, nonatomic) NSNumber *minimumVisits; // @synthesize minimumVisits;
@property(retain, nonatomic) NSNumber *minimumDays; // @synthesize minimumDays;
- (void).cxx_destruct;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setConfig;
- (void)registerForNotifications;
@property(retain, nonatomic) NSString *itunesAppId; // @synthesize itunesAppId;
- (id)tagList;
- (void)setErrorImageNmae:(id)arg1;
- (void)setSuccessImageNmae:(id)arg1;
- (id)contentSeperator;
- (void)setDefaultShouldShowBlock;
- (void)setDefaultSendFeedbackBlock;
- (id)init;

@end

@interface ZDKCreateRequestView : UIView <UIAppearanceContainer>
{
    ZDKUITextView *_textView;
    UITextField *_emailTextView;
    UIView *_seperatorView;
    UIColor *_placeholderTextColor;
    UIColor *_textEntryColor;
    UIColor *_textEntryBackgroundColor;
    UIColor *_viewBackgroundColor;
    UIFont *_textEntryFont;
    id <ZDKSpinnerDelegate> _spinner;
    UIColor *_separatorBackgroundColor;
    UIFont *_emailEntryFont;
    UIColor *_emailEntryTextColor;
    UIColor *_emailEntryBackgroundColor;
    long long _automaticallyHideNavBarOnLandscape;
}

@property(nonatomic) long long automaticallyHideNavBarOnLandscape; // @synthesize automaticallyHideNavBarOnLandscape=_automaticallyHideNavBarOnLandscape;
@property(retain, nonatomic) UIColor *emailEntryBackgroundColor; // @synthesize emailEntryBackgroundColor=_emailEntryBackgroundColor;
@property(retain, nonatomic) UIColor *emailEntryTextColor; // @synthesize emailEntryTextColor=_emailEntryTextColor;
@property(retain, nonatomic) UIFont *emailEntryFont; // @synthesize emailEntryFont=_emailEntryFont;
@property(retain, nonatomic) UIColor *separatorBackgroundColor; // @synthesize separatorBackgroundColor=_separatorBackgroundColor;
@property(retain, nonatomic) id <ZDKSpinnerDelegate> spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UIFont *textEntryFont; // @synthesize textEntryFont=_textEntryFont;
@property(retain, nonatomic) UIColor *viewBackgroundColor; // @synthesize viewBackgroundColor=_viewBackgroundColor;
@property(retain, nonatomic) UIColor *textEntryBackgroundColor; // @synthesize textEntryBackgroundColor=_textEntryBackgroundColor;
@property(retain, nonatomic) UIColor *textEntryColor; // @synthesize textEntryColor=_textEntryColor;
@property(retain, nonatomic) UIColor *placeholderTextColor; // @synthesize placeholderTextColor=_placeholderTextColor;
@property(retain, nonatomic) UIView *seperatorView; // @synthesize seperatorView=_seperatorView;
@property(retain, nonatomic) UITextField *emailTextView; // @synthesize emailTextView=_emailTextView;
@property(retain, nonatomic) ZDKUITextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)setSeperatorColor:(id)arg1;
- (void)setupViewAppearance;
- (void)initSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKRequestContainer : ZDKModelObject
{
    ZDKUserContainer *_users;
    NSArray *_requests;
}

@property(retain, nonatomic) NSArray *requests; // @synthesize requests=_requests;
@property(retain, nonatomic) ZDKUserContainer *users; // @synthesize users=_users;
- (void).cxx_destruct;
- (void)dealloc;
- (id)description;
- (void)clear;
- (void)parseData:(id)arg1;
- (void)refresh:(CDUnknownBlockType)arg1 onError:(CDUnknownBlockType)arg2;
- (id)initWithAccount:(id)arg1 dispatcher:(id)arg2 andUserCache:(id)arg3;

@end

@interface ZDKReachability : NSObject
{
    _Bool _alwaysReturnLocalWiFiStatus;
    struct __SCNetworkReachability *_reachabilityRef;
}

+ (id)reachabilityForLocalWiFi;
+ (id)reachabilityForInternetConnection;
+ (id)reachabilityWithAddress:(const struct sockaddr_in *)arg1;
+ (id)reachabilityWithHostName:(id)arg1;
- (unsigned long long)currentReachabilityStatus;
- (_Bool)connectionRequired;
- (unsigned long long)networkStatusForFlags:(unsigned int)arg1;
- (unsigned long long)localWiFiStatusForFlags:(unsigned int)arg1;
- (void)dealloc;
- (void)stopNotifier;
- (_Bool)startNotifier;

@end

@interface ZDKHelpCenterSection : NSObject
{
    _Bool _outdated;
    NSString *_sid;
    NSString *_category_id;
    NSString *_name;
    NSString *_sectionDescription;
    long long _position;
}

+ (id)parseSections:(id)arg1;
+ (id)parseSection:(id)arg1;
@property(nonatomic) _Bool outdated; // @synthesize outdated=_outdated;
@property(nonatomic) long long position; // @synthesize position=_position;
@property(retain, nonatomic) NSString *sectionDescription; // @synthesize sectionDescription=_sectionDescription;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *category_id; // @synthesize category_id=_category_id;
@property(retain, nonatomic) NSString *sid; // @synthesize sid=_sid;
- (void).cxx_destruct;

@end

@interface ZDKUser : ZDKModelObject
{
    _Bool _isAgent;
    NSNumber *_userId;
    NSString *_name;
    NSString *_avatarURL;
}

@property(nonatomic) _Bool isAgent; // @synthesize isAgent=_isAgent;
@property(retain, nonatomic) NSString *avatarURL; // @synthesize avatarURL=_avatarURL;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSNumber *userId; // @synthesize userId=_userId;
- (void).cxx_destruct;
- (void)getAvatar:(CDUnknownBlockType)arg1 onError:(CDUnknownBlockType)arg2;
- (id)description;
- (id)dataToPersist;
- (void)parseStoredData:(id)arg1;
- (void)updateWithDict:(id)arg1;

@end

@interface ZDKRequestCommentsViewController : ZDKUIViewController
{
    unsigned long long animationCurve;
    double animationDuration;
    double keyboardHeight;
    ZDKRequest *_request;
    ZDKRequestCommentsView *_commentsView;
}

@property(retain, nonatomic) ZDKRequestCommentsView *commentsView; // @synthesize commentsView=_commentsView;
@property(retain, nonatomic) ZDKRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)updateAnimationValuesFromUserInfo:(id)arg1;
- (void)keyboardWillBeHidden:(id)arg1;
- (void)keyboardWillBeShown:(id)arg1;
- (void)displayToastWithMessage:(id)arg1 buttonAction:(CDUnknownBlockType)arg2 buttonText:(id)arg3 andDuration:(double)arg4;
- (_Bool)shouldRetry:(id)arg1;
- (void)submissionError:(id)arg1;
- (void)failedToGetComments:(id)arg1;
- (void)resetToast:(id)arg1;
- (void)registerForErrorNotifications;
- (void)viewDidLoad;
- (id)initWithRequest:(id)arg1;

@end

@interface ZDKHelpCenterSearchResultCell : UITableViewCell
{
    UILabel *_articleParents;
    UILabel *_title;
}

+ (id)cellIdentifier;
@property(retain, nonatomic) UILabel *title; // @synthesize title=_title;
@property(retain, nonatomic) UILabel *articleParents; // @synthesize articleParents=_articleParents;
- (void).cxx_destruct;
- (double)totalPaddingHeight;
- (double)totalPaddingWidth;
- (double)lineHeightForLabel:(id)arg1 andWidth:(double)arg2;
- (double)cellHeightForWidth:(double)arg1;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ZDKRequestListTable : UITableView <UITableViewDataSource, UITableViewDelegate, ZDRequestListRetryDelegate>
{
    _Bool _refreshError;
    _Bool _loadingInProgress;
    _Bool _blockTouches;
    NSArray *_requests;
    NSString *_errorString;
    UIColor *_cellSeparatorColor;
    UIColor *_tableBackgroundColor;
}

@property(nonatomic) _Bool blockTouches; // @synthesize blockTouches=_blockTouches;
@property(retain, nonatomic) UIColor *tableBackgroundColor; // @synthesize tableBackgroundColor=_tableBackgroundColor;
@property(retain, nonatomic) UIColor *cellSeparatorColor; // @synthesize cellSeparatorColor=_cellSeparatorColor;
@property(nonatomic) _Bool loadingInProgress; // @synthesize loadingInProgress=_loadingInProgress;
@property(retain, nonatomic) NSString *errorString; // @synthesize errorString=_errorString;
@property(nonatomic) _Bool refreshError; // @synthesize refreshError=_refreshError;
@property(retain, nonatomic) NSArray *requests; // @synthesize requests=_requests;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)unregisterForEvents:(id)arg1;
- (void)registerForEvents:(id)arg1 withSelector:(SEL)arg2;
- (double)cellHeight;
- (double)tableHeight;
- (void)finishedLoad;
- (void)setupRequestsArray;
- (void)refresh;
- (void)disableInteraction:(id)arg1;
- (void)registerForConnectivity;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKHelpCenterSectionProvider : ZDKHelpCenterProvider
{
}

+ (id)sectionsURL:(id)arg1;
+ (void)items:(CDUnknownBlockType)arg1 parent:(id)arg2;

@end

@interface ZDKRMATableHeaderView : UIView
{
    UILabel *_textLabel;
}

@property(retain, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 andTitle:(id)arg2;

@end

@interface ZDKRMADialogViewCell : UITableViewCell
{
    UIColor *_bgColor;
    UIColor *_selectedBgColor;
}

@property(retain, nonatomic) UIColor *selectedBgColor; // @synthesize selectedBgColor=_selectedBgColor;
@property(retain, nonatomic) UIColor *bgColor; // @synthesize bgColor=_bgColor;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 separatorColor:(id)arg3 backgroundColor:(id)arg4 selectedBackgroundColor:(id)arg5;

@end

@interface ZDKRMADialogView : UITableView <UITableViewDataSource, UITableViewDelegate>
{
    id <ZDKRMADialogViewDelegate> delegate;
    ZDKRMATableHeaderView *header;
    NSArray *rows;
    UIColor *_headerBackgroundColor;
    UIColor *_headerColor;
    UIColor *_separatorLineColor;
    UIColor *_buttonBackgroundColor;
    UIColor *_buttonSelectedBackgroundColor;
    UIColor *_buttonColor;
    UIFont *_headerFont;
    UIFont *_buttonFont;
}

@property(retain, nonatomic) UIFont *buttonFont; // @synthesize buttonFont=_buttonFont;
@property(retain, nonatomic) UIFont *headerFont; // @synthesize headerFont=_headerFont;
@property(retain, nonatomic) UIColor *buttonColor; // @synthesize buttonColor=_buttonColor;
@property(retain, nonatomic) UIColor *buttonSelectedBackgroundColor; // @synthesize buttonSelectedBackgroundColor=_buttonSelectedBackgroundColor;
@property(retain, nonatomic) UIColor *buttonBackgroundColor; // @synthesize buttonBackgroundColor=_buttonBackgroundColor;
@property(retain, nonatomic) UIColor *separatorLineColor; // @synthesize separatorLineColor=_separatorLineColor;
@property(retain, nonatomic) UIColor *headerColor; // @synthesize headerColor=_headerColor;
@property(retain, nonatomic) UIColor *headerBackgroundColor; // @synthesize headerBackgroundColor=_headerBackgroundColor;
@property(retain, nonatomic) NSArray *rows; // @synthesize rows;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)dealloc;
- (void)configCell:(long long)arg1 cell:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2 delegate:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1 delegate:(id)arg2;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKHelpCenterAttachmentProvider : ZDKHelpCenterProvider
{
}

+ (id)attachmentsURL:(id)arg1;
+ (void)items:(CDUnknownBlockType)arg1 parent:(id)arg2;

@end

@interface ZDKModelObject : NSObject
{
    ZDKAccount *_account;
    ZDKDispatcher *_dispatcher;
}

+ (id)dateFormatterDict;
+ (id)formatterForFormat:(id)arg1;
+ (id)stringFromDate:(id)arg1 usingFormat:(id)arg2;
+ (id)dateFromString:(id)arg1 usingFormat:(id)arg2;
+ (id)dateForJsonString:(id)arg1;
+ (id)dateFromNumber:(id)arg1;
+ (id)dateAsNumber:(id)arg1;
+ (void)setObject:(id)arg1 withKey:(id)arg2 inDictionary:(id)arg3;
+ (id)cleanJSONVal:(id)arg1;
+ (id)cleanJSONVal:(id)arg1 key:(id)arg2;
@property(retain, nonatomic) ZDKDispatcher *dispatcher; // @synthesize dispatcher=_dispatcher;
@property(retain, nonatomic) ZDKAccount *account; // @synthesize account=_account;
- (void).cxx_destruct;
- (id)dataToPersist;
- (void)parseStoredData:(id)arg1;
- (id)initWithAccount:(id)arg1 dispatcher:(id)arg2;

@end

@interface ZDKArticleViewController : ZDKUIViewController
{
    ZDKArticleView *_articleView;
    ZDKHelpCenterDataSource *_dataSource;
}

@property(retain, nonatomic) ZDKHelpCenterDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) ZDKArticleView *articleView; // @synthesize articleView=_articleView;
- (void).cxx_destruct;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)layoutContent;
- (void)viewWillLayoutSubviews;
- (void)showRetryToast:(id)arg1;
- (void)reloadIfPossible:(id)arg1;
- (void)registerForNotifications;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithArticle:(id)arg1;

@end

@interface ZDKRMAFeedbackView : UIView <UITextViewDelegate>
{
    id <ZDKRMAFeedbackViewDelegate> delegate;
    struct CGRect feedbackFrame;
    struct CGRect headerFrame;
    struct CGRect bodyFrame;
    struct CGRect footerFrame;
    struct CGRect leftButtonFrame;
    struct CGRect rightButtonFrame;
    struct CGRect imageContainerFrame;
    UIView *greyButtonBackground;
    UIView *topSeparator;
    UIView *bottomSeparator;
    UIButton *backButton;
    UIButton *submitButton;
    UIButton *closeButton;
    ZDKUITextView *textView;
    UILabel *titleLabel;
    UILabel *detailTitleLabel;
    UIView *imageContainerView;
    UIImageView *submissionStatusImageView;
    long long feedbackState;
    NSString *successImageName;
    NSString *errorImageName;
    UIColor *_buttonColor;
    UIColor *_buttonSelectedColor;
    UIColor *_buttonBackgroundColor;
    UIColor *_separatorLineColor;
    UIFont *_headerFont;
    UIFont *_subheaderFont;
    UIFont *_textEntryFont;
    UIFont *_buttonFont;
    id <ZDKSpinnerDelegate> _spinner;
}

@property(retain, nonatomic) id <ZDKSpinnerDelegate> spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UIFont *buttonFont; // @synthesize buttonFont=_buttonFont;
@property(retain, nonatomic) UIFont *textEntryFont; // @synthesize textEntryFont=_textEntryFont;
@property(retain, nonatomic) UIFont *subheaderFont; // @synthesize subheaderFont=_subheaderFont;
@property(retain, nonatomic) UIFont *headerFont; // @synthesize headerFont=_headerFont;
@property(retain, nonatomic) UIColor *separatorLineColor; // @synthesize separatorLineColor=_separatorLineColor;
@property(retain, nonatomic) UIColor *buttonBackgroundColor; // @synthesize buttonBackgroundColor=_buttonBackgroundColor;
@property(retain, nonatomic) UIColor *buttonSelectedColor; // @synthesize buttonSelectedColor=_buttonSelectedColor;
@property(retain, nonatomic) UIColor *buttonColor; // @synthesize buttonColor=_buttonColor;
@property(retain, nonatomic) NSString *errorImageName; // @synthesize errorImageName;
@property(retain, nonatomic) NSString *successImageName; // @synthesize successImageName;
@property(nonatomic) long long feedbackState; // @synthesize feedbackState;
@property(retain, nonatomic) UIImageView *submissionStatusImageView; // @synthesize submissionStatusImageView;
@property(retain, nonatomic) UIView *imageContainerView; // @synthesize imageContainerView;
@property(retain, nonatomic) UILabel *detailTitleLabel; // @synthesize detailTitleLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel;
@property(retain, nonatomic) ZDKUITextView *textView; // @synthesize textView;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton;
@property(retain, nonatomic) UIButton *submitButton; // @synthesize submitButton;
@property(retain, nonatomic) UIButton *backButton; // @synthesize backButton;
- (void).cxx_destruct;
- (void)dealloc;
- (void)setSeperatorColor:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (id)buildButtonWithFrame:(struct CGRect)arg1 andTitle:(id)arg2;
- (void)closeDialog;
- (void)submitRequest;
- (void)back;
- (void)performTransitionAnimation:(CDUnknownBlockType)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)backToEditing;
- (void)backToEditingTransitionWithImage;
- (void)toastViewTransitionWithImage:(id)arg1;
- (void)tryAgain;
- (void)transitionFromError;
- (void)transitionButtonTitleForError:(id)arg1;
- (void)setupToastImage:(id)arg1;
- (void)prepareForErrorTransition;
- (void)prepareForSuccessTransition;
- (void)transitionToError;
- (void)successTransition;
- (void)showSpinner:(_Bool)arg1;
- (void)layoutSubviews;
- (void)feedbackError:(id)arg1;
- (void)feedbackSuccess:(id)arg1;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKConfig : NSObject
{
    _Bool _isRefreshing;
    double _lastRefresh;
    double _minimumRefreshInterval;
    NSDictionary *_config;
    NSString *_applicationId;
    ZDKAppSettings *_sdkSettings;
}

+ (id)instance;
@property(retain, nonatomic) ZDKAppSettings *sdkSettings; // @synthesize sdkSettings=_sdkSettings;
@property(retain, nonatomic) NSString *applicationId; // @synthesize applicationId=_applicationId;
@property(retain, nonatomic) NSDictionary *config; // @synthesize config=_config;
@property(nonatomic) _Bool isRefreshing; // @synthesize isRefreshing=_isRefreshing;
@property(nonatomic) double minimumRefreshInterval; // @synthesize minimumRefreshInterval=_minimumRefreshInterval;
@property(nonatomic) double lastRefresh; // @synthesize lastRefresh=_lastRefresh;
- (void).cxx_destruct;
- (_Bool)shouldRefresh;
- (void)updateRefreshTimestamp;
- (void)setRefreshInterval:(double)arg1;
- (double)refreshInterval;
- (void)refresh;
- (void)willEnterForeground;
- (id)getSDKSettings;
- (void)setSDKConfig:(id)arg1;
- (_Bool)hasConfig;
- (void)initializeWithAppId:(id)arg1 zendeskUrl:(id)arg2 oAuthClientId:(id)arg3 andUserId:(id)arg4;
- (void)initializeWithAppId:(id)arg1 andZendeskUrl:(id)arg2;

@end

@interface ZDKHelpCenterDataSource : NSObject <UITableViewDataSource>
{
    _Bool _hasItems;
    NSArray *_items;
    NSString *_cellIdentifier;
    NSString *_parentId;
    CDUnknownBlockType _configureCellBlock;
    Class _provider;
}

@property(nonatomic) Class provider; // @synthesize provider=_provider;
@property(copy, nonatomic) CDUnknownBlockType configureCellBlock; // @synthesize configureCellBlock=_configureCellBlock;
@property(copy, nonatomic) NSString *parentId; // @synthesize parentId=_parentId;
@property(copy, nonatomic) NSString *cellIdentifier; // @synthesize cellIdentifier=_cellIdentifier;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
@property(readonly, nonatomic) _Bool hasItems; // @synthesize hasItems=_hasItems;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (unsigned long long)itemCount;
- (id)itemAtIndexPath:(id)arg1;
- (void)reloadData;
- (id)initWithcellIdentifier:(id)arg1 configureCellBlock:(CDUnknownBlockType)arg2 andQuery:(id)arg3;
- (id)initWithcellIdentifier:(id)arg1 configureCellBlock:(CDUnknownBlockType)arg2 provider:(Class)arg3 andParentId:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKDispatcherResponse : NSObject
{
    NSHTTPURLResponse *_response;
    NSData *_data;
}

@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSHTTPURLResponse *response; // @synthesize response=_response;
- (void).cxx_destruct;
- (id)initWithResponse:(id)arg1 andData:(id)arg2;

@end

@interface ZDKRequestCommentsView : UIView <UITextViewDelegate>
{
    _Bool _blockTouches;
    ZDKRequest *_request;
    ZDKRequestCommentsTable *_commentsTable;
    ZDKCommentEntryView *_commentEntryView;
}

@property(nonatomic) _Bool blockTouches; // @synthesize blockTouches=_blockTouches;
@property(retain, nonatomic) ZDKCommentEntryView *commentEntryView; // @synthesize commentEntryView=_commentEntryView;
@property(retain, nonatomic) ZDKRequestCommentsTable *commentsTable; // @synthesize commentsTable=_commentsTable;
@property(retain, nonatomic) ZDKRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)textViewDidChange:(id)arg1;
- (void)layoutSubviews;
- (void)updateSendButtonState;
- (void)disableInteraction:(id)arg1;
- (void)registerForConnectivityNotifications;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 andRequest:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKToastStyle : NSObject
{
    NSMutableDictionary *_values;
}

+ (id)getValueForType:(unsigned long long)arg1 andStyle:(unsigned long long)arg2;
+ (void)setValue:(id)arg1 forType:(unsigned long long)arg2 andStyle:(unsigned long long)arg3;
+ (id)instance;
@property(retain) NSMutableDictionary *values; // @synthesize values=_values;
- (void).cxx_destruct;
- (_Bool)validValue:(id)arg1 forStyle:(unsigned long long)arg2;
- (_Bool)validType:(unsigned long long)arg1;
- (id)getValueForType:(unsigned long long)arg1 andStyle:(unsigned long long)arg2;
- (void)setValue:(id)arg1 forType:(unsigned long long)arg2 andStyle:(unsigned long long)arg3;
- (id)init;

@end

@interface ZDKHelpCenterSearchProvider : ZDKHelpCenterProvider
{
}

+ (id)searchURL:(id)arg1;
+ (void)items:(CDUnknownBlockType)arg1 forQuery:(id)arg2;

@end

@interface ZDKRequestCommentsTable : UITableView <UITableViewDataSource, UITableViewDelegate, ZDKCommentListRetryDelegate>
{
    _Bool _loadingInProgress;
    _Bool _fetchCommentsErrored;
    NSMutableDictionary *_avatarCache;
    ZDKRequest *_request;
    NSArray *_comments;
    NSString *_errorString;
}

@property(retain, nonatomic) NSString *errorString; // @synthesize errorString=_errorString;
@property(nonatomic) _Bool fetchCommentsErrored; // @synthesize fetchCommentsErrored=_fetchCommentsErrored;
@property(nonatomic) _Bool loadingInProgress; // @synthesize loadingInProgress=_loadingInProgress;
@property(retain, nonatomic) NSArray *comments; // @synthesize comments=_comments;
@property(retain, nonatomic) ZDKRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSMutableDictionary *avatarCache; // @synthesize avatarCache=_avatarCache;
- (void).cxx_destruct;
- (void)dealloc;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)commentAdded;
- (void)refresh;
- (id)initWithFrame:(struct CGRect)arg1 andRequest:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKHelpCenterAttachmentCell : UITableViewCell
{
    UILabel *_fileSize;
}

+ (id)humanReadableFileSize:(unsigned long long)arg1;
+ (id)cellIdentifier;
@property(retain, nonatomic) UILabel *fileSize; // @synthesize fileSize=_fileSize;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ZDKHelpCenterProvider : NSObject
{
}

+ (id)currentLocale;
+ (id)helpCenterURLFromString:(id)arg1;
+ (id)baseRequest;
+ (void)items:(CDUnknownBlockType)arg1 parent:(id)arg2;

@end

@interface ZDKHelpCenterCategoryProvider : ZDKHelpCenterProvider
{
}

+ (id)categoriesURL;
+ (void)items:(CDUnknownBlockType)arg1 parent:(id)arg2;

@end

@interface ZDKRateMyAppSettings : NSObject
{
    _Bool _enabled;
    NSNumber *_visits;
    NSNumber *_duration;
    NSNumber *_delay;
    NSArray *_tags;
    NSString *_appStoreUrl;
}

@property(readonly, nonatomic) NSString *appStoreUrl; // @synthesize appStoreUrl=_appStoreUrl;
@property(readonly, nonatomic) NSArray *tags; // @synthesize tags=_tags;
@property(readonly, nonatomic) NSNumber *delay; // @synthesize delay=_delay;
@property(readonly, nonatomic) NSNumber *duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) NSNumber *visits; // @synthesize visits=_visits;
@property(readonly, nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (void)parseDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface ZDKAccount : NSObject
{
    NSString *email;
    NSString *zendeskUrl;
    NSString *userId;
    NSString *oAuthClientId;
    ZDKKeychainWrapper *wrapper;
    NSString *oauthToken;
    long long state;
    NSNumber *zendeskUserId;
    NSString *_applicationId;
}

@property(retain, nonatomic) NSString *applicationId; // @synthesize applicationId=_applicationId;
@property(retain, nonatomic) NSNumber *zendeskUserId; // @synthesize zendeskUserId;
@property long long state; // @synthesize state;
@property(retain, nonatomic) NSString *oauthToken; // @synthesize oauthToken;
@property(retain, nonatomic) ZDKKeychainWrapper *wrapper; // @synthesize wrapper;
@property(retain, nonatomic) NSString *oAuthClientId; // @synthesize oAuthClientId;
@property(retain, nonatomic) NSString *userId; // @synthesize userId;
@property(retain, nonatomic) NSString *zendeskUrl; // @synthesize zendeskUrl;
@property(retain, nonatomic) NSString *email; // @synthesize email;
- (void).cxx_destruct;
- (void)verifyChangeFrom:(id)arg1 to:(id)arg2;
- (void)setVariable:(id *)arg1 to:(id)arg2;
- (void)storeData;
- (void)loadData;
- (id)init;

@end

@interface ZDKContactUsSettings : NSObject
{
    NSArray *_tags;
}

@property(readonly, nonatomic) NSArray *tags; // @synthesize tags=_tags;
- (void).cxx_destruct;
- (void)parseDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface ZDKConversationsSettings : NSObject
{
    _Bool _enabled;
}

@property(readonly, nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
- (void)parseDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface ZDKETag : NSObject
{
}

+ (id)eTagForURL:(id)arg1;
+ (void)updateEtagsWithResponse:(id)arg1;
+ (_Bool)unmodified:(id)arg1;
+ (void)addEtagToRequest:(id)arg1;
+ (void)initialize;

@end

@interface ZDKAPI : ZDKDispatcher <ZDKDispatcherDelegate>
{
    ZDKAccount *account;
    ZDKUserContainer *users;
    ZDKRequestContainer *requests;
}

+ (id)instance;
+ (id)userAgent;
- (void).cxx_destruct;
- (void)authenticatedRequest:(id)arg1 subject:(id)arg2 tags:(id)arg3 onSuccess:(CDUnknownBlockType)arg4 onError:(CDUnknownBlockType)arg5;
- (void)emailOnlyRequest:(id)arg1 subject:(id)arg2 tags:(id)arg3 onSuccess:(CDUnknownBlockType)arg4 onError:(CDUnknownBlockType)arg5;
- (void)createRequest:(id)arg1 subject:(id)arg2 tags:(id)arg3 onSuccess:(CDUnknownBlockType)arg4 onError:(CDUnknownBlockType)arg5;
- (_Bool)handleLoginResponse:(id)arg1;
- (id)createLoginRequest;
- (void)invalidateToken;
- (void)addAuthToRequest:(id)arg1;
- (_Bool)needToLogin;
- (id)accountError;
- (_Bool)validAccount:(_Bool)arg1;
@property(readonly) ZDKRequestContainer *requests; // @synthesize requests;
@property(readonly) ZDKUserContainer *users; // @synthesize users;
@property(readonly) ZDKAccount *account; // @synthesize account;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKRequestListViewController : ZDKUIViewController
{
    UIScrollView *_requestListContainer;
    ZDKRequestListTable *_requestList;
}

@property(retain, nonatomic) ZDKRequestListTable *requestList; // @synthesize requestList=_requestList;
@property(retain, nonatomic) UIScrollView *requestListContainer; // @synthesize requestListContainer=_requestListContainer;
- (void).cxx_destruct;
- (void)showContact;
- (void)requestListUpdated;
- (void)failedToGetRequests:(id)arg1;
- (void)fetchingRequests:(id)arg1;
- (void)registerForErrors;
- (void)layoutContent;
- (void)viewWillLayoutSubviews;
- (void)dealloc;
- (void)viewDidLoad;

@end

@interface ZDKRMA : NSObject
{
    _Bool _active;
    ZDKRMAConfigObject *zdkrmaConfigObject;
    ZDKRMADataObject *zdkrmaDataObject;
    CDUnknownBlockType _defaultSendFeedbackBlock;
    UIViewController *_hostController;
    long long _hostPresentationStyle;
}

+ (void)onMainThread:(CDUnknownBlockType)arg1;
+ (void)notifyFeedbackError;
+ (void)notifyFeedbackSuccess;
+ (_Bool)hasString:(id)arg1;
+ (_Bool)haveAllStrings;
+ (_Bool)configValid;
+ (void)showInView:(id)arg1;
+ (void)logVisit;
+ (void)configure:(CDUnknownBlockType)arg1;
+ (id)instance;
@property(nonatomic) _Bool active; // @synthesize active=_active;
@property(nonatomic) long long hostPresentationStyle; // @synthesize hostPresentationStyle=_hostPresentationStyle;
@property(retain, nonatomic) UIViewController *hostController; // @synthesize hostController=_hostController;
@property(copy, nonatomic) CDUnknownBlockType defaultSendFeedbackBlock; // @synthesize defaultSendFeedbackBlock=_defaultSendFeedbackBlock;
@property(retain, nonatomic) ZDKRMADataObject *zdkrmaDataObject; // @synthesize zdkrmaDataObject;
@property(retain, nonatomic) ZDKRMAConfigObject *zdkrmaConfigObject; // @synthesize zdkrmaConfigObject;
- (void).cxx_destruct;
- (void)dealloc;
- (void)shouldStoreAction:(id)arg1;
- (id)buildVariantWithFormat:(id)arg1;
- (void)willHideDialog;
- (void)feedbackSuccess;
- (void)shouldSendFeedback:(id)arg1;
- (id)init;
- (_Bool)viewIsOnScreen:(id)arg1 topViewController:(id)arg2;
- (_Bool)viewIsOnScreen:(id)arg1;

@end

@interface ZDKUIViewController : UIViewController
{
    double _keyboardHeight;
    double _toastHeight;
    _Bool _hostNavigationBarHidden;
    _Bool _requiresNavBar;
    UIView *_contentView;
    ZDKToastView *_toastView;
    ZDKReachability *_reachable;
}

+ (void)presentViewController:(id)arg1 requiresNavController:(_Bool)arg2;
+ (id)topViewControllerWithRootViewController:(id)arg1;
+ (id)topViewController;
@property(readonly, nonatomic) ZDKReachability *reachable; // @synthesize reachable=_reachable;
@property(retain, nonatomic) ZDKToastView *toastView; // @synthesize toastView=_toastView;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(nonatomic) _Bool requiresNavBar; // @synthesize requiresNavBar=_requiresNavBar;
- (void).cxx_destruct;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (double)bottomViewOffset;
- (double)topViewOffset;
- (void)layoutContent;
- (void)viewWillLayoutSubviews;
- (void)dismissActiveToast:(_Bool)arg1;
- (void)presentConnectivityToast:(_Bool)arg1;
- (void)appearWithConnectivityToast:(id)arg1 animated:(_Bool)arg2;
- (void)networkStatusChanged:(id)arg1;
- (void)keyboardWillBeHidden:(id)arg1;
- (void)keyboardWillBeShown:(id)arg1;
- (void)registerForKeyboardNotifications;
- (void)registerForToastNotifications;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;

@end

@interface ZDKToastView : UIView
{
    UIView *toast;
    UIView *lowerBorder;
    UILabel *text;
    double animationTime;
    double durationInSeconds;
    UIButton *button;
    NSDate *_timePresented;
    CDUnknownBlockType _animationBlock;
    CDUnknownBlockType _buttonBlock;
    UIViewController *_viewController;
}

@property(nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
@property(copy, nonatomic) CDUnknownBlockType buttonBlock; // @synthesize buttonBlock=_buttonBlock;
@property(copy, nonatomic) CDUnknownBlockType animationBlock; // @synthesize animationBlock=_animationBlock;
@property(retain) NSDate *timePresented; // @synthesize timePresented=_timePresented;
- (void).cxx_destruct;
- (void)layout;
- (void)layoutSubviews;
- (void)buttonPressed;
- (void)dismiss:(_Bool)arg1 comepletion:(CDUnknownBlockType)arg2;
- (void)dismiss:(_Bool)arg1;
- (void)presentWithoutTimedDismiss:(_Bool)arg1;
- (void)presentWithTimedDismiss:(_Bool)arg1;
- (void)present:(_Bool)arg1;
- (void)setupMessage:(id)arg1 withType:(unsigned long long)arg2 andButtonText:(id)arg3;
- (void)setupButtonWithText:(id)arg1 andType:(unsigned long long)arg2;
- (void)setupLowerBorder;
- (void)setupToastBackground:(id)arg1 withType:(unsigned long long)arg2;
- (id)initInView:(id)arg1 forViewController:(id)arg2 atY:(double)arg3 withMessage:(id)arg4 buttonText:(id)arg5 buttonAction:(CDUnknownBlockType)arg6 andType:(unsigned long long)arg7 duration:(double)arg8 animationTime:(double)arg9 animation:(CDUnknownBlockType)arg10 animateIn:(_Bool)arg11;

@end

@interface ZDKKeychainWrapper : NSObject
{
    NSMutableDictionary *keychainItemData;
    NSMutableDictionary *genericPasswordQuery;
}

@property(retain, nonatomic) NSMutableDictionary *genericPasswordQuery; // @synthesize genericPasswordQuery;
@property(retain, nonatomic) NSMutableDictionary *keychainItemData; // @synthesize keychainItemData;
- (void)writeToKeychain;
- (id)secItemFormatToDictionary:(id)arg1;
- (id)dictionaryToSecItemFormat:(id)arg1;
- (void)resetKeychainItem;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 accessGroup:(id)arg2;

@end

@interface ZDKUIUtil : NSObject
{
}

+ (double)separatorHeightForScreenScale;
+ (_Bool)isSameVersion:(id)arg1;
+ (_Bool)isNewerVersion:(id)arg1;

@end

@interface ZDKRequestCreationConfig : NSObject
{
    NSArray *tags;
    NSString *additionalRequestInfo;
}

@property(retain) NSString *additionalRequestInfo; // @synthesize additionalRequestInfo;
@property(retain) NSArray *tags; // @synthesize tags;
- (void).cxx_destruct;
- (id)contentSeperator;
- (id)init;

@end

@interface ZDKRequests : NSObject
{
    ZDKRequestCreationConfig *requestCreationConfig;
}

+ (id)newRequestListWith:(id)arg1 andSelector:(SEL)arg2;
+ (void)showRequestCreationWithNavController:(id)arg1 withSuccess:(CDUnknownBlockType)arg2 andError:(CDUnknownBlockType)arg3;
+ (void)configure:(CDUnknownBlockType)arg1;
+ (id)instance;
@property(retain) ZDKRequestCreationConfig *requestCreationConfig; // @synthesize requestCreationConfig;
- (void).cxx_destruct;
- (id)init;

@end

@interface ZDKUITextViewInterceptor : NSObject
{
    id receiver;
    id middleMan;
}

@property(nonatomic) id middleMan; // @synthesize middleMan;
@property(nonatomic) id receiver; // @synthesize receiver;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;

@end

@interface ZDKUITextView : UITextView
{
    ZDKUITextViewInterceptor *delegateInterceptor;
    NSString *placeholderText;
    UILabel *placeholderLabel;
    UIColor *placeholderTextColor;
}

@property(retain, nonatomic) UIColor *placeholderTextColor; // @synthesize placeholderTextColor;
@property(retain, nonatomic) UILabel *placeholderLabel; // @synthesize placeholderLabel;
@property(retain, nonatomic) NSString *placeholderText; // @synthesize placeholderText;
- (void).cxx_destruct;
- (void)dealloc;
- (_Bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)scrollToVisibleCaret;
- (void)scrollToVisibleCaretAnimated:(_Bool)arg1;
- (void)scrollRectToVisibleConsideringInsets:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)positionPlaceholderLabel;
- (void)setPlaceholder:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 andPlaceholder:(id)arg2;

@end

@interface ZDKRequest : ZDKModelObject
{
    ZDKUserContainer *_users;
    NSNumber *_requestId;
    NSNumber *_requesterId;
    NSString *_status;
    NSString *_subject;
    NSString *_requestDescription;
    NSDate *_createdAt;
    NSDate *_updateAt;
    NSDate *_publicUpdatedAt;
    NSDate *_lastViewed;
    NSArray *_comments;
}

@property(retain, nonatomic) NSArray *comments; // @synthesize comments=_comments;
@property(retain, nonatomic) NSDate *lastViewed; // @synthesize lastViewed=_lastViewed;
@property(retain, nonatomic) NSDate *publicUpdatedAt; // @synthesize publicUpdatedAt=_publicUpdatedAt;
@property(retain, nonatomic) NSDate *updateAt; // @synthesize updateAt=_updateAt;
@property(retain, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(retain, nonatomic) NSString *requestDescription; // @synthesize requestDescription=_requestDescription;
@property(retain, nonatomic) NSString *subject; // @synthesize subject=_subject;
@property(retain, nonatomic) NSString *status; // @synthesize status=_status;
@property(retain, nonatomic) NSNumber *requesterId; // @synthesize requesterId=_requesterId;
@property(retain, nonatomic) NSNumber *requestId; // @synthesize requestId=_requestId;
@property(retain, nonatomic) ZDKUserContainer *users; // @synthesize users=_users;
- (void).cxx_destruct;
- (id)description;
- (void)addComment:(id)arg1 onSuccess:(CDUnknownBlockType)arg2 onError:(CDUnknownBlockType)arg3;
- (id)getLastViewDateInStroage;
- (void)updateLastViewedInStorage;
- (void)parseData:(id)arg1;
- (void)refreshComments:(CDUnknownBlockType)arg1 onError:(CDUnknownBlockType)arg2;
- (id)initWithAccount:(id)arg1 dispatcher:(id)arg2 userCache:(id)arg3 andDict:(id)arg4;

@end

@interface ZDKHelpCenterArticleProvider : ZDKHelpCenterProvider
{
}

+ (id)articlesURL:(id)arg1;
+ (void)items:(CDUnknownBlockType)arg1 parent:(id)arg2;

@end

@interface ZDKArticleView : UIView <UIWebViewDelegate, UITableViewDelegate>
{
    _Bool _webViewLoading;
    _Bool _attachmentsLoading;
    _Bool _blockTouches;
    UIScrollView *_article;
    UIWebView *_articleWebView;
    UITableView *_attachments;
    UIView *_whiteBackground;
    UIView *_greyLine;
    NSString *_html;
    UIActivityIndicatorView *_spinner;
}

@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) NSString *html; // @synthesize html=_html;
@property(nonatomic) _Bool blockTouches; // @synthesize blockTouches=_blockTouches;
@property(nonatomic) _Bool attachmentsLoading; // @synthesize attachmentsLoading=_attachmentsLoading;
@property(nonatomic) _Bool webViewLoading; // @synthesize webViewLoading=_webViewLoading;
@property(retain, nonatomic) UIView *greyLine; // @synthesize greyLine=_greyLine;
@property(retain, nonatomic) UIView *whiteBackground; // @synthesize whiteBackground=_whiteBackground;
@property(retain, nonatomic) UITableView *attachments; // @synthesize attachments=_attachments;
@property(retain, nonatomic) UIWebView *articleWebView; // @synthesize articleWebView=_articleWebView;
@property(retain, nonatomic) UIScrollView *article; // @synthesize article=_article;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)didRotate;
- (void)hanldeFetchAttachmentsFailed;
- (void)attachmentsUpdated;
- (void)disableInteraction:(id)arg1;
- (void)registerForNotifications;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
- (void)updateLoadingState;
- (void)reloadAttachments;
- (void)reloadArticleForRotation;
- (double)lineHeightForLabel:(id)arg1 andWidth:(double)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithArticle:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKSupportView : UIView
{
    UITableView *_table;
    UISearchBar *_searchField;
    UIActivityIndicatorView *_spinner;
    UILabel *_noResultsFoundLabel;
}

@property(retain, nonatomic) UILabel *noResultsFoundLabel; // @synthesize noResultsFoundLabel=_noResultsFoundLabel;
@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UISearchBar *searchField; // @synthesize searchField=_searchField;
@property(retain, nonatomic) UITableView *table; // @synthesize table=_table;
- (void).cxx_destruct;
@property(nonatomic, getter=isLoading, setter=setLoading:) _Bool loading;
- (void)setLoading:(_Bool)arg1 withTableHidden:(_Bool)arg2;
- (void)itemsUpdated:(id)arg1;
- (void)resignResponder:(id)arg1;
- (void)registerForNotifications;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ZDKHelpCenterArticle : NSObject
{
    _Bool _outdated;
    NSString *_sid;
    NSString *_section_id;
    NSString *_title;
    NSString *_body;
    NSString *_author_name;
    NSString *_author_id;
    NSString *_article_details;
    NSString *_articleParents;
    NSDate *_created_at;
    long long _position;
}

+ (id)createUserLookup:(id)arg1;
+ (id)createCategoryLookup:(id)arg1;
+ (id)createSectionLookup:(id)arg1;
+ (id)parseArticleSearchResults:(id)arg1;
+ (id)parseArticles:(id)arg1;
+ (id)parseArticle:(id)arg1;
@property(nonatomic) _Bool outdated; // @synthesize outdated=_outdated;
@property(nonatomic) long long position; // @synthesize position=_position;
@property(retain, nonatomic) NSDate *created_at; // @synthesize created_at=_created_at;
@property(retain, nonatomic) NSString *articleParents; // @synthesize articleParents=_articleParents;
@property(retain, nonatomic) NSString *article_details; // @synthesize article_details=_article_details;
@property(retain, nonatomic) NSString *author_id; // @synthesize author_id=_author_id;
@property(retain, nonatomic) NSString *author_name; // @synthesize author_name=_author_name;
@property(retain, nonatomic) NSString *body; // @synthesize body=_body;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) NSString *section_id; // @synthesize section_id=_section_id;
@property(retain, nonatomic) NSString *sid; // @synthesize sid=_sid;
- (void).cxx_destruct;

@end

@interface ZDKCreateRequestViewController : ZDKUIViewController <ZDKUITextViewDelegate, UITextFieldDelegate>
{
    _Bool _hideSpinner;
    _Bool _shouldAnimateOnSubmission;
    _Bool _blockTouches;
    CDUnknownBlockType _onSuccess;
    CDUnknownBlockType _onError;
    ZDKCreateRequestView *_createRequestView;
}

@property(nonatomic) _Bool blockTouches; // @synthesize blockTouches=_blockTouches;
@property(retain, nonatomic) ZDKCreateRequestView *createRequestView; // @synthesize createRequestView=_createRequestView;
@property(copy, nonatomic) CDUnknownBlockType onError; // @synthesize onError=_onError;
@property(copy, nonatomic) CDUnknownBlockType onSuccess; // @synthesize onSuccess=_onSuccess;
- (void).cxx_destruct;
- (void)dealloc;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)keyboardWillBeShown:(id)arg1;
- (void)disableInteraction:(id)arg1;
- (_Bool)shouldRetry:(id)arg1;
- (void)displayToastWithMessage:(id)arg1 buttonAction:(CDUnknownBlockType)arg2 buttonText:(id)arg3 andDuration:(double)arg4;
- (void)resetToast:(id)arg1;
- (void)submissionError:(id)arg1;
- (void)registerForConnectivity;
- (void)navBarButtonState:(_Bool)arg1;
- (void)caretPosition:(struct CGRect)arg1;
- (_Bool)checkSendState;
- (void)textFieldDidChange:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)completedAPIAction;
- (void)resignFirstResponders;
- (void)submit;
- (void)cancel;
- (void)showSpinner:(_Bool)arg1;
- (void)animateTextView;
- (void)textViewTransitionForLoading:(_Bool)arg1;
- (void)setupEmailTextView;
- (void)setupTextView;
- (void)setupNavBar;
- (void)layoutSpinner;
- (void)layoutEmailTextView;
- (void)layoutTextView;
- (void)layoutContent;
- (void)viewWillLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithSuccess:(CDUnknownBlockType)arg1 andError:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKUIActivityView : UIImageView <ZDKSpinnerDelegate>
{
}

- (void)setHidden:(_Bool)arg1;
- (_Bool)hidden;
- (void)stopAnimating;
- (void)startAnimating;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKRequestListTableCell : UITableViewCell
{
    UIView *_unreadView;
    UILabel *_requestDescription;
    UILabel *_createdAt;
    UIFont *_descriptionFont;
    UIFont *_createdAtFont;
    UIColor *_unreadColor;
    UIColor *_descriptionColor;
    UIColor *_createdAtColor;
    double _verticalMargin;
    double _descriptionTimestampMargin;
    double _leftInset;
    UIColor *_cellBackgroundColor;
}

@property(nonatomic) UIColor *cellBackgroundColor; // @synthesize cellBackgroundColor=_cellBackgroundColor;
@property(nonatomic) double leftInset; // @synthesize leftInset=_leftInset;
@property(nonatomic) double descriptionTimestampMargin; // @synthesize descriptionTimestampMargin=_descriptionTimestampMargin;
@property(nonatomic) double verticalMargin; // @synthesize verticalMargin=_verticalMargin;
@property(retain, nonatomic) UIColor *createdAtColor; // @synthesize createdAtColor=_createdAtColor;
@property(retain, nonatomic) UIColor *descriptionColor; // @synthesize descriptionColor=_descriptionColor;
@property(retain, nonatomic) UIColor *unreadColor; // @synthesize unreadColor=_unreadColor;
@property(retain, nonatomic) UIFont *createdAtFont; // @synthesize createdAtFont=_createdAtFont;
@property(retain, nonatomic) UIFont *descriptionFont; // @synthesize descriptionFont=_descriptionFont;
@property(retain, nonatomic) UILabel *createdAt; // @synthesize createdAt=_createdAt;
@property(retain, nonatomic) UILabel *requestDescription; // @synthesize requestDescription=_requestDescription;
@property(retain, nonatomic) UIView *unreadView; // @synthesize unreadView=_unreadView;
- (void).cxx_destruct;
- (double)insetInContentView;
- (void)layoutSubviews;
- (void)prepareWithRequest:(id)arg1;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ZDRequestListEmptyTableCell : UITableViewCell
{
    UILabel *_messageLabel;
    UIFont *_messageFont;
    UIColor *_messageColor;
}

@property(retain, nonatomic) UIColor *messageColor; // @synthesize messageColor=_messageColor;
@property(retain, nonatomic) UIFont *messageFont; // @synthesize messageFont=_messageFont;
@property(retain, nonatomic) UILabel *messageLabel; // @synthesize messageLabel=_messageLabel;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (double)insetInContentView;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ZDRequestListLoadingTableCell : UITableViewCell
{
    id <ZDKSpinnerDelegate> _spinner;
}

@property(retain, nonatomic) id <ZDKSpinnerDelegate> spinner; // @synthesize spinner=_spinner;
- (void).cxx_destruct;
- (void)dealloc;
- (void)layoutSubviews;
- (double)insetInContentView;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ZDKCommentEntryView : UIView
{
    _Bool _sending;
    ZDKRequest *_request;
    UIView *_topBorder;
    UIView *_textViewBackground;
    ZDKUITextView *_textView;
    UIButton *_sendButton;
    UIColor *_topBorderColor;
    UIFont *_textEntryFont;
    UIColor *_textEntryColor;
    UIColor *_textEntryBackgroundColor;
    UIColor *_textEntryBorderColor;
    UIFont *_sendButtonFont;
    UIColor *_sendButtonColor;
    UIColor *_areaBackgroundColor;
}

@property(retain, nonatomic) UIColor *areaBackgroundColor; // @synthesize areaBackgroundColor=_areaBackgroundColor;
@property(retain, nonatomic) UIColor *sendButtonColor; // @synthesize sendButtonColor=_sendButtonColor;
@property(retain, nonatomic) UIFont *sendButtonFont; // @synthesize sendButtonFont=_sendButtonFont;
@property(retain, nonatomic) UIColor *textEntryBorderColor; // @synthesize textEntryBorderColor=_textEntryBorderColor;
@property(retain, nonatomic) UIColor *textEntryBackgroundColor; // @synthesize textEntryBackgroundColor=_textEntryBackgroundColor;
@property(retain, nonatomic) UIColor *textEntryColor; // @synthesize textEntryColor=_textEntryColor;
@property(retain, nonatomic) UIFont *textEntryFont; // @synthesize textEntryFont=_textEntryFont;
@property(retain, nonatomic) UIColor *topBorderColor; // @synthesize topBorderColor=_topBorderColor;
@property(nonatomic) _Bool sending; // @synthesize sending=_sending;
@property(retain, nonatomic) UIButton *sendButton; // @synthesize sendButton=_sendButton;
@property(retain, nonatomic) ZDKUITextView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) UIView *textViewBackground; // @synthesize textViewBackground=_textViewBackground;
@property(retain, nonatomic) UIView *topBorder; // @synthesize topBorder=_topBorder;
@property(retain, nonatomic) ZDKRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)setState:(_Bool)arg1;
- (void)sendComment;
- (id)buildButtonWithTitle:(id)arg1;
- (double)preferredHeight;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 andRequest:(id)arg2;

@end

@interface ZDKHelpCenter : NSObject
{
}

+ (void)showHelpCenterWithNavController:(id)arg1;

@end

@interface ZDKToast : NSObject
{
    NSMutableArray *_toasts;
    double _animationDuration;
}

+ (void)setAnimationDuration:(double)arg1;
+ (void)dismissForView:(id)arg1 animate:(_Bool)arg2;
+ (void)dismissForViewController:(id)arg1 animate:(_Bool)arg2;
+ (void)buildToastWithMessage:(id)arg1 ofType:(unsigned long long)arg2 showInView:(id)arg3 orViewController:(id)arg4 startingAt:(double)arg5 withDuration:(double)arg6 ButtonText:(id)arg7 buttonAction:(CDUnknownBlockType)arg8 andAnimation:(CDUnknownBlockType)arg9 animated:(_Bool)arg10;
+ (void)showMessage:(id)arg1 ofType:(unsigned long long)arg2 inView:(id)arg3 startingAt:(double)arg4 withButtonText:(id)arg5 buttonAction:(CDUnknownBlockType)arg6 andAnimation:(CDUnknownBlockType)arg7 animated:(_Bool)arg8;
+ (void)showMessage:(id)arg1 ofType:(unsigned long long)arg2 inViewController:(id)arg3 withButtonText:(id)arg4 buttonAction:(CDUnknownBlockType)arg5 andAnimation:(CDUnknownBlockType)arg6 animated:(_Bool)arg7;
+ (void)showMessage:(id)arg1 ofType:(unsigned long long)arg2 inView:(id)arg3 startingAt:(double)arg4 withDuration:(double)arg5 andAnimation:(CDUnknownBlockType)arg6 animated:(_Bool)arg7;
+ (void)showMessage:(id)arg1 ofType:(unsigned long long)arg2 inView:(id)arg3 inViewController:(id)arg4 withDuration:(double)arg5 andAnimation:(CDUnknownBlockType)arg6 animated:(_Bool)arg7;
+ (void)showMessage:(id)arg1 ofType:(unsigned long long)arg2 inViewController:(id)arg3 withDuration:(double)arg4 andAnimation:(CDUnknownBlockType)arg5 animated:(_Bool)arg6;
+ (id)instance;
@property double animationDuration; // @synthesize animationDuration=_animationDuration;
@property(retain) NSMutableArray *toasts; // @synthesize toasts=_toasts;
- (void).cxx_destruct;
- (id)init;

@end

@interface ZDKUserContainer : ZDKModelObject
{
    NSMutableDictionary *_userDict;
}

@property(retain, nonatomic) NSMutableDictionary *userDict; // @synthesize userDict=_userDict;
- (void).cxx_destruct;
- (void)dealloc;
- (void)clear;
- (id)getUser:(id)arg1;
- (id)initWithAccount:(id)arg1 dispatcher:(id)arg2;

@end

@interface ZDKDispatcher : NSObject
{
    id <ZDKDispatcherDelegate> _delegate;
    long long _loginState;
    NSMutableArray *_pendingRequests;
    NSObject<OS_dispatch_queue> *_requestQueue;
    ZDKReachability *_reachability;
}

+ (void)setDebugLogging:(_Bool)arg1;
@property(retain) ZDKReachability *reachability; // @synthesize reachability=_reachability;
@property(retain) NSObject<OS_dispatch_queue> *requestQueue; // @synthesize requestQueue=_requestQueue;
@property(retain) NSMutableArray *pendingRequests; // @synthesize pendingRequests=_pendingRequests;
@property long long loginState; // @synthesize loginState=_loginState;
@property(nonatomic) __weak id <ZDKDispatcherDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)convertError:(id)arg1;
- (void)executeRequest:(id)arg1 onSuccess:(CDUnknownBlockType)arg2 onError:(CDUnknownBlockType)arg3;
- (void)executeRequest:(CDUnknownBlockType)arg1 onSuccess:(CDUnknownBlockType)arg2 onError:(CDUnknownBlockType)arg3 requiresAuth:(_Bool)arg4;
- (void)loginFromRequestQueue:(CDUnknownBlockType)arg1 onError:(CDUnknownBlockType)arg2;
- (void)loginThenExecute:(CDUnknownBlockType)arg1 onError:(CDUnknownBlockType)arg2;
- (void)debugLog:(id)arg1;
- (id)init;

@end

@interface ZDKAppSettings : NSObject
{
    ZDKRateMyAppSettings *_rateMyAappSettings;
    ZDKConversationsSettings *_conversationsSettings;
    ZDKContactUsSettings *_contactUsSettings;
    ZDKHelpCenterSettings *_helpCenterSettings;
    ZDKRateMyAppSettings *_rmaSettings;
}

@property(retain, nonatomic) ZDKRateMyAppSettings *rmaSettings; // @synthesize rmaSettings=_rmaSettings;
@property(retain, nonatomic) ZDKHelpCenterSettings *helpCenterSettings; // @synthesize helpCenterSettings=_helpCenterSettings;
@property(retain, nonatomic) ZDKContactUsSettings *contactUsSettings; // @synthesize contactUsSettings=_contactUsSettings;
@property(retain, nonatomic) ZDKConversationsSettings *conversationsSettings; // @synthesize conversationsSettings=_conversationsSettings;
@property(readonly, nonatomic) ZDKRateMyAppSettings *rateMyAappSettings; // @synthesize rateMyAappSettings=_rateMyAappSettings;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface ZDKHelpCenterTableDelegate : NSObject <UITableViewDelegate>
{
    _Bool _blockTouches;
}

@property(nonatomic) _Bool blockTouches; // @synthesize blockTouches=_blockTouches;
- (void)scrollViewDidScroll:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)disableInteraction:(id)arg1;
- (void)registerForConnectivity;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ZDKHelpCenterSearchResultTableDelegate : ZDKHelpCenterTableDelegate
{
}

- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;

@end

@interface ZDKDeviceInfo : NSObject
{
}

+ (double)bytesToGig:(id)arg1;
+ (id)deviceInfoString;
+ (id)language;
+ (id)region;
+ (double)batteryLevel;
+ (double)totalDiskspace;
+ (double)freeDiskspace;
+ (double)totalDeviceMemory;
+ (id)deviceType;

@end

@interface Pinterest : NSObject
{
    NSString *_clientId;
    NSString *_suffix;
}

+ (id)pinItButton;
- (id)URLWithScheme:(id)arg1 host:(id)arg2 path:(id)arg3 andQuery:(id)arg4;
- (id)urlEncodedString:(id)arg1;
- (void)openUserWithUsername:(id)arg1;
- (void)openBoardWithSlug:(id)arg1 fromUser:(id)arg2;
- (void)openPinWithIdentifier:(id)arg1;
- (_Bool)canPinWithSDK;
- (void)createPinWithImageURL:(id)arg1 sourceURL:(id)arg2 description:(id)arg3;
- (void)dealloc;
- (id)initWithClientId:(id)arg1 urlSchemeSuffix:(id)arg2;
- (id)initWithClientId:(id)arg1;

@end

@interface SQLitePersistentObject : NSObject
{
    long long pk;
    _Bool dirty;
    _Bool alreadySaving;
    _Bool alreadyDeleting;
}

+ (void)unregisterObject:(id)arg1;
+ (void)registerObjectInMemory:(id)arg1;
+ (id)memoryMapKeyForObject:(long long)arg1;
+ (void)tableCheck;
+ (id)tableColumns;
+ (id)tableName;
+ (id)classNameForTableName:(id)arg1;
+ (_Bool)resolveClassMethod:(SEL)arg1;
+ (void)endTransaction;
+ (void)beginTransaction;
+ (void)performUsingDBOperationQueue:(CDUnknownBlockType)arg1;
+ (struct dispatch_queue_s *)DBOperationQueue;
+ (id)propertiesWithEncodedTypes;
+ (id)pairedArraysForProperties:(id)arg1 withCriteria:(id)arg2;
+ (id)pairedArraysForProperties:(id)arg1;
+ (id)sortedFieldValuesWithKeysForProperty:(id)arg1;
+ (id)_findByCriteria:(id)arg1;
+ (id)findByCriteria:(id)arg1;
+ (id)_findByPK:(int)arg1;
+ (id)findByPK:(int)arg1;
+ (void)deleteObject:(long long)arg1 cascade:(_Bool)arg2;
+ (id)allObjects;
+ (long long)countByCriteria:(id)arg1;
+ (long long)count;
+ (id)_findFirstByCriteria:(id)arg1;
+ (id)findFirstByCriteria:(id)arg1;
+ (id)transients;
+ (id)indices;
+ (void)clearCache;
+ (double)performSQLAggregation:(id)arg1;
+ (void)load;
- (id)memoryMapKey;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)takeValue:(id)arg1 forKey:(id)arg2;
- (void)takeValuesFromDictionary:(id)arg1;
- (void)setPk:(int)arg1;
- (_Bool)isDirty;
- (void)makeClean;
- (void)markDirty;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)init;
- (id)findRelated:(Class)arg1;
- (id)findRelated:(Class)arg1 filter:(id)arg2;
- (id)findRelated:(Class)arg1 forProperty:(id)arg2 filter:(id)arg3;
- (void)_deleteObjectCascade:(_Bool)arg1;
- (void)deleteObjectCascade:(_Bool)arg1;
- (void)deleteObject;
- (_Bool)existsInDB;
- (void)revertProperties:(id)arg1;
- (void)revertProperty:(id)arg1;
- (void)revert;
- (void)_save;
- (void)_bulkSave;
- (void)bulkSave;
- (void)save;
- (int)pk;

@end

@interface SQLiteInstanceManager : NSObject
{
    NSString *databaseFilepath;
    struct sqlite3 *database;
}

+ (void)reset;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedManager;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *databaseFilepath; // @synthesize databaseFilepath;
- (void)close;
- (void)executeUpdateSQL:(id)arg1;
- (void)vacuum;
- (void)deleteDatabase;
- (void)setLockingMode:(int)arg1;
- (void)setCacheSize:(unsigned long long)arg1;
- (void)setAutoVacuum:(int)arg1;
- (_Bool)tableExists:(id)arg1;
- (struct sqlite3 *)database;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface PFFacebookUtils : NSObject
{
}

+ (_Bool)handleOpenURL:(id)arg1;
+ (void)reauthorizeUser:(id)arg1 withPublishPermissions:(id)arg2 audience:(unsigned long long)arg3 target:(id)arg4 selector:(SEL)arg5;
+ (void)reauthorizeUser:(id)arg1 withPublishPermissions:(id)arg2 audience:(unsigned long long)arg3 block:(CDUnknownBlockType)arg4;
+ (id)reauthorizeUserInBackground:(id)arg1 withPublishPermissions:(id)arg2 audience:(unsigned long long)arg3;
+ (void)logInWithFacebookId:(id)arg1 accessToken:(id)arg2 expirationDate:(id)arg3 target:(id)arg4 selector:(SEL)arg5;
+ (void)logInWithFacebookId:(id)arg1 accessToken:(id)arg2 expirationDate:(id)arg3 block:(CDUnknownBlockType)arg4;
+ (id)logInWithFacebookIdInBackground:(id)arg1 accessToken:(id)arg2 expirationDate:(id)arg3;
+ (void)logInWithPermissions:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (void)logInWithPermissions:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)logInWithPermissionsInBackground:(id)arg1;
+ (void)linkUser:(id)arg1 facebookId:(id)arg2 accessToken:(id)arg3 expirationDate:(id)arg4 target:(id)arg5 selector:(SEL)arg6;
+ (void)linkUser:(id)arg1 facebookId:(id)arg2 accessToken:(id)arg3 expirationDate:(id)arg4 block:(CDUnknownBlockType)arg5;
+ (id)linkUserInBackground:(id)arg1 facebookId:(id)arg2 accessToken:(id)arg3 expirationDate:(id)arg4;
+ (void)linkUser:(id)arg1 permissions:(id)arg2 target:(id)arg3 selector:(SEL)arg4;
+ (void)linkUser:(id)arg1 permissions:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (id)linkUserInBackground:(id)arg1 permissions:(id)arg2;
+ (void)linkUser:(id)arg1 permissions:(id)arg2;
+ (void)unlinkUserInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (void)unlinkUserInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)unlinkUserInBackground:(id)arg1;
+ (_Bool)unlinkUser:(id)arg1 error:(id *)arg2;
+ (_Bool)unlinkUser:(id)arg1;
+ (void)initializeFacebookWithUrlShemeSuffix:(id)arg1;
+ (void)initializeFacebook;
+ (void)initializeWithApplicationId:(id)arg1 urlSchemeSuffix:(id)arg2;
+ (void)initializeWithApplicationId:(id)arg1;
+ (void)checkInitialization;
+ (_Bool)isLinkedWithUser:(id)arg1;
+ (id)session;

@end

@interface PFFacebookTokenCachingStrategy : FBSessionTokenCachingStrategy
{
    NSMutableDictionary *tokenInfo;
}

@property(retain, nonatomic) NSMutableDictionary *tokenInfo; // @synthesize tokenInfo;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *facebookId;
@property(copy, nonatomic) NSDate *expirationDate;
@property(copy, nonatomic) NSString *accessToken;
- (void)cacheTokenInformation:(id)arg1;
- (void)clearToken;
- (id)fetchTokenInformation;
- (void)prepareTokenInfo;

@end

@interface PFFacebookAuthenticationProvider : NSObject <PFAuthenticationProvider>
{
    int currentOperationId;
    PFFacebookTokenCachingStrategy *tokenCache;
    NSString *urlSchemeSuffix;
    NSString *appId;
    NSArray *permissions;
    CDUnknownBlockType tokenExtensionCallback;
    unsigned long long audience;
    FBSession *session;
}

@property(retain, nonatomic) FBSession *session; // @synthesize session;
@property(nonatomic) unsigned long long audience; // @synthesize audience;
@property(copy, nonatomic) CDUnknownBlockType tokenExtensionCallback; // @synthesize tokenExtensionCallback;
@property int currentOperationId; // @synthesize currentOperationId;
@property(copy, nonatomic) NSArray *permissions; // @synthesize permissions;
@property(copy, nonatomic) NSString *appId; // @synthesize appId;
@property(copy, nonatomic) NSString *urlSchemeSuffix; // @synthesize urlSchemeSuffix;
@property(retain, nonatomic) PFFacebookTokenCachingStrategy *tokenCache; // @synthesize tokenCache;
- (void).cxx_destruct;
- (_Bool)handleOpenURL:(id)arg1;
- (void)cancel;
- (id)reauthorizeInBackground;
- (id)authType;
- (_Bool)restoreAuthentication:(id)arg1;
- (void)initializeSession;
- (void)deauthenticate;
- (id)authenticateInBackground;
- (_Bool)containsPublishPermission;
- (id)rawSession;
- (id)authDataWithFacebookId:(id)arg1 accessToken:(id)arg2 expiration:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Flurry : NSObject
{
}

+ (void)shutdown;
+ (_Bool)sendUsageInfo;
+ (void)setShowErrorInLogEnabled:(_Bool)arg1;
+ (void)setPushToken:(id)arg1;
+ (void)setAge:(int)arg1;
+ (void)setGender:(id)arg1;
+ (void)setBackgroundSessionEnabled:(_Bool)arg1;
+ (void)setSessionReportsOnPauseEnabled:(_Bool)arg1;
+ (void)setSessionReportsOnCloseEnabled:(_Bool)arg1;
+ (void)setCrashReportingEnabled:(_Bool)arg1;
+ (void)setSecureTransportEnabled:(_Bool)arg1;
+ (void)setAppCloudServerToStaging:(_Bool)arg1;
+ (void)setServerURL:(id)arg1;
+ (void)setEventLoggingEnabled:(_Bool)arg1;
+ (void)setUserID:(id)arg1;
+ (void)logPageView;
+ (void)logAllPageViews:(id)arg1;
+ (void)logError:(id)arg1 message:(id)arg2 error:(id)arg3;
+ (void)logError:(id)arg1 message:(id)arg2 exception:(id)arg3;
+ (void)endTimedEvent:(id)arg1 withParameters:(id)arg2;
+ (void)logEvent:(id)arg1 withParameters:(id)arg2 timed:(_Bool)arg3;
+ (void)logEvent:(id)arg1 timed:(_Bool)arg2;
+ (void)logEvent:(id)arg1 withParameters:(id)arg2;
+ (void)logEvent:(id)arg1;
+ (void)applicationDidBecomeActive;
+ (void)applicationWillEnterForeground;
+ (void)pauseSession;
+ (void)pauseBackgroundSession;
+ (void)endSession;
+ (void)setLatitude:(double)arg1 longitude:(double)arg2 horizontalAccuracy:(float)arg3 verticalAccuracy:(float)arg4;
+ (void)startSession:(id)arg1;
+ (void)startSession:(id)arg1 withOptions:(id)arg2;
+ (void)createAndSendSession;
+ (void)applicationWillResignActive;
+ (void)setMaxSessionsSaved:(int)arg1;
+ (void)setSessionContinueSeconds:(int)arg1;
+ (int)sessionContinueSeconds;
+ (void)setDebugLogEnabled:(_Bool)arg1;
+ (void)setLogLevel:(int)arg1;
+ (id)getFlurryAgentVersion;
+ (void)parseDictionary:(id)arg1;
+ (void)parsePropertyList:(id)arg1;
+ (void)setLaunchOptions:(id)arg1;
+ (void)setAppVersion:(id)arg1;

@end

@interface FlurryEvent : NSObject <NSCoding>
{
    NSString *_name;
    NSDate *_started;
    NSDate *_ended;
    _Bool _timed;
    _Bool _automaticallyEnded;
    NSDictionary *_parameters;
    NSNumber *_eventLogId;
}

@property(retain, nonatomic) NSNumber *eventLogId; // @synthesize eventLogId=_eventLogId;
@property(nonatomic) _Bool automaticallyEnded; // @synthesize automaticallyEnded=_automaticallyEnded;
@property(retain, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(nonatomic) _Bool timed; // @synthesize timed=_timed;
@property(retain, nonatomic) NSDate *ended; // @synthesize ended=_ended;
@property(retain, nonatomic) NSDate *started; // @synthesize started=_started;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void)dealloc;
- (id)dataRelativeToSessionStart:(id)arg1;
- (long long)duration;
- (long long)startOffsetFromSessionStart:(id)arg1;
- (_Bool)isUnterminated;
- (void)encodeWithCoder:(id)arg1;
- (void)updateParameters:(id)arg1;
- (void)updateID;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 timed:(_Bool)arg2 parameters:(id)arg3;
- (id)initWithName:(id)arg1 timed:(_Bool)arg2;
- (id)initWithName:(id)arg1;

@end

@interface FlurryFileCache : NSObject
{
    NSString *_apiKey;
    NSString *_agentVersion;
}

+ (void)cleanup;
+ (id)instance;
+ (id)createInstanceWithApiKey:(id)arg1 agentVersion:(id)arg2;
@property(copy, nonatomic) NSString *agentVersion; // @synthesize agentVersion=_agentVersion;
@property(copy, nonatomic) NSString *apiKey; // @synthesize apiKey=_apiKey;
- (void)dealloc;
- (_Bool)remove:(id)arg1 forCurentAgentVersion:(_Bool)arg2;
- (_Bool)remove:(id)arg1;
- (id)get:(id)arg1 forCurentAgentVersion:(_Bool)arg2;
- (id)get:(id)arg1;
- (id)save:(id)arg1 prefix:(id)arg2 forCurentAgentVersion:(_Bool)arg3;
- (id)save:(id)arg1 prefix:(id)arg2;
- (id)createFilePath:(id)arg1 forCurentAgentVersion:(_Bool)arg2;
- (id)initWithApiKey:(id)arg1 agentVersion:(id)arg2;

@end

@interface FlurryHeartBeater : NSObject
{
    NSTimer *_timer;
}

+ (id)instance;
+ (id)createAndStartInstance:(double)arg1;
- (void)dealloc;
- (void)heartBeat;
- (void)start:(double)arg1;

@end

@interface FlurryReachability : NSObject
{
    NSString *key_;
    struct __SCNetworkReachability *_flurryReachabilityRef;
}

+ (id)flurryReachabilityForLocalWiFi;
+ (id)flurryReachabilityForInternetConnection;
+ (id)flurryReachabilityWithAddress:(const struct sockaddr_in *)arg1;
+ (id)flurryMakeAddressKey:(unsigned int)arg1;
+ (id)flurryReachabilityWithHostName:(id)arg1;
+ (_Bool)accessInstanceVariablesDirectly;
@property(copy) NSString *key; // @synthesize key=key_;
- (unsigned int)flurryReachabilityFlags;
- (_Bool)isFlurryReachableViaWiFi;
- (_Bool)isFlurryReachableViaWWAN;
- (_Bool)isFlurryUserInterventionRequired;
- (_Bool)isFlurryConnectionOnDemand;
- (_Bool)isFlurryConnectionRequired;
- (_Bool)isFlurryReachable;
- (int)flurryCurrentReachabilityStatus;
- (int)flurryNetworkStatusForFlags:(unsigned int)arg1;
- (_Bool)isFlurryReachabilityEqual:(id)arg1;
- (void)flurryStopNotifier;
- (_Bool)flurryStartNotifier;
- (id)initWithFlurryReachabilityRef:(struct __SCNetworkReachability *)arg1;
- (void)dealloc;

@end

@interface FlurryPageViewDelegate : NSObject <UINavigationControllerDelegate, UITabBarControllerDelegate, UITableViewDelegate>
{
    id <NSObject> _delegate;
}

+ (void)createDelegateOnTarget:(id)arg1;
+ (id)createInvocationOnSelector:(SEL)arg1 target:(id)arg2;
@property(retain, nonatomic) id <NSObject> delegate; // @synthesize delegate=_delegate;
- (void)tabBarController:(id)arg1 didEndCustomizingViewControllers:(id)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(id)arg1 willEndCustomizingViewControllers:(id)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(id)arg1 willBeginCustomizingViewControllers:(id)arg2;
- (void)tabBarController:(id)arg1 didSelectViewController:(id)arg2;
- (_Bool)tabBarController:(id)arg1 shouldSelectViewController:(id)arg2;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)navigationController:(id)arg1 didShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

@end

@interface FlurryProtocolData : NSObject
{
}

+ (void)appendLargeData:(id)arg1 toData:(id)arg2;
+ (void)appendShortData:(id)arg1 toData:(id)arg2;
+ (void)appendTinyData:(id)arg1 toData:(id)arg2;
+ (void)appendString:(id)arg1 toData:(id)arg2;
+ (void)appendTimestamp:(id)arg1 toData:(id)arg2;
+ (void)appendDouble:(double)arg1 toData:(id)arg2;
+ (void)appendFloat:(float)arg1 toData:(id)arg2;
+ (void)appendLong:(long long)arg1 toData:(id)arg2;
+ (void)appendInt:(int)arg1 toData:(id)arg2;
+ (void)appendUshort:(unsigned short)arg1 toData:(id)arg2;
+ (void)appendByte:(BOOL)arg1 toData:(id)arg2;
+ (void)appendBoolean:(BOOL)arg1 toData:(id)arg2;
+ (id)limitStringLength:(id)arg1;
+ (long long)timeIntervalFrom:(id)arg1 to:(id)arg2;

@end

@interface FlurrySession : NSObject <IFlurrySession, NSCoding>
{
    _Bool _crashed;
    _Bool _eventLogComplete;
    _Bool _eventLoggingEnabled;
    _Bool _sessionReportsOnCloseEnabled;
    _Bool _sessionReportsOnPauseEnabled;
    _Bool _crashReportingEnabled;
    float _accuracy;
    int _pageViewCount;
    int _totalErrorCount;
    int _gender;
    int _serializationVersion;
    NSData *_crashReportData;
    NSDate *_startTime;
    NSString *_apiKey;
    NSMutableDictionary *_sessionParams;
    double _latitude;
    double _longitude;
    NSString *_appVersion;
    NSDate *_endTime;
    NSMutableArray *_purchaseItems;
    NSDate *_resumeTime;
    NSDate *_pauseTime;
    long long _totalPauseIntervalMillis;
    NSMutableDictionary *_eventCounts;
    NSMutableArray *_pendingEventLog;
    NSMutableArray *_eventLog;
    NSMutableArray *_errors;
    NSString *_locale;
    NSString *_timeZone;
    NSString *_pushToken;
    NSString *_userID;
    NSDate *_age;
}

+ (double)reduceLocationPrecision:(double)arg1;
+ (id)initialTimestampFilePath;
+ (id)oldInitialTimestampFilePathUptilAgentVersion109;
+ (id)currentSessionFilePath;
+ (void)removeCurrentSessionFile;
+ (id)sessionsFilePath;
+ (void)setMaxSessions:(int)arg1;
+ (id)removeOldSessionsIfNecessary:(id)arg1;
+ (void)addToSavedSessions:(id)arg1;
+ (void)setSavedSessions:(id)arg1;
+ (id)savedSessions;
+ (id)currentSession;
+ (void)cleanup;
+ (void)setupCurrentSessionWithKey:(id)arg1;
+ (id)sessionWithApiKey:(id)arg1 startTime:(id)arg2;
+ (id)getAgentVersion;
+ (id)getAgentVersionWithBuild;
@property(retain, nonatomic) NSDate *age; // @synthesize age=_age;
@property(nonatomic) _Bool eventLoggingEnabled; // @synthesize eventLoggingEnabled=_eventLoggingEnabled;
@property(nonatomic) int serializationVersion; // @synthesize serializationVersion=_serializationVersion;
@property(copy, nonatomic) NSString *pushToken; // @synthesize pushToken=_pushToken;
@property(nonatomic) int gender; // @synthesize gender=_gender;
@property(retain, nonatomic) NSString *timeZone; // @synthesize timeZone=_timeZone;
@property(retain, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(nonatomic) int totalErrorCount; // @synthesize totalErrorCount=_totalErrorCount;
@property(retain, nonatomic) NSMutableArray *errors; // @synthesize errors=_errors;
@property(nonatomic) _Bool eventLogComplete; // @synthesize eventLogComplete=_eventLogComplete;
@property(retain, nonatomic) NSMutableArray *eventLog; // @synthesize eventLog=_eventLog;
@property(retain, nonatomic) NSMutableArray *pendingEventLog; // @synthesize pendingEventLog=_pendingEventLog;
@property(retain, nonatomic) NSMutableDictionary *eventCounts; // @synthesize eventCounts=_eventCounts;
@property(nonatomic) long long totalPauseIntervalMillis; // @synthesize totalPauseIntervalMillis=_totalPauseIntervalMillis;
@property(retain) NSDate *pauseTime; // @synthesize pauseTime=_pauseTime;
@property(retain) NSDate *resumeTime; // @synthesize resumeTime=_resumeTime;
@property(retain, nonatomic) NSMutableArray *purchaseItems; // @synthesize purchaseItems=_purchaseItems;
@property(retain, nonatomic) NSDate *endTime; // @synthesize endTime=_endTime;
@property(nonatomic) int pageViewCount; // @synthesize pageViewCount=_pageViewCount;
@property(copy, nonatomic) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(nonatomic) float accuracy; // @synthesize accuracy=_accuracy;
@property(nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(nonatomic) double latitude; // @synthesize latitude=_latitude;
@property(retain, nonatomic) NSMutableDictionary *sessionParams; // @synthesize sessionParams=_sessionParams;
@property(retain) NSString *apiKey; // @synthesize apiKey=_apiKey;
@property(retain) NSDate *startTime; // @synthesize startTime=_startTime;
@property(retain, nonatomic) NSData *crashReportData; // @synthesize crashReportData=_crashReportData;
@property _Bool crashed; // @synthesize crashed=_crashed;
- (void)dealloc;
- (long long)sessionLength;
- (long long)timeIntervalSinceSessionStart:(id)arg1;
- (_Bool)sentReportSuccessful;
- (id)initialTimestamp;
- (_Bool)isPaused;
- (id)dataForSessions:(id)arg1;
- (void)getSessionParametersAtPhase:(int)arg1;
- (id)data;
- (void)sendSessionsToServerIncludingCurrentSession:(_Bool)arg1;
- (void)sendSessionsToServerForCreateSession;
- (void)saveToDisk;
- (void)mergeValidPendingEventLog;
- (void)mergePendingEventLog;
- (void)putEventIntoLog:(id)arg1;
- (void)recordPurchaseItem:(id)arg1;
- (void)recordError:(id)arg1 message:(id)arg2 exceptionString:(id)arg3 errorType:(int)arg4 liveReport:(id)arg5;
- (void)recordError:(id)arg1 message:(id)arg2 error:(id)arg3 liveReport:(id)arg4;
- (void)recordError:(id)arg1 message:(id)arg2 exception:(id)arg3 liveReport:(id)arg4;
- (void)endTimedEvents;
- (void)endTimedEvent:(id)arg1 withParameters:(id)arg2;
- (void)recordEvent:(id)arg1 withParameters:(id)arg2 timed:(_Bool)arg3;
- (void)recordEvent:(id)arg1 withParameters:(id)arg2;
- (void)setAgeInYears:(int)arg1;
- (void)setGenderAsString:(id)arg1;
@property(copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
- (void)setLatitude:(double)arg1 longitude:(double)arg2 horizontalAccuracy:(float)arg3 verticalAccuracy:(float)arg4;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)maybeIncrementPageView;
- (void)finishSession;
- (void)endSession;
- (void)archiveSession;
- (void)resumeSession;
- (void)markSessionAsResuming;
- (void)pauseSession;
- (void)resetSessionData;
- (id)initWithAPIKey:(id)arg1 appVersion:(id)arg2 startDate:(id)arg3;
@property(nonatomic) _Bool crashReportingEnabled; // @synthesize crashReportingEnabled=_crashReportingEnabled;
@property(nonatomic) _Bool sessionReportsOnPauseEnabled; // @synthesize sessionReportsOnPauseEnabled=_sessionReportsOnPauseEnabled;
@property(nonatomic) _Bool sessionReportsOnCloseEnabled; // @synthesize sessionReportsOnCloseEnabled=_sessionReportsOnCloseEnabled;
- (id)sessionWithNewEventsWithApiKey:(id)arg1 startTime:(id)arg2;

@end

@interface FlurryUtil : NSObject
{
}

+ (long long)lastBootTime;
+ (unsigned long long)getDiskSize;
+ (unsigned long long)getFreeDiskspace;
+ (int)int32FromNSInteger:(long long)arg1;
+ (long long)getBatteryState;
+ (unsigned int)uint32FromNSUInteger:(unsigned long long)arg1;
+ (float)getBatteryLevel;
+ (id)allCounters;
+ (void)printCounters;
+ (void)decrementCounter:(id)arg1;
+ (void)decrementCounter:(id)arg1 locationName:(char *)arg2;
+ (void)incrementCounter:(id)arg1;
+ (void)incrementCounter:(id)arg1 locationName:(char *)arg2;
+ (id)preferredLanguage;
+ (id)generateCFUUIDBasedUID;
+ (id)generateCFUUID;
+ (id)getFlurryId;
+ (char *)getUser;
+ (char *)getModule;
+ (char *)getMgr;
+ (char *)getId;
+ (void)cleanupStoredIdentifierForVendor;
+ (id)getIdentifierForVendor;
+ (id)getMACUID;
+ (id)MACString;
+ (id)hashDataToHexString:(char *)arg1 length:(unsigned long long)arg2;
+ (id)hashData:(id)arg1;
+ (BOOL)appIsCracked;
+ (BOOL)deviceIsJailbroken;
+ (id)devicePlatform;
+ (id)filePathDirectory;
+ (id)oldFilePathDirectoryUptilAgentVersion109;
+ (_Bool)isKeyWindowAlertView;
+ (struct _NSRange)flurryRangeOfData:(id)arg1 inData:(id)arg2;
+ (id)createParamKeysDictFromUrlParams:(id)arg1 paramsHeader:(id *)arg2 paramsKVString:(id *)arg3;
+ (int)dataChecksum:(id)arg1;
+ (void)generateChecksumTable;
+ (_Bool)isPortaitOrientationSupportedForWindow:(id)arg1;
+ (_Bool)theAppIsActive;
+ (_Bool)viewIsVisible:(id)arg1;
+ (id)encodeToPercentEscapeString:(id)arg1;
+ (id)decodeFromPercentEscapeString:(id)arg1;
+ (_Bool)addSkipBackupAttributeToItemAtURL:(id)arg1;
+ (long long)getSystemVersionAsAnInteger;
+ (_Bool)isRetina;
+ (_Bool)isIPad;
+ (_Bool)canvasInPortraitUpsideDown;
+ (_Bool)canvasInLandscapeLeft;
+ (_Bool)canvasInLandscapeRight;
+ (_Bool)canvasInLandscape;
+ (id)getCanvasOrientation;
+ (_Bool)canvasInLandscapeLeft:(id)arg1;
+ (_Bool)canvasInLandscapeRight:(id)arg1;
+ (_Bool)canvasInLandscape:(id)arg1;
+ (struct CGRect)screenBounds;
+ (struct CGRect)screenBounds:(id)arg1;
+ (id)getOrientationStrFromInterfaceOrientation:(long long)arg1;
+ (id)safeUnarchiveObjectWithFile:(id)arg1;
+ (void)handleException:(id)arg1;
+ (void)setShowErrorInLogEnabled:(_Bool)arg1;
+ (int)logLevel;
+ (void)setLogLevel:(int)arg1;
+ (void)assertThreadIsNotMain;

@end

@interface FlurryConnectionDelegate : NSObject
{
    NSMutableData *_body;
    NSHTTPURLResponse *_response;
    id <FlurryHttpAsyncTaskDelegate> _httpTaskDelegate;
    FlurryHttpAsyncTask *_httpTask;
    NSError *_error;
    _Bool _done;
}

@property(retain, nonatomic) FlurryHttpAsyncTask *httpTask; // @synthesize httpTask=_httpTask;
@property(retain, nonatomic) id <FlurryHttpAsyncTaskDelegate> httpTaskDelegate; // @synthesize httpTaskDelegate=_httpTaskDelegate;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) NSMutableData *body; // @synthesize body=_body;
@property(readonly, nonatomic) NSHTTPURLResponse *response; // @synthesize response=_response;
- (id)constructResponse;
- (void)connectionCanceled;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (_Bool)isDone;
- (void)dealloc;
- (id)initWithTaskDelegate:(id)arg1 taskParent:(id)arg2;
- (id)init;

@end

@interface FlurryHTTPResponse : NSObject
{
    NSData *_body;
    int _statusCode;
    NSError *_error;
    NSMutableDictionary *_headers;
}

+ (id)filePath:(int)arg1;
+ (id)readFromURL:(id)arg1;
@property(readonly, nonatomic) NSMutableDictionary *headers; // @synthesize headers=_headers;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
@property(readonly, nonatomic) NSData *body; // @synthesize body=_body;
- (id)saveToDisk;
- (id)description;
- (_Bool)isError;
- (_Bool)isSuccess;
- (void)dealloc;
- (id)initWithBody:(id)arg1 statusCode:(long long)arg2 headers:(id)arg3 error:(id)arg4;
- (id)initWithResponse:(id)arg1 body:(id)arg2 error:(id)arg3;

@end

@interface FlurryAutoIncrement : NSObject
{
    NSMutableDictionary *counters;
}

+ (id)instance;
@property(retain, nonatomic) NSMutableDictionary *counters; // @synthesize counters;
- (void)dealloc;
- (void)resetAll;
- (int)nextCountFor:(int)arg1;
- (id)init;

@end

@interface FlurryNetworkUtil : NSObject
{
    NSError *lastNetworkOperationError;
}

+ (id)appCloudServerUrl;
+ (void)setAppCloudServerToStaging:(_Bool)arg1;
+ (id)serverURL;
+ (void)setSecureTransportEnabled:(_Bool)arg1;
+ (void)setServerURL:(id)arg1;
+ (id)adLogServerUrl;
+ (void)setAdLogServerUrl:(id)arg1;
+ (id)adServerUrl;
+ (void)setAdServerUrl:(id)arg1;
+ (int)networkStatus;
+ (_Bool)isNetworkReachable;
+ (void)updateNetworkStatus:(id)arg1;
+ (void)initNetworkReachability;
+ (_Bool)isNetworkLikelyNotReachable;
+ (void)setNetworkLikelyNotReachable;
+ (void)setLastNetworkOperationError:(id)arg1;
+ (id)instance;
@property(retain) NSError *lastNetworkOperationError; // @synthesize lastNetworkOperationError;

@end

@interface FlurryHttpAsyncTask : NSObject
{
    NSURLConnection *_connection;
    NSString *_tag;
    NSMutableDictionary *_taskParams;
    unsigned long long _backgroundTask;
}

+ (id)urlWithProtocol:(id)arg1 host:(id)arg2 port:(int)arg3 path:(id)arg4 query:(id)arg5;
+ (id)stringToQueryDictionary:(id)arg1;
+ (id)queryDictionaryToString:(id)arg1;
+ (id)sendMethod:(id)arg1 to:(id)arg2 body:(id)arg3 headerFields:(id)arg4 timeoutInterval:(int)arg5 useCachePolicy:(id)arg6 delegate:(id)arg7 startImmediately:(_Bool)arg8;
+ (id)sendMethod:(id)arg1 to:(id)arg2 body:(id)arg3 headerFields:(id)arg4 delegate:(id)arg5 startImmediately:(_Bool)arg6;
+ (id)sendMethod:(id)arg1 to:(id)arg2 body:(id)arg3 headerFields:(id)arg4 delegate:(id)arg5;
+ (id)post:(id)arg1 body:(id)arg2 headerFields:(id)arg3 delegate:(id)arg4;
+ (id)post:(id)arg1 body:(id)arg2 delegate:(id)arg3;
+ (id)get:(id)arg1 headerFields:(id)arg2 delegate:(id)arg3;
+ (id)get:(id)arg1 delegate:(id)arg2;
@property(nonatomic) unsigned long long backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property(retain, nonatomic) NSMutableDictionary *taskParams; // @synthesize taskParams=_taskParams;
@property(retain, nonatomic) NSString *tag; // @synthesize tag=_tag;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
- (void)cancelTask;
- (void)startInRunLoop:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface FlurryDataSender : FlurryDataSenderBase <FlurryHttpAsyncTaskDelegate>
{
    FlurryDataSenderIndex *_dataIndex;
}

+ (id)dataKey;
+ (Class)httpAsyncTaskClass;
+ (void)cleanup;
+ (id)instance;
+ (void)setupInstanceWithQueue:(id)arg1;
@property(retain, nonatomic) FlurryDataSenderIndex *dataIndex; // @synthesize dataIndex=_dataIndex;
- (void)retransmitNotSentBlocks;
- (void)didCompleteAllTasks;
- (void)requestSuccessComplete:(id)arg1 withResponse:(id)arg2;
- (void)requestSuccessful:(id)arg1 withResponse:(id)arg2;
- (void)requestDidCancel:(id)arg1 withResponse:(id)arg2;
- (void)requestDidFail:(id)arg1 withResponse:(id)arg2;
- (void)sendSessionsData:(id)arg1;
- (void)sendData:(id)arg1 withIdentifier:(id)arg2;
- (_Bool)everSentReportSuccessfully;
- (void)removeStoredDataWithIdentifier:(id)arg1;
- (id)storeData:(id)arg1;
- (void)setup;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

@end

@interface FlurryDataSenderBlockInfo : NSObject <NSCoding>
{
    NSString *_identifier;
    unsigned long long _dataSize;
    NSDate *_creationDate;
}

@property(retain, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(nonatomic) unsigned long long dataSize; // @synthesize dataSize=_dataSize;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (_Bool)setData:(id)arg1;
- (id)data;
- (_Bool)deletePersistentData;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (id)initWithData:(id)arg1;

@end

@interface FlurryDataSenderIndex : NSObject <NSCoding>
{
    _Bool _sentReportSuccessfully;
    NSMutableDictionary *_indexMap;
}

+ (id)instantiatedIndex;
@property(nonatomic) _Bool sentReportSuccessfully; // @synthesize sentReportSuccessfully=_sentReportSuccessfully;
@property(retain, nonatomic) NSMutableDictionary *indexMap; // @synthesize indexMap=_indexMap;
- (id)notSentBlocksForDataKey:(id)arg1;
- (_Bool)discardOutdatedBlocksForDataKey:(id)arg1;
- (void)setupForCurrentDataKey:(id)arg1;
- (void)removeBlockInfoWithIdentifier:(id)arg1 forDataKey:(id)arg2;
- (void)addBlockInfo:(id)arg1 forDataKey:(id)arg2;
- (void)saveState;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface FlurryImpl : NSObject <IFlurrySession>
{
    _Bool isBackgroundSupported;
    FlurrySession *session;
    NSString *apiKey;
    NSDate *startTime;
    NSObject<OS_dispatch_queue> *queue;
}

+ (void)unregisterBackgoundTask:(unsigned long long)arg1;
+ (unsigned long long)registerBackgoundTask;
+ (void)cleanup;
+ (id)instance;
@property(nonatomic) _Bool isBackgroundSupported; // @synthesize isBackgroundSupported;
@property(nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue;
@property(retain) NSDate *startTime; // @synthesize startTime;
@property(retain) NSString *apiKey; // @synthesize apiKey;
@property(retain, nonatomic) FlurrySession *session; // @synthesize session;
@property(readonly) NSDate *pauseTime; // @dynamic pauseTime;
- (int)pageViewCount;
- (id)age;
- (int)gender;
- (double)accuracy;
- (double)longitude;
- (double)latitude;
- (void)sendSessionsToServerForCreateSession;
- (void)endSession;
- (void)resumeSession;
- (void)markSessionAsResuming;
- (void)pauseSession;
- (void)recordPurchaseItem:(id)arg1;
- (void)recordError:(id)arg1 message:(id)arg2 exceptionString:(id)arg3 errorType:(int)arg4 liveReport:(id)arg5;
- (void)recordError:(id)arg1 message:(id)arg2 error:(id)arg3 liveReport:(id)arg4;
- (void)recordError:(id)arg1 message:(id)arg2 exception:(id)arg3 liveReport:(id)arg4;
- (void)endTimedEvent:(id)arg1 withParameters:(id)arg2;
- (void)recordEvent:(id)arg1 withParameters:(id)arg2 timed:(_Bool)arg3;
- (void)recordEvent:(id)arg1 withParameters:(id)arg2;
- (void)setPushToken:(id)arg1;
- (void)setAgeInYears:(int)arg1;
- (void)setGenderAsString:(id)arg1;
- (void)maybeIncrementPageView;
- (void)setCrashReportingEnabled:(_Bool)arg1;
- (void)setSessionReportsOnPauseEnabled:(_Bool)arg1;
- (void)setSessionReportsOnCloseEnabled:(_Bool)arg1;
- (void)setUserID:(id)arg1;
- (void)setEventLoggingEnabled:(_Bool)arg1;
- (void)setLatitude:(double)arg1 longitude:(double)arg2 horizontalAccuracy:(float)arg3 verticalAccuracy:(float)arg4;
- (void)setupForApiKey:(id)arg1;
- (void)resetStartDate;
- (void)dealloc;
- (id)init;

@end

@interface FlurrySharedData : NSObject
{
}

+ (id)instance;
- (id)storedAppCloudUserID;
- (void)storeAppCloudUserID:(id)arg1;

@end

@interface FlurryDataSenderBase : NSObject
{
    NSMutableArray *_runningTasks;
    unsigned long long _backgroundTask;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) unsigned long long backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property(retain, nonatomic) NSMutableArray *runningTasks; // @synthesize runningTasks=_runningTasks;
- (void)performRetransmitNotSentBlocks;
- (void)networkStatusChanged:(id)arg1;
- (void)stopBackgroundTasksTracking;
- (void)startBackgroundTaskTrackingIfNeeded;
- (void)cancelTasks;
- (void)didCompleteAllTasks;
- (void)retransmitNotSentBlocks;
- (void)unregisterTask:(id)arg1 completedSuccessfuly:(_Bool)arg2;
- (void)registerNewTask:(id)arg1;
- (_Bool)hasOngoingTasksWindow;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;
- (id)init;
- (void)initialize;

@end

@interface FlurryGlobalVariableStorage : NSObject
{
    _Bool _udidEnabled;
    _Bool _sessionReportsOnCloseEnabled;
    _Bool _sessionReportsOnPauseEnabled;
    _Bool _backgroundSessionEnabled;
    _Bool _crashReportingEnabled;
    _Bool _eventLoggingEnabled;
    _Bool _startSessionCalled;
    _Bool _macAddressEnabled;
    int _pauseSecondsBeforeStartingNewSession;
    int _age;
    NSString *_savedResponseUrl;
    NSString *_apiKey;
    NSDate *_pauseTime;
    NSDate *_lastPageViewDate;
    NSString *_appVersion;
    NSString *_userID;
    NSString *_gender;
    NSMutableDictionary *_launchOptions;
    NSString *_pushToken;
    id _location;
    PLCrashReporter *_flurryCrashReporter;
}

+ (void)cleanup;
+ (id)sharedInstance;
@property(retain, nonatomic) PLCrashReporter *flurryCrashReporter; // @synthesize flurryCrashReporter=_flurryCrashReporter;
@property _Bool macAddressEnabled; // @synthesize macAddressEnabled=_macAddressEnabled;
@property(retain) id location; // @synthesize location=_location;
@property(copy, nonatomic) NSString *pushToken; // @synthesize pushToken=_pushToken;
@property(readonly) NSMutableDictionary *launchOptions; // @synthesize launchOptions=_launchOptions;
@property _Bool startSessionCalled; // @synthesize startSessionCalled=_startSessionCalled;
@property(copy) NSString *gender; // @synthesize gender=_gender;
@property int age; // @synthesize age=_age;
@property(copy) NSString *userID; // @synthesize userID=_userID;
@property _Bool eventLoggingEnabled; // @synthesize eventLoggingEnabled=_eventLoggingEnabled;
@property(copy) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property _Bool crashReportingEnabled; // @synthesize crashReportingEnabled=_crashReportingEnabled;
@property _Bool backgroundSessionEnabled; // @synthesize backgroundSessionEnabled=_backgroundSessionEnabled;
@property _Bool sessionReportsOnPauseEnabled; // @synthesize sessionReportsOnPauseEnabled=_sessionReportsOnPauseEnabled;
@property _Bool sessionReportsOnCloseEnabled; // @synthesize sessionReportsOnCloseEnabled=_sessionReportsOnCloseEnabled;
@property(retain) NSDate *lastPageViewDate; // @synthesize lastPageViewDate=_lastPageViewDate;
@property(retain) NSDate *pauseTime; // @synthesize pauseTime=_pauseTime;
@property int pauseSecondsBeforeStartingNewSession; // @synthesize pauseSecondsBeforeStartingNewSession=_pauseSecondsBeforeStartingNewSession;
@property _Bool udidEnabled; // @synthesize udidEnabled=_udidEnabled;
@property(copy, nonatomic) NSString *apiKey; // @synthesize apiKey=_apiKey;
@property(copy) NSString *savedResponseUrl; // @synthesize savedResponseUrl=_savedResponseUrl;
- (id)init;

@end

@interface FlurryError : NSObject <NSCoding>
{
    int errorID;
    int errorType;
    NSDate *date;
    NSString *errorString;
    NSString *errorMessage;
    NSString *exceptionString;
    NSData *reportData;
}

+ (id)errorWithString:(id)arg1 message:(id)arg2 exceptionString:(id)arg3 errorType:(int)arg4 reportData:(id)arg5;
@property(retain, nonatomic) NSData *reportData; // @synthesize reportData;
@property(nonatomic) int errorType; // @synthesize errorType;
@property(retain, nonatomic) NSString *exceptionString; // @synthesize exceptionString;
@property(retain, nonatomic) NSString *errorMessage; // @synthesize errorMessage;
@property(retain, nonatomic) NSString *errorString; // @synthesize errorString;
@property(retain, nonatomic) NSDate *date; // @synthesize date;
@property(nonatomic) int errorID; // @synthesize errorID;
- (void)dealloc;
- (id)description;
- (void)appendToData:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface FlurryKeychainWrapper : NSObject
{
    NSString *identifier;
}

+ (id)keychainWrapperWithIdentifier:(id)arg1;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier;
- (void)removeObjectForKey:(id)arg1;
- (_Bool)updateValueData:(id)arg1 forKey:(id)arg2;
- (_Bool)setData:(id)arg1 forKey:(id)arg2;
- (_Bool)setString:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (_Bool)setObject:(id)arg1 forKey:(id)arg2;
- (id)stringForKey:(id)arg1;
- (id)dataForKey:(id)arg1;
- (id)setupSearchForKey:(id)arg1;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

@interface FlurryPLCrashSignalHandler : NSObject
{
    struct __darwin_sigaltstack _sigstk;
}

+ (void)resetHandlers;
+ (id)sharedHandler;
+ (void)initialize;
- (id).cxx_construct;
- (_Bool)registerHandlerForSignal:(int)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3 error:(id *)arg4;
- (_Bool)registerHandlerWithSignal:(int)arg1 error:(id *)arg2;
- (id)init;

@end

@interface FlurryPLCrashReporter : NSObject
{
    FlurryPLCrashReporterConfig *_config;
    _Bool _enabled;
    FlurryPLCrashMachExceptionServer *_machServer;
    FlurryPLCrashMachExceptionPortSet *_previousMachPorts;
    NSString *_applicationIdentifier;
    NSString *_applicationVersion;
    NSString *_crashReportDirectory;
}

+ (id)sharedReporter;
+ (void)initialize;
- (void)setCrashCallbacks:(struct PLCrashReporterCallbacks *)arg1;
- (id)generateLiveReportAndReturnError:(id *)arg1;
- (id)generateLiveReport;
- (id)generateLiveReportWithThread:(unsigned int)arg1 error:(id *)arg2;
- (id)generateLiveReportWithThread:(unsigned int)arg1;
- (_Bool)enableCrashReporterAndReturnError:(id *)arg1;
- (_Bool)enableCrashReporter;
- (_Bool)purgePendingCrashReportAndReturnError:(id *)arg1;
- (_Bool)purgePendingCrashReport;
- (id)loadPendingCrashReportDataAndReturnError:(id *)arg1;
- (id)loadPendingCrashReportData;
- (_Bool)hasPendingCrashReport;
- (id)initWithConfiguration:(id)arg1;
- (id)init;

@end

@interface FlurryPLCrashReport : NSObject
{
    struct _PLCrashReportDecoder *_decoder;
    FlurryPLCrashReportSystemInfo *_systemInfo;
    FlurryPLCrashReportMachineInfo *_machineInfo;
    FlurryPLCrashReportApplicationInfo *_applicationInfo;
    FlurryPLCrashReportProcessInfo *_processInfo;
    FlurryPLCrashReportSignalInfo *_signalInfo;
    FlurryPLCrashReportMachExceptionInfo *_machExceptionInfo;
    NSArray *_threads;
    NSArray *_images;
    FlurryPLCrashReportExceptionInfo *_exceptionInfo;
    struct __CFUUID *_uuid;
}

@property(readonly, nonatomic) struct __CFUUID *uuidRef; // @synthesize uuidRef=_uuid;
@property(readonly, nonatomic) FlurryPLCrashReportExceptionInfo *exceptionInfo; // @synthesize exceptionInfo=_exceptionInfo;
@property(readonly, nonatomic) NSArray *images; // @synthesize images=_images;
@property(readonly, nonatomic) NSArray *threads; // @synthesize threads=_threads;
@property(readonly, nonatomic) FlurryPLCrashReportMachExceptionInfo *machExceptionInfo; // @synthesize machExceptionInfo=_machExceptionInfo;
@property(readonly, nonatomic) FlurryPLCrashReportSignalInfo *signalInfo; // @synthesize signalInfo=_signalInfo;
@property(readonly, nonatomic) FlurryPLCrashReportProcessInfo *processInfo; // @synthesize processInfo=_processInfo;
@property(readonly, nonatomic) FlurryPLCrashReportApplicationInfo *applicationInfo; // @synthesize applicationInfo=_applicationInfo;
@property(readonly, nonatomic) FlurryPLCrashReportMachineInfo *machineInfo; // @synthesize machineInfo=_machineInfo;
@property(readonly, nonatomic) FlurryPLCrashReportSystemInfo *systemInfo; // @synthesize systemInfo=_systemInfo;
@property(readonly, nonatomic) _Bool hasExceptionInfo;
@property(readonly, nonatomic) _Bool hasProcessInfo;
@property(readonly, nonatomic) _Bool hasMachineInfo;
- (id)imageForAddress:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithData:(id)arg1 error:(id *)arg2;

@end

@interface FlurryPLCrashReportSystemInfo : NSObject
{
    int _operatingSystem;
    NSString *_osVersion;
    NSString *_osBuild;
    int _architecture;
    NSDate *_timestamp;
}

@property(readonly, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) int architecture; // @synthesize architecture=_architecture;
@property(readonly, nonatomic) NSString *operatingSystemBuild; // @synthesize operatingSystemBuild=_osBuild;
@property(readonly, nonatomic) NSString *operatingSystemVersion; // @synthesize operatingSystemVersion=_osVersion;
@property(readonly, nonatomic) int operatingSystem; // @synthesize operatingSystem=_operatingSystem;
- (void)dealloc;
- (id)initWithOperatingSystem:(int)arg1 operatingSystemVersion:(id)arg2 operatingSystemBuild:(id)arg3 architecture:(int)arg4 timestamp:(id)arg5;
- (id)initWithOperatingSystem:(int)arg1 operatingSystemVersion:(id)arg2 architecture:(int)arg3 timestamp:(id)arg4;

@end

@interface FlurryPLCrashReportApplicationInfo : NSObject
{
    NSString *_applicationIdentifier;
    NSString *_applicationVersion;
}

@property(readonly, nonatomic) NSString *applicationVersion; // @synthesize applicationVersion=_applicationVersion;
@property(readonly, nonatomic) NSString *applicationIdentifier; // @synthesize applicationIdentifier=_applicationIdentifier;
- (void)dealloc;
- (id)initWithApplicationIdentifier:(id)arg1 applicationVersion:(id)arg2;

@end

@interface FlurryPLCrashReportThreadInfo : NSObject
{
    long long _threadNumber;
    NSArray *_stackFrames;
    _Bool _crashed;
    NSArray *_registers;
}

@property(readonly, nonatomic) NSArray *registers; // @synthesize registers=_registers;
@property(readonly, nonatomic) _Bool crashed; // @synthesize crashed=_crashed;
@property(readonly, nonatomic) NSArray *stackFrames; // @synthesize stackFrames=_stackFrames;
@property(readonly, nonatomic) long long threadNumber; // @synthesize threadNumber=_threadNumber;
- (void)dealloc;
- (id)initWithThreadNumber:(long long)arg1 stackFrames:(id)arg2 crashed:(_Bool)arg3 registers:(id)arg4;

@end

@interface FlurryPLCrashReportBinaryImageInfo : NSObject
{
    FlurryPLCrashReportProcessorInfo *_processorInfo;
    unsigned long long _baseAddress;
    unsigned long long _imageSize;
    NSString *_imageName;
    _Bool _hasImageUUID;
    NSString *_imageUUID;
}

@property(readonly, nonatomic) NSString *imageUUID; // @synthesize imageUUID=_imageUUID;
@property(readonly, nonatomic) _Bool hasImageUUID; // @synthesize hasImageUUID=_hasImageUUID;
@property(readonly, nonatomic) NSString *imageName; // @synthesize imageName=_imageName;
@property(readonly, nonatomic) unsigned long long imageSize; // @synthesize imageSize=_imageSize;
@property(readonly, nonatomic) unsigned long long imageBaseAddress; // @synthesize imageBaseAddress=_baseAddress;
@property(readonly, nonatomic) FlurryPLCrashReportProcessorInfo *codeType; // @synthesize codeType=_processorInfo;
- (void)dealloc;
- (id)initWithCodeType:(id)arg1 baseAddress:(unsigned long long)arg2 size:(unsigned long long)arg3 name:(id)arg4 uuid:(id)arg5;

@end

@interface FlurryPLCrashReportExceptionInfo : NSObject
{
    NSString *_name;
    NSString *_reason;
    NSArray *_stackFrames;
}

@property(readonly, nonatomic) NSArray *stackFrames; // @synthesize stackFrames=_stackFrames;
@property(readonly, nonatomic) NSString *exceptionReason; // @synthesize exceptionReason=_reason;
@property(readonly, nonatomic) NSString *exceptionName; // @synthesize exceptionName=_name;
- (void)dealloc;
- (id)initWithExceptionName:(id)arg1 reason:(id)arg2 stackFrames:(id)arg3;
- (id)initWithExceptionName:(id)arg1 reason:(id)arg2;

@end

@interface FlurryPLCrashReportSignalInfo : NSObject
{
    NSString *_name;
    NSString *_code;
    unsigned long long _address;
}

@property(readonly, nonatomic) unsigned long long address; // @synthesize address=_address;
@property(readonly, nonatomic) NSString *code; // @synthesize code=_code;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void)dealloc;
- (id)initWithSignalName:(id)arg1 code:(id)arg2 address:(unsigned long long)arg3;

@end

@interface FlurryPLCrashReportProcessInfo : NSObject
{
    NSString *_processName;
    unsigned long long _processID;
    NSString *_processPath;
    NSDate *_processStartTime;
    NSString *_parentProcessName;
    unsigned long long _parentProcessID;
    _Bool _native;
}

@property(readonly, nonatomic) _Bool native; // @synthesize native=_native;
@property(readonly, nonatomic) unsigned long long parentProcessID; // @synthesize parentProcessID=_parentProcessID;
@property(readonly, nonatomic) NSString *parentProcessName; // @synthesize parentProcessName=_parentProcessName;
@property(readonly, nonatomic) NSDate *processStartTime; // @synthesize processStartTime=_processStartTime;
@property(readonly, nonatomic) NSString *processPath; // @synthesize processPath=_processPath;
@property(readonly, nonatomic) unsigned long long processID; // @synthesize processID=_processID;
@property(readonly, nonatomic) NSString *processName; // @synthesize processName=_processName;
- (void)dealloc;
- (id)initWithProcessName:(id)arg1 processID:(unsigned long long)arg2 processPath:(id)arg3 processStartTime:(id)arg4 parentProcessName:(id)arg5 parentProcessID:(unsigned long long)arg6 native:(_Bool)arg7;

@end

@interface FlurryPLCrashReportTextFormatter : NSObject <PLCrashReportFormatter>
{
    int _textFormat;
    unsigned long long _stringEncoding;
}

+ (id)stringValueForCrashReport:(id)arg1 withTextFormat:(int)arg2;
- (id)formatReport:(id)arg1 error:(id *)arg2;
- (id)initWithTextFormat:(int)arg1 stringEncoding:(unsigned long long)arg2;

@end

@interface FlurryPLCrashReportProcessorInfo : NSObject
{
    int _typeEncoding;
    unsigned long long _type;
    unsigned long long _subtype;
}

@property(readonly, nonatomic) unsigned long long subtype; // @synthesize subtype=_subtype;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
@property(readonly, nonatomic) int typeEncoding; // @synthesize typeEncoding=_typeEncoding;
- (id)initWithTypeEncoding:(int)arg1 type:(unsigned long long)arg2 subtype:(unsigned long long)arg3;

@end

@interface FlurryPLCrashReportMachineInfo : NSObject
{
    NSString *_modelName;
    FlurryPLCrashReportProcessorInfo *_processorInfo;
    unsigned long long _processorCount;
    unsigned long long _logicalProcessorCount;
}

@property(readonly, nonatomic) unsigned long long logicalProcessorCount; // @synthesize logicalProcessorCount=_logicalProcessorCount;
@property(readonly, nonatomic) unsigned long long processorCount; // @synthesize processorCount=_processorCount;
@property(readonly, nonatomic) FlurryPLCrashReportProcessorInfo *processorInfo; // @synthesize processorInfo=_processorInfo;
@property(readonly, nonatomic) NSString *modelName; // @synthesize modelName=_modelName;
- (void)dealloc;
- (id)initWithModelName:(id)arg1 processorInfo:(id)arg2 processorCount:(unsigned long long)arg3 logicalProcessorCount:(unsigned long long)arg4;

@end

@interface FlurryPLCrashReportStackFrameInfo : NSObject
{
    unsigned long long _instructionPointer;
    FlurryPLCrashReportSymbolInfo *_symbolInfo;
}

@property(readonly, nonatomic) FlurryPLCrashReportSymbolInfo *symbolInfo; // @synthesize symbolInfo=_symbolInfo;
@property(readonly, nonatomic) unsigned long long instructionPointer; // @synthesize instructionPointer=_instructionPointer;
- (void)dealloc;
- (id)initWithInstructionPointer:(unsigned long long)arg1 symbolInfo:(id)arg2;

@end

@interface FlurryPLCrashReportRegisterInfo : NSObject
{
    NSString *_registerName;
    unsigned long long _registerValue;
}

@property(readonly, nonatomic) unsigned long long registerValue; // @synthesize registerValue=_registerValue;
@property(readonly, nonatomic) NSString *registerName; // @synthesize registerName=_registerName;
- (void)dealloc;
- (id)initWithRegisterName:(id)arg1 registerValue:(unsigned long long)arg2;

@end

@interface FlurryPLCrashReportSymbolInfo : NSObject
{
    NSString *_symbolName;
    unsigned long long _startAddress;
    unsigned long long _endAddress;
}

@property(readonly, nonatomic) unsigned long long endAddress; // @synthesize endAddress=_endAddress;
@property(readonly, nonatomic) unsigned long long startAddress; // @synthesize startAddress=_startAddress;
@property(readonly, nonatomic) NSString *symbolName; // @synthesize symbolName=_symbolName;
- (void)dealloc;
- (id)initWithSymbolName:(id)arg1 startAddress:(unsigned long long)arg2 endAddress:(unsigned long long)arg3;

@end

@interface FlurryPLCrashMachExceptionServer : NSObject
{
    struct plcrash_exception_server_context *_serverContext;
}

- (void)dealloc;
- (id)exceptionPortWithMask:(unsigned int)arg1 error:(id *)arg2;
- (unsigned int)copySendRightForServerAndReturningError:(id *)arg1;
@property(readonly, nonatomic) unsigned int serverThread;
- (id)initWithCallBack:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2 error:(id *)arg3;

@end

@interface FlurryPLCrashProcessInfo : NSObject
{
    int _processID;
    NSString *_processName;
    int _parentProcessID;
    struct timeval _startTime;
    _Bool _traced;
}

+ (id)currentProcessInfo;
@property(readonly, nonatomic) struct timeval startTime; // @synthesize startTime=_startTime;
@property(readonly, nonatomic, getter=isTraced) _Bool traced; // @synthesize traced=_traced;
@property(readonly, nonatomic) int parentProcessID; // @synthesize parentProcessID=_parentProcessID;
@property(readonly, nonatomic) NSString *processName; // @synthesize processName=_processName;
@property(readonly, nonatomic) int processID; // @synthesize processID=_processID;
- (void)dealloc;
- (id)initWithProcessID:(int)arg1;

@end

@interface FlurryPLCrashHostInfo : NSObject
{
    struct PLCrashHostInfoVersion _darwinVersion;
}

+ (id)currentHostInfo;
@property(readonly, nonatomic) struct PLCrashHostInfoVersion darwinVersion; // @synthesize darwinVersion=_darwinVersion;
- (id)init;

@end

@interface FlurryPLCrashMachExceptionPort : NSObject
{
    unsigned int _mask;
    unsigned int _port;
    int _behavior;
    int _flavor;
}

+ (id)exceptionPortsForThread:(unsigned int)arg1 mask:(unsigned int)arg2 error:(id *)arg3;
+ (id)exceptionPortsForTask:(unsigned int)arg1 mask:(unsigned int)arg2 error:(id *)arg3;
@property(readonly, nonatomic) int flavor; // @synthesize flavor=_flavor;
@property(readonly, nonatomic) int behavior; // @synthesize behavior=_behavior;
@property(readonly, nonatomic) unsigned int mask; // @synthesize mask=_mask;
@property(readonly, nonatomic) unsigned int server_port; // @synthesize server_port=_port;
- (_Bool)registerForThread:(unsigned int)arg1 previousPortSet:(id *)arg2 error:(id *)arg3;
- (_Bool)registerForTask:(unsigned int)arg1 previousPortSet:(id *)arg2 error:(id *)arg3;
- (void)dealloc;
- (id)initWithServerPort:(unsigned int)arg1 mask:(unsigned int)arg2 behavior:(int)arg3 flavor:(int)arg4;

@end

@interface FlurryPLCrashMachExceptionPortSet : NSObject <NSFastEnumeration>
{
    NSSet *_state_set;
    struct plcrash_mach_exception_port_set _asyncSafeRepresentation;
}

@property(readonly, nonatomic) NSSet *set; // @synthesize set=_state_set;
@property(readonly, nonatomic) struct plcrash_mach_exception_port_set asyncSafeRepresentation; // @synthesize asyncSafeRepresentation=_asyncSafeRepresentation;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithAsyncSafeRepresentation:(struct plcrash_mach_exception_port_set)arg1;
- (id)initWithSet:(id)arg1;

@end

@interface FlurryPLCrashReporterConfig : NSObject
{
    unsigned long long _signalHandlerType;
    unsigned long long _symbolicationStrategy;
}

+ (id)defaultConfiguration;
@property(readonly, nonatomic) unsigned long long symbolicationStrategy; // @synthesize symbolicationStrategy=_symbolicationStrategy;
@property(readonly, nonatomic) unsigned long long signalHandlerType; // @synthesize signalHandlerType=_signalHandlerType;
- (id)initWithSignalHandlerType:(unsigned long long)arg1 symbolicationStrategy:(unsigned long long)arg2;
- (id)init;

@end

@interface FlurryPLCrashUncaughtExceptionHandler : NSObject
{
}

@end

@interface FlurryPLCrashReportMachExceptionInfo : NSObject
{
    unsigned long long _type;
    NSArray *_codes;
}

@property(readonly, nonatomic) NSArray *codes; // @synthesize codes=_codes;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (void)dealloc;
- (id)initWithType:(unsigned long long)arg1 codes:(id)arg2;

@end

@interface WTEvent : NSObject
{
    NSString *eventPath;
    NSString *eventDescription;
    NSMutableDictionary *_p;
    NSMutableString *_descriptionStorage;
}

+ (id)eventForSearchEvent:(id)arg1 eventDescr:(id)arg2 eventType:(id)arg3 searchPhrase:(id)arg4 searchResult:(id)arg5;
+ (id)eventForAdImpression:(id)arg1 eventDescr:(id)arg2 eventType:(id)arg3 adNames:(id)arg4;
+ (id)RepeatAndJoin:(id)arg1 Seperator:(id)arg2 Count:(int)arg3;
+ (id)eventForAdClick:(id)arg1 eventDescr:(id)arg2 eventType:(id)arg3 adName:(id)arg4;
+ (id)eventForAction:(id)arg1 eventDescr:(id)arg2 eventType:(id)arg3;
+ (id)eventForScreenView:(id)arg1 eventDescr:(id)arg2 eventType:(id)arg3 contentGroup:(id)arg4;
+ (id)eventForContentView:(id)arg1 eventDescr:(id)arg2 eventType:(id)arg3 contentGroup:(id)arg4;
+ (id)eventForConversion:(id)arg1 eventDescr:(id)arg2 eventType:(id)arg3 contentGroup:(id)arg4 conversionName:(id)arg5;
+ (id)eventForMediaView:(id)arg1 eventDescr:(id)arg2 eventType:(id)arg3 contentGroup:(id)arg4 mediaName:(id)arg5 mediaType:(id)arg6 mediaEvent:(id)arg7;
+ (id)eventForProductView:(id)arg1 eventDescr:(id)arg2 eventType:(id)arg3 contentGroup:(id)arg4 productId:(id)arg5 productSku:(id)arg6;
+ (id)eventForNotification;
+ (id)eventForNotification:(id)arg1;
+ (id)eventForAppForeground;
+ (id)eventForAppForeground:(id)arg1;
+ (id)eventForAppBackground;
+ (id)eventForAppBackground:(id)arg1;
+ (id)eventForAppExit;
+ (id)eventForAppExit:(id)arg1;
+ (id)eventForAppLaunch:(int)arg1;
+ (id)eventForAppLaunch:(int)arg1 applicationName:(id)arg2;
+ (id)eventForError:(id)arg1;
+ (id)eventForError:(id)arg1 applicationName:(id)arg2;
+ (id)eventWithPath:(id)arg1 eventDescr:(id)arg2 eventType:(id)arg3;
+ (id)internalEventForNotification:(id)arg1;
+ (id)internalEventForAppForeground:(id)arg1;
+ (id)internalEventForAppBackground:(id)arg1;
+ (id)internalEventForAppExit:(id)arg1;
+ (id)internalEventForError:(id)arg1 applicationName:(id)arg2;
+ (id)internalEventForAppLaunch:(int)arg1 applicationName:(id)arg2;
+ (id)appName;
+ (id)WTDCParameterMap;
@property(retain, nonatomic) NSString *eventDescription; // @synthesize eventDescription;
@property(retain, nonatomic) NSString *eventPath; // @synthesize eventPath;
- (void)dealloc;
- (id)description;
- (_Bool)isKeySet:(id)arg1;
- (void)setValue:(id)arg1 forCustomParameter:(id)arg2;
- (id)EncodeValue:(id)arg1;
- (void)setValue:(id)arg1 forParameter:(int)arg2;
- (id)getSessionId;
- (_Bool)containsVisitorId;
- (id)initWithEventPath:(id)arg1 eventDescr:(id)arg2 eventType:(id)arg3;
- (id)initWithEventPath:(id)arg1 eventDescr:(id)arg2;
- (id)init;
- (int)descriptionLength;

@end

@interface WTReachability : NSObject
{
    _Bool localWiFiRef;
    struct __SCNetworkReachability *reachabilityRef;
}

+ (id)reachabilityForLocalWiFi;
+ (id)reachabilityForInternetConnection;
+ (id)reachabilityWithAddress:(const struct sockaddr_in *)arg1;
+ (id)reachabilityWithHostName:(id)arg1;
- (int)currentReachabilityStatus;
- (_Bool)connectionRequired;
- (int)networkStatusForFlags:(unsigned int)arg1;
- (int)localWiFiStatusForFlags:(unsigned int)arg1;
- (void)dealloc;
- (void)stopNotifer;
- (_Bool)startNotifer;

@end

@interface WTDCEvent : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSNumber *RetryCount; // @dynamic RetryCount;
@property(retain, nonatomic) NSDate *Timestamp; // @dynamic Timestamp;
@property(retain, nonatomic) NSString *Value; // @dynamic Value;
@end

@interface WTDCVisitor : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSString *PrimaryId; // @dynamic PrimaryId;
@property(retain, nonatomic) NSString *SecondaryId; // @dynamic SecondaryId;
@end

@interface WTDCSession : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSString *SessionId; // @dynamic SessionId;
@property(retain, nonatomic) NSDate *Timestamp; // @dynamic Timestamp;
@end

@interface WTDCManager : NSObject
{
    NSMutableArray *foregroundQueue;
    NSThread *asyncEvtTimer;
    WTReachability *currentNetwork;
    int eventCursor;
    NSArray *fetchedResults;
    NSThread *sendThread;
    NSCondition *sendThreadCondition;
    _Bool paused;
    _Bool pausedStatePriorToBeingBackgrounded;
    NSManagedObjectModel *managedObjectModel;
    NSManagedObjectContext *managedObjectContext;
    NSPersistentStoreCoordinator *persistentStoreCoordinator;
    NSString *userAgent;
    NSString *deviceModel;
    NSString *osVersion;
    NSString *sessionId;
    NSString *connectionType;
    NSString *strTimezone;
    NSString *localeLang;
    NSString *localeCountry;
    NSString *carrierCountry;
    NSString *dataCarrier;
    NSString *screenSize;
    _Bool newVisitor;
    _Bool newVisit;
    _Bool newDay;
    double LastEventTime;
    NSMutableDictionary *managedObjectContextStore;
    long long threadCount;
    WTConfig *config;
    _Bool firstEventFired;
    NSString *visitorId;
    NSString *dcsReferrer;
    NSString *docRootDir;
    NSString *_persistedIdMethod;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSString *persistedIdMethod; // @synthesize persistedIdMethod=_persistedIdMethod;
@property(retain, nonatomic) NSString *docRootDir; // @synthesize docRootDir;
@property(retain, nonatomic) NSMutableDictionary *managedObjectContextStore; // @synthesize managedObjectContextStore;
@property(nonatomic) double LastEventTime; // @synthesize LastEventTime;
@property(nonatomic) _Bool newVisitor; // @synthesize newVisitor;
@property(nonatomic) _Bool newVisit; // @synthesize newVisit;
@property(nonatomic) _Bool newDay; // @synthesize newDay;
@property(retain, nonatomic) NSThread *sendThread; // @synthesize sendThread;
@property(retain, nonatomic) NSString *screenSize; // @synthesize screenSize;
@property(retain, nonatomic) NSString *strTimezone; // @synthesize strTimezone;
@property(retain, nonatomic) NSString *connectionType; // @synthesize connectionType;
@property(retain, nonatomic) NSString *sessionId; // @synthesize sessionId;
@property(retain, nonatomic) NSString *osVersion; // @synthesize osVersion;
@property(retain, nonatomic) NSString *deviceModel; // @synthesize deviceModel;
@property(retain, nonatomic) NSString *userAgent; // @synthesize userAgent;
@property(retain, nonatomic) NSString *dataCarrier; // @synthesize dataCarrier;
@property(retain, nonatomic) NSString *carrierCountry; // @synthesize carrierCountry;
@property(retain, nonatomic) NSString *localeCountry; // @synthesize localeCountry;
@property(retain, nonatomic) NSString *localeLang; // @synthesize localeLang;
@property(retain, nonatomic) NSArray *fetchedResults; // @synthesize fetchedResults;
@property(retain, nonatomic) WTReachability *currentNetwork; // @synthesize currentNetwork;
@property(retain, nonatomic) NSThread *asyncEvtTimer; // @synthesize asyncEvtTimer;
@property(retain, nonatomic) NSMutableArray *foregroundQueue; // @synthesize foregroundQueue;
@property(nonatomic) _Bool firstEventFired; // @synthesize firstEventFired;
@property(retain, nonatomic) NSString *dcsReferrer; // @synthesize dcsReferrer;
@property(retain, nonatomic) NSString *visitorId; // @synthesize visitorId;
- (void)log:(id)arg1;
- (void)openURLWithSessionInfo:(id)arg1;
- (_Bool)addSkipBackupAttributeToItemAtPath:(id)arg1;
- (id)getConfig;
- (id)currentQueueSize;
- (void)clearEventQueue;
- (void)readClientDefaults;
- (void)establishVisitorId;
- (void)persistVisitorIdWithMethod:(id)arg1;
- (void)establishVisitorIdFromPreferences;
- (id)randomId;
- (id)vendorId;
- (_Bool)isValidVisitorId:(id)arg1;
- (void)checkSessionId:(_Bool)arg1;
- (void)establishSessionId;
- (id)nextEvent:(int)arg1;
- (void)commitEvent:(id)arg1;
- (_Bool)batteryTooLow;
- (id)enforceCacheRowLimit:(id)arg1;
- (void)addEventToCacheAsync:(id)arg1;
- (void)processAsyncQueue;
- (id)dequeue:(id)arg1;
- (void)enqueue:(id)arg1 queue:(id)arg2;
- (void)addEventToCache:(id)arg1;
- (void)createStoredEvent:(id)arg1;
- (void)addVisitorId:(id)arg1;
- (int)postEventToDC:(id)arg1;
- (_Bool)isNewVisit;
- (_Bool)isNewDay;
- (_Bool)containsVisitorId:(id)arg1;
- (void)removePersistentStore:(id)arg1;
- (void)movePersistentStoreFrom:(id)arg1 to:(id)arg2 overrideTarget:(_Bool)arg3;
@property(readonly, nonatomic) NSPersistentStoreCoordinator *persistentStoreCoordinator; // @synthesize persistentStoreCoordinator;
@property(readonly, nonatomic) NSManagedObjectModel *managedObjectModel; // @synthesize managedObjectModel;
@property(readonly, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext;
- (id)libraryCachesDirectory;
- (id)applicationDocumentsDirectory;
- (_Bool)realSendEvents;
- (void)networkStatusChanged:(id)arg1;
- (void)shutdownEventTracking;
- (void)stopSendThread;
- (void)resumeSendThread;
- (void)pauseSendThread;
- (void)waitForSendThreadToFinish;
- (void)startSendLoop:(id)arg1;
- (void)startAsyncCollectionThread;
- (void)startSendThread;
- (id)deviceName;
- (id)getEpochTimeInMillisec;
- (void)setInstanceToForegroundMode;
- (void)setInstanceToBackgroundMode;
- (id)init;
- (void)setUncaughtExceptionHandlerActive:(_Bool)arg1;

@end

@interface WTAppDelegate : NSObject <UIApplicationDelegate>
{
}

- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (void)applicationDidFinishLaunching:(id)arg1;

// Remaining properties
@property(retain, nonatomic) UIWindow *window;

@end

@interface WTConfigSetting : NSObject
{
    NSString *key;
    NSString *defaultValue;
    CDUnknownBlockType validateString;
    CDUnknownBlockType validateInt;
    CDUnknownBlockType validateNumber;
}

@property(retain, nonatomic) CDUnknownBlockType validateNumber; // @synthesize validateNumber;
@property(retain, nonatomic) CDUnknownBlockType validateInt; // @synthesize validateInt;
@property(retain, nonatomic) CDUnknownBlockType validateString; // @synthesize validateString;
@property(retain, nonatomic) NSString *defaultValue; // @synthesize defaultValue;
@property(retain, nonatomic) NSString *key; // @synthesize key;
- (void)dealloc;
- (id)initWithKey:(id)arg1 defaultValue:(id)arg2 validateString:(CDUnknownBlockType)arg3 validateInt:(CDUnknownBlockType)arg4 validateNumber:(CDUnknownBlockType)arg5;
- (id)initWithKey:(id)arg1 defaultValue:(id)arg2 validateNumber:(CDUnknownBlockType)arg3;
- (id)initWithKey:(id)arg1 defaultValue:(id)arg2 validateInt:(CDUnknownBlockType)arg3;
- (id)initWithKey:(id)arg1 defaultValue:(id)arg2 validateString:(CDUnknownBlockType)arg3;

@end

@interface WTConfig : NSObject
{
    _Bool loggingEnabled;
    _Bool trackingEnabled;
    _Bool dcsVerboseEnabled;
    _Bool pausedOnStartUp;
    _Bool useUncaughtExceptionHandler;
    _Bool bgSend;
    int sessionTimeout;
    int sessionMaximum;
    int datasourcetimezone;
    NSString *persistedPListPath;
    NSMutableDictionary *pListConfig;
    NSMutableDictionary *persistedConfig;
    NSString *dcsId;
    NSString *dcUrlPath;
    NSString *appCategory;
    NSString *appName;
    NSString *appPublisher;
    NSString *appVersion;
    NSNumber *maxQueueSize;
    NSNumber *maxRetryCount;
    NSNumber *batteryThresholdPercent;
    NSString *idMethod;
    WTConfigSetting *WT_DCSID;
    WTConfigSetting *WT_URL;
    WTConfigSetting *WT_DEBUG;
    WTConfigSetting *WT_SESSION_TIMEOUT;
    WTConfigSetting *WT_SESSION_MAXIMUM;
    WTConfigSetting *WT_TIMEZONE;
    WTConfigSetting *WT_MAX_QUEUE_SIZE;
    WTConfigSetting *WT_RETRY_COUNT;
    WTConfigSetting *WT_BATTERY_THRESHOLD;
    WTConfigSetting *WT_USE_UNCAUGHT_EXCEPTION_HANDLER;
    WTConfigSetting *WT_ENABLED;
    WTConfigSetting *WT_ENABLED_BG_SEND;
    WTConfigSetting *WT_PAUSED_ON_STARTUP;
    WTConfigSetting *WT_APP_CATEGORY;
    WTConfigSetting *WT_APP_NAME;
    WTConfigSetting *WT_APP_PUBLISHER;
    WTConfigSetting *WT_APP_VERSION;
    WTConfigSetting *WT_ID_METHOD;
}

@property(retain, nonatomic) WTConfigSetting *WT_ID_METHOD; // @synthesize WT_ID_METHOD;
@property(retain, nonatomic) WTConfigSetting *WT_APP_VERSION; // @synthesize WT_APP_VERSION;
@property(retain, nonatomic) WTConfigSetting *WT_APP_PUBLISHER; // @synthesize WT_APP_PUBLISHER;
@property(retain, nonatomic) WTConfigSetting *WT_APP_NAME; // @synthesize WT_APP_NAME;
@property(retain, nonatomic) WTConfigSetting *WT_APP_CATEGORY; // @synthesize WT_APP_CATEGORY;
@property(retain, nonatomic) WTConfigSetting *WT_PAUSED_ON_STARTUP; // @synthesize WT_PAUSED_ON_STARTUP;
@property(retain, nonatomic) WTConfigSetting *WT_ENABLED_BG_SEND; // @synthesize WT_ENABLED_BG_SEND;
@property(retain, nonatomic) WTConfigSetting *WT_ENABLED; // @synthesize WT_ENABLED;
@property(retain, nonatomic) WTConfigSetting *WT_USE_UNCAUGHT_EXCEPTION_HANDLER; // @synthesize WT_USE_UNCAUGHT_EXCEPTION_HANDLER;
@property(retain, nonatomic) WTConfigSetting *WT_BATTERY_THRESHOLD; // @synthesize WT_BATTERY_THRESHOLD;
@property(retain, nonatomic) WTConfigSetting *WT_RETRY_COUNT; // @synthesize WT_RETRY_COUNT;
@property(retain, nonatomic) WTConfigSetting *WT_MAX_QUEUE_SIZE; // @synthesize WT_MAX_QUEUE_SIZE;
@property(retain, nonatomic) WTConfigSetting *WT_TIMEZONE; // @synthesize WT_TIMEZONE;
@property(retain, nonatomic) WTConfigSetting *WT_SESSION_MAXIMUM; // @synthesize WT_SESSION_MAXIMUM;
@property(retain, nonatomic) WTConfigSetting *WT_SESSION_TIMEOUT; // @synthesize WT_SESSION_TIMEOUT;
@property(retain, nonatomic) WTConfigSetting *WT_DEBUG; // @synthesize WT_DEBUG;
@property(retain, nonatomic) WTConfigSetting *WT_URL; // @synthesize WT_URL;
@property(retain, nonatomic) WTConfigSetting *WT_DCSID; // @synthesize WT_DCSID;
@property(retain, nonatomic) NSString *idMethod; // @synthesize idMethod;
@property(retain, nonatomic) NSNumber *batteryThresholdPercent; // @synthesize batteryThresholdPercent;
@property(retain, nonatomic) NSNumber *maxRetryCount; // @synthesize maxRetryCount;
@property(retain, nonatomic) NSNumber *maxQueueSize; // @synthesize maxQueueSize;
@property(retain, nonatomic) NSString *appVersion; // @synthesize appVersion;
@property(retain, nonatomic) NSString *appPublisher; // @synthesize appPublisher;
@property(retain, nonatomic) NSString *appName; // @synthesize appName;
@property(retain, nonatomic) NSString *appCategory; // @synthesize appCategory;
@property(nonatomic) int datasourcetimezone; // @synthesize datasourcetimezone;
@property(nonatomic) int sessionMaximum; // @synthesize sessionMaximum;
@property(nonatomic) int sessionTimeout; // @synthesize sessionTimeout;
@property(nonatomic) _Bool bgSend; // @synthesize bgSend;
@property(nonatomic) _Bool useUncaughtExceptionHandler; // @synthesize useUncaughtExceptionHandler;
@property(nonatomic) _Bool pausedOnStartUp; // @synthesize pausedOnStartUp;
@property(nonatomic) _Bool dcsVerboseEnabled; // @synthesize dcsVerboseEnabled;
@property(nonatomic) _Bool trackingEnabled; // @synthesize trackingEnabled;
@property(nonatomic) _Bool loggingEnabled; // @synthesize loggingEnabled;
@property(retain, nonatomic) NSString *dcUrlPath; // @synthesize dcUrlPath;
@property(retain, nonatomic) NSString *dcsId; // @synthesize dcsId;
@property(retain, nonatomic) NSMutableDictionary *persistedConfig; // @synthesize persistedConfig;
@property(retain, nonatomic) NSMutableDictionary *pListConfig; // @synthesize pListConfig;
@property(retain, nonatomic) NSString *persistedPListPath; // @synthesize persistedPListPath;
- (void)dealloc;
- (void)printConfig;
- (id)getNumberValueForConfigSetting:(id)arg1;
- (int)getIntValueForConfigSetting:(id)arg1;
- (id)getStringValueForConfigSetting:(id)arg1;
- (_Bool)getBoolValueForConfigSetting:(id)arg1;
- (void)persistConfigSetting:(id)arg1 withValue:(id)arg2;
- (void)persistConfigValue:(id)arg1 forKey:(id)arg2;
- (_Bool)isValidAppVersion:(id)arg1;
- (_Bool)isValidAppName:(id)arg1;
- (void)loadDefaults;
- (id)initWithRootDir:(id)arg1;

@end

@interface WTUIViewController : UIViewController
{
}

- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface WTUIWebViewDelegate : NSObject <UIWebViewDelegate>
{
    int currentToken;
}

- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)parseJson:(id)arg1 error:(id *)arg2;
- (id)parseTokenizedJson:(id)arg1 error:(id *)arg2;
- (id)dictionaryParseTokenizedJson:(id)arg1 error:(id *)arg2;
- (id)arrayParseTokenizedJson:(id)arg1 error:(id *)arg2;
- (id)tokenizeJson:(id)arg1 error:(id *)arg2;
- (id)stripQuotes:(id)arg1;
- (void)onSearchEvent:(id)arg1;
- (void)onScreenView:(id)arg1;
- (void)onContentView:(id)arg1;
- (void)onProductView:(id)arg1;
- (void)onMediaEvent:(id)arg1;
- (void)onCustomEvent:(id)arg1;
- (void)onConversionEvent:(id)arg1;
- (void)onButtonClick:(id)arg1;
- (void)onAdImpressionEvent:(id)arg1;
- (void)onAdClickEvent:(id)arg1;
- (void)onApplicationNotify:(id)arg1;
- (void)onApplicationForeground:(id)arg1;
- (void)onApplicationBackground:(id)arg1;
- (void)onApplicationError:(id)arg1;
- (void)onApplicationTerminate:(id)arg1;
- (void)onApplicationStart:(id)arg1;
- (void)trackEvent:(id)arg1 withArgs:(id)arg2 withCustomParametersAtIndex:(int)arg3;

@end

@interface NSDate (PVExtensions)
+ (long long)monthNow;
+ (long long)yearNow;
+ (id)midnightForDefaultTimeZoneForDate:(id)arg1;
+ (id)midnightForDefaultTimeZone;
+ (id)midnightUTC;
+ (id)midnightUTCForDate:(id)arg1;
@end

@interface NSMutableDictionary (PVExtensions)
- (void)setOrRemoveObject:(id)arg1 forKey:(id)arg2;
- (id)arrayOfValuesSortedByValueKey:(id)arg1 ascending:(_Bool)arg2;
@end

@interface NSString (PVExtensions)
- (id)stringByRemovingLeadingAndTrailingWhiteSpace;
- (id)stringByRemovingTrailingWhiteSpace;
- (id)stringByRemovingLeadingWhiteSpace;
- (id)md5hex;
- (_Bool)decodeCGSize:(struct CGSize *)arg1;
- (_Bool)decodeCGPoint:(struct CGPoint *)arg1;
- (_Bool)decodeCGRect:(struct CGRect *)arg1;
- (struct _NSRange)findXMLElementByName:(id)arg1 range:(struct _NSRange)arg2 locale:(id)arg3;
- (struct _NSRange)findXMLElementByName:(id)arg1;
- (_Bool)evaluateAsXSDBoolean;
- (id)stringByReplacingBracketedKeywordsWithURLEscapedValues:(id)arg1;
- (id)stringByAddingPercentEscapesForLegalURLCharacters;
- (id)stringByReplacingCharactersWithDefaultXMLEntities;
@end

@interface NSObject (PVExtensions)
+ (id)getPropertyNames:(id)arg1 forClass:(Class)arg2;
- (void)safeRemoveObserver:(id)arg1 forKeyPath:(id)arg2;
- (id)dictionary;
@end

@interface NSDictionary (ContentManagerNotification) <ServerErrorSpecific>
- (id)commerceURLString;
- (_Bool)excerpt;
- (_Bool)readerVersionNotSupported;
- (_Bool)invalidPublication;
- (_Bool)noPublications;
- (_Bool)userNotQualified;
- (_Bool)invalidUser;
- (_Bool)restoreRequired;
- (_Bool)excerptNotFound;
- (_Bool)noExcerptsFound;
- (_Bool)badVersionStub;
- (_Bool)badRequest;
- (_Bool)systemNotAvailableServerError;
- (_Bool)userNotEntitledServerError;
- (_Bool)noItemsInLibraryServerError;
- (_Bool)invalidNewstandServerError;
- (_Bool)unexpectedServerError;
- (_Bool)loginExistsServerError;
- (_Bool)packingListNotFoundServerError;
- (_Bool)maxUserDevicesReachedServerError;
- (_Bool)issueNotSupportedForDeviceServerError;
- (_Bool)invalidNewPasswordServerError;
- (_Bool)invalidLoginServerError;
- (_Bool)deviceNotAuthorizedServerError;
- (_Bool)authorizationFailureServerError;
- (_Bool)appVersionNotSupportedServerError;
- (_Bool)isTableOfContents;
- (_Bool)serverError;
- (id)serverErrors;
- (_Bool)hasServerErrors;
- (id)parseError;
- (_Bool)hasParseError;
- (id)metadata;
- (id)fileName;
- (id)totalDownloadSize;
- (id)bytesDownloaded;
- (_Bool)isReprocessingAssets;
- (id)excerptId;
- (id)issueId;
- (id)issue;
- (id)pubId;
- (id)userId;
@end

@interface NSFileManager (PVExtensions)
+ (_Bool)checkAvailableDiskSpace:(id)arg1;
+ (double)getFreeDiskSpaceInKilobytes;
+ (double)getFreeDiskSpaceInMegabytes;
+ (double)getFreeDiskSpaceInGigabytes;
+ (double)getFreeDiskSpaceInBytes;
+ (double)getTotalDiskSpaceInKilobytes;
+ (double)getTotalDiskSpaceInMegaabytes;
+ (double)getTotalDiskSpaceInGigabytes;
+ (double)getTotalDiskSpaceInBytes;
+ (id)getFileSystemAttributesForDocumentDictionaryPath;
+ (id)formattedSizeOfFile:(id)arg1;
+ (id)sizeOfFile:(id)arg1;
- (void)showLowDiskspaceAlert;
- (void)showNotEnoughDiskspaceAlert:(id)arg1;
- (void)notifyFileManagerDelegate:(id)arg1 ofErrorCode:(long long)arg2 context:(id)arg3;
- (id)stringForMergeDirectoryErrorCode:(long long)arg1 context:(id)arg2;
- (void)_mergeSourceDirectoryAtPath:(id)arg1 withDestinationDirectoryAtPath:(id)arg2;
- (void)mergeSourceDirectoryAtPath:(id)arg1 withDestinationDirectoryAtPath:(id)arg2;
- (void)_logListingForDirectory:(id)arg1;
- (void)logListingForDirectory:(id)arg1;
- (id)duplicateResourceToDocumentDirectoryIfNeeded:(id)arg1;
- (_Bool)copyFile:(id)arg1 backingUpDestinationIfExists:(id)arg2 error:(id *)arg3;
- (id)duplicateFileToAppTempDirOverwrite:(id)arg1 error:(id *)arg2;
- (_Bool)copyFileToAppTempDirectory:(id)arg1 error:(id *)arg2;
- (_Bool)restoreFileNamed:(id)arg1 usingExtension:(id)arg2 error:(id *)arg3;
- (_Bool)createBackupOfFileNamed:(id)arg1 usingExtension:(id)arg2 error:(id *)arg3;
- (id)getAppTempFileWithSuggestedFileName:(id)arg1;
- (void)deleteFilesInAppTempDirectory;
- (id)getAppCachesDirectory;
- (id)getAppTempDirectory;
- (id)getAppDocumentsDirectory;
@end

@interface NSDateFormatter (PVExtentions)
+ (id)monthDashYearDateFormatterGMT;
+ (id)monthDayCommaYearDateFormatter;
+ (id)monthDashYearDateFormatter;
+ (id)iso8601DateStringParser;
@end

@interface UIViewController (ZinioToolTip)
- (void)sendToolTipDismissNotification:(_Bool)arg1;
- (void)dismissZinioToolTipButRemindLater;
- (void)dismissZinioToolTip;
- (void)setZinioToolTipView:(id)arg1;
- (id)zinioToolTipView;
- (id)newToolTipView:(int)arg1;
- (void)removeZinioModalToolTip;
- (void)showModalToolTip:(int)arg1 withContent:(id)arg2;
@end

@interface PVXMLElementImpl (ZinioExtensions)
- (id)serverErrors;
- (_Bool)responseValid;
@end

@interface UIActivityIndicatorView (AFNetworking)
- (void)af_stopAnimating;
- (void)af_startAnimating;
- (void)setAnimatingWithStateOfOperation:(id)arg1;
- (void)setAnimatingWithStateOfTask:(id)arg1;
@end

@interface UIImage (Resize)
+ (double)heightForWidth:(double)arg1 aspectFitTo:(struct CGSize)arg2;
+ (struct CGRect)renderPdf:(struct CGPDFPage *)arg1 at:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 interpolation:(int)arg4 bgColor:(struct CGColor *)arg5;
+ (struct CGRect)renderPdf:(struct CGPDFPage *)arg1 at:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 interpolation:(int)arg4;
+ (id)drawPdf:(struct CGPDFPage *)arg1 at:(struct CGSize)arg2 offsetBy:(struct CGPoint)arg3 inContext:(struct CGContext *)arg4 interpolation:(int)arg5;
+ (id)drawPdf:(struct CGPDFPage *)arg1 at:(struct CGSize)arg2 inContext:(struct CGContext *)arg3 interpolation:(int)arg4;
+ (struct CGSize)pdf:(struct CGPDFPage *)arg1 sizeThatFits:(struct CGSize)arg2;
+ (struct CGSize)size:(struct CGSize)arg1 toFit:(struct CGSize)arg2;
+ (struct CGContext *)newBitmapContextNoAlpha:(struct CGSize)arg1;
+ (struct CGContext *)newBitmapContext:(struct CGSize)arg1;
+ (id)newSubimageFromContext:(struct CGContext *)arg1 inRect:(struct CGRect)arg2;
+ (id)newImageFromContext:(struct CGContext *)arg1;
+ (void)makeButtonBackgroundImagesStretchable:(id)arg1 leftCapWidth:(double)arg2 topCapHeight:(double)arg3;
+ (void)makeButtonBackgroundImagesStretchable:(id)arg1 leftCapWidth:(double)arg2 topCapHeight:(double)arg3 state:(unsigned long long)arg4;
- (id)cropToRect:(struct CGRect)arg1;
- (struct CGRect)calculateTrimFrame;
- (id)imageByCroppingToRect:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)resizedImageWithContentMode:(long long)arg1 bounds:(struct CGSize)arg2 interpolationQuality:(int)arg3;
- (id)resizedImage:(struct CGSize)arg1 interpolationQuality:(int)arg2;
- (struct CGAffineTransform)transformForOrientation:(struct CGSize)arg1;
- (id)resizedImage:(struct CGSize)arg1 transform:(struct CGAffineTransform)arg2 drawTransposed:(_Bool)arg3 interpolationQuality:(int)arg4;
- (id)resizeTo:(struct CGSize)arg1 interpolation:(int)arg2;
- (void)drawImageAtSize:(struct CGSize)arg1 inContext:(struct CGContext *)arg2 interpolation:(int)arg3;
@end

@interface UIDevice (Hardware)
- (id)platformCode;
- (id)macaddress;
- (id)capabilityArray;
- (unsigned long long)platformCapabilities;
- (id)platformString;
- (unsigned long long)platformType;
- (id)freeDiskSpace;
- (id)totalDiskSpace;
- (unsigned long long)memsize;
- (unsigned long long)numberOfCPUs;
- (unsigned long long)maxSocketBufferSize;
- (unsigned long long)currentProcessMemory;
- (unsigned long long)freeMemory;
- (unsigned long long)usedMemory;
- (unsigned long long)userMemory;
- (unsigned long long)totalMemory;
- (unsigned long long)busFrequency;
- (unsigned long long)cpuFrequency;
- (unsigned long long)getSysInfo:(unsigned int)arg1;
- (id)platform;
- (id)getSysInfoByName:(char *)arg1;
@end

@interface UIDevice (Orientation)
@property(readonly, nonatomic) NSString *orientationString;
@property(readonly, nonatomic) _Bool isPortrait;
@property(readonly, nonatomic) _Bool isLandscape;
@end

@interface UIImage (TintColor)
- (id)imageWithColor:(id)arg1;
@end

@interface NSData (PVXMLExtensions)
- (_Bool)hasXMLPreamble;
@end

@interface UIImageView (_AFNetworking)
+ (id)af_sharedImageRequestOperationQueue;
@property(retain, nonatomic, setter=af_setImageRequestOperation:) AFHTTPRequestOperation *af_imageRequestOperation;
@end

@interface UIImageView (AFNetworking)
+ (void)setSharedImageCache:(id)arg1;
+ (id)sharedImageCache;
- (void)cancelImageRequestOperation;
- (void)setImageWithURLRequest:(id)arg1 placeholderImage:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)setImageWithURL:(id)arg1 placeholderImage:(id)arg2;
- (void)setImageWithURL:(id)arg1;
@property(retain, nonatomic) id <AFURLResponseSerialization> imageResponseSerializer; // @dynamic imageResponseSerializer;
@end

@interface UIWebView (_AFNetworking)
@property(retain, nonatomic, setter=af_setHTTPRequestOperation:) AFHTTPRequestOperation *af_HTTPRequestOperation;
@end

@interface UIWebView (AFNetworking)
- (void)loadRequest:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 progress:(CDUnknownBlockType)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (void)loadRequest:(id)arg1 progress:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
@property(retain, nonatomic) AFHTTPResponseSerializer<AFURLResponseSerialization> *responseSerializer;
@property(retain, nonatomic) AFHTTPRequestSerializer<AFURLRequestSerialization> *requestSerializer;
@end

@interface OutlineButton (Overriden)
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setShouldCapitalize:(_Bool)arg1;
- (_Bool)shouldCapitalize;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
@end

@interface UIViewController (Transitions)
- (void)setupNavBarBackButton:(id)arg1 withTarget:(id)arg2 selector:(SEL)arg3;
- (void)setupNavBarBackButton:(id)arg1 withTarget:(id)arg2 selector:(SEL)arg3 buttonInset:(int)arg4;
- (void)dismissViewControllerWithZoom:(id)arg1 toRect:(struct CGRect)arg2 onComplete:(SEL)arg3;
- (void)showViewControllerWithZoom:(id)arg1 fromRect:(struct CGRect)arg2 onComplete:(SEL)arg3;
- (void)transitionsAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
@end

@interface UIImage (Alpha)
- (id)addShadow;
- (struct CGImage *)newBorderMask:(unsigned long long)arg1 size:(struct CGSize)arg2;
- (id)transparentBorderImage:(unsigned long long)arg1;
- (id)imageWithAlpha;
- (_Bool)hasAlpha;
@end

@interface NSURL (PVExtensions)
+ (id)smartURLWithString:(id)arg1;
- (id)folioValue;
- (_Bool)isFolioURL;
- (_Bool)isITunesStoreURL;
@end

@interface NSDictionary (PVExtensions)
- (id)stringForKey:(id)arg1;
- (id)numberForKey:(id)arg1;
- (id)colorForKey:(id)arg1 withDefault:(id)arg2;
- (_Bool)boolForKey:(id)arg1 withDefault:(_Bool)arg2;
@end

@interface UIImage (ImageEffects)
- (id)roundedImageWithRect:(struct CGRect)arg1 radius:(double)arg2;
- (id)applyBlurWithRadius:(double)arg1 tintColor:(id)arg2 saturationDeltaFactor:(double)arg3 maskImage:(id)arg4;
- (id)applyTintEffectWithColor:(id)arg1;
- (id)applyDarkEffect;
- (id)applyExtraLightEffect;
- (id)applyLightEffect;
@end

@interface RateOurApp (hidden)
- (void)launchRateZinioAlert;
- (_Bool)connectedToNetwork;
@end

@interface UIImage (Text)
- (id)addText:(id)arg1 text:(id)arg2;
@end

@interface UIView (Text)
- (void)setTextColorWhereReceptive:(id)arg1;
@end

@interface UIButton (_AFNetworking)
+ (id)af_sharedImageRequestOperationQueue;
- (void)af_setBackgroundImageRequestOperation:(id)arg1 forState:(unsigned long long)arg2;
- (id)af_backgroundImageRequestOperationForState:(unsigned long long)arg1;
- (void)af_setImageRequestOperation:(id)arg1 forState:(unsigned long long)arg2;
- (id)af_imageRequestOperationForState:(unsigned long long)arg1;
@end

@interface UIButton (AFNetworking)
+ (void)setSharedImageCache:(id)arg1;
+ (id)sharedImageCache;
- (void)cancelBackgroundImageRequestOperationForState:(unsigned long long)arg1;
- (void)cancelImageRequestOperationForState:(unsigned long long)arg1;
- (void)setBackgroundImageForState:(unsigned long long)arg1 withURLRequest:(id)arg2 placeholderImage:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)setBackgroundImageForState:(unsigned long long)arg1 withURL:(id)arg2 placeholderImage:(id)arg3;
- (void)setBackgroundImageForState:(unsigned long long)arg1 withURL:(id)arg2;
- (void)setImageForState:(unsigned long long)arg1 withURLRequest:(id)arg2 placeholderImage:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)setImageForState:(unsigned long long)arg1 withURL:(id)arg2 placeholderImage:(id)arg3;
- (void)setImageForState:(unsigned long long)arg1 withURL:(id)arg2;
@property(retain, nonatomic) id <AFURLResponseSerialization> imageResponseSerializer;
@end

@interface UINavigationItem (Customize)
- (void)customizeTitleWithTitle:(id)arg1 detail:(id)arg2;
- (void)customizeBarButtonWithStretchableImageNamed:(id)arg1 withTitle:(id)arg2 withCap:(long long)arg3 withLeftInset:(long long)arg4 withTarget:(id)arg5 andAction:(SEL)arg6 onBar:(id)arg7 onRight:(_Bool)arg8;
- (void)customizeBarButtonWithStretchableImageNamed:(id)arg1 withTitle:(id)arg2 withCap:(long long)arg3 withLeftInset:(long long)arg4 withTarget:(id)arg5 andAction:(SEL)arg6 onBar:(id)arg7 onRight:(_Bool)arg8 buttonInset:(int)arg9;
- (void)customizeRightButtonWithStretchableImageNamed:(id)arg1 withTitle:(id)arg2 withCap:(long long)arg3 withLeftInset:(long long)arg4 withTarget:(id)arg5 andAction:(SEL)arg6 onBar:(id)arg7;
- (void)customizeLeftButtonWithStretchableImageNamed:(id)arg1 withTitle:(id)arg2 withCap:(long long)arg3 withLeftInset:(long long)arg4 withTarget:(id)arg5 andAction:(SEL)arg6 onBar:(id)arg7 buttonInset:(int)arg8;
- (void)customizeLeftButtonWithStretchableImageNamed:(id)arg1 withTitle:(id)arg2 withCap:(long long)arg3 withLeftInset:(long long)arg4 withTarget:(id)arg5 andAction:(SEL)arg6 onBar:(id)arg7;
- (void)customizeRightButtonWithStretchableImageNamed:(id)arg1 withTitle:(id)arg2 withTarget:(id)arg3 andAction:(SEL)arg4 onBar:(id)arg5;
- (void)customizeLeftButtonWithStretchableImageNamed:(id)arg1 withTitle:(id)arg2 withTarget:(id)arg3 andAction:(SEL)arg4 onBar:(id)arg5;
- (void)customizeCloseButtonWithTarget:(id)arg1 andAction:(SEL)arg2 onBar:(id)arg3;
- (void)customizeLeftButtonWithImageNamed:(id)arg1 andText:(id)arg2 andAction:(SEL)arg3 onTarget:(id)arg4;
- (void)customizeTitleWithText:(id)arg1 onBar:(id)arg2;
@end

@interface NSString (URIQuery)
- (id)queryDictionaryUsingEncoding:(unsigned long long)arg1;
- (id)encodePercentEscapesPerRFC2396;
@end

@interface UIViewController (Reader)
- (id)createReaderForIssue:(id)arg1;
@end

@interface UILabel (VerticalAlign)
- (void)alignBottom;
- (void)alignTop;
@end

@interface AnalyticsManagerImpl (private)
+ (_Bool)areAllParametersNonNil:(id)arg1;
- (void)zionExploreActiveShareSuccessEvent:(id)arg1 birthDay:(id)arg2 gender:(id)arg3 publicationID:(id)arg4 issueID:(id)arg5 excerpt:(id)arg6;
- (void)zionActiveShareSuccessEvent:(id)arg1 birthDay:(id)arg2 gender:(id)arg3 publicationID:(id)arg4 issueID:(id)arg5;
- (void)zionActiveShareiPhoneExploreSuccessEvent:(id)arg1 birthDay:(id)arg2 gender:(id)arg3 publicationID:(id)arg4 issueID:(id)arg5 excerpt:(id)arg6;
- (void)zionActiveShareiPhoneSuccessEvent:(id)arg1 birthDay:(id)arg2 gender:(id)arg3 publicationID:(id)arg4 issueID:(id)arg5;
- (void)zionPassiveShareEvent:(id)arg1 birthDay:(id)arg2 gender:(id)arg3 publicationID:(id)arg4 issueID:(id)arg5;
- (void)zionActiveShareiPhoneEvent:(id)arg1 birthDay:(id)arg2 gender:(id)arg3 publicationID:(id)arg4 issueID:(id)arg5;
- (void)zionActiveShareEvent:(id)arg1 birthDay:(id)arg2 gender:(id)arg3 publicationID:(id)arg4 issueID:(id)arg5;
- (void)zionSignInEventSuccess:(id)arg1;
- (void)zionSignInEvent:(id)arg1;
- (void)readerKeepAliveTimerFired:(id)arg1;
- (void)disableReaderKeepAliveTimer;
- (void)resetReaderKeepAliveTimer;
- (void)logFlurryEvent:(id)arg1 withParameters:(id)arg2 timed:(_Bool)arg3;
- (void)downloadComplete:(id)arg1;
- (void)addOfflineTrackingToEvent:(id)arg1;
- (void)addPurchaseTimeStampToEvent:(id)arg1;
- (id)currentTimestamp;
- (void)addBasicParametersToEvent:(id)arg1;
- (void)addBasicFlurryParametersForMagazine:(id)arg1 event:(id)arg2;
- (void)addBasicParametersForMagazine:(id)arg1 event:(id)arg2;
- (void)addBasicParametersForExcerpt:(id)arg1 event:(id)arg2;
- (void)addBasicFlurryParametersForIssueExcerpt:(id)arg1 event:(id)arg2;
- (void)addBasicParametersForIssueExcerpt:(id)arg1 event:(id)arg2;
- (void)addBasicParametersForPubIssue:(id)arg1 event:(id)arg2;
- (void)addBasicFlurryParametersForPubIssue:(id)arg1 event:(id)arg2;
- (void)addBasicFlurryParametersForIssue:(id)arg1 event:(id)arg2;
- (void)addBasicParametersForIssue:(id)arg1 event:(id)arg2;
- (void)addBasicParametersForIssueId:(id)arg1 pubId:(id)arg2 pubName:(id)arg3 issueTitle:(id)arg4 event:(id)arg5;
- (id)validPathFromEventPath:(id)arg1;
- (void)appConfigurationReceivedForAppLaunch:(id)arg1;
- (void)appConfigurationHasUpdated:(id)arg1;
- (void)processEventQueue;
- (void)trackEvent:(id)arg1;
@end

@interface NSData (DDData)
- (id)base64Decoded;
- (id)base64Encoded;
- (id)hexStringValue;
- (id)sha1Digest;
- (id)md5Digest;
@end

@interface AlertsManager (Overriden)
- (void)awakeFromNib;
@end

@interface UserBookmark (Overriden)
- (void)dealloc;
- (id)init;
@end

@interface UIView (Util)
- (id)debugViewHierarchy;
- (void)debugViewHierarchy:(id)arg1 into:(id)arg2 level:(int)arg3;
- (void)debugView:(id)arg1 into:(id)arg2 prefix:(id)arg3;
@end

@interface CategoriesListView (Private)
@end

@interface CategoriesListView (Overriden)
- (void)dealloc;
- (void)awakeFromNib;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
@end

@interface ModalInsetViewController (Private)
- (long long)interfaceOrientation;
- (void)orientationDidChange:(id)arg1;
- (void)orientationWillChange:(id)arg1;
@end

@interface ModalInsetViewController (Overriden)
- (void)dealloc;
@end

@interface ModalInsetView (Private)
- (void)drawCloseButtonIconInRect:(struct CGRect)arg1;
@end

@interface ModalInsetView (Overriden)
- (void)dealloc;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (id)panelImage;
- (void)setHasCloseButton:(_Bool)arg1;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
@end

@interface CategoriesListViewCell (Private)
- (void)requestImage;
@end

@interface CategoriesListViewCell (Overriden)
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
@end

@interface NSData (Crypto)
- (id)doCipherWithAlgorithm:(unsigned int)arg1 op:(unsigned int)arg2 key:(id)arg3 keySize:(unsigned long long)arg4 padding:(unsigned int *)arg5 iv:(id)arg6;
- (id)RC4EncryptDataWithKey:(id)arg1 keySize:(unsigned long long)arg2 padding:(unsigned int *)arg3 initialVector:(id)arg4;
- (id)RC4DecryptDataWithKey:(id)arg1 keySize:(unsigned long long)arg2 padding:(unsigned int *)arg3 initialVector:(id)arg4;
- (id)CASTEncryptDataWithKey:(id)arg1 keySize:(unsigned long long)arg2 padding:(unsigned int *)arg3 initialVector:(id)arg4;
- (id)CASTDecryptDataWithKey:(id)arg1 keySize:(unsigned long long)arg2 padding:(unsigned int *)arg3 initialVector:(id)arg4;
- (id)DES3EncryptDataWithKey:(id)arg1 keySize:(unsigned long long)arg2 padding:(unsigned int *)arg3 initialVector:(id)arg4;
- (id)DES3DecryptDataWithKey:(id)arg1 keySize:(unsigned long long)arg2 padding:(unsigned int *)arg3 initialVector:(id)arg4;
- (id)DESEncryptDataWithKey:(id)arg1 keySize:(unsigned long long)arg2 padding:(unsigned int *)arg3 initialVector:(id)arg4;
- (id)DESDecryptDataWithKey:(id)arg1 keySize:(unsigned long long)arg2 padding:(unsigned int *)arg3 initialVector:(id)arg4;
- (id)AES128EncryptDataWithKey:(id)arg1 keySize:(unsigned long long)arg2 padding:(unsigned int *)arg3 initialVector:(id)arg4;
- (id)AES128DecryptDataWithKey:(id)arg1 keySize:(unsigned long long)arg2 padding:(unsigned int *)arg3 initialVector:(id)arg4;
@end

@interface ScreenActivityIndicator (Overridden)
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
@end

@interface ExploreExcerptView (Private)
- (void)drawImageAspectToFit:(id)arg1 inRect:(struct CGRect)arg2;
- (void)drawImage:(id)arg1 inRect:(struct CGRect)arg2;
- (void)endImageGeneratingGraphicsContext;
- (void)startImageGeneratingGraphicsContextInBounds:(struct CGRect)arg1;
@end

@interface NSManagedObjectContext (ReadThroughCaching)
- (void)loadFromExternalSource:(id)arg1 withId:(id)arg2;
@end

@interface NSManagedObject (DelayedLoading)
- (_Bool)notifyWhenLoaded:(id)arg1;
- (void)endNotifications:(id)arg1;
- (id)loadData:(id)arg1;
- (_Bool)isReady;
@end

@interface UIRefreshControl (AFNetworking)
- (void)af_endRefreshing;
- (void)af_beginRefreshing;
- (void)setRefreshingWithStateOfOperation:(id)arg1;
- (void)setRefreshingWithStateOfTask:(id)arg1;
@end

@interface NSMutableArray (PVStack)
- (void)push:(id)arg1;
- (id)peek;
- (id)pop;
@end

@interface NSOperation (ZGContextBuilder)
- (id)buildContext;
@end

@interface ZGBoundaryResource (DataAccess) <ZGRetainable, ZGBoundaryResourceOperationDelegate>
+ (void)discardUnmarkedElements:(id)arg1;
- (void)beginBoundaryResourceOperationWithQueue:(id)arg1 dataService:(id)arg2;
- (void)resourceOperationDidLoad;
- (id)propertyForObservationDuringLoad;
- (_Bool)notifyWhenLoaded:(id)arg1;
- (void)endNotifications:(id)arg1;
- (_Bool)isFresh;
- (_Bool)isLoaded;
- (_Bool)isReady;
- (id)parserDelegateRootElement;
- (Class)parserDelegateClass;
- (id)loadData:(id)arg1;
- (void)willFinishLoading;
- (id)parserDelegate;
@property(copy) id <ZGAtomLink> atomLink;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSNumber *markedForRetention; // @dynamic markedForRetention;
@property(readonly) Class superclass;
@end

@interface ZGCategory (DataAccess)
+ (id)entityForType:(id)arg1;
+ (void)load;
- (_Bool)isDisplayable:(long long)arg1;
- (_Bool)displayNameIsDisplayable;
- (_Bool)thumbnailIsDisplayable;
- (void)setParentCategoryRelationship:(id)arg1;
- (id)parserDelegateRootElement;
- (Class)parserDelegateClass;
@end

@interface ZGExplore (DataAccess)
- (void)discardUnmarkedChildren:(id)arg1;
- (id)loadData:(id)arg1;
- (void)willFinishLoading;
- (id)parserDelegateRootElement;
- (Class)parserDelegateClass;
@end

@interface ZGShop (DataAccess)
- (void)discardUnmarkedChildren:(id)arg1;
- (id)loadData:(id)arg1;
- (void)willFinishLoading;
- (id)parserDelegateRootElement;
- (Class)parserDelegateClass;
@end

@interface NSManagedObject (DataAccess)
- (id)traceDescription;
- (void)discardUnmarkedChildren:(id)arg1;
- (Class)parserDelegateClass;
@end

@interface ZGRemoteObject (DataAccess) <ZGRemoteObjectOperationDelegate>
- (void)beginRemoteObjectOperationWithQueue:(id)arg1;
- (void)didParse;
- (void)remoteObjectOperationDidLoad;
- (void)notifyWhenLoaded:(id)arg1;
- (void)endNotifications:(id)arg1;
- (_Bool)isLoaded;
- (id)loadData:(id)arg1;
- (id)parserDelegateRootElement;
- (Class)parserDelegateClass;
- (void)willFinishLoading;
- (id)parserDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface ZGHero (DataAccess) <ZGRetainable>
- (_Bool)isDisplayable;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSNumber *markedForRetention; // @dynamic markedForRetention;
@property(readonly) Class superclass;
@end

@interface ZGExcerptCategory (DataAccess) <ZGRetainable>
- (void)discardUnmarkedChildren:(id)arg1;
- (id)propertyForObservationDuringLoad;
- (void)resourceOperationDidLoad;
- (id)traceDescription;
- (id)loadDataxx:(id)arg1;
- (void)willFinishLoading;
- (id)parserDelegateRootElement;
- (Class)parserDelegateClass;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSNumber *markedForRetention; // @dynamic markedForRetention;
@property(readonly) Class superclass;
@end

@interface ZGPaymentType (DataAccess) <ZGRetainable>

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSNumber *markedForRetention; // @dynamic markedForRetention;
@property(readonly) Class superclass;
@end

@interface ZGPromoCategory (DataAccess)
- (void)setParentCategoryRelationship:(id)arg1;
@end

@interface ZGMagazine (DataAccess)
- (void)willFinishLoading;
- (id)parserDelegateRootElement;
- (Class)parserDelegateClass;
@end

@interface ZGLink (DataAccess) <ZGAtomLink>

// Remaining properties
@property(retain, nonatomic) NSString *href; // @dynamic href;
@property(retain, nonatomic) NSString *rel; // @dynamic rel;
@property(retain, nonatomic) NSString *type; // @dynamic type;
@end

@interface AFURLConnectionOperation (_UIProgressView)

// Remaining properties
@property(nonatomic, setter=af_setDownloadProgressAnimated:) _Bool af_downloadProgressAnimated; // @dynamic af_downloadProgressAnimated;
@property(nonatomic, setter=af_setUploadProgressAnimated:) _Bool af_uploadProgressAnimated; // @dynamic af_uploadProgressAnimated;
@property(copy, nonatomic) CDUnknownBlockType downloadProgress; // @dynamic downloadProgress;
@property(copy, nonatomic) CDUnknownBlockType uploadProgress; // @dynamic uploadProgress;
@end

@interface UIProgressView (AFNetworking)
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setProgressWithDownloadProgressOfOperation:(id)arg1 animated:(_Bool)arg2;
- (void)setProgressWithUploadProgressOfOperation:(id)arg1 animated:(_Bool)arg2;
- (void)setProgressWithDownloadProgressOfTask:(id)arg1 animated:(_Bool)arg2;
- (void)setProgressWithUploadProgressOfTask:(id)arg1 animated:(_Bool)arg2;
- (void)af_setDownloadProgressAnimated:(_Bool)arg1;
- (_Bool)af_downloadProgressAnimated;
- (void)af_setUploadProgressAnimated:(_Bool)arg1;
- (_Bool)af_uploadProgressAnimated;
@end

@interface NSString (Capitalize)
- (id)stringByCapitalizingFirstLetter;
@end

@interface ZGHeroCategoryTarget (DataAccess) <ZGBoundaryResourceHolder, ZGCategoryAsHeroTarget>
- (id)targetedCategory;
@property ZGBoundaryResource *boundaryResource;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface ZGHeroTarget (DataAccess) <ZGBoundaryResourceHolder>

// Remaining properties
@property ZGBoundaryResource *boundaryResource; // @dynamic boundaryResource;
@end

@interface ZGHeroCategory (DataAccess) <ZGHeroTargetResource>
- (id)heroTargetEntity;
@property ZGHeroTarget *heroTarget;
@end

@interface ZGHeroMagazine (DataAccess) <ZGHeroTargetResource>
- (id)heroTargetEntity;
@property ZGHeroTarget *heroTarget;
@end

@interface NSNotificationCenter (ZinioNotificationNames)
@end

@interface ZGBackIssue (DataAccess) <ZGRetainable>

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSNumber *markedForRetention; // @dynamic markedForRetention;
@property(readonly) Class superclass;
@end

@interface NetworkServicesManager (Overriden)
- (void)dealloc;
- (id)init;
@end

@interface ZGMagazineOffer (DataAccess) <ZGRetainable>

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSNumber *markedForRetention; // @dynamic markedForRetention;
@property(readonly) Class superclass;
@end

@interface UIViewController (Navigation)
- (id)labelForCustomTitle;
- (void)customizeNavigationBarForViewController:(id)arg1 withTitle:(id)arg2 withBackAction:(SEL)arg3;
- (void)customizeNavigationBarForViewController:(id)arg1 withTitle:(id)arg2;
- (void)setCustomTitle:(id)arg1 detail:(id)arg2;
- (void)setCustomTitle:(id)arg1 titleLabel:(id)arg2;
- (void)setZinioNavigationBarLogo;
- (void)setCustomTitle:(id)arg1;
- (void)goBack;
- (id)createCustomBackButtonItemForViewController:(id)arg1 withBackAction:(SEL)arg2;
@end

@interface ZGHeroMagazineTarget (DataAccess) <ZGBoundaryResourceHolder>
@property ZGBoundaryResource *boundaryResource;
@end

@interface NSNumber (PVExtensions)
+ (id)formattedBytes:(unsigned long long)arg1;
- (id)formattedBytes;
@end

@interface UIImage (ImageEffects)
- (id)applyBlurWithRadius:(double)arg1 tintColor:(id)arg2 saturationDeltaFactor:(double)arg3 maskImage:(id)arg4;
- (id)applyTintEffectWithColor:(id)arg1;
- (id)applyDarkEffect;
- (id)applyExtraLightEffect;
- (id)applyLightEffect;
@end

@interface UIImageView (ImageBounds)
- (struct CGRect)imageFrame;
@end

@interface UIViewController (Background)
- (id)addBackgroundImage;
@end

@interface NSObject (JRSwizzle)
+ (_Bool)jr_swizzleClassMethod:(SEL)arg1 withClassMethod:(SEL)arg2 error:(id *)arg3;
+ (_Bool)jr_swizzleMethod:(SEL)arg1 withMethod:(SEL)arg2 error:(id *)arg3;
@end

@interface ZGHeroPromoCategory (DataAccess) <ZGHeroTargetResource>
- (id)heroTargetEntity;
@property ZGHeroTarget *heroTarget;
@end

@interface ZGHeroPromoCategoryTarget (DataAccess) <ZGCategoryAsHeroTarget>
- (id)targetedCategory;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UIWebView (ZRPC)
- (_Bool)handleRequestRPC:(id)arg1 controller:(id)arg2;
@end

@interface UIButton (Additions)
- (void)sizeToFitWithAlignmentRight;
@end

@interface NSString (NilCheck)
- (id)zn_nilCheck;
@end

@interface ZGExcerpt (DataAccess) <ZGRetainable>
- (void)willFinishLoading;
- (id)parserDelegateRootElement;
- (Class)parserDelegateClass;
- (void)generateImpressionId;
- (_Bool)isFreeIssueAdvertisement;
- (_Bool)isAdvertisement;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSNumber *markedForRetention;
@property(readonly) Class superclass;
@end

@interface UIButton (Resize)
- (void)fitTextWithLineBreakMode:(long long)arg1;
- (void)sizeToFitAndAlign:(long long)arg1;
@end

@interface UIViewController (PVExtensions)
- (id)getPresentingViewController;
@end

@interface ZGPublication (DataAccess)
- (_Bool)isDisplayable;
@end

@interface UIAlertView (AFNetworking)
+ (void)showAlertViewForRequestOperationWithErrorOnCompletion:(id)arg1 delegate:(id)arg2 cancelButtonTitle:(id)arg3 otherButtonTitles:(id)arg4;
+ (void)showAlertViewForRequestOperationWithErrorOnCompletion:(id)arg1 delegate:(id)arg2;
+ (void)showAlertViewForTaskWithErrorOnCompletion:(id)arg1 delegate:(id)arg2 cancelButtonTitle:(id)arg3 otherButtonTitles:(id)arg4;
+ (void)showAlertViewForTaskWithErrorOnCompletion:(id)arg1 delegate:(id)arg2;
@end

@interface BaseScriptSupport (Protected)
- (id)stringForJavaScriptResult:(struct OpaqueJSValue *)arg1;
- (void)handleException:(struct OpaqueJSValue *)arg1;
- (id)exceptionContext;
@end

@interface CategoriesListView (Private)
@end

@interface CategoriesListView (Overriden)
- (void)dealloc;
- (void)awakeFromNib;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
@end

@interface CategoriesiPhoneListViewCell (Private)
- (void)requestImage;
@end

@interface CategoriesiPhoneListViewCell (Overriden)
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (void)awakeFromNib;
- (id)init;
@end

@interface CategoriesListViewIPhoneShop (Private)
@end

@interface CategoriesListViewIPhoneShop (Overriden)
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (void)awakeFromNib;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
@end

@interface CategoriesListViewCell (Private)
- (void)requestImage;
@end

@interface CategoriesListViewCellIPhoneShop (Overriden)
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (void)awakeFromNib;
- (id)init;
@end

@interface PFObject (Private)
+ (id)objectWithoutDataWithObjectId:(id)arg1;
+ (id)object;
+ (id)objectFromDecodedDataFile:(id)arg1;
+ (id)objectFromDataFile:(id)arg1;
+ (void)deleteDataFile:(id)arg1;
+ (void)validateClassName:(id)arg1;
+ (void)deepSaveEventually:(id)arg1;
+ (id)deepSaveAsync:(id)arg1 withSessionToken:(id)arg2;
+ (id)deleteAllAsync:(id)arg1 withSessionToken:(id)arg2;
+ (_Bool)canBeSerializedAsValue:(id)arg1 afterSaving:(id)arg2 error:(id *)arg3;
+ (void)collectDirtyChildren:(id)arg1 children:(id)arg2 files:(id)arg3;
+ (void)collectDirtyChildren:(id)arg1 children:(id)arg2 files:(id)arg3 seen:(id)arg4 seenNew:(id)arg5;
+ (id)enqueue:(CDUnknownBlockType)arg1 forObjects:(id)arg2;
+ (void)unregisterSubclass:(Class)arg1;
+ (id)objectWithoutDataWithClassName:(id)arg1 localId:(id)arg2;
+ (id)objectWithClassName:(id)arg1 isPointer:(_Bool)arg2;
- (_Bool)needsDefaultACL;
- (void)setDefaultValues;
- (id)ACLWithoutCopying;
- (void)unregisterSaveListener:(CDUnknownBlockType)arg1;
- (void)registerSaveListener:(CDUnknownBlockType)arg1;
- (id)displayClassName;
- (id)displayObjectId;
- (id)constructDeleteCommand:(_Bool)arg1 sessionToken:(id)arg2;
- (id)constructRefreshCommand:(id)arg1;
- (id)constructSaveCommandWithServerOperation:(id)arg1 changes:(id)arg2 sessionToken:(id)arg3;
- (id)constructSaveCommand:(id)arg1 sessionToken:(id)arg2;
- (id)deleteAsync:(id)arg1;
- (id)fetchAsync:(id)arg1;
- (id)saveAsync:(id)arg1;
- (void)startSave;
- (id)handleDeleteResult:(id)arg1;
- (id)handleFetchResult:(id)arg1;
- (id)handleSaveResult:(id)arg1 error:(id *)arg2;
- (id)mergeFromServer:(id)arg1 withCompleteData:(_Bool)arg2;
- (id)mergeAfterSave:(id)arg1;
- (void)removeOldKeysAfterFetch:(id)arg1;
- (id)mergeAfterFetch:(id)arg1 withSelectedKeys:(id)arg2;
- (id)mergeAfterFetch:(id)arg1 withCompleteData:(_Bool)arg2;
- (id)mergeFromObject:(id)arg1;
- (void)rebuildEstimatedData;
- (void)applyOperations:(id)arg1 toDictionary:(id)arg2;
- (_Bool)_hasOutstandingOperations;
- (_Bool)_hasChanges;
- (id)unsavedChanges;
- (void)performOperation:(id)arg1 forKey:(id)arg2;
- (id)convertToDictionaryForSaving:(id)arg1;
- (void)serializeToDataFile:(id)arg1;
- (id)convertToDictionaryForDataFile;
- (void)resolveLocalId;
- (id)getOrCreateLocalId;
- (void)checkSaveParams;
- (void)checkDeleteParams;
- (_Bool)isDataAvailableForKey:(id)arg1;
- (void)setHasBeenFetched:(_Bool)arg1;
- (void)checkForChangesToMutableContainers;
- (void)checkForChangesToMutableContainer:(id)arg1 forKey:(id)arg2;
- (void)checkpointMutableContainer:(id)arg1;
- (void)checkpointAllMutableContainers;
- (_Bool)isDirty:(_Bool)arg1;
- (void)saveChildrenEventually;
- (id)saveChildrenAsync:(id)arg1;
- (_Bool)canBeSerializedAfterSaving:(id)arg1 error:(id *)arg2;
- (void)waitUntilFinished;
- (id)lock;
- (id)init;
- (id)initWithClassName:(id)arg1 isPointer:(_Bool)arg2;
@end

@interface PFPush (Private)
+ (void)clearDeviceToken;
+ (id)getDeviceTokenFromKeychain;
+ (id)convertDeviceTokenToString:(id)arg1;
@end

@interface NSURL (OAuthAdditions)
+ (id)PF_ab_parseURLQueryString:(id)arg1;
@end

@interface NSString (OAuthAdditions)
+ (id)PF_ab_GUID;
- (id)PF_ab_RFC3986EncodedString;
@end

@interface NSData (PF_Base64)
+ (id)PF_dataFromBase64String:(id)arg1;
- (id)PF_base64EncodedString;
@end

@interface PFInternalUtils (Reachability)
+ (_Bool)isNetworkAvailable:(unsigned int)arg1;
+ (_Bool)isParseReachable;
@end

@interface BFExecutor (Background)
+ (id)defaultPriorityBackgroundExecutor;
@end

@interface BFTask (Private)
- (id)waitForResult:(id *)arg1;
- (id)thenCallBackOnMainThreadWithBoolValueAsync:(CDUnknownBlockType)arg1;
- (id)thenCallBackOnMainThreadAsync:(CDUnknownBlockType)arg1;
- (id)continueWithMainThreadBooleanResultBlock:(CDUnknownBlockType)arg1 executeIfCancelled:(_Bool)arg2;
- (id)continueWithMainThreadResultBlock:(CDUnknownBlockType)arg1 executeIfCancelled:(_Bool)arg2;
- (id)continueAsyncWithSuccessBlock:(CDUnknownBlockType)arg1;
- (id)continueAsyncWithBlock:(CDUnknownBlockType)arg1;
@end

@interface UIImageView (_PF_AFNetworking)

// Remaining properties
@property(retain, nonatomic, setter=pf_af_setImageRequestOperation:) PF_AFImageRequestOperation *pf_af_imageRequestOperation; // @dynamic pf_af_imageRequestOperation;
@end

@interface UIImageView (PF_AFNetworking)
+ (id)pf_af_sharedImageCache;
+ (id)pf_af_sharedImageRequestOperationQueue;
- (void)pf_af_cancelImageRequestOperation;
- (void)pf_af_setImageWithURLRequest:(id)arg1 placeholderImage:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)pf_af_setImageWithURL:(id)arg1 placeholderImage:(id)arg2;
- (void)pf_af_setImageWithURL:(id)arg1;
- (void)pf_af_setImageRequestOperation:(id)arg1;
- (id)pf_af_imageRequestOperation;
@end

@interface PFUser (Private)
+ (void)deleteUserDataFileWithName:(id)arg1;
+ (id)userFromDataFileWithName:(id)arg1;
+ (void)resetAutomaticUserEnabled;
+ (_Bool)isAutomaticUserEnabled;
+ (id)logInLazyUserWithAuthType:(id)arg1 authData:(id)arg2;
+ (id)_logInWithAuthTypeInBackground:(id)arg1;
+ (id)_logInWithAuthTypeInBackground:(id)arg1 authData:(id)arg2;
+ (id)_reallyLogInInBackgroundWithAuthType:(id)arg1 authData:(id)arg2;
+ (id)_logInWithProviderInBackground:(id)arg1;
+ (void)registerAuthenticationProvider:(id)arg1;
+ (id)saveCurrentUserAsync:(id)arg1;
+ (void)validateClassName:(id)arg1;
+ (id)currentSessionToken;
+ (void)clearCurrentUser;
- (void)serializeToDataFile:(id)arg1;
- (void)restoreAnonymity:(id)arg1;
- (void)stripAnonymity;
- (id)signUpAsync:(id)arg1;
- (id)_unlinkWithAuthTypeInBackground:(id)arg1;
- (void)logOutWithAuthType:(id)arg1;
- (void)logOutWithProvider:(id)arg1;
- (id)_linkWithAuthTypeInBackground:(id)arg1;
- (id)_linkWithAuthTypeInBackground:(id)arg1 authData:(id)arg2;
- (id)_linkWithProviderInBackground:(id)arg1;
- (id)resolveLazinessAsync:(id)arg1;
- (void)synchronizeAllAuthData;
- (void)synchronizeAuthDataWithAuthType:(id)arg1;
- (id)mergeFromServer:(id)arg1 withCompleteData:(_Bool)arg2;
- (id)mergeFromObject:(id)arg1;
- (id)handleSaveResult:(id)arg1 error:(id *)arg2;
- (id)handleFetchResult:(id)arg1;
- (void)cleanUpAuthData;
- (id)handleDeleteResult:(id)arg1;
- (id)handleSignUpResultAsync:(id)arg1;
- (id)handleSignUpOrLogInResultAsync:(id)arg1;
- (id)signUpOrLogInAsync:(id)arg1;
- (id)constructSignUpOrLogInCommand:(id)arg1;
- (id)constructSaveCommandWithServerOperation:(id)arg1 changes:(id)arg2 sessionToken:(id)arg3;
- (id)convertToDictionaryForSaving:(id)arg1;
- (void)checkSignUpParams;
- (void)checkSaveParams;
- (id)displayClassName;
- (void)checkDeleteParams;
- (_Bool)needsDefaultACL;
- (void)setDefaultValues;
@end

@interface PFInstallation (Private)
+ (void)saveCurrentInstallation:(id)arg1;
+ (void)validateClassName:(id)arg1;
+ (void)clearCurrentInstallation;
+ (void)clearCurrentInstallationInMemory;
+ (void)initialize;
- (id)displayClassName;
- (void)markAllFieldsDirty;
- (void)checkDeleteParams;
- (void)clearDeviceToken;
@end

@interface PLCrashReporter (PrivateMethods)
- (id)crashReportPath;
- (id)queuedCrashReportDirectory;
- (id)crashReportDirectory;
- (_Bool)populateCrashReportDirectoryAndReturnError:(id *)arg1;
- (int)mapToAsyncSymbolicationStrategy:(unsigned long long)arg1;
- (void)dealloc;
- (id)enableMachExceptionServerWithPreviousPortSet:(id *)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3 error:(id *)arg4;
- (id)initWithBundle:(id)arg1 configuration:(id)arg2;
- (id)initWithApplicationIdentifier:(id)arg1 appVersion:(id)arg2 configuration:(id)arg3;
@end

@interface PLCrashReport (PrivateMethods)
- (id)extractMachExceptionInfo:(struct _Plcrash__CrashReport__Signal__MachException *)arg1 error:(id *)arg2;
- (id)extractSignalInfo:(struct _Plcrash__CrashReport__Signal *)arg1 error:(id *)arg2;
- (id)extractExceptionInfo:(struct _Plcrash__CrashReport__Exception *)arg1 error:(id *)arg2;
- (id)extractImageInfo:(struct _Plcrash__CrashReport *)arg1 error:(id *)arg2;
- (id)extractThreadInfo:(struct _Plcrash__CrashReport *)arg1 error:(id *)arg2;
- (id)extractStackFrameInfo:(struct _Plcrash__CrashReport__Thread__StackFrame *)arg1 error:(id *)arg2;
- (id)extractSymbolInfo:(struct _Plcrash__CrashReport__Symbol *)arg1 error:(id *)arg2;
- (id)extractProcessInfo:(struct _Plcrash__CrashReport__ProcessInfo *)arg1 error:(id *)arg2;
- (id)extractApplicationInfo:(struct _Plcrash__CrashReport__ApplicationInfo *)arg1 error:(id *)arg2;
- (id)extractMachineInfo:(struct _Plcrash__CrashReport__MachineInfo *)arg1 error:(id *)arg2;
- (id)extractProcessorInfo:(struct _Plcrash__CrashReport__Processor *)arg1 error:(id *)arg2;
- (id)extractSystemInfo:(struct _Plcrash__CrashReport__SystemInfo *)arg1 error:(id *)arg2;
- (struct _Plcrash__CrashReport *)decodeCrashData:(id)arg1 error:(id *)arg2;
@end

@interface PLCrashReportTextFormatter (PrivateMethods)
+ (id)formatStackFrame:(id)arg1 frameIndex:(unsigned long long)arg2 report:(id)arg3 lp64:(_Bool)arg4;
@end

@interface NSString (GSString)
+ (id)GSGUIDString;
- (id)GSURLDecodedString;
- (id)GSURLEncodedString;
@end

@interface NSData (GSBase64)
+ (id)GSDataFromBase64String:(id)arg1;
- (id)GSBase64SEncodedString;
@end

@interface NSError (GSError)
+ (id)errorWithGigyaPluginEvent:(id)arg1;
+ (id)errorWithGigyaLoginResponse:(id)arg1;
+ (id)errorWithGigyaResponse:(id)arg1;
- (id)GSDictionaryRepresentation;
@end

@interface NSArray (GSArray) <GSJSONCollection>
- (id)GSJSONString;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSDictionary (GSDictionary) <GSJSONCollection>
+ (id)GSDictionaryWithURLQueryString:(id)arg1;
- (id)GSURLQueryString;
- (id)GSJSONString;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSURL (GSURL)
+ (id)URLForGigyaReferralReportForURL:(id)arg1 provider:(id)arg2;
+ (id)URLForGigyaLoginMethod:(id)arg1 parameters:(id)arg2 redirectURLScheme:(id)arg3;
+ (id)URLForGigyaProviderSelection:(id)arg1;
@end

@interface UIView (GSView)
- (id)GSFindViewController;
@end

@interface FBAudioResourceLoader (Subclass)
+ (id)data;
+ (unsigned long long)version;
+ (id)name;
@end

@interface NSError (FBError)
@property(readonly) _Bool fberrorIsTransient;
@property(readonly, copy) NSString *fberrorUserTitle;
@property(readonly) _Bool fberrorShouldNotifyUser;
@property(readonly, copy) NSString *fberrorUserMessage;
@property(readonly) long long fberrorCategory;
@end

@interface FBRequest (Deprecated)
+ (id)serializeURL:(id)arg1 params:(id)arg2 httpMethod:(id)arg3;
+ (id)serializeURL:(id)arg1 params:(id)arg2;
- (id)description;
- (_Bool)loading;
@property(nonatomic) _Bool sessionDidExpire;
@property(nonatomic) unsigned long long state;
@property(retain, nonatomic) NSError *error;
@property(retain, nonatomic) NSMutableData *responseText;
@property(retain, nonatomic) NSURLConnection *connection;
@property(retain, nonatomic) NSMutableDictionary *params;
@property(copy, nonatomic) NSString *httpMethod;
@property(copy, nonatomic) NSString *url;
@property(nonatomic) id <FBRequestDelegate> delegate;
@end

@interface NSNumber (SQLitePersistence) <SQLitePersistence>
+ (_Bool)shouldBeStoredInBlob;
+ (id)columnTypeForObjectStorage;
+ (_Bool)canBeStoredInSQLite;
+ (id)objectWithSqlColumnRepresentation:(id)arg1;
- (id)sqlColumnRepresentationOfSelf;
@end

@interface NSString (UppercaseFirst)
- (id)stringByLowercasingFirstLetter;
- (id)stringByUppercasingFirstLetter;
@end

@interface NSObject (MissingKV)
- (void)takeValue:(id)arg1 forKey:(id)arg2;
- (void)takeValuesFromDictionary:(id)arg1;
@end

@interface UIColor (SQLitePersistence) <SQLitePersistence>
+ (_Bool)shouldBeStoredInBlob;
+ (id)columnTypeForObjectStorage;
+ (_Bool)canBeStoredInSQLite;
+ (id)objectWithSQLBlobRepresentation:(id)arg1;
- (id)sqlBlobRepresentationOfSelf;
@end

@interface NSString (NumberStuff)
+ (id)formattedCurrencyStringWithValue:(float)arg1;
- (_Bool)holdsIntegerValue;
- (_Bool)holdsFloatingPointValueForLocale:(id)arg1;
- (_Bool)holdsFloatingPointValue;
@end

@interface NSObject (ClassName)
+ (id)className;
- (id)className;
@end

@interface NSString (SQLiteColumnName)
- (id)stringAsPropertyString;
- (id)stringAsSQLColumnName;
@end

@interface NSDate (SQLitePersistence) <SQLitePersistence>
+ (_Bool)shouldBeStoredInBlob;
+ (id)columnTypeForObjectStorage;
+ (_Bool)canBeStoredInSQLite;
+ (id)objectWithSqlColumnRepresentation:(id)arg1;
- (id)sqlColumnRepresentationOfSelf;
@end

@interface NSObject (SQLitePersistence)
+ (id)objectWithSQLBlobRepresentation:(id)arg1;
+ (_Bool)shouldBeStoredInBlob;
+ (id)columnTypeForObjectStorage;
+ (_Bool)canBeStoredInSQLite;
- (id)sqlBlobRepresentationOfSelf;
@end

@interface NSString (SQLitePersistence) <SQLitePersistence>
+ (_Bool)shouldBeStoredInBlob;
+ (id)columnTypeForObjectStorage;
+ (_Bool)canBeStoredInSQLite;
+ (id)objectWithSqlColumnRepresentation:(id)arg1;
- (id)sqlColumnRepresentationOfSelf;
@end

@interface UIImage (SQLitePersistence) <SQLitePersistence>
+ (_Bool)shouldBeStoredInBlob;
+ (id)columnTypeForObjectStorage;
+ (_Bool)canBeStoredInSQLite;
+ (id)objectWithSQLBlobRepresentation:(id)arg1;
- (id)sqlBlobRepresentationOfSelf;
@end

@interface NSData (SQLitePersistence) <SQLitePersistence>
+ (id)objectWithSQLBlobRepresentation:(id)arg1;
+ (_Bool)shouldBeStoredInBlob;
+ (id)columnTypeForObjectStorage;
+ (_Bool)canBeStoredInSQLite;
- (id)sqlBlobRepresentationOfSelf;
@end

@interface NSMutableArray (MultipleSort)
- (void)sortArrayUsingSelector:(SEL)arg1 withPairedMutableArrays:(id)arg2;
@end

@interface NSMutableData (SQLitePersistence)
- (id)initWithSQLBlobRepresentation:(id)arg1;
@end

@interface FlurryPLCrashReporter (PrivateMethods)
- (id)crashReportPath;
- (id)queuedCrashReportDirectory;
- (id)crashReportDirectory;
- (_Bool)populateCrashReportDirectoryAndReturnError:(id *)arg1;
- (int)mapToAsyncSymbolicationStrategy:(unsigned long long)arg1;
- (void)dealloc;
- (id)enableMachExceptionServerWithPreviousPortSet:(id *)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3 error:(id *)arg4;
- (id)initWithBundle:(id)arg1 configuration:(id)arg2;
- (id)initWithApplicationIdentifier:(id)arg1 appVersion:(id)arg2 configuration:(id)arg3;
@end

@interface FlurryPLCrashReport (PrivateMethods)
- (id)extractMachExceptionInfo:(struct _Plcrash__CrashReport__Signal__MachException *)arg1 error:(id *)arg2;
- (id)extractSignalInfo:(struct _Plcrash__CrashReport__Signal *)arg1 error:(id *)arg2;
- (id)extractExceptionInfo:(struct _Plcrash__CrashReport__Exception *)arg1 error:(id *)arg2;
- (id)extractImageInfo:(struct _Plcrash__CrashReport *)arg1 error:(id *)arg2;
- (id)extractThreadInfo:(struct _Plcrash__CrashReport *)arg1 error:(id *)arg2;
- (id)extractStackFrameInfo:(struct _Plcrash__CrashReport__Thread__StackFrame *)arg1 error:(id *)arg2;
- (id)extractSymbolInfo:(struct _Plcrash__CrashReport__Symbol *)arg1 error:(id *)arg2;
- (id)extractProcessInfo:(struct _Plcrash__CrashReport__ProcessInfo *)arg1 error:(id *)arg2;
- (id)extractApplicationInfo:(struct _Plcrash__CrashReport__ApplicationInfo *)arg1 error:(id *)arg2;
- (id)extractMachineInfo:(struct _Plcrash__CrashReport__MachineInfo *)arg1 error:(id *)arg2;
- (id)extractProcessorInfo:(struct _Plcrash__CrashReport__Processor *)arg1 error:(id *)arg2;
- (id)extractSystemInfo:(struct _Plcrash__CrashReport__SystemInfo *)arg1 error:(id *)arg2;
- (struct _Plcrash__CrashReport *)decodeCrashData:(id)arg1 error:(id *)arg2;
@end

@interface FlurryPLCrashReportTextFormatter (PrivateMethods)
+ (id)formatStackFrame:(id)arg1 frameIndex:(unsigned long long)arg2 report:(id)arg3 lp64:(_Bool)arg4;
@end

@interface NSObject (WTDC)
- (id)WT_DC_ID_METHOD;
- (_Bool)WT_DC_DEBUG;
- (_Bool)set_WT_DC_DEBUG:(_Bool)arg1 andPersist:(_Bool)arg2;
- (_Bool)WT_DC_ENABLE_BACKGROUND_SEND;
- (_Bool)set_WT_DC_ENABLE_BACKGROUND_SEND:(_Bool)arg1 andPersist:(_Bool)arg2;
- (int)WT_DC_CHARGE_THRESHOLD_MINIMUM;
- (_Bool)set_WT_DC_CHARGE_THRESHOLD_MINIMUM:(int)arg1 andPersist:(_Bool)arg2;
- (int)WT_DC_EVENT_RETRY_MAXIMUM;
- (_Bool)set_WT_DC_EVENT_RETRY_MAXIMUM:(int)arg1 andPersist:(_Bool)arg2;
- (int)WT_DC_EVENT_TABLE_SIZE_MAXIMUM;
- (_Bool)set_WT_DC_EVENT_TABLE_SIZE_MAXIMUM:(int)arg1 andPersist:(_Bool)arg2;
- (id)WT_DC_APP_VERSION;
- (_Bool)set_WT_DC_APP_VERSION:(id)arg1 andPersist:(_Bool)arg2;
- (id)WT_DC_APP_PUBLISHER;
- (_Bool)set_WT_DC_APP_PUBLISHER:(id)arg1 andPersist:(_Bool)arg2;
- (id)WT_DC_APP_NAME;
- (_Bool)set_WT_DC_APP_NAME:(id)arg1 andPersist:(_Bool)arg2;
- (id)WT_DC_APP_CATEGORY;
- (_Bool)set_WT_DC_APP_CATEGORY:(id)arg1 andPersist:(_Bool)arg2;
- (int)WT_DC_TIMEZONE;
- (_Bool)set_WT_DC_TIMEZONE:(int)arg1 andPersist:(_Bool)arg2;
- (int)WT_DC_SESSION_MAXIMUM;
- (_Bool)set_WT_DC_SESSION_MAXIMUM:(int)arg1 andPersist:(_Bool)arg2;
- (_Bool)WT_DC_SESSION_TIMEOUT;
- (_Bool)set_WT_DC_SESSION_TIMEOUT:(int)arg1 andPersist:(_Bool)arg2;
- (_Bool)WT_DC_USE_UNCAUGHT_EXCEPTION_HANDLER;
- (_Bool)set_WT_DC_USE_UNCAUGHT_EXCEPTION_HANDLER:(_Bool)arg1 andPersist:(_Bool)arg2;
- (_Bool)WT_DC_QUEUE_PAUSED_ONSTARTUP;
- (_Bool)set_WT_DC_QUEUE_PAUSED_ONSTARTUP:(_Bool)arg1 andPersist:(_Bool)arg2;
- (id)WT_DC_URL;
- (_Bool)set_WT_DC_URL:(id)arg1 andPersist:(_Bool)arg2;
- (id)WT_DC_DCSID;
- (_Bool)set_WT_DC_DCSID:(id)arg1 andPersist:(_Bool)arg2;
- (_Bool)WT_DC_ENABLED;
- (_Bool)set_WT_DC_ENABLED:(_Bool)arg1 andPersist:(_Bool)arg2;
@property _Bool DCSDebug;
@property _Bool DCSVerbose;
- (void)enableEventTracking;
- (void)disableEventTracking;
- (id)addSessionInfo:(id)arg1;
- (void)openURL:(id)arg1;
- (void)setCustomVisitorId:(id)arg1;
@property(readonly) NSNumber *queuedEventCount;
- (void)clearEventQueue;
- (void)shutdownEventTracking;
- (void)resumeWebtrendsNotifications;
- (void)suspendWebtrendsNotifications;
- (void)trackEvent:(id)arg1;
@end

